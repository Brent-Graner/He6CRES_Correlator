library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/Multipliers"

entity multipliers_entity_665ba98016 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(7 downto 0); 
    in10: in std_logic_vector(7 downto 0); 
    in11: in std_logic_vector(7 downto 0); 
    in12: in std_logic_vector(7 downto 0); 
    in13: in std_logic_vector(7 downto 0); 
    in14: in std_logic_vector(7 downto 0); 
    in15: in std_logic_vector(7 downto 0); 
    in16: in std_logic_vector(7 downto 0); 
    in17: in std_logic_vector(7 downto 0); 
    in18: in std_logic_vector(7 downto 0); 
    in19: in std_logic_vector(7 downto 0); 
    in2: in std_logic_vector(7 downto 0); 
    in20: in std_logic_vector(7 downto 0); 
    in21: in std_logic_vector(7 downto 0); 
    in22: in std_logic_vector(7 downto 0); 
    in23: in std_logic_vector(7 downto 0); 
    in24: in std_logic_vector(7 downto 0); 
    in25: in std_logic_vector(7 downto 0); 
    in26: in std_logic_vector(7 downto 0); 
    in27: in std_logic_vector(7 downto 0); 
    in28: in std_logic_vector(7 downto 0); 
    in29: in std_logic_vector(7 downto 0); 
    in3: in std_logic_vector(7 downto 0); 
    in30: in std_logic_vector(7 downto 0); 
    in31: in std_logic_vector(7 downto 0); 
    in32: in std_logic_vector(7 downto 0); 
    in4: in std_logic_vector(7 downto 0); 
    in5: in std_logic_vector(7 downto 0); 
    in6: in std_logic_vector(7 downto 0); 
    in7: in std_logic_vector(7 downto 0); 
    in8: in std_logic_vector(7 downto 0); 
    in9: in std_logic_vector(7 downto 0); 
    out1: out std_logic_vector(14 downto 0); 
    out10: out std_logic_vector(14 downto 0); 
    out11: out std_logic_vector(14 downto 0); 
    out12: out std_logic_vector(14 downto 0); 
    out13: out std_logic_vector(14 downto 0); 
    out14: out std_logic_vector(14 downto 0); 
    out15: out std_logic_vector(14 downto 0); 
    out16: out std_logic_vector(14 downto 0); 
    out2: out std_logic_vector(14 downto 0); 
    out3: out std_logic_vector(14 downto 0); 
    out4: out std_logic_vector(14 downto 0); 
    out5: out std_logic_vector(14 downto 0); 
    out6: out std_logic_vector(14 downto 0); 
    out7: out std_logic_vector(14 downto 0); 
    out8: out std_logic_vector(14 downto 0); 
    out9: out std_logic_vector(14 downto 0)
  );
end multipliers_entity_665ba98016;

architecture structural of multipliers_entity_665ba98016 is
  signal ce_1_sg_x0: std_logic;
  signal clk_1_sg_x0: std_logic;
  signal mult10_p_net_x0: std_logic_vector(14 downto 0);
  signal mult11_p_net_x0: std_logic_vector(14 downto 0);
  signal mult12_p_net_x0: std_logic_vector(14 downto 0);
  signal mult13_p_net_x0: std_logic_vector(14 downto 0);
  signal mult14_p_net_x0: std_logic_vector(14 downto 0);
  signal mult15_p_net_x0: std_logic_vector(14 downto 0);
  signal mult1_p_net_x0: std_logic_vector(14 downto 0);
  signal mult2_p_net_x0: std_logic_vector(14 downto 0);
  signal mult3_p_net_x0: std_logic_vector(14 downto 0);
  signal mult4_p_net_x0: std_logic_vector(14 downto 0);
  signal mult5_p_net_x0: std_logic_vector(14 downto 0);
  signal mult6_p_net_x0: std_logic_vector(14 downto 0);
  signal mult7_p_net_x0: std_logic_vector(14 downto 0);
  signal mult8_p_net_x0: std_logic_vector(14 downto 0);
  signal mult9_p_net_x0: std_logic_vector(14 downto 0);
  signal mult_p_net_x0: std_logic_vector(14 downto 0);
  signal register2_q_net_x31: std_logic_vector(7 downto 0);
  signal register2_q_net_x32: std_logic_vector(7 downto 0);
  signal register2_q_net_x33: std_logic_vector(7 downto 0);
  signal register2_q_net_x34: std_logic_vector(7 downto 0);
  signal register2_q_net_x35: std_logic_vector(7 downto 0);
  signal register2_q_net_x36: std_logic_vector(7 downto 0);
  signal register2_q_net_x37: std_logic_vector(7 downto 0);
  signal register2_q_net_x38: std_logic_vector(7 downto 0);
  signal register2_q_net_x39: std_logic_vector(7 downto 0);
  signal register2_q_net_x40: std_logic_vector(7 downto 0);
  signal register2_q_net_x41: std_logic_vector(7 downto 0);
  signal register2_q_net_x42: std_logic_vector(7 downto 0);
  signal register2_q_net_x43: std_logic_vector(7 downto 0);
  signal register2_q_net_x44: std_logic_vector(7 downto 0);
  signal register2_q_net_x45: std_logic_vector(7 downto 0);
  signal register2_q_net_x46: std_logic_vector(7 downto 0);
  signal register2_q_net_x47: std_logic_vector(7 downto 0);
  signal register2_q_net_x48: std_logic_vector(7 downto 0);
  signal register2_q_net_x49: std_logic_vector(7 downto 0);
  signal register2_q_net_x50: std_logic_vector(7 downto 0);
  signal register2_q_net_x51: std_logic_vector(7 downto 0);
  signal register2_q_net_x52: std_logic_vector(7 downto 0);
  signal register2_q_net_x53: std_logic_vector(7 downto 0);
  signal register2_q_net_x54: std_logic_vector(7 downto 0);
  signal register2_q_net_x55: std_logic_vector(7 downto 0);
  signal register2_q_net_x56: std_logic_vector(7 downto 0);
  signal register2_q_net_x57: std_logic_vector(7 downto 0);
  signal register2_q_net_x58: std_logic_vector(7 downto 0);
  signal register2_q_net_x59: std_logic_vector(7 downto 0);
  signal register2_q_net_x60: std_logic_vector(7 downto 0);
  signal register2_q_net_x61: std_logic_vector(7 downto 0);
  signal register2_q_net_x62: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x0 <= ce_1;
  clk_1_sg_x0 <= clk_1;
  register2_q_net_x59 <= in1;
  register2_q_net_x49 <= in10;
  register2_q_net_x48 <= in11;
  register2_q_net_x47 <= in12;
  register2_q_net_x46 <= in13;
  register2_q_net_x45 <= in14;
  register2_q_net_x44 <= in15;
  register2_q_net_x43 <= in16;
  register2_q_net_x41 <= in17;
  register2_q_net_x52 <= in18;
  register2_q_net_x60 <= in19;
  register2_q_net_x58 <= in2;
  register2_q_net_x61 <= in20;
  register2_q_net_x62 <= in21;
  register2_q_net_x31 <= in22;
  register2_q_net_x32 <= in23;
  register2_q_net_x33 <= in24;
  register2_q_net_x34 <= in25;
  register2_q_net_x35 <= in26;
  register2_q_net_x36 <= in27;
  register2_q_net_x37 <= in28;
  register2_q_net_x38 <= in29;
  register2_q_net_x57 <= in3;
  register2_q_net_x39 <= in30;
  register2_q_net_x40 <= in31;
  register2_q_net_x42 <= in32;
  register2_q_net_x56 <= in4;
  register2_q_net_x55 <= in5;
  register2_q_net_x54 <= in6;
  register2_q_net_x53 <= in7;
  register2_q_net_x51 <= in8;
  register2_q_net_x50 <= in9;
  out1 <= mult_p_net_x0;
  out10 <= mult9_p_net_x0;
  out11 <= mult10_p_net_x0;
  out12 <= mult11_p_net_x0;
  out13 <= mult12_p_net_x0;
  out14 <= mult13_p_net_x0;
  out15 <= mult14_p_net_x0;
  out16 <= mult15_p_net_x0;
  out2 <= mult1_p_net_x0;
  out3 <= mult2_p_net_x0;
  out4 <= mult3_p_net_x0;
  out5 <= mult4_p_net_x0;
  out6 <= mult5_p_net_x0;
  out7 <= mult6_p_net_x0;
  out8 <= mult7_p_net_x0;
  out9 <= mult8_p_net_x0;

  mult: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 8,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 8,
      c_a_type => 1,
      c_a_width => 8,
      c_b_type => 1,
      c_b_width => 8,
      c_baat => 8,
      c_output_width => 16,
      c_type => 1,
      core_name0 => "mult_11_2_b3e3ad78c7d21704",
      extra_registers => 0,
      multsign => 1,
      overflow => 1,
      p_arith => xlSigned,
      p_bin_pt => 14,
      p_width => 15,
      quantization => 1
    )
    port map (
      a => register2_q_net_x59,
      b => register2_q_net_x41,
      ce => ce_1_sg_x0,
      clk => clk_1_sg_x0,
      clr => '0',
      core_ce => ce_1_sg_x0,
      core_clk => clk_1_sg_x0,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => mult_p_net_x0
    );

  mult1: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 8,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 8,
      c_a_type => 1,
      c_a_width => 8,
      c_b_type => 1,
      c_b_width => 8,
      c_baat => 8,
      c_output_width => 16,
      c_type => 1,
      core_name0 => "mult_11_2_b3e3ad78c7d21704",
      extra_registers => 0,
      multsign => 1,
      overflow => 1,
      p_arith => xlSigned,
      p_bin_pt => 14,
      p_width => 15,
      quantization => 1
    )
    port map (
      a => register2_q_net_x58,
      b => register2_q_net_x52,
      ce => ce_1_sg_x0,
      clk => clk_1_sg_x0,
      clr => '0',
      core_ce => ce_1_sg_x0,
      core_clk => clk_1_sg_x0,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => mult1_p_net_x0
    );

  mult10: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 8,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 8,
      c_a_type => 1,
      c_a_width => 8,
      c_b_type => 1,
      c_b_width => 8,
      c_baat => 8,
      c_output_width => 16,
      c_type => 1,
      core_name0 => "mult_11_2_b3e3ad78c7d21704",
      extra_registers => 0,
      multsign => 1,
      overflow => 1,
      p_arith => xlSigned,
      p_bin_pt => 14,
      p_width => 15,
      quantization => 1
    )
    port map (
      a => register2_q_net_x48,
      b => register2_q_net_x36,
      ce => ce_1_sg_x0,
      clk => clk_1_sg_x0,
      clr => '0',
      core_ce => ce_1_sg_x0,
      core_clk => clk_1_sg_x0,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => mult10_p_net_x0
    );

  mult11: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 8,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 8,
      c_a_type => 1,
      c_a_width => 8,
      c_b_type => 1,
      c_b_width => 8,
      c_baat => 8,
      c_output_width => 16,
      c_type => 1,
      core_name0 => "mult_11_2_b3e3ad78c7d21704",
      extra_registers => 0,
      multsign => 1,
      overflow => 1,
      p_arith => xlSigned,
      p_bin_pt => 14,
      p_width => 15,
      quantization => 1
    )
    port map (
      a => register2_q_net_x47,
      b => register2_q_net_x37,
      ce => ce_1_sg_x0,
      clk => clk_1_sg_x0,
      clr => '0',
      core_ce => ce_1_sg_x0,
      core_clk => clk_1_sg_x0,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => mult11_p_net_x0
    );

  mult12: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 8,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 8,
      c_a_type => 1,
      c_a_width => 8,
      c_b_type => 1,
      c_b_width => 8,
      c_baat => 8,
      c_output_width => 16,
      c_type => 1,
      core_name0 => "mult_11_2_b3e3ad78c7d21704",
      extra_registers => 0,
      multsign => 1,
      overflow => 1,
      p_arith => xlSigned,
      p_bin_pt => 14,
      p_width => 15,
      quantization => 1
    )
    port map (
      a => register2_q_net_x46,
      b => register2_q_net_x38,
      ce => ce_1_sg_x0,
      clk => clk_1_sg_x0,
      clr => '0',
      core_ce => ce_1_sg_x0,
      core_clk => clk_1_sg_x0,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => mult12_p_net_x0
    );

  mult13: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 8,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 8,
      c_a_type => 1,
      c_a_width => 8,
      c_b_type => 1,
      c_b_width => 8,
      c_baat => 8,
      c_output_width => 16,
      c_type => 1,
      core_name0 => "mult_11_2_b3e3ad78c7d21704",
      extra_registers => 0,
      multsign => 1,
      overflow => 1,
      p_arith => xlSigned,
      p_bin_pt => 14,
      p_width => 15,
      quantization => 1
    )
    port map (
      a => register2_q_net_x45,
      b => register2_q_net_x39,
      ce => ce_1_sg_x0,
      clk => clk_1_sg_x0,
      clr => '0',
      core_ce => ce_1_sg_x0,
      core_clk => clk_1_sg_x0,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => mult13_p_net_x0
    );

  mult14: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 8,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 8,
      c_a_type => 1,
      c_a_width => 8,
      c_b_type => 1,
      c_b_width => 8,
      c_baat => 8,
      c_output_width => 16,
      c_type => 1,
      core_name0 => "mult_11_2_b3e3ad78c7d21704",
      extra_registers => 0,
      multsign => 1,
      overflow => 1,
      p_arith => xlSigned,
      p_bin_pt => 14,
      p_width => 15,
      quantization => 1
    )
    port map (
      a => register2_q_net_x44,
      b => register2_q_net_x40,
      ce => ce_1_sg_x0,
      clk => clk_1_sg_x0,
      clr => '0',
      core_ce => ce_1_sg_x0,
      core_clk => clk_1_sg_x0,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => mult14_p_net_x0
    );

  mult15: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 8,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 8,
      c_a_type => 1,
      c_a_width => 8,
      c_b_type => 1,
      c_b_width => 8,
      c_baat => 8,
      c_output_width => 16,
      c_type => 1,
      core_name0 => "mult_11_2_b3e3ad78c7d21704",
      extra_registers => 0,
      multsign => 1,
      overflow => 1,
      p_arith => xlSigned,
      p_bin_pt => 14,
      p_width => 15,
      quantization => 1
    )
    port map (
      a => register2_q_net_x43,
      b => register2_q_net_x42,
      ce => ce_1_sg_x0,
      clk => clk_1_sg_x0,
      clr => '0',
      core_ce => ce_1_sg_x0,
      core_clk => clk_1_sg_x0,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => mult15_p_net_x0
    );

  mult2: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 8,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 8,
      c_a_type => 1,
      c_a_width => 8,
      c_b_type => 1,
      c_b_width => 8,
      c_baat => 8,
      c_output_width => 16,
      c_type => 1,
      core_name0 => "mult_11_2_b3e3ad78c7d21704",
      extra_registers => 0,
      multsign => 1,
      overflow => 1,
      p_arith => xlSigned,
      p_bin_pt => 14,
      p_width => 15,
      quantization => 1
    )
    port map (
      a => register2_q_net_x57,
      b => register2_q_net_x60,
      ce => ce_1_sg_x0,
      clk => clk_1_sg_x0,
      clr => '0',
      core_ce => ce_1_sg_x0,
      core_clk => clk_1_sg_x0,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => mult2_p_net_x0
    );

  mult3: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 8,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 8,
      c_a_type => 1,
      c_a_width => 8,
      c_b_type => 1,
      c_b_width => 8,
      c_baat => 8,
      c_output_width => 16,
      c_type => 1,
      core_name0 => "mult_11_2_b3e3ad78c7d21704",
      extra_registers => 0,
      multsign => 1,
      overflow => 1,
      p_arith => xlSigned,
      p_bin_pt => 14,
      p_width => 15,
      quantization => 1
    )
    port map (
      a => register2_q_net_x56,
      b => register2_q_net_x61,
      ce => ce_1_sg_x0,
      clk => clk_1_sg_x0,
      clr => '0',
      core_ce => ce_1_sg_x0,
      core_clk => clk_1_sg_x0,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => mult3_p_net_x0
    );

  mult4: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 8,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 8,
      c_a_type => 1,
      c_a_width => 8,
      c_b_type => 1,
      c_b_width => 8,
      c_baat => 8,
      c_output_width => 16,
      c_type => 1,
      core_name0 => "mult_11_2_b3e3ad78c7d21704",
      extra_registers => 0,
      multsign => 1,
      overflow => 1,
      p_arith => xlSigned,
      p_bin_pt => 14,
      p_width => 15,
      quantization => 1
    )
    port map (
      a => register2_q_net_x55,
      b => register2_q_net_x62,
      ce => ce_1_sg_x0,
      clk => clk_1_sg_x0,
      clr => '0',
      core_ce => ce_1_sg_x0,
      core_clk => clk_1_sg_x0,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => mult4_p_net_x0
    );

  mult5: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 8,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 8,
      c_a_type => 1,
      c_a_width => 8,
      c_b_type => 1,
      c_b_width => 8,
      c_baat => 8,
      c_output_width => 16,
      c_type => 1,
      core_name0 => "mult_11_2_b3e3ad78c7d21704",
      extra_registers => 0,
      multsign => 1,
      overflow => 1,
      p_arith => xlSigned,
      p_bin_pt => 14,
      p_width => 15,
      quantization => 1
    )
    port map (
      a => register2_q_net_x54,
      b => register2_q_net_x31,
      ce => ce_1_sg_x0,
      clk => clk_1_sg_x0,
      clr => '0',
      core_ce => ce_1_sg_x0,
      core_clk => clk_1_sg_x0,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => mult5_p_net_x0
    );

  mult6: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 8,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 8,
      c_a_type => 1,
      c_a_width => 8,
      c_b_type => 1,
      c_b_width => 8,
      c_baat => 8,
      c_output_width => 16,
      c_type => 1,
      core_name0 => "mult_11_2_b3e3ad78c7d21704",
      extra_registers => 0,
      multsign => 1,
      overflow => 1,
      p_arith => xlSigned,
      p_bin_pt => 14,
      p_width => 15,
      quantization => 1
    )
    port map (
      a => register2_q_net_x53,
      b => register2_q_net_x32,
      ce => ce_1_sg_x0,
      clk => clk_1_sg_x0,
      clr => '0',
      core_ce => ce_1_sg_x0,
      core_clk => clk_1_sg_x0,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => mult6_p_net_x0
    );

  mult7: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 8,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 8,
      c_a_type => 1,
      c_a_width => 8,
      c_b_type => 1,
      c_b_width => 8,
      c_baat => 8,
      c_output_width => 16,
      c_type => 1,
      core_name0 => "mult_11_2_b3e3ad78c7d21704",
      extra_registers => 0,
      multsign => 1,
      overflow => 1,
      p_arith => xlSigned,
      p_bin_pt => 14,
      p_width => 15,
      quantization => 1
    )
    port map (
      a => register2_q_net_x51,
      b => register2_q_net_x33,
      ce => ce_1_sg_x0,
      clk => clk_1_sg_x0,
      clr => '0',
      core_ce => ce_1_sg_x0,
      core_clk => clk_1_sg_x0,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => mult7_p_net_x0
    );

  mult8: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 8,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 8,
      c_a_type => 1,
      c_a_width => 8,
      c_b_type => 1,
      c_b_width => 8,
      c_baat => 8,
      c_output_width => 16,
      c_type => 1,
      core_name0 => "mult_11_2_b3e3ad78c7d21704",
      extra_registers => 0,
      multsign => 1,
      overflow => 1,
      p_arith => xlSigned,
      p_bin_pt => 14,
      p_width => 15,
      quantization => 1
    )
    port map (
      a => register2_q_net_x50,
      b => register2_q_net_x34,
      ce => ce_1_sg_x0,
      clk => clk_1_sg_x0,
      clr => '0',
      core_ce => ce_1_sg_x0,
      core_clk => clk_1_sg_x0,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => mult8_p_net_x0
    );

  mult9: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 8,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 8,
      c_a_type => 1,
      c_a_width => 8,
      c_b_type => 1,
      c_b_width => 8,
      c_baat => 8,
      c_output_width => 16,
      c_type => 1,
      core_name0 => "mult_11_2_b3e3ad78c7d21704",
      extra_registers => 0,
      multsign => 1,
      overflow => 1,
      p_arith => xlSigned,
      p_bin_pt => 14,
      p_width => 15,
      quantization => 1
    )
    port map (
      a => register2_q_net_x49,
      b => register2_q_net_x35,
      ce => ce_1_sg_x0,
      clk => clk_1_sg_x0,
      clr => '0',
      core_ce => ce_1_sg_x0,
      core_clk => clk_1_sg_x0,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => mult9_p_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/Packetization/edge_detect"

entity edge_detect_entity_f4cdeabc4a is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end edge_detect_entity_f4cdeabc4a;

architecture structural of edge_detect_entity_f4cdeabc4a is
  signal ce_1_sg_x1: std_logic;
  signal clk_1_sg_x1: std_logic;
  signal delay_q_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal inverter_op_net: std_logic;
  signal register4_q_net_x0: std_logic;

begin
  ce_1_sg_x1 <= ce_1;
  clk_1_sg_x1 <= clk_1;
  register4_q_net_x0 <= in_x0;
  out_x0 <= edge_op_y_net_x0;

  delay: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x1,
      clk => clk_1_sg_x1,
      clr => '0',
      d(0) => register4_q_net_x0,
      q(0) => delay_q_net
    );

  edge_op: entity work.logical_dfe2dded7f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter_op_net,
      d1(0) => delay_q_net,
      y(0) => edge_op_y_net_x0
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x1,
      clk => clk_1_sg_x1,
      clr => '0',
      ip(0) => register4_q_net_x0,
      op(0) => inverter_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/Packetization/edge_detect1"

entity edge_detect1_entity_be170327b9 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end edge_detect1_entity_be170327b9;

architecture structural of edge_detect1_entity_be170327b9 is
  signal ce_1_sg_x2: std_logic;
  signal clk_1_sg_x2: std_logic;
  signal delay_q_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal inverter_op_net: std_logic;
  signal logical3_y_net_x0: std_logic;

begin
  ce_1_sg_x2 <= ce_1;
  clk_1_sg_x2 <= clk_1;
  logical3_y_net_x0 <= in_x0;
  out_x0 <= edge_op_y_net_x0;

  delay: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x2,
      clk => clk_1_sg_x2,
      clr => '0',
      d(0) => logical3_y_net_x0,
      q(0) => delay_q_net
    );

  edge_op: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter_op_net,
      d1(0) => delay_q_net,
      y(0) => edge_op_y_net_x0
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x2,
      clk => clk_1_sg_x2,
      clr => '0',
      ip(0) => logical3_y_net_x0,
      op(0) => inverter_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/Packetization/pulse_1024_f"

entity pulse_1024_f_entity_ba43aa0027 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic; 
    out1: out std_logic
  );
end pulse_1024_f_entity_ba43aa0027;

architecture structural of pulse_1024_f_entity_ba43aa0027 is
  signal ce_1_sg_x5: std_logic;
  signal clk_1_sg_x5: std_logic;
  signal delay1_q_net: std_logic;
  signal delay2_q_net: std_logic;
  signal delay3_q_net: std_logic;
  signal delay4_q_net: std_logic;
  signal delay5_q_net: std_logic;
  signal delay6_q_net: std_logic;
  signal delay7_q_net: std_logic;
  signal delay8_q_net: std_logic;
  signal delay9_q_net: std_logic;
  signal delay_q_net: std_logic;
  signal edge_op_y_net_x1: std_logic;
  signal logical1_y_net: std_logic;
  signal logical2_y_net: std_logic;
  signal logical3_y_net: std_logic;
  signal logical4_y_net: std_logic;
  signal logical5_y_net: std_logic;
  signal logical6_y_net: std_logic;
  signal logical7_y_net: std_logic;
  signal logical8_y_net: std_logic;
  signal logical9_y_net_x0: std_logic;
  signal logical_y_net: std_logic;

begin
  ce_1_sg_x5 <= ce_1;
  clk_1_sg_x5 <= clk_1;
  edge_op_y_net_x1 <= in1;
  out1 <= logical9_y_net_x0;

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x5,
      clk => clk_1_sg_x5,
      d(0) => edge_op_y_net_x1,
      en => '1',
      rst => '1',
      q(0) => delay_q_net
    );

  delay1: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x5,
      clk => clk_1_sg_x5,
      d(0) => logical_y_net,
      en => '1',
      rst => '1',
      q(0) => delay1_q_net
    );

  delay2: entity work.xldelay
    generic map (
      latency => 4,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x5,
      clk => clk_1_sg_x5,
      d(0) => logical1_y_net,
      en => '1',
      rst => '1',
      q(0) => delay2_q_net
    );

  delay3: entity work.xldelay
    generic map (
      latency => 8,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x5,
      clk => clk_1_sg_x5,
      d(0) => logical2_y_net,
      en => '1',
      rst => '1',
      q(0) => delay3_q_net
    );

  delay4: entity work.xldelay
    generic map (
      latency => 16,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x5,
      clk => clk_1_sg_x5,
      d(0) => logical3_y_net,
      en => '1',
      rst => '1',
      q(0) => delay4_q_net
    );

  delay5: entity work.xldelay
    generic map (
      latency => 32,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x5,
      clk => clk_1_sg_x5,
      d(0) => logical4_y_net,
      en => '1',
      rst => '1',
      q(0) => delay5_q_net
    );

  delay6: entity work.xldelay
    generic map (
      latency => 64,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x5,
      clk => clk_1_sg_x5,
      d(0) => logical5_y_net,
      en => '1',
      rst => '1',
      q(0) => delay6_q_net
    );

  delay7: entity work.xldelay
    generic map (
      latency => 128,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x5,
      clk => clk_1_sg_x5,
      d(0) => logical6_y_net,
      en => '1',
      rst => '1',
      q(0) => delay7_q_net
    );

  delay8: entity work.xldelay
    generic map (
      latency => 256,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x5,
      clk => clk_1_sg_x5,
      d(0) => logical7_y_net,
      en => '1',
      rst => '1',
      q(0) => delay8_q_net
    );

  delay9: entity work.xldelay
    generic map (
      latency => 512,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x5,
      clk => clk_1_sg_x5,
      d(0) => logical8_y_net,
      en => '1',
      rst => '1',
      q(0) => delay9_q_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => edge_op_y_net_x1,
      d1(0) => delay_q_net,
      y(0) => logical_y_net
    );

  logical1: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical_y_net,
      d1(0) => delay1_q_net,
      y(0) => logical1_y_net
    );

  logical2: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical1_y_net,
      d1(0) => delay2_q_net,
      y(0) => logical2_y_net
    );

  logical3: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical2_y_net,
      d1(0) => delay3_q_net,
      y(0) => logical3_y_net
    );

  logical4: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical3_y_net,
      d1(0) => delay4_q_net,
      y(0) => logical4_y_net
    );

  logical5: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical4_y_net,
      d1(0) => delay5_q_net,
      y(0) => logical5_y_net
    );

  logical6: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical5_y_net,
      d1(0) => delay6_q_net,
      y(0) => logical6_y_net
    );

  logical7: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical6_y_net,
      d1(0) => delay7_q_net,
      y(0) => logical7_y_net
    );

  logical8: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical7_y_net,
      d1(0) => delay8_q_net,
      y(0) => logical8_y_net
    );

  logical9: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical8_y_net,
      d1(0) => delay9_q_net,
      y(0) => logical9_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/Packetization/pulse_4_f"

entity pulse_4_f_entity_8ddb14affe is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic; 
    out1: out std_logic
  );
end pulse_4_f_entity_8ddb14affe;

architecture structural of pulse_4_f_entity_8ddb14affe is
  signal ce_1_sg_x6: std_logic;
  signal clk_1_sg_x6: std_logic;
  signal delay1_q_net: std_logic;
  signal delay_q_net: std_logic;
  signal edge_op_y_net_x2: std_logic;
  signal logical1_y_net_x0: std_logic;
  signal logical_y_net: std_logic;

begin
  ce_1_sg_x6 <= ce_1;
  clk_1_sg_x6 <= clk_1;
  edge_op_y_net_x2 <= in1;
  out1 <= logical1_y_net_x0;

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x6,
      clk => clk_1_sg_x6,
      d(0) => edge_op_y_net_x2,
      en => '1',
      rst => '1',
      q(0) => delay_q_net
    );

  delay1: entity work.xldelay
    generic map (
      latency => 2,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x6,
      clk => clk_1_sg_x6,
      d(0) => logical_y_net,
      en => '1',
      rst => '1',
      q(0) => delay1_q_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => edge_op_y_net_x2,
      d1(0) => delay_q_net,
      y(0) => logical_y_net
    );

  logical1: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical_y_net,
      d1(0) => delay1_q_net,
      y(0) => logical1_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/Packetization"

entity packetization_entity_cc1ade625e is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    fdata: in std_logic_vector(63 downto 0); 
    fsync_in: in std_logic; 
    rst: in std_logic; 
    rsv0: in std_logic_vector(63 downto 0); 
    rsv1: in std_logic_vector(63 downto 0); 
    ut: in std_logic_vector(31 downto 0); 
    status: out std_logic_vector(1 downto 0); 
    tx_data1: out std_logic_vector(63 downto 0); 
    tx_eof1: out std_logic; 
    tx_valid1: out std_logic
  );
end packetization_entity_cc1ade625e;

architecture structural of packetization_entity_cc1ade625e is
  signal batch_boundary_op_net: std_logic;
  signal bit0_y_net_x0: std_logic;
  signal ce_1_sg_x7: std_logic;
  signal clk_1_sg_x7: std_logic;
  signal concatenate_y_net_x0: std_logic_vector(63 downto 0);
  signal constant_op_net_x0: std_logic_vector(1 downto 0);
  signal count_to_4_op_net: std_logic_vector(2 downto 0);
  signal count_to_8192_op_net: std_logic_vector(12 downto 0);
  signal data_in_frame_op_net: std_logic_vector(12 downto 0);
  signal data_per_frame_op_net: std_logic_vector(12 downto 0);
  signal delay32_q_net: std_logic;
  signal delay_q_net_x2: std_logic;
  signal delay_tx_eof_out_q_net_x0: std_logic;
  signal delay_tx_valid_out_q_net_x0: std_logic;
  signal digital_id_op_net: std_logic_vector(63 downto 0);
  signal do_counting_op_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal edge_op_y_net_x1: std_logic;
  signal edge_op_y_net_x2: std_logic;
  signal edge_op_y_net_x3: std_logic;
  signal fpb_const_op_net: std_logic_vector(19 downto 0);
  signal frame_boundary_op_net: std_logic;
  signal frame_in_batch_op_net: std_logic_vector(19 downto 0);
  signal header_word_0_y_net: std_logic_vector(63 downto 0);
  signal header_word_1_y_net: std_logic_vector(63 downto 0);
  signal header_word_3_y_net: std_logic_vector(63 downto 0);
  signal if_id_op_net: std_logic_vector(63 downto 0);
  signal inverter_op_net: std_logic;
  signal logical1_y_net_x0: std_logic;
  signal logical3_y_net_x0: std_logic;
  signal logical9_y_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal lower1_y_net: std_logic_vector(31 downto 0);
  signal lower2_y_net: std_logic_vector(31 downto 0);
  signal lower3_y_net: std_logic_vector(5 downto 0);
  signal lower4_y_net: std_logic_vector(5 downto 0);
  signal lower63_y_net: std_logic_vector(62 downto 0);
  signal msb_y_net: std_logic;
  signal mux_y_net_x0: std_logic_vector(63 downto 0);
  signal register4_q_net_x1: std_logic;
  signal register_q_net: std_logic;
  signal rsv0_a_op_net_x0: std_logic_vector(63 downto 0);
  signal rsv1_a_op_net_x0: std_logic_vector(63 downto 0);
  signal running1_y_net: std_logic;
  signal running2_y_net: std_logic;
  signal running3_y_net: std_logic;
  signal running4_y_net: std_logic;
  signal unix_time1_s_net_x0: std_logic_vector(31 downto 0);
  signal user_data_0_op_net: std_logic_vector(63 downto 0);
  signal user_data_1_op_net: std_logic_vector(63 downto 0);

begin
  ce_1_sg_x7 <= ce_1;
  clk_1_sg_x7 <= clk_1;
  concatenate_y_net_x0 <= fdata;
  register4_q_net_x1 <= fsync_in;
  bit0_y_net_x0 <= rst;
  rsv0_a_op_net_x0 <= rsv0;
  rsv1_a_op_net_x0 <= rsv1;
  unix_time1_s_net_x0 <= ut;
  status <= constant_op_net_x0;
  tx_data1 <= mux_y_net_x0;
  tx_eof1 <= delay_tx_eof_out_q_net_x0;
  tx_valid1 <= delay_tx_valid_out_q_net_x0;

  batch_boundary: entity work.relational_987cf0fdd7
    port map (
      a => frame_in_batch_op_net,
      b => fpb_const_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => batch_boundary_op_net
    );

  constant_x0: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x0
    );

  count_to_4: entity work.xlcounter_limit_he6_cres_correlator
    generic map (
      cnt_15_0 => 4,
      cnt_31_16 => 0,
      cnt_47_32 => 0,
      cnt_63_48 => 0,
      core_name0 => "cntr_11_0_9469f52619ca1400",
      count_limited => 1,
      op_arith => xlUnsigned,
      op_width => 3
    )
    port map (
      ce => ce_1_sg_x7,
      clk => clk_1_sg_x7,
      clr => '0',
      en(0) => running1_y_net,
      rst(0) => bit0_y_net_x0,
      op => count_to_4_op_net
    );

  count_to_8192: entity work.xlcounter_free_he6_cres_correlator
    generic map (
      core_name0 => "cntr_11_0_02525873283338a3",
      op_arith => xlUnsigned,
      op_width => 13
    )
    port map (
      ce => ce_1_sg_x7,
      clk => clk_1_sg_x7,
      clr => '0',
      en(0) => register_q_net,
      rst(0) => bit0_y_net_x0,
      op => count_to_8192_op_net
    );

  data_in_frame: entity work.xlcounter_free_he6_cres_correlator
    generic map (
      core_name0 => "cntr_11_0_02525873283338a3",
      op_arith => xlUnsigned,
      op_width => 13
    )
    port map (
      ce => ce_1_sg_x7,
      clk => clk_1_sg_x7,
      clr => '0',
      en(0) => register_q_net,
      rst(0) => running4_y_net,
      op => data_in_frame_op_net
    );

  data_per_frame: entity work.constant_9fe7d9b9af
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => data_per_frame_op_net
    );

  delay: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x7,
      clk => clk_1_sg_x7,
      d(0) => logical9_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_q_net_x2
    );

  delay32: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x7,
      clk => clk_1_sg_x7,
      d(0) => delay_q_net_x2,
      en => '1',
      rst => '1',
      q(0) => delay32_q_net
    );

  delay_tx_eof_out: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x7,
      clk => clk_1_sg_x7,
      d(0) => edge_op_y_net_x3,
      en => '1',
      rst => '1',
      q(0) => delay_tx_eof_out_q_net_x0
    );

  delay_tx_valid_out: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x7,
      clk => clk_1_sg_x7,
      d(0) => running2_y_net,
      en => '1',
      rst => '1',
      q(0) => delay_tx_valid_out_q_net_x0
    );

  digital_id: entity work.constant_c4c603edf2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => digital_id_op_net
    );

  do_counting: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => do_counting_op_net
    );

  edge_detect1_be170327b9: entity work.edge_detect1_entity_be170327b9
    port map (
      ce_1 => ce_1_sg_x7,
      clk_1 => clk_1_sg_x7,
      in_x0 => logical3_y_net_x0,
      out_x0 => edge_op_y_net_x2
    );

  edge_detect4_1c954285ea: entity work.edge_detect1_entity_be170327b9
    port map (
      ce_1 => ce_1_sg_x7,
      clk_1 => clk_1_sg_x7,
      in_x0 => delay_q_net_x2,
      out_x0 => edge_op_y_net_x1
    );

  edge_detect5_e397ada1fe: entity work.edge_detect1_entity_be170327b9
    port map (
      ce_1 => ce_1_sg_x7,
      clk_1 => clk_1_sg_x7,
      in_x0 => delay_q_net_x2,
      out_x0 => edge_op_y_net_x3
    );

  edge_detect_f4cdeabc4a: entity work.edge_detect_entity_f4cdeabc4a
    port map (
      ce_1 => ce_1_sg_x7,
      clk_1 => clk_1_sg_x7,
      in_x0 => register4_q_net_x1,
      out_x0 => edge_op_y_net_x0
    );

  fpb_const: entity work.constant_faf12c8676
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => fpb_const_op_net
    );

  frame_boundary: entity work.relational_6dfa374756
    port map (
      a => data_in_frame_op_net,
      b => data_per_frame_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => frame_boundary_op_net
    );

  frame_in_batch: entity work.xlcounter_free_he6_cres_correlator
    generic map (
      core_name0 => "cntr_11_0_1f194baf1a2b1153",
      op_arith => xlUnsigned,
      op_width => 20
    )
    port map (
      ce => ce_1_sg_x7,
      clk => clk_1_sg_x7,
      clr => '0',
      en(0) => frame_boundary_op_net,
      rst(0) => running3_y_net,
      op => frame_in_batch_op_net
    );

  header_word_0: entity work.concat_f9478c2ca9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => lower3_y_net,
      in1 => lower4_y_net,
      in2 => frame_in_batch_op_net,
      in3 => unix_time1_s_net_x0,
      y => header_word_0_y_net
    );

  header_word_1: entity work.concat_62c4475a80
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => lower2_y_net,
      in1 => lower1_y_net,
      y => header_word_1_y_net
    );

  header_word_3: entity work.concat_85fafd34b4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => logical1_y_net_x0,
      in1 => lower63_y_net,
      y => header_word_3_y_net
    );

  if_id: entity work.constant_c4c603edf2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => if_id_op_net
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x7,
      clk => clk_1_sg_x7,
      clr => '0',
      ip(0) => msb_y_net,
      op(0) => inverter_op_net
    );

  logical: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => batch_boundary_op_net,
      d1(0) => frame_boundary_op_net,
      y(0) => logical_y_net
    );

  logical3: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register_q_net,
      d1(0) => inverter_op_net,
      y(0) => logical3_y_net_x0
    );

  lower1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 64,
      y_width => 32
    )
    port map (
      x => user_data_1_op_net,
      y => lower1_y_net
    );

  lower2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 64,
      y_width => 32
    )
    port map (
      x => user_data_0_op_net,
      y => lower2_y_net
    );

  lower3: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 5,
      x_width => 64,
      y_width => 6
    )
    port map (
      x => if_id_op_net,
      y => lower3_y_net
    );

  lower4: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 5,
      x_width => 64,
      y_width => 6
    )
    port map (
      x => digital_id_op_net,
      y => lower4_y_net
    );

  lower63: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 62,
      x_width => 64,
      y_width => 63
    )
    port map (
      x => rsv1_a_op_net_x0,
      y => lower63_y_net
    );

  msb: entity work.xlslice
    generic map (
      new_lsb => 12,
      new_msb => 12,
      x_width => 13,
      y_width => 1
    )
    port map (
      x => count_to_8192_op_net,
      y(0) => msb_y_net
    );

  mux: entity work.mux_ca50268c1f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => header_word_0_y_net,
      d1 => header_word_1_y_net,
      d2 => rsv0_a_op_net_x0,
      d3 => header_word_3_y_net,
      d4 => concatenate_y_net_x0,
      sel => count_to_4_op_net,
      y => mux_y_net_x0
    );

  pulse_1024_f_ba43aa0027: entity work.pulse_1024_f_entity_ba43aa0027
    port map (
      ce_1 => ce_1_sg_x7,
      clk_1 => clk_1_sg_x7,
      in1 => edge_op_y_net_x2,
      out1 => logical9_y_net_x0
    );

  pulse_4_f_8ddb14affe: entity work.pulse_4_f_entity_8ddb14affe
    port map (
      ce_1 => ce_1_sg_x7,
      clk_1 => clk_1_sg_x7,
      in1 => edge_op_y_net_x2,
      out1 => logical1_y_net_x0
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x7,
      clk => clk_1_sg_x7,
      d(0) => do_counting_op_net,
      en(0) => edge_op_y_net_x0,
      rst(0) => bit0_y_net_x0,
      q(0) => register_q_net
    );

  running1: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical1_y_net_x0,
      d1(0) => edge_op_y_net_x1,
      y(0) => running1_y_net
    );

  running2: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical1_y_net_x0,
      d1(0) => delay32_q_net,
      y(0) => running2_y_net
    );

  running3: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => bit0_y_net_x0,
      d1(0) => logical_y_net,
      y(0) => running3_y_net
    );

  running4: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => frame_boundary_op_net,
      d1(0) => bit0_y_net_x0,
      y(0) => running4_y_net
    );

  user_data_0: entity work.constant_c4c603edf2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => user_data_0_op_net
    );

  user_data_1: entity work.constant_c4c603edf2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => user_data_1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/bus"

entity bus_entity_0fc5403b8c is
  port (
    in1: in std_logic_vector(7 downto 0); 
    in2: in std_logic_vector(7 downto 0); 
    in3: in std_logic_vector(7 downto 0); 
    in4: in std_logic_vector(7 downto 0); 
    in5: in std_logic_vector(7 downto 0); 
    in6: in std_logic_vector(7 downto 0); 
    in7: in std_logic_vector(7 downto 0); 
    in8: in std_logic_vector(7 downto 0); 
    bus_out: out std_logic_vector(63 downto 0)
  );
end bus_entity_0fc5403b8c;

architecture structural of bus_entity_0fc5403b8c is
  signal concatenate_y_net_x1: std_logic_vector(63 downto 0);
  signal convert1_dout_net_x0: std_logic_vector(7 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(7 downto 0);
  signal convert3_dout_net_x0: std_logic_vector(7 downto 0);
  signal convert4_dout_net_x0: std_logic_vector(7 downto 0);
  signal convert5_dout_net_x0: std_logic_vector(7 downto 0);
  signal convert6_dout_net_x0: std_logic_vector(7 downto 0);
  signal convert7_dout_net_x0: std_logic_vector(7 downto 0);
  signal convert_dout_net_x0: std_logic_vector(7 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(7 downto 0);

begin
  convert_dout_net_x0 <= in1;
  convert1_dout_net_x0 <= in2;
  convert2_dout_net_x0 <= in3;
  convert3_dout_net_x0 <= in4;
  convert4_dout_net_x0 <= in5;
  convert5_dout_net_x0 <= in6;
  convert6_dout_net_x0 <= in7;
  convert7_dout_net_x0 <= in8;
  bus_out <= concatenate_y_net_x1;

  concatenate: entity work.concat_15d98836ad
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      y => concatenate_y_net_x1
    );

  reinterpret1: entity work.reinterpret_f21e7f2ddf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert_dout_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_f21e7f2ddf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert1_dout_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_f21e7f2ddf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert2_dout_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_f21e7f2ddf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert3_dout_net_x0,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_f21e7f2ddf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert4_dout_net_x0,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_f21e7f2ddf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert5_dout_net_x0,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_f21e7f2ddf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert6_dout_net_x0,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_f21e7f2ddf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert7_dout_net_x0,
      output_port => reinterpret8_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/bus_0"

entity bus_0_entity_47a4de7e8f is
  port (
    in1: in std_logic_vector(7 downto 0); 
    in10: in std_logic_vector(7 downto 0); 
    in11: in std_logic_vector(7 downto 0); 
    in12: in std_logic_vector(7 downto 0); 
    in13: in std_logic_vector(7 downto 0); 
    in14: in std_logic_vector(7 downto 0); 
    in15: in std_logic_vector(7 downto 0); 
    in16: in std_logic_vector(7 downto 0); 
    in2: in std_logic_vector(7 downto 0); 
    in3: in std_logic_vector(7 downto 0); 
    in4: in std_logic_vector(7 downto 0); 
    in5: in std_logic_vector(7 downto 0); 
    in6: in std_logic_vector(7 downto 0); 
    in7: in std_logic_vector(7 downto 0); 
    in8: in std_logic_vector(7 downto 0); 
    in9: in std_logic_vector(7 downto 0); 
    bus_out: out std_logic_vector(127 downto 0)
  );
end bus_0_entity_47a4de7e8f;

architecture structural of bus_0_entity_47a4de7e8f is
  signal concatenate_y_net_x0: std_logic_vector(127 downto 0);
  signal reinterpret10_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret11_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret12_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret13_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret14_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret15_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret16_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret9_output_port_net: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x15: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x16: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x17: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x18: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x19: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x20: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x21: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x22: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x23: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x24: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x25: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x26: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x27: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x28: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x29: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x30: std_logic_vector(7 downto 0);

begin
  reinterpret_output_port_net_x15 <= in1;
  reinterpret_output_port_net_x30 <= in10;
  reinterpret_output_port_net_x17 <= in11;
  reinterpret_output_port_net_x18 <= in12;
  reinterpret_output_port_net_x19 <= in13;
  reinterpret_output_port_net_x20 <= in14;
  reinterpret_output_port_net_x21 <= in15;
  reinterpret_output_port_net_x22 <= in16;
  reinterpret_output_port_net_x16 <= in2;
  reinterpret_output_port_net_x23 <= in3;
  reinterpret_output_port_net_x24 <= in4;
  reinterpret_output_port_net_x25 <= in5;
  reinterpret_output_port_net_x26 <= in6;
  reinterpret_output_port_net_x27 <= in7;
  reinterpret_output_port_net_x28 <= in8;
  reinterpret_output_port_net_x29 <= in9;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_96b2f1cb93
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in10 => reinterpret11_output_port_net,
      in11 => reinterpret12_output_port_net,
      in12 => reinterpret13_output_port_net,
      in13 => reinterpret14_output_port_net,
      in14 => reinterpret15_output_port_net,
      in15 => reinterpret16_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      in8 => reinterpret9_output_port_net,
      in9 => reinterpret10_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_d51df7ac30
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret_output_port_net_x15,
      output_port => reinterpret1_output_port_net
    );

  reinterpret10: entity work.reinterpret_d51df7ac30
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret_output_port_net_x30,
      output_port => reinterpret10_output_port_net
    );

  reinterpret11: entity work.reinterpret_d51df7ac30
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret_output_port_net_x17,
      output_port => reinterpret11_output_port_net
    );

  reinterpret12: entity work.reinterpret_d51df7ac30
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret_output_port_net_x18,
      output_port => reinterpret12_output_port_net
    );

  reinterpret13: entity work.reinterpret_d51df7ac30
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret_output_port_net_x19,
      output_port => reinterpret13_output_port_net
    );

  reinterpret14: entity work.reinterpret_d51df7ac30
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret_output_port_net_x20,
      output_port => reinterpret14_output_port_net
    );

  reinterpret15: entity work.reinterpret_d51df7ac30
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret_output_port_net_x21,
      output_port => reinterpret15_output_port_net
    );

  reinterpret16: entity work.reinterpret_d51df7ac30
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret_output_port_net_x22,
      output_port => reinterpret16_output_port_net
    );

  reinterpret2: entity work.reinterpret_d51df7ac30
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret_output_port_net_x16,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_d51df7ac30
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret_output_port_net_x23,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_d51df7ac30
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret_output_port_net_x24,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_d51df7ac30
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret_output_port_net_x25,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_d51df7ac30
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret_output_port_net_x26,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_d51df7ac30
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret_output_port_net_x27,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_d51df7ac30
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret_output_port_net_x28,
      output_port => reinterpret8_output_port_net
    );

  reinterpret9: entity work.reinterpret_d51df7ac30
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret_output_port_net_x29,
      output_port => reinterpret9_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/c_to_ri"

entity c_to_ri_entity_d7f27c9f1c is
  port (
    c: in std_logic_vector(35 downto 0); 
    im: out std_logic_vector(17 downto 0); 
    re: out std_logic_vector(17 downto 0)
  );
end c_to_ri_entity_d7f27c9f1c;

architecture structural of c_to_ri_entity_d7f27c9f1c is
  signal force_im_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal slice_im_y_net: std_logic_vector(17 downto 0);
  signal slice_re_y_net: std_logic_vector(17 downto 0);

begin
  reinterpret1_output_port_net_x0 <= c;
  im <= force_im_output_port_net_x0;
  re <= force_re_output_port_net_x0;

  force_im: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_im_y_net,
      output_port => force_im_output_port_net_x0
    );

  force_re: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_re_y_net,
      output_port => force_re_output_port_net_x0
    );

  slice_im: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 36,
      y_width => 18
    )
    port map (
      x => reinterpret1_output_port_net_x0,
      y => slice_im_y_net
    );

  slice_re: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 35,
      x_width => 36,
      y_width => 18
    )
    port map (
      x => reinterpret1_output_port_net_x0,
      y => slice_re_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/conv_ob_0/conv_ob0"

entity conv_ob0_entity_1dac41e63c is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    i: in std_logic_vector(7 downto 0); 
    q: out std_logic_vector(7 downto 0)
  );
end conv_ob0_entity_1dac41e63c;

architecture structural of conv_ob0_entity_1dac41e63c is
  signal ce_1_sg_x8: std_logic;
  signal clk_1_sg_x8: std_logic;
  signal concat_y_net: std_logic_vector(7 downto 0);
  signal inverter_op_net: std_logic;
  signal register2_q_net_x60: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x16: std_logic_vector(7 downto 0);
  signal slice1_y_net: std_logic_vector(6 downto 0);
  signal slice_y_net: std_logic;

begin
  ce_1_sg_x8 <= ce_1;
  clk_1_sg_x8 <= clk_1;
  register2_q_net_x60 <= i;
  q <= reinterpret_output_port_net_x16;

  concat: entity work.concat_83e473517e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => inverter_op_net,
      in1 => slice1_y_net,
      y => concat_y_net
    );

  inverter: entity work.inverter_e2b989a05e
    port map (
      ce => ce_1_sg_x8,
      clk => clk_1_sg_x8,
      clr => '0',
      ip(0) => slice_y_net,
      op(0) => inverter_op_net
    );

  reinterpret: entity work.reinterpret_4389dc89bf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net,
      output_port => reinterpret_output_port_net_x16
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 7,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => register2_q_net_x60,
      y(0) => slice_y_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 6,
      x_width => 8,
      y_width => 7
    )
    port map (
      x => register2_q_net_x60,
      y => slice1_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/conv_ob_0"

entity conv_ob_0_entity_35487c77f0 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    i0: in std_logic_vector(7 downto 0); 
    i1: in std_logic_vector(7 downto 0); 
    i10: in std_logic_vector(7 downto 0); 
    i11: in std_logic_vector(7 downto 0); 
    i12: in std_logic_vector(7 downto 0); 
    i13: in std_logic_vector(7 downto 0); 
    i14: in std_logic_vector(7 downto 0); 
    i15: in std_logic_vector(7 downto 0); 
    i2: in std_logic_vector(7 downto 0); 
    i3: in std_logic_vector(7 downto 0); 
    i4: in std_logic_vector(7 downto 0); 
    i5: in std_logic_vector(7 downto 0); 
    i6: in std_logic_vector(7 downto 0); 
    i7: in std_logic_vector(7 downto 0); 
    i8: in std_logic_vector(7 downto 0); 
    i9: in std_logic_vector(7 downto 0); 
    q0: out std_logic_vector(7 downto 0); 
    q1: out std_logic_vector(7 downto 0); 
    q10: out std_logic_vector(7 downto 0); 
    q11: out std_logic_vector(7 downto 0); 
    q12: out std_logic_vector(7 downto 0); 
    q13: out std_logic_vector(7 downto 0); 
    q14: out std_logic_vector(7 downto 0); 
    q15: out std_logic_vector(7 downto 0); 
    q2: out std_logic_vector(7 downto 0); 
    q3: out std_logic_vector(7 downto 0); 
    q4: out std_logic_vector(7 downto 0); 
    q5: out std_logic_vector(7 downto 0); 
    q6: out std_logic_vector(7 downto 0); 
    q7: out std_logic_vector(7 downto 0); 
    q8: out std_logic_vector(7 downto 0); 
    q9: out std_logic_vector(7 downto 0)
  );
end conv_ob_0_entity_35487c77f0;

architecture structural of conv_ob_0_entity_35487c77f0 is
  signal ce_1_sg_x24: std_logic;
  signal clk_1_sg_x24: std_logic;
  signal register2_q_net_x61: std_logic_vector(7 downto 0);
  signal register2_q_net_x62: std_logic_vector(7 downto 0);
  signal register2_q_net_x63: std_logic_vector(7 downto 0);
  signal register2_q_net_x64: std_logic_vector(7 downto 0);
  signal register2_q_net_x65: std_logic_vector(7 downto 0);
  signal register2_q_net_x66: std_logic_vector(7 downto 0);
  signal register2_q_net_x67: std_logic_vector(7 downto 0);
  signal register2_q_net_x68: std_logic_vector(7 downto 0);
  signal register2_q_net_x69: std_logic_vector(7 downto 0);
  signal register2_q_net_x70: std_logic_vector(7 downto 0);
  signal register2_q_net_x71: std_logic_vector(7 downto 0);
  signal register2_q_net_x72: std_logic_vector(7 downto 0);
  signal register2_q_net_x73: std_logic_vector(7 downto 0);
  signal register2_q_net_x74: std_logic_vector(7 downto 0);
  signal register2_q_net_x75: std_logic_vector(7 downto 0);
  signal register2_q_net_x76: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x32: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x33: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x34: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x35: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x36: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x37: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x38: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x39: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x40: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x41: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x42: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x43: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x44: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x45: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x46: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x47: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x24 <= ce_1;
  clk_1_sg_x24 <= clk_1;
  register2_q_net_x76 <= i0;
  register2_q_net_x75 <= i1;
  register2_q_net_x66 <= i10;
  register2_q_net_x65 <= i11;
  register2_q_net_x64 <= i12;
  register2_q_net_x63 <= i13;
  register2_q_net_x62 <= i14;
  register2_q_net_x61 <= i15;
  register2_q_net_x74 <= i2;
  register2_q_net_x73 <= i3;
  register2_q_net_x72 <= i4;
  register2_q_net_x71 <= i5;
  register2_q_net_x70 <= i6;
  register2_q_net_x69 <= i7;
  register2_q_net_x68 <= i8;
  register2_q_net_x67 <= i9;
  q0 <= reinterpret_output_port_net_x32;
  q1 <= reinterpret_output_port_net_x33;
  q10 <= reinterpret_output_port_net_x34;
  q11 <= reinterpret_output_port_net_x35;
  q12 <= reinterpret_output_port_net_x36;
  q13 <= reinterpret_output_port_net_x37;
  q14 <= reinterpret_output_port_net_x38;
  q15 <= reinterpret_output_port_net_x39;
  q2 <= reinterpret_output_port_net_x40;
  q3 <= reinterpret_output_port_net_x41;
  q4 <= reinterpret_output_port_net_x42;
  q5 <= reinterpret_output_port_net_x43;
  q6 <= reinterpret_output_port_net_x44;
  q7 <= reinterpret_output_port_net_x45;
  q8 <= reinterpret_output_port_net_x46;
  q9 <= reinterpret_output_port_net_x47;

  conv_ob0_1dac41e63c: entity work.conv_ob0_entity_1dac41e63c
    port map (
      ce_1 => ce_1_sg_x24,
      clk_1 => clk_1_sg_x24,
      i => register2_q_net_x76,
      q => reinterpret_output_port_net_x32
    );

  conv_ob10_a9b0e21cd3: entity work.conv_ob0_entity_1dac41e63c
    port map (
      ce_1 => ce_1_sg_x24,
      clk_1 => clk_1_sg_x24,
      i => register2_q_net_x66,
      q => reinterpret_output_port_net_x34
    );

  conv_ob11_c8f6f0ab7c: entity work.conv_ob0_entity_1dac41e63c
    port map (
      ce_1 => ce_1_sg_x24,
      clk_1 => clk_1_sg_x24,
      i => register2_q_net_x65,
      q => reinterpret_output_port_net_x35
    );

  conv_ob12_d1d8e3ae30: entity work.conv_ob0_entity_1dac41e63c
    port map (
      ce_1 => ce_1_sg_x24,
      clk_1 => clk_1_sg_x24,
      i => register2_q_net_x64,
      q => reinterpret_output_port_net_x36
    );

  conv_ob13_483f06a484: entity work.conv_ob0_entity_1dac41e63c
    port map (
      ce_1 => ce_1_sg_x24,
      clk_1 => clk_1_sg_x24,
      i => register2_q_net_x63,
      q => reinterpret_output_port_net_x37
    );

  conv_ob14_f7f4d04823: entity work.conv_ob0_entity_1dac41e63c
    port map (
      ce_1 => ce_1_sg_x24,
      clk_1 => clk_1_sg_x24,
      i => register2_q_net_x62,
      q => reinterpret_output_port_net_x38
    );

  conv_ob15_3ab3121c18: entity work.conv_ob0_entity_1dac41e63c
    port map (
      ce_1 => ce_1_sg_x24,
      clk_1 => clk_1_sg_x24,
      i => register2_q_net_x61,
      q => reinterpret_output_port_net_x39
    );

  conv_ob1_6987f46902: entity work.conv_ob0_entity_1dac41e63c
    port map (
      ce_1 => ce_1_sg_x24,
      clk_1 => clk_1_sg_x24,
      i => register2_q_net_x75,
      q => reinterpret_output_port_net_x33
    );

  conv_ob2_bd8569d09f: entity work.conv_ob0_entity_1dac41e63c
    port map (
      ce_1 => ce_1_sg_x24,
      clk_1 => clk_1_sg_x24,
      i => register2_q_net_x74,
      q => reinterpret_output_port_net_x40
    );

  conv_ob3_cc6e27ce5a: entity work.conv_ob0_entity_1dac41e63c
    port map (
      ce_1 => ce_1_sg_x24,
      clk_1 => clk_1_sg_x24,
      i => register2_q_net_x73,
      q => reinterpret_output_port_net_x41
    );

  conv_ob4_71e69fe95d: entity work.conv_ob0_entity_1dac41e63c
    port map (
      ce_1 => ce_1_sg_x24,
      clk_1 => clk_1_sg_x24,
      i => register2_q_net_x72,
      q => reinterpret_output_port_net_x42
    );

  conv_ob5_33032e1834: entity work.conv_ob0_entity_1dac41e63c
    port map (
      ce_1 => ce_1_sg_x24,
      clk_1 => clk_1_sg_x24,
      i => register2_q_net_x71,
      q => reinterpret_output_port_net_x43
    );

  conv_ob6_8de2b2d1fa: entity work.conv_ob0_entity_1dac41e63c
    port map (
      ce_1 => ce_1_sg_x24,
      clk_1 => clk_1_sg_x24,
      i => register2_q_net_x70,
      q => reinterpret_output_port_net_x44
    );

  conv_ob7_edc7cd0b76: entity work.conv_ob0_entity_1dac41e63c
    port map (
      ce_1 => ce_1_sg_x24,
      clk_1 => clk_1_sg_x24,
      i => register2_q_net_x69,
      q => reinterpret_output_port_net_x45
    );

  conv_ob8_3ea0e6e0e4: entity work.conv_ob0_entity_1dac41e63c
    port map (
      ce_1 => ce_1_sg_x24,
      clk_1 => clk_1_sg_x24,
      i => register2_q_net_x68,
      q => reinterpret_output_port_net_x46
    );

  conv_ob9_5a0c32ab7f: entity work.conv_ob0_entity_1dac41e63c
    port map (
      ce_1 => ce_1_sg_x24,
      clk_1 => clk_1_sg_x24,
      i => register2_q_net_x67,
      q => reinterpret_output_port_net_x47
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/ctrl_signals/edge_detect"

entity edge_detect_entity_26ed24e9d6 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end edge_detect_entity_26ed24e9d6;

architecture structural of edge_detect_entity_26ed24e9d6 is
  signal bit1_y_net_x0: std_logic;
  signal ce_1_sg_x42: std_logic;
  signal clk_1_sg_x42: std_logic;
  signal delay_q_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal inverter_op_net: std_logic;

begin
  ce_1_sg_x42 <= ce_1;
  clk_1_sg_x42 <= clk_1;
  bit1_y_net_x0 <= in_x0;
  out_x0 <= edge_op_y_net_x0;

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x42,
      clk => clk_1_sg_x42,
      d(0) => bit1_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_q_net
    );

  edge_op: entity work.logical_dfe2dded7f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter_op_net,
      d1(0) => delay_q_net,
      y(0) => edge_op_y_net_x0
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x42,
      clk => clk_1_sg_x42,
      clr => '0',
      ip(0) => bit1_y_net_x0,
      op(0) => inverter_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/ctrl_signals"

entity ctrl_signals_entity_91138b8737 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    master: in std_logic_vector(31 downto 0); 
    ut0: in std_logic_vector(31 downto 0); 
    msync: out std_logic; 
    reset: out std_logic; 
    unix_time: out std_logic_vector(31 downto 0)
  );
end ctrl_signals_entity_91138b8737;

architecture structural of ctrl_signals_entity_91138b8737 is
  signal bit0_y_net_x1: std_logic;
  signal bit1_y_net_x0: std_logic;
  signal ce_1_sg_x43: std_logic;
  signal clk_1_sg_x43: std_logic;
  signal clk_per_sec_op_net: std_logic_vector(27 downto 0);
  signal count_1sec_op_net: std_logic_vector(27 downto 0);
  signal delay_q_net_x0: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal per_clk_op_net: std_logic_vector(27 downto 0);
  signal register_q_net: std_logic;
  signal reint1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x2: std_logic_vector(31 downto 0);
  signal relational_op_net: std_logic;
  signal running1_y_net: std_logic;
  signal sec_boundary_op_net: std_logic;
  signal sec_on_op_net: std_logic_vector(31 downto 0);
  signal t_1sec_op_net: std_logic_vector(27 downto 0);
  signal true_op_net: std_logic;
  signal unix_time1_s_net_x1: std_logic_vector(31 downto 0);

begin
  ce_1_sg_x43 <= ce_1;
  clk_1_sg_x43 <= clk_1;
  reint1_output_port_net_x1 <= master;
  reint1_output_port_net_x2 <= ut0;
  msync <= delay_q_net_x0;
  reset <= bit0_y_net_x1;
  unix_time <= unix_time1_s_net_x1;

  bit0: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x1,
      y(0) => bit0_y_net_x1
    );

  bit1: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x1,
      y(0) => bit1_y_net_x0
    );

  clk_per_sec: entity work.constant_ea8b768d21
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => clk_per_sec_op_net
    );

  count_1sec: entity work.xlcounter_free_he6_cres_correlator
    generic map (
      core_name0 => "cntr_11_0_83c605fb3376e4cf",
      op_arith => xlUnsigned,
      op_width => 28
    )
    port map (
      ce => ce_1_sg_x43,
      clk => clk_1_sg_x43,
      clr => '0',
      en(0) => register_q_net,
      rst(0) => logical_y_net,
      op => count_1sec_op_net
    );

  delay: entity work.xldelay
    generic map (
      latency => 3,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x43,
      clk => clk_1_sg_x43,
      d(0) => relational_op_net,
      en => '1',
      rst => '1',
      q(0) => delay_q_net_x0
    );

  edge_detect_26ed24e9d6: entity work.edge_detect_entity_26ed24e9d6
    port map (
      ce_1 => ce_1_sg_x43,
      clk_1 => clk_1_sg_x43,
      in_x0 => bit1_y_net_x0,
      out_x0 => edge_op_y_net_x0
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => relational_op_net,
      d1(0) => edge_op_y_net_x0,
      y(0) => logical_y_net
    );

  per_clk: entity work.xlcounter_free_he6_cres_correlator
    generic map (
      core_name0 => "cntr_11_0_83c605fb3376e4cf",
      op_arith => xlUnsigned,
      op_width => 28
    )
    port map (
      ce => ce_1_sg_x43,
      clk => clk_1_sg_x43,
      clr => '0',
      en => "1",
      rst(0) => running1_y_net,
      op => per_clk_op_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x43,
      clk => clk_1_sg_x43,
      d(0) => true_op_net,
      en => "1",
      rst(0) => bit1_y_net_x0,
      q(0) => register_q_net
    );

  relational: entity work.relational_1ea7543d62
    port map (
      a => count_1sec_op_net,
      b => t_1sec_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  running1: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => bit0_y_net_x1,
      d1(0) => sec_boundary_op_net,
      y(0) => running1_y_net
    );

  sec_boundary: entity work.relational_1ea7543d62
    port map (
      a => per_clk_op_net,
      b => clk_per_sec_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => sec_boundary_op_net
    );

  sec_on: entity work.xlcounter_free_he6_cres_correlator
    generic map (
      core_name0 => "cntr_11_0_8513360a51c30657",
      op_arith => xlUnsigned,
      op_width => 32
    )
    port map (
      ce => ce_1_sg_x43,
      clk => clk_1_sg_x43,
      clr => '0',
      en(0) => sec_boundary_op_net,
      rst(0) => bit0_y_net_x1,
      op => sec_on_op_net
    );

  t_1sec: entity work.constant_ea8b768d21
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => t_1sec_op_net
    );

  true_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => true_op_net
    );

  unix_time1: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 32,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 32,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 33,
      core_name0 => "addsb_11_0_1366619f9bb096bd",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 33,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 32
    )
    port map (
      a => sec_on_op_net,
      b => reint1_output_port_net_x2,
      ce => ce_1_sg_x43,
      clk => clk_1_sg_x43,
      clr => '0',
      en => "1",
      s => unix_time1_s_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/del_4x_pol0"

entity del_4x_pol0_entity_257eb25036 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d: in std_logic_vector(35 downto 0); 
    q: out std_logic_vector(35 downto 0)
  );
end del_4x_pol0_entity_257eb25036;

architecture structural of del_4x_pol0_entity_257eb25036 is
  signal ce_1_sg_x45: std_logic;
  signal clk_1_sg_x45: std_logic;
  signal register0_q_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x45 <= ce_1;
  clk_1_sg_x45 <= clk_1;
  reinterpret4_output_port_net_x0 <= d;
  q <= register0_q_net_x0;

  register0: entity work.xlregister
    generic map (
      d_width => 36,
      init_value => b"000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x45,
      clk => clk_1_sg_x45,
      d => reinterpret4_output_port_net_x0,
      en => "1",
      rst => "0",
      q => register0_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/del_sync_4x"

entity del_sync_4x_entity_27f85038a4 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d: in std_logic; 
    q: out std_logic
  );
end del_sync_4x_entity_27f85038a4;

architecture structural of del_sync_4x_entity_27f85038a4 is
  signal ce_1_sg_x69: std_logic;
  signal clk_1_sg_x69: std_logic;
  signal register0_q_net_x0: std_logic;
  signal sync_delay1_q_net_x0: std_logic;

begin
  ce_1_sg_x69 <= ce_1;
  clk_1_sg_x69 <= clk_1;
  sync_delay1_q_net_x0 <= d;
  q <= register0_q_net_x0;

  register0: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x69,
      clk => clk_1_sg_x69,
      d(0) => sync_delay1_q_net_x0,
      en => "1",
      rst => "0",
      q(0) => register0_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/delay0"

entity delay0_entity_263830a8f6 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(143 downto 0); 
    dout: out std_logic_vector(143 downto 0)
  );
end delay0_entity_263830a8f6;

architecture structural of delay0_entity_263830a8f6 is
  signal ce_1_sg_x70: std_logic;
  signal clk_1_sg_x70: std_logic;
  signal constant_op_net: std_logic;
  signal counter_op_net: std_logic_vector(8 downto 0);
  signal ram_data_out_net_x0: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x0: std_logic_vector(143 downto 0);

begin
  ce_1_sg_x70 <= ce_1;
  clk_1_sg_x70 <= clk_1;
  reinterpret_out_output_port_net_x0 <= din;
  dout <= ram_data_out_net_x0;

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  counter: entity work.counter_b8dbc870dd
    port map (
      ce => ce_1_sg_x70,
      clk => clk_1_sg_x70,
      clr => '0',
      op => counter_op_net
    );

  ram: entity work.xlspram_he6_cres_correlator
    generic map (
      c_address_width => 9,
      c_width => 144,
      core_name0 => "bmg_72_b0a9af5037d5163a",
      latency => 2
    )
    port map (
      addr => counter_op_net,
      ce => ce_1_sg_x70,
      clk => clk_1_sg_x70,
      data_in => reinterpret_out_output_port_net_x0,
      en => "1",
      rst => "0",
      we(0) => constant_op_net,
      data_out => ram_data_out_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/hilbert0/add_even_real/a_debus"

entity a_debus_entity_659a478c77 is
  port (
    bus_in: in std_logic_vector(71 downto 0); 
    lsb_out1: out std_logic_vector(17 downto 0); 
    msb_out4: out std_logic_vector(17 downto 0); 
    out2: out std_logic_vector(17 downto 0); 
    out3: out std_logic_vector(17 downto 0)
  );
end a_debus_entity_659a478c77;

architecture structural of a_debus_entity_659a478c77 is
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(17 downto 0);
  signal slice1_y_net: std_logic_vector(17 downto 0);
  signal slice2_y_net: std_logic_vector(17 downto 0);
  signal slice3_y_net: std_logic_vector(17 downto 0);
  signal slice4_y_net: std_logic_vector(17 downto 0);

begin
  reinterpret2_output_port_net_x1 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out4 <= reinterpret4_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x2;
  out3 <= reinterpret3_output_port_net_x0;

  reinterpret1: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x2
    );

  reinterpret3: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 72,
      y_width => 18
    )
    port map (
      x => reinterpret2_output_port_net_x1,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 35,
      x_width => 72,
      y_width => 18
    )
    port map (
      x => reinterpret2_output_port_net_x1,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 36,
      new_msb => 53,
      x_width => 72,
      y_width => 18
    )
    port map (
      x => reinterpret2_output_port_net_x1,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 54,
      new_msb => 71,
      x_width => 72,
      y_width => 18
    )
    port map (
      x => reinterpret2_output_port_net_x1,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/hilbert0/add_even_real/op_bussify"

entity op_bussify_entity_920272f09d is
  port (
    in1: in std_logic_vector(18 downto 0); 
    in2: in std_logic_vector(18 downto 0); 
    in3: in std_logic_vector(18 downto 0); 
    in4: in std_logic_vector(18 downto 0); 
    bus_out: out std_logic_vector(75 downto 0)
  );
end op_bussify_entity_920272f09d;

architecture structural of op_bussify_entity_920272f09d is
  signal addsub1_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub2_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub3_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub4_s_net_x0: std_logic_vector(18 downto 0);
  signal concatenate_y_net_x0: std_logic_vector(75 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(18 downto 0);

begin
  addsub1_s_net_x0 <= in1;
  addsub2_s_net_x0 <= in2;
  addsub3_s_net_x0 <= in3;
  addsub4_s_net_x0 <= in4;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_2aea51ccde
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub1_s_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub2_s_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub3_s_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub4_s_net_x0,
      output_port => reinterpret4_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/hilbert0/add_even_real"

entity add_even_real_entity_05aaa4cea5 is
  port (
    a: in std_logic_vector(71 downto 0); 
    b: in std_logic_vector(71 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    dout: out std_logic_vector(75 downto 0)
  );
end add_even_real_entity_05aaa4cea5;

architecture structural of add_even_real_entity_05aaa4cea5 is
  signal addsub1_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub2_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub3_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub4_s_net_x0: std_logic_vector(18 downto 0);
  signal ce_1_sg_x72: std_logic;
  signal clk_1_sg_x72: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(75 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x5: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x6: std_logic_vector(71 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(17 downto 0);

begin
  reinterpret2_output_port_net_x5 <= a;
  reinterpret2_output_port_net_x6 <= b;
  ce_1_sg_x72 <= ce_1;
  clk_1_sg_x72 <= clk_1;
  dout <= concatenate_y_net_x1;

  a_debus_659a478c77: entity work.a_debus_entity_659a478c77
    port map (
      bus_in => reinterpret2_output_port_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x0
    );

  addsub1: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 19,
      core_name0 => "addsb_11_0_8610f827d96057ce",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 19,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 17,
      s_width => 19
    )
    port map (
      a => reinterpret4_output_port_net_x0,
      b => reinterpret4_output_port_net_x1,
      ce => ce_1_sg_x72,
      clk => clk_1_sg_x72,
      clr => '0',
      en => "1",
      s => addsub1_s_net_x0
    );

  addsub2: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 19,
      core_name0 => "addsb_11_0_8610f827d96057ce",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 19,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 17,
      s_width => 19
    )
    port map (
      a => reinterpret3_output_port_net_x0,
      b => reinterpret3_output_port_net_x1,
      ce => ce_1_sg_x72,
      clk => clk_1_sg_x72,
      clr => '0',
      en => "1",
      s => addsub2_s_net_x0
    );

  addsub3: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 19,
      core_name0 => "addsb_11_0_8610f827d96057ce",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 19,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 17,
      s_width => 19
    )
    port map (
      a => reinterpret2_output_port_net_x2,
      b => reinterpret2_output_port_net_x3,
      ce => ce_1_sg_x72,
      clk => clk_1_sg_x72,
      clr => '0',
      en => "1",
      s => addsub3_s_net_x0
    );

  addsub4: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 19,
      core_name0 => "addsb_11_0_8610f827d96057ce",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 19,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 17,
      s_width => 19
    )
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret1_output_port_net_x1,
      ce => ce_1_sg_x72,
      clk => clk_1_sg_x72,
      clr => '0',
      en => "1",
      s => addsub4_s_net_x0
    );

  b_debus_69635cc056: entity work.a_debus_entity_659a478c77
    port map (
      bus_in => reinterpret2_output_port_net_x6,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out4 => reinterpret4_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x3,
      out3 => reinterpret3_output_port_net_x1
    );

  op_bussify_920272f09d: entity work.op_bussify_entity_920272f09d
    port map (
      in1 => addsub1_s_net_x0,
      in2 => addsub2_s_net_x0,
      in3 => addsub3_s_net_x0,
      in4 => addsub4_s_net_x0,
      bus_out => concatenate_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/hilbert0/bus_convert/bussify"

entity bussify_entity_9772614d31 is
  port (
    in1: in std_logic_vector(17 downto 0); 
    in10: in std_logic_vector(17 downto 0); 
    in11: in std_logic_vector(17 downto 0); 
    in12: in std_logic_vector(17 downto 0); 
    in13: in std_logic_vector(17 downto 0); 
    in14: in std_logic_vector(17 downto 0); 
    in15: in std_logic_vector(17 downto 0); 
    in16: in std_logic_vector(17 downto 0); 
    in2: in std_logic_vector(17 downto 0); 
    in3: in std_logic_vector(17 downto 0); 
    in4: in std_logic_vector(17 downto 0); 
    in5: in std_logic_vector(17 downto 0); 
    in6: in std_logic_vector(17 downto 0); 
    in7: in std_logic_vector(17 downto 0); 
    in8: in std_logic_vector(17 downto 0); 
    in9: in std_logic_vector(17 downto 0); 
    bus_out: out std_logic_vector(287 downto 0)
  );
end bussify_entity_9772614d31;

architecture structural of bussify_entity_9772614d31 is
  signal adder_s_net_x15: std_logic_vector(17 downto 0);
  signal adder_s_net_x16: std_logic_vector(17 downto 0);
  signal adder_s_net_x17: std_logic_vector(17 downto 0);
  signal adder_s_net_x18: std_logic_vector(17 downto 0);
  signal adder_s_net_x19: std_logic_vector(17 downto 0);
  signal adder_s_net_x20: std_logic_vector(17 downto 0);
  signal adder_s_net_x21: std_logic_vector(17 downto 0);
  signal adder_s_net_x22: std_logic_vector(17 downto 0);
  signal adder_s_net_x23: std_logic_vector(17 downto 0);
  signal adder_s_net_x24: std_logic_vector(17 downto 0);
  signal adder_s_net_x25: std_logic_vector(17 downto 0);
  signal adder_s_net_x26: std_logic_vector(17 downto 0);
  signal adder_s_net_x27: std_logic_vector(17 downto 0);
  signal adder_s_net_x28: std_logic_vector(17 downto 0);
  signal adder_s_net_x29: std_logic_vector(17 downto 0);
  signal adder_s_net_x30: std_logic_vector(17 downto 0);
  signal concatenate_y_net_x0: std_logic_vector(287 downto 0);
  signal reinterpret10_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret11_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret12_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret13_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret14_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret15_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret16_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret9_output_port_net: std_logic_vector(17 downto 0);

begin
  adder_s_net_x15 <= in1;
  adder_s_net_x16 <= in10;
  adder_s_net_x17 <= in11;
  adder_s_net_x18 <= in12;
  adder_s_net_x19 <= in13;
  adder_s_net_x20 <= in14;
  adder_s_net_x21 <= in15;
  adder_s_net_x22 <= in16;
  adder_s_net_x23 <= in2;
  adder_s_net_x24 <= in3;
  adder_s_net_x25 <= in4;
  adder_s_net_x26 <= in5;
  adder_s_net_x27 <= in6;
  adder_s_net_x28 <= in7;
  adder_s_net_x29 <= in8;
  adder_s_net_x30 <= in9;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_99bf614bfc
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in10 => reinterpret11_output_port_net,
      in11 => reinterpret12_output_port_net,
      in12 => reinterpret13_output_port_net,
      in13 => reinterpret14_output_port_net,
      in14 => reinterpret15_output_port_net,
      in15 => reinterpret16_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      in8 => reinterpret9_output_port_net,
      in9 => reinterpret10_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x15,
      output_port => reinterpret1_output_port_net
    );

  reinterpret10: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x16,
      output_port => reinterpret10_output_port_net
    );

  reinterpret11: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x17,
      output_port => reinterpret11_output_port_net
    );

  reinterpret12: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x18,
      output_port => reinterpret12_output_port_net
    );

  reinterpret13: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x19,
      output_port => reinterpret13_output_port_net
    );

  reinterpret14: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x20,
      output_port => reinterpret14_output_port_net
    );

  reinterpret15: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x21,
      output_port => reinterpret15_output_port_net
    );

  reinterpret16: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x22,
      output_port => reinterpret16_output_port_net
    );

  reinterpret2: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x23,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x24,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x25,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x26,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x27,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x28,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x29,
      output_port => reinterpret8_output_port_net
    );

  reinterpret9: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x30,
      output_port => reinterpret9_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/hilbert0/bus_convert/conv1"

entity conv1_entity_f3426e75fd is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(18 downto 0); 
    out_x0: out std_logic_vector(17 downto 0)
  );
end conv1_entity_f3426e75fd;

architecture structural of conv1_entity_f3426e75fd is
  signal adder_s_net_x16: std_logic_vector(17 downto 0);
  signal almost_half_op_net: std_logic_vector(18 downto 0);
  signal bit_y_net: std_logic;
  signal ce_1_sg_x74: std_logic;
  signal clk_1_sg_x74: std_logic;
  signal concat_y_net: std_logic_vector(19 downto 0);
  signal constant_op_net: std_logic;
  signal force1_output_port_net: std_logic_vector(19 downto 0);
  signal force2_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret16_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(18 downto 0);
  signal tweak_op_y_net: std_logic;

begin
  ce_1_sg_x74 <= ce_1;
  clk_1_sg_x74 <= clk_1;
  reinterpret16_output_port_net_x0 <= in_x0;
  out_x0 <= adder_s_net_x16;

  adder: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 19,
      a_width => 20,
      b_arith => xlUnsigned,
      b_bin_pt => 19,
      b_width => 19,
      c_has_c_out => 0,
      c_latency => 2,
      c_output_width => 21,
      core_name0 => "addsb_11_0_227723d8114e1014",
      extra_registers => 1,
      full_s_arith => 2,
      full_s_width => 21,
      latency => 3,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 17,
      s_width => 18
    )
    port map (
      a => force1_output_port_net,
      b => force2_output_port_net,
      ce => ce_1_sg_x74,
      clk => clk_1_sg_x74,
      clr => '0',
      en => "1",
      s => adder_s_net_x16
    );

  almost_half: entity work.constant_4709ea49b5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => almost_half_op_net
    );

  bit: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 19,
      y_width => 1
    )
    port map (
      x => reinterpret16_output_port_net_x0,
      y(0) => bit_y_net
    );

  concat: entity work.concat_504cae28bd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret_output_port_net,
      in1(0) => tweak_op_y_net,
      y => concat_y_net
    );

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  force1: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net,
      output_port => force1_output_port_net
    );

  force2: entity work.reinterpret_d2180c9169
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => almost_half_op_net,
      output_port => force2_output_port_net
    );

  reinterpret: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret16_output_port_net_x0,
      output_port => reinterpret_output_port_net
    );

  tweak_op: entity work.logical_938d99ac11
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => bit_y_net,
      d1(0) => constant_op_net,
      y(0) => tweak_op_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/hilbert0/bus_convert/debus"

entity debus_entity_d8b36b57c6 is
  port (
    bus_in: in std_logic_vector(303 downto 0); 
    lsb_out1: out std_logic_vector(18 downto 0); 
    msb_out16: out std_logic_vector(18 downto 0); 
    out10: out std_logic_vector(18 downto 0); 
    out11: out std_logic_vector(18 downto 0); 
    out12: out std_logic_vector(18 downto 0); 
    out13: out std_logic_vector(18 downto 0); 
    out14: out std_logic_vector(18 downto 0); 
    out15: out std_logic_vector(18 downto 0); 
    out2: out std_logic_vector(18 downto 0); 
    out3: out std_logic_vector(18 downto 0); 
    out4: out std_logic_vector(18 downto 0); 
    out5: out std_logic_vector(18 downto 0); 
    out6: out std_logic_vector(18 downto 0); 
    out7: out std_logic_vector(18 downto 0); 
    out8: out std_logic_vector(18 downto 0); 
    out9: out std_logic_vector(18 downto 0)
  );
end debus_entity_d8b36b57c6;

architecture structural of debus_entity_d8b36b57c6 is
  signal concatenate_y_net_x0: std_logic_vector(303 downto 0);
  signal reinterpret10_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret11_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret12_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret13_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret14_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret15_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret16_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret5_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret6_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret7_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret8_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret9_output_port_net_x1: std_logic_vector(18 downto 0);
  signal slice10_y_net: std_logic_vector(18 downto 0);
  signal slice11_y_net: std_logic_vector(18 downto 0);
  signal slice12_y_net: std_logic_vector(18 downto 0);
  signal slice13_y_net: std_logic_vector(18 downto 0);
  signal slice14_y_net: std_logic_vector(18 downto 0);
  signal slice15_y_net: std_logic_vector(18 downto 0);
  signal slice16_y_net: std_logic_vector(18 downto 0);
  signal slice1_y_net: std_logic_vector(18 downto 0);
  signal slice2_y_net: std_logic_vector(18 downto 0);
  signal slice3_y_net: std_logic_vector(18 downto 0);
  signal slice4_y_net: std_logic_vector(18 downto 0);
  signal slice5_y_net: std_logic_vector(18 downto 0);
  signal slice6_y_net: std_logic_vector(18 downto 0);
  signal slice7_y_net: std_logic_vector(18 downto 0);
  signal slice8_y_net: std_logic_vector(18 downto 0);
  signal slice9_y_net: std_logic_vector(18 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x1;
  msb_out16 <= reinterpret16_output_port_net_x1;
  out10 <= reinterpret10_output_port_net_x1;
  out11 <= reinterpret11_output_port_net_x1;
  out12 <= reinterpret12_output_port_net_x1;
  out13 <= reinterpret13_output_port_net_x1;
  out14 <= reinterpret14_output_port_net_x1;
  out15 <= reinterpret15_output_port_net_x1;
  out2 <= reinterpret2_output_port_net_x1;
  out3 <= reinterpret3_output_port_net_x1;
  out4 <= reinterpret4_output_port_net_x1;
  out5 <= reinterpret5_output_port_net_x1;
  out6 <= reinterpret6_output_port_net_x1;
  out7 <= reinterpret7_output_port_net_x1;
  out8 <= reinterpret8_output_port_net_x1;
  out9 <= reinterpret9_output_port_net_x1;

  reinterpret1: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x1
    );

  reinterpret10: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice10_y_net,
      output_port => reinterpret10_output_port_net_x1
    );

  reinterpret11: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice11_y_net,
      output_port => reinterpret11_output_port_net_x1
    );

  reinterpret12: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice12_y_net,
      output_port => reinterpret12_output_port_net_x1
    );

  reinterpret13: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice13_y_net,
      output_port => reinterpret13_output_port_net_x1
    );

  reinterpret14: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice14_y_net,
      output_port => reinterpret14_output_port_net_x1
    );

  reinterpret15: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice15_y_net,
      output_port => reinterpret15_output_port_net_x1
    );

  reinterpret16: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice16_y_net,
      output_port => reinterpret16_output_port_net_x1
    );

  reinterpret2: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x1
    );

  reinterpret3: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x1
    );

  reinterpret4: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x1
    );

  reinterpret5: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_y_net,
      output_port => reinterpret5_output_port_net_x1
    );

  reinterpret6: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret6_output_port_net_x1
    );

  reinterpret7: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret7_output_port_net_x1
    );

  reinterpret8: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret8_output_port_net_x1
    );

  reinterpret9: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice9_y_net,
      output_port => reinterpret9_output_port_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 18,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice10: entity work.xlslice
    generic map (
      new_lsb => 171,
      new_msb => 189,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice10_y_net
    );

  slice11: entity work.xlslice
    generic map (
      new_lsb => 190,
      new_msb => 208,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice11_y_net
    );

  slice12: entity work.xlslice
    generic map (
      new_lsb => 209,
      new_msb => 227,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice12_y_net
    );

  slice13: entity work.xlslice
    generic map (
      new_lsb => 228,
      new_msb => 246,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice13_y_net
    );

  slice14: entity work.xlslice
    generic map (
      new_lsb => 247,
      new_msb => 265,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice14_y_net
    );

  slice15: entity work.xlslice
    generic map (
      new_lsb => 266,
      new_msb => 284,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice15_y_net
    );

  slice16: entity work.xlslice
    generic map (
      new_lsb => 285,
      new_msb => 303,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice16_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 19,
      new_msb => 37,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 38,
      new_msb => 56,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 57,
      new_msb => 75,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 76,
      new_msb => 94,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 95,
      new_msb => 113,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 114,
      new_msb => 132,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 133,
      new_msb => 151,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice8_y_net
    );

  slice9: entity work.xlslice
    generic map (
      new_lsb => 152,
      new_msb => 170,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice9_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/hilbert0/bus_convert"

entity bus_convert_entity_eca2f244c0 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(303 downto 0); 
    dout: out std_logic_vector(287 downto 0)
  );
end bus_convert_entity_eca2f244c0;

architecture structural of bus_convert_entity_eca2f244c0 is
  signal adder_s_net_x16: std_logic_vector(17 downto 0);
  signal adder_s_net_x17: std_logic_vector(17 downto 0);
  signal adder_s_net_x18: std_logic_vector(17 downto 0);
  signal adder_s_net_x19: std_logic_vector(17 downto 0);
  signal adder_s_net_x20: std_logic_vector(17 downto 0);
  signal adder_s_net_x21: std_logic_vector(17 downto 0);
  signal adder_s_net_x22: std_logic_vector(17 downto 0);
  signal adder_s_net_x23: std_logic_vector(17 downto 0);
  signal adder_s_net_x24: std_logic_vector(17 downto 0);
  signal adder_s_net_x25: std_logic_vector(17 downto 0);
  signal adder_s_net_x26: std_logic_vector(17 downto 0);
  signal adder_s_net_x27: std_logic_vector(17 downto 0);
  signal adder_s_net_x28: std_logic_vector(17 downto 0);
  signal adder_s_net_x29: std_logic_vector(17 downto 0);
  signal adder_s_net_x30: std_logic_vector(17 downto 0);
  signal adder_s_net_x31: std_logic_vector(17 downto 0);
  signal ce_1_sg_x90: std_logic;
  signal clk_1_sg_x90: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(303 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(287 downto 0);
  signal reinterpret10_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret11_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret12_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret13_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret14_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret15_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret16_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret5_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret6_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret7_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret8_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret9_output_port_net_x1: std_logic_vector(18 downto 0);

begin
  ce_1_sg_x90 <= ce_1;
  clk_1_sg_x90 <= clk_1;
  concatenate_y_net_x2 <= din;
  dout <= concatenate_y_net_x3;

  bussify_9772614d31: entity work.bussify_entity_9772614d31
    port map (
      in1 => adder_s_net_x16,
      in10 => adder_s_net_x17,
      in11 => adder_s_net_x18,
      in12 => adder_s_net_x19,
      in13 => adder_s_net_x20,
      in14 => adder_s_net_x21,
      in15 => adder_s_net_x22,
      in16 => adder_s_net_x23,
      in2 => adder_s_net_x24,
      in3 => adder_s_net_x25,
      in4 => adder_s_net_x26,
      in5 => adder_s_net_x27,
      in6 => adder_s_net_x28,
      in7 => adder_s_net_x29,
      in8 => adder_s_net_x30,
      in9 => adder_s_net_x31,
      bus_out => concatenate_y_net_x3
    );

  conv10_ee476ce33f: entity work.conv1_entity_f3426e75fd
    port map (
      ce_1 => ce_1_sg_x90,
      clk_1 => clk_1_sg_x90,
      in_x0 => reinterpret7_output_port_net_x1,
      out_x0 => adder_s_net_x17
    );

  conv11_a1c5a7cee6: entity work.conv1_entity_f3426e75fd
    port map (
      ce_1 => ce_1_sg_x90,
      clk_1 => clk_1_sg_x90,
      in_x0 => reinterpret6_output_port_net_x1,
      out_x0 => adder_s_net_x18
    );

  conv12_f767ab31e9: entity work.conv1_entity_f3426e75fd
    port map (
      ce_1 => ce_1_sg_x90,
      clk_1 => clk_1_sg_x90,
      in_x0 => reinterpret5_output_port_net_x1,
      out_x0 => adder_s_net_x19
    );

  conv13_fcf2481074: entity work.conv1_entity_f3426e75fd
    port map (
      ce_1 => ce_1_sg_x90,
      clk_1 => clk_1_sg_x90,
      in_x0 => reinterpret4_output_port_net_x1,
      out_x0 => adder_s_net_x20
    );

  conv14_d11638167e: entity work.conv1_entity_f3426e75fd
    port map (
      ce_1 => ce_1_sg_x90,
      clk_1 => clk_1_sg_x90,
      in_x0 => reinterpret3_output_port_net_x1,
      out_x0 => adder_s_net_x21
    );

  conv15_5ad6274e87: entity work.conv1_entity_f3426e75fd
    port map (
      ce_1 => ce_1_sg_x90,
      clk_1 => clk_1_sg_x90,
      in_x0 => reinterpret2_output_port_net_x1,
      out_x0 => adder_s_net_x22
    );

  conv16_a5e805d0d9: entity work.conv1_entity_f3426e75fd
    port map (
      ce_1 => ce_1_sg_x90,
      clk_1 => clk_1_sg_x90,
      in_x0 => reinterpret1_output_port_net_x1,
      out_x0 => adder_s_net_x23
    );

  conv1_f3426e75fd: entity work.conv1_entity_f3426e75fd
    port map (
      ce_1 => ce_1_sg_x90,
      clk_1 => clk_1_sg_x90,
      in_x0 => reinterpret16_output_port_net_x1,
      out_x0 => adder_s_net_x16
    );

  conv2_f1abf8c233: entity work.conv1_entity_f3426e75fd
    port map (
      ce_1 => ce_1_sg_x90,
      clk_1 => clk_1_sg_x90,
      in_x0 => reinterpret15_output_port_net_x1,
      out_x0 => adder_s_net_x24
    );

  conv3_d2ed372173: entity work.conv1_entity_f3426e75fd
    port map (
      ce_1 => ce_1_sg_x90,
      clk_1 => clk_1_sg_x90,
      in_x0 => reinterpret14_output_port_net_x1,
      out_x0 => adder_s_net_x25
    );

  conv4_0b8b74798b: entity work.conv1_entity_f3426e75fd
    port map (
      ce_1 => ce_1_sg_x90,
      clk_1 => clk_1_sg_x90,
      in_x0 => reinterpret13_output_port_net_x1,
      out_x0 => adder_s_net_x26
    );

  conv5_c26557f29d: entity work.conv1_entity_f3426e75fd
    port map (
      ce_1 => ce_1_sg_x90,
      clk_1 => clk_1_sg_x90,
      in_x0 => reinterpret12_output_port_net_x1,
      out_x0 => adder_s_net_x27
    );

  conv6_8c843f5387: entity work.conv1_entity_f3426e75fd
    port map (
      ce_1 => ce_1_sg_x90,
      clk_1 => clk_1_sg_x90,
      in_x0 => reinterpret11_output_port_net_x1,
      out_x0 => adder_s_net_x28
    );

  conv7_c2092e613a: entity work.conv1_entity_f3426e75fd
    port map (
      ce_1 => ce_1_sg_x90,
      clk_1 => clk_1_sg_x90,
      in_x0 => reinterpret10_output_port_net_x1,
      out_x0 => adder_s_net_x29
    );

  conv8_884cd759bf: entity work.conv1_entity_f3426e75fd
    port map (
      ce_1 => ce_1_sg_x90,
      clk_1 => clk_1_sg_x90,
      in_x0 => reinterpret9_output_port_net_x1,
      out_x0 => adder_s_net_x30
    );

  conv9_976d685366: entity work.conv1_entity_f3426e75fd
    port map (
      ce_1 => ce_1_sg_x90,
      clk_1 => clk_1_sg_x90,
      in_x0 => reinterpret8_output_port_net_x1,
      out_x0 => adder_s_net_x31
    );

  debus_d8b36b57c6: entity work.debus_entity_d8b36b57c6
    port map (
      bus_in => concatenate_y_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out16 => reinterpret16_output_port_net_x1,
      out10 => reinterpret10_output_port_net_x1,
      out11 => reinterpret11_output_port_net_x1,
      out12 => reinterpret12_output_port_net_x1,
      out13 => reinterpret13_output_port_net_x1,
      out14 => reinterpret14_output_port_net_x1,
      out15 => reinterpret15_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1,
      out4 => reinterpret4_output_port_net_x1,
      out5 => reinterpret5_output_port_net_x1,
      out6 => reinterpret6_output_port_net_x1,
      out7 => reinterpret7_output_port_net_x1,
      out8 => reinterpret8_output_port_net_x1,
      out9 => reinterpret9_output_port_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/hilbert0/bus_expand"

entity bus_expand_entity_6b8be46d40 is
  port (
    bus_in: in std_logic_vector(287 downto 0); 
    lsb_out1: out std_logic_vector(71 downto 0); 
    msb_out4: out std_logic_vector(71 downto 0); 
    out2: out std_logic_vector(71 downto 0); 
    out3: out std_logic_vector(71 downto 0)
  );
end bus_expand_entity_6b8be46d40;

architecture structural of bus_expand_entity_6b8be46d40 is
  signal concatenate_y_net_x4: std_logic_vector(287 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(71 downto 0);
  signal slice1_y_net: std_logic_vector(71 downto 0);
  signal slice2_y_net: std_logic_vector(71 downto 0);
  signal slice3_y_net: std_logic_vector(71 downto 0);
  signal slice4_y_net: std_logic_vector(71 downto 0);

begin
  concatenate_y_net_x4 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out4 <= reinterpret4_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;

  reinterpret1: entity work.reinterpret_8b4279cdc5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_8b4279cdc5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_8b4279cdc5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_8b4279cdc5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 71,
      x_width => 288,
      y_width => 72
    )
    port map (
      x => concatenate_y_net_x4,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 72,
      new_msb => 143,
      x_width => 288,
      y_width => 72
    )
    port map (
      x => concatenate_y_net_x4,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 144,
      new_msb => 215,
      x_width => 288,
      y_width => 72
    )
    port map (
      x => concatenate_y_net_x4,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 216,
      new_msb => 287,
      x_width => 288,
      y_width => 72
    )
    port map (
      x => concatenate_y_net_x4,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/hilbert0/bus_expand_a"

entity bus_expand_a_entity_1605f56624 is
  port (
    bus_in: in std_logic_vector(143 downto 0); 
    lsb_out1: out std_logic_vector(71 downto 0); 
    msb_out2: out std_logic_vector(71 downto 0)
  );
end bus_expand_a_entity_1605f56624;

architecture structural of bus_expand_a_entity_1605f56624 is
  signal reinterpret1_output_port_net_x6: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x6: std_logic_vector(71 downto 0);
  signal reinterpret_out_output_port_net_x0: std_logic_vector(143 downto 0);
  signal slice1_y_net: std_logic_vector(71 downto 0);
  signal slice2_y_net: std_logic_vector(71 downto 0);

begin
  reinterpret_out_output_port_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x6;
  msb_out2 <= reinterpret2_output_port_net_x6;

  reinterpret1: entity work.reinterpret_8b4279cdc5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x6
    );

  reinterpret2: entity work.reinterpret_8b4279cdc5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x6
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 71,
      x_width => 144,
      y_width => 72
    )
    port map (
      x => reinterpret_out_output_port_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 72,
      new_msb => 143,
      x_width => 144,
      y_width => 72
    )
    port map (
      x => reinterpret_out_output_port_net_x0,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/hilbert0/bus_scale/bussify"

entity bussify_entity_56e09c84e3 is
  port (
    in1: in std_logic_vector(18 downto 0); 
    in10: in std_logic_vector(18 downto 0); 
    in11: in std_logic_vector(18 downto 0); 
    in12: in std_logic_vector(18 downto 0); 
    in13: in std_logic_vector(18 downto 0); 
    in14: in std_logic_vector(18 downto 0); 
    in15: in std_logic_vector(18 downto 0); 
    in16: in std_logic_vector(18 downto 0); 
    in2: in std_logic_vector(18 downto 0); 
    in3: in std_logic_vector(18 downto 0); 
    in4: in std_logic_vector(18 downto 0); 
    in5: in std_logic_vector(18 downto 0); 
    in6: in std_logic_vector(18 downto 0); 
    in7: in std_logic_vector(18 downto 0); 
    in8: in std_logic_vector(18 downto 0); 
    in9: in std_logic_vector(18 downto 0); 
    bus_out: out std_logic_vector(303 downto 0)
  );
end bussify_entity_56e09c84e3;

architecture structural of bussify_entity_56e09c84e3 is
  signal concatenate_y_net_x3: std_logic_vector(303 downto 0);
  signal reinterpret10_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret11_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret12_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret13_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret14_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret15_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret16_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret9_output_port_net: std_logic_vector(18 downto 0);
  signal scale10_op_net_x0: std_logic_vector(18 downto 0);
  signal scale11_op_net_x0: std_logic_vector(18 downto 0);
  signal scale12_op_net_x0: std_logic_vector(18 downto 0);
  signal scale13_op_net_x0: std_logic_vector(18 downto 0);
  signal scale14_op_net_x0: std_logic_vector(18 downto 0);
  signal scale15_op_net_x0: std_logic_vector(18 downto 0);
  signal scale16_op_net_x0: std_logic_vector(18 downto 0);
  signal scale1_op_net_x0: std_logic_vector(18 downto 0);
  signal scale2_op_net_x0: std_logic_vector(18 downto 0);
  signal scale3_op_net_x0: std_logic_vector(18 downto 0);
  signal scale4_op_net_x0: std_logic_vector(18 downto 0);
  signal scale5_op_net_x0: std_logic_vector(18 downto 0);
  signal scale6_op_net_x0: std_logic_vector(18 downto 0);
  signal scale7_op_net_x0: std_logic_vector(18 downto 0);
  signal scale8_op_net_x0: std_logic_vector(18 downto 0);
  signal scale9_op_net_x0: std_logic_vector(18 downto 0);

begin
  scale1_op_net_x0 <= in1;
  scale10_op_net_x0 <= in10;
  scale11_op_net_x0 <= in11;
  scale12_op_net_x0 <= in12;
  scale13_op_net_x0 <= in13;
  scale14_op_net_x0 <= in14;
  scale15_op_net_x0 <= in15;
  scale16_op_net_x0 <= in16;
  scale2_op_net_x0 <= in2;
  scale3_op_net_x0 <= in3;
  scale4_op_net_x0 <= in4;
  scale5_op_net_x0 <= in5;
  scale6_op_net_x0 <= in6;
  scale7_op_net_x0 <= in7;
  scale8_op_net_x0 <= in8;
  scale9_op_net_x0 <= in9;
  bus_out <= concatenate_y_net_x3;

  concatenate: entity work.concat_b117ea6d19
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in10 => reinterpret11_output_port_net,
      in11 => reinterpret12_output_port_net,
      in12 => reinterpret13_output_port_net,
      in13 => reinterpret14_output_port_net,
      in14 => reinterpret15_output_port_net,
      in15 => reinterpret16_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      in8 => reinterpret9_output_port_net,
      in9 => reinterpret10_output_port_net,
      y => concatenate_y_net_x3
    );

  reinterpret1: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale1_op_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret10: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale10_op_net_x0,
      output_port => reinterpret10_output_port_net
    );

  reinterpret11: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale11_op_net_x0,
      output_port => reinterpret11_output_port_net
    );

  reinterpret12: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale12_op_net_x0,
      output_port => reinterpret12_output_port_net
    );

  reinterpret13: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale13_op_net_x0,
      output_port => reinterpret13_output_port_net
    );

  reinterpret14: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale14_op_net_x0,
      output_port => reinterpret14_output_port_net
    );

  reinterpret15: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale15_op_net_x0,
      output_port => reinterpret15_output_port_net
    );

  reinterpret16: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale16_op_net_x0,
      output_port => reinterpret16_output_port_net
    );

  reinterpret2: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale2_op_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale3_op_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale4_op_net_x0,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale5_op_net_x0,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale6_op_net_x0,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale7_op_net_x0,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale8_op_net_x0,
      output_port => reinterpret8_output_port_net
    );

  reinterpret9: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale9_op_net_x0,
      output_port => reinterpret9_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/hilbert0/bus_scale/debus"

entity debus_entity_746e40ae9b is
  port (
    bus_in: in std_logic_vector(303 downto 0); 
    lsb_out1: out std_logic_vector(18 downto 0); 
    msb_out16: out std_logic_vector(18 downto 0); 
    out10: out std_logic_vector(18 downto 0); 
    out11: out std_logic_vector(18 downto 0); 
    out12: out std_logic_vector(18 downto 0); 
    out13: out std_logic_vector(18 downto 0); 
    out14: out std_logic_vector(18 downto 0); 
    out15: out std_logic_vector(18 downto 0); 
    out2: out std_logic_vector(18 downto 0); 
    out3: out std_logic_vector(18 downto 0); 
    out4: out std_logic_vector(18 downto 0); 
    out5: out std_logic_vector(18 downto 0); 
    out6: out std_logic_vector(18 downto 0); 
    out7: out std_logic_vector(18 downto 0); 
    out8: out std_logic_vector(18 downto 0); 
    out9: out std_logic_vector(18 downto 0)
  );
end debus_entity_746e40ae9b;

architecture structural of debus_entity_746e40ae9b is
  signal concat_y_net_x0: std_logic_vector(303 downto 0);
  signal reinterpret10_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret11_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret12_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret13_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret14_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret15_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret16_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret9_output_port_net_x0: std_logic_vector(18 downto 0);
  signal slice10_y_net: std_logic_vector(18 downto 0);
  signal slice11_y_net: std_logic_vector(18 downto 0);
  signal slice12_y_net: std_logic_vector(18 downto 0);
  signal slice13_y_net: std_logic_vector(18 downto 0);
  signal slice14_y_net: std_logic_vector(18 downto 0);
  signal slice15_y_net: std_logic_vector(18 downto 0);
  signal slice16_y_net: std_logic_vector(18 downto 0);
  signal slice1_y_net: std_logic_vector(18 downto 0);
  signal slice2_y_net: std_logic_vector(18 downto 0);
  signal slice3_y_net: std_logic_vector(18 downto 0);
  signal slice4_y_net: std_logic_vector(18 downto 0);
  signal slice5_y_net: std_logic_vector(18 downto 0);
  signal slice6_y_net: std_logic_vector(18 downto 0);
  signal slice7_y_net: std_logic_vector(18 downto 0);
  signal slice8_y_net: std_logic_vector(18 downto 0);
  signal slice9_y_net: std_logic_vector(18 downto 0);

begin
  concat_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out16 <= reinterpret16_output_port_net_x0;
  out10 <= reinterpret10_output_port_net_x0;
  out11 <= reinterpret11_output_port_net_x0;
  out12 <= reinterpret12_output_port_net_x0;
  out13 <= reinterpret13_output_port_net_x0;
  out14 <= reinterpret14_output_port_net_x0;
  out15 <= reinterpret15_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;
  out4 <= reinterpret4_output_port_net_x0;
  out5 <= reinterpret5_output_port_net_x0;
  out6 <= reinterpret6_output_port_net_x0;
  out7 <= reinterpret7_output_port_net_x0;
  out8 <= reinterpret8_output_port_net_x0;
  out9 <= reinterpret9_output_port_net_x0;

  reinterpret1: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret10: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice10_y_net,
      output_port => reinterpret10_output_port_net_x0
    );

  reinterpret11: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice11_y_net,
      output_port => reinterpret11_output_port_net_x0
    );

  reinterpret12: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice12_y_net,
      output_port => reinterpret12_output_port_net_x0
    );

  reinterpret13: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice13_y_net,
      output_port => reinterpret13_output_port_net_x0
    );

  reinterpret14: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice14_y_net,
      output_port => reinterpret14_output_port_net_x0
    );

  reinterpret15: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice15_y_net,
      output_port => reinterpret15_output_port_net_x0
    );

  reinterpret16: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice16_y_net,
      output_port => reinterpret16_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  reinterpret5: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_y_net,
      output_port => reinterpret5_output_port_net_x0
    );

  reinterpret6: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret6_output_port_net_x0
    );

  reinterpret7: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret7_output_port_net_x0
    );

  reinterpret8: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret8_output_port_net_x0
    );

  reinterpret9: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice9_y_net,
      output_port => reinterpret9_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 18,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concat_y_net_x0,
      y => slice1_y_net
    );

  slice10: entity work.xlslice
    generic map (
      new_lsb => 171,
      new_msb => 189,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concat_y_net_x0,
      y => slice10_y_net
    );

  slice11: entity work.xlslice
    generic map (
      new_lsb => 190,
      new_msb => 208,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concat_y_net_x0,
      y => slice11_y_net
    );

  slice12: entity work.xlslice
    generic map (
      new_lsb => 209,
      new_msb => 227,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concat_y_net_x0,
      y => slice12_y_net
    );

  slice13: entity work.xlslice
    generic map (
      new_lsb => 228,
      new_msb => 246,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concat_y_net_x0,
      y => slice13_y_net
    );

  slice14: entity work.xlslice
    generic map (
      new_lsb => 247,
      new_msb => 265,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concat_y_net_x0,
      y => slice14_y_net
    );

  slice15: entity work.xlslice
    generic map (
      new_lsb => 266,
      new_msb => 284,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concat_y_net_x0,
      y => slice15_y_net
    );

  slice16: entity work.xlslice
    generic map (
      new_lsb => 285,
      new_msb => 303,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concat_y_net_x0,
      y => slice16_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 19,
      new_msb => 37,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concat_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 38,
      new_msb => 56,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concat_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 57,
      new_msb => 75,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concat_y_net_x0,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 76,
      new_msb => 94,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concat_y_net_x0,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 95,
      new_msb => 113,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concat_y_net_x0,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 114,
      new_msb => 132,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concat_y_net_x0,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 133,
      new_msb => 151,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concat_y_net_x0,
      y => slice8_y_net
    );

  slice9: entity work.xlslice
    generic map (
      new_lsb => 152,
      new_msb => 170,
      x_width => 304,
      y_width => 19
    )
    port map (
      x => concat_y_net_x0,
      y => slice9_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/hilbert0/bus_scale"

entity bus_scale_entity_e9d1be8911 is
  port (
    din: in std_logic_vector(303 downto 0); 
    dout: out std_logic_vector(303 downto 0)
  );
end bus_scale_entity_e9d1be8911;

architecture structural of bus_scale_entity_e9d1be8911 is
  signal concat_y_net_x1: std_logic_vector(303 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(303 downto 0);
  signal reinterpret10_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret11_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret12_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret13_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret14_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret15_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret16_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret9_output_port_net_x0: std_logic_vector(18 downto 0);
  signal scale10_op_net_x0: std_logic_vector(18 downto 0);
  signal scale11_op_net_x0: std_logic_vector(18 downto 0);
  signal scale12_op_net_x0: std_logic_vector(18 downto 0);
  signal scale13_op_net_x0: std_logic_vector(18 downto 0);
  signal scale14_op_net_x0: std_logic_vector(18 downto 0);
  signal scale15_op_net_x0: std_logic_vector(18 downto 0);
  signal scale16_op_net_x0: std_logic_vector(18 downto 0);
  signal scale1_op_net_x0: std_logic_vector(18 downto 0);
  signal scale2_op_net_x0: std_logic_vector(18 downto 0);
  signal scale3_op_net_x0: std_logic_vector(18 downto 0);
  signal scale4_op_net_x0: std_logic_vector(18 downto 0);
  signal scale5_op_net_x0: std_logic_vector(18 downto 0);
  signal scale6_op_net_x0: std_logic_vector(18 downto 0);
  signal scale7_op_net_x0: std_logic_vector(18 downto 0);
  signal scale8_op_net_x0: std_logic_vector(18 downto 0);
  signal scale9_op_net_x0: std_logic_vector(18 downto 0);

begin
  concat_y_net_x1 <= din;
  dout <= concatenate_y_net_x4;

  bussify_56e09c84e3: entity work.bussify_entity_56e09c84e3
    port map (
      in1 => scale1_op_net_x0,
      in10 => scale10_op_net_x0,
      in11 => scale11_op_net_x0,
      in12 => scale12_op_net_x0,
      in13 => scale13_op_net_x0,
      in14 => scale14_op_net_x0,
      in15 => scale15_op_net_x0,
      in16 => scale16_op_net_x0,
      in2 => scale2_op_net_x0,
      in3 => scale3_op_net_x0,
      in4 => scale4_op_net_x0,
      in5 => scale5_op_net_x0,
      in6 => scale6_op_net_x0,
      in7 => scale7_op_net_x0,
      in8 => scale8_op_net_x0,
      in9 => scale9_op_net_x0,
      bus_out => concatenate_y_net_x4
    );

  debus_746e40ae9b: entity work.debus_entity_746e40ae9b
    port map (
      bus_in => concat_y_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out16 => reinterpret16_output_port_net_x0,
      out10 => reinterpret10_output_port_net_x0,
      out11 => reinterpret11_output_port_net_x0,
      out12 => reinterpret12_output_port_net_x0,
      out13 => reinterpret13_output_port_net_x0,
      out14 => reinterpret14_output_port_net_x0,
      out15 => reinterpret15_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0,
      out4 => reinterpret4_output_port_net_x0,
      out5 => reinterpret5_output_port_net_x0,
      out6 => reinterpret6_output_port_net_x0,
      out7 => reinterpret7_output_port_net_x0,
      out8 => reinterpret8_output_port_net_x0,
      out9 => reinterpret9_output_port_net_x0
    );

  scale1: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret16_output_port_net_x0,
      op => scale1_op_net_x0
    );

  scale10: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret7_output_port_net_x0,
      op => scale10_op_net_x0
    );

  scale11: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret6_output_port_net_x0,
      op => scale11_op_net_x0
    );

  scale12: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret5_output_port_net_x0,
      op => scale12_op_net_x0
    );

  scale13: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret4_output_port_net_x0,
      op => scale13_op_net_x0
    );

  scale14: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret3_output_port_net_x0,
      op => scale14_op_net_x0
    );

  scale15: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret2_output_port_net_x0,
      op => scale15_op_net_x0
    );

  scale16: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret1_output_port_net_x0,
      op => scale16_op_net_x0
    );

  scale2: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret15_output_port_net_x0,
      op => scale2_op_net_x0
    );

  scale3: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret14_output_port_net_x0,
      op => scale3_op_net_x0
    );

  scale4: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret13_output_port_net_x0,
      op => scale4_op_net_x0
    );

  scale5: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret12_output_port_net_x0,
      op => scale5_op_net_x0
    );

  scale6: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret11_output_port_net_x0,
      op => scale6_op_net_x0
    );

  scale7: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret10_output_port_net_x0,
      op => scale7_op_net_x0
    );

  scale8: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret9_output_port_net_x0,
      op => scale8_op_net_x0
    );

  scale9: entity work.scale_9f61027ba4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret8_output_port_net_x0,
      op => scale9_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/hilbert0/munge_a/join"

entity join_entity_5ce9a139c2 is
  port (
    in1: in std_logic_vector(17 downto 0); 
    in2: in std_logic_vector(17 downto 0); 
    in3: in std_logic_vector(17 downto 0); 
    in4: in std_logic_vector(17 downto 0); 
    in5: in std_logic_vector(17 downto 0); 
    in6: in std_logic_vector(17 downto 0); 
    in7: in std_logic_vector(17 downto 0); 
    in8: in std_logic_vector(17 downto 0); 
    bus_out: out std_logic_vector(143 downto 0)
  );
end join_entity_5ce9a139c2;

architecture structural of join_entity_5ce9a139c2 is
  signal concatenate_y_net_x0: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret5_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret6_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret7_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret8_output_port_net_x1: std_logic_vector(17 downto 0);

begin
  reinterpret8_output_port_net_x1 <= in1;
  reinterpret6_output_port_net_x1 <= in2;
  reinterpret4_output_port_net_x1 <= in3;
  reinterpret2_output_port_net_x1 <= in4;
  reinterpret7_output_port_net_x1 <= in5;
  reinterpret5_output_port_net_x1 <= in6;
  reinterpret3_output_port_net_x1 <= in7;
  reinterpret1_output_port_net_x1 <= in8;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_341bdeba15
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret8_output_port_net_x1,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret6_output_port_net_x1,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret4_output_port_net_x1,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret2_output_port_net_x1,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret7_output_port_net_x1,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret5_output_port_net_x1,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret3_output_port_net_x1,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret1_output_port_net_x1,
      output_port => reinterpret8_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/hilbert0/munge_a/split"

entity split_entity_661d924b40 is
  port (
    bus_in: in std_logic_vector(143 downto 0); 
    lsb_out1: out std_logic_vector(17 downto 0); 
    msb_out8: out std_logic_vector(17 downto 0); 
    out2: out std_logic_vector(17 downto 0); 
    out3: out std_logic_vector(17 downto 0); 
    out4: out std_logic_vector(17 downto 0); 
    out5: out std_logic_vector(17 downto 0); 
    out6: out std_logic_vector(17 downto 0); 
    out7: out std_logic_vector(17 downto 0)
  );
end split_entity_661d924b40;

architecture structural of split_entity_661d924b40 is
  signal reinterpret1_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret5_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret6_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret7_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret8_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret_output_port_net_x0: std_logic_vector(143 downto 0);
  signal slice1_y_net: std_logic_vector(17 downto 0);
  signal slice2_y_net: std_logic_vector(17 downto 0);
  signal slice3_y_net: std_logic_vector(17 downto 0);
  signal slice4_y_net: std_logic_vector(17 downto 0);
  signal slice5_y_net: std_logic_vector(17 downto 0);
  signal slice6_y_net: std_logic_vector(17 downto 0);
  signal slice7_y_net: std_logic_vector(17 downto 0);
  signal slice8_y_net: std_logic_vector(17 downto 0);

begin
  reinterpret_output_port_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x2;
  msb_out8 <= reinterpret8_output_port_net_x2;
  out2 <= reinterpret2_output_port_net_x2;
  out3 <= reinterpret3_output_port_net_x2;
  out4 <= reinterpret4_output_port_net_x2;
  out5 <= reinterpret5_output_port_net_x2;
  out6 <= reinterpret6_output_port_net_x2;
  out7 <= reinterpret7_output_port_net_x2;

  reinterpret1: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  reinterpret2: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x2
    );

  reinterpret3: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x2
    );

  reinterpret4: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x2
    );

  reinterpret5: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_y_net,
      output_port => reinterpret5_output_port_net_x2
    );

  reinterpret6: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret6_output_port_net_x2
    );

  reinterpret7: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret7_output_port_net_x2
    );

  reinterpret8: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret8_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 144,
      y_width => 18
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 35,
      x_width => 144,
      y_width => 18
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 36,
      new_msb => 53,
      x_width => 144,
      y_width => 18
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 54,
      new_msb => 71,
      x_width => 144,
      y_width => 18
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 72,
      new_msb => 89,
      x_width => 144,
      y_width => 18
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 90,
      new_msb => 107,
      x_width => 144,
      y_width => 18
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 108,
      new_msb => 125,
      x_width => 144,
      y_width => 18
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 126,
      new_msb => 143,
      x_width => 144,
      y_width => 18
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice8_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/hilbert0/munge_a"

entity munge_a_entity_4ff9248a49 is
  port (
    din: in std_logic_vector(143 downto 0); 
    dout: out std_logic_vector(143 downto 0)
  );
end munge_a_entity_4ff9248a49;

architecture structural of munge_a_entity_4ff9248a49 is
  signal concatenate_y_net_x0: std_logic_vector(143 downto 0);
  signal mux0_y_net_x0: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret5_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret6_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret7_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret8_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret_out_output_port_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret_output_port_net_x0: std_logic_vector(143 downto 0);

begin
  mux0_y_net_x0 <= din;
  dout <= reinterpret_out_output_port_net_x1;

  join_5ce9a139c2: entity work.join_entity_5ce9a139c2
    port map (
      in1 => reinterpret8_output_port_net_x2,
      in2 => reinterpret6_output_port_net_x2,
      in3 => reinterpret4_output_port_net_x2,
      in4 => reinterpret2_output_port_net_x2,
      in5 => reinterpret7_output_port_net_x2,
      in6 => reinterpret5_output_port_net_x2,
      in7 => reinterpret3_output_port_net_x2,
      in8 => reinterpret1_output_port_net_x2,
      bus_out => concatenate_y_net_x0
    );

  reinterpret: entity work.reinterpret_d35711d5ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux0_y_net_x0,
      output_port => reinterpret_output_port_net_x0
    );

  reinterpret_out: entity work.reinterpret_d35711d5ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concatenate_y_net_x0,
      output_port => reinterpret_out_output_port_net_x1
    );

  split_661d924b40: entity work.split_entity_661d924b40
    port map (
      bus_in => reinterpret_output_port_net_x0,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out8 => reinterpret8_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x2,
      out4 => reinterpret4_output_port_net_x2,
      out5 => reinterpret5_output_port_net_x2,
      out6 => reinterpret6_output_port_net_x2,
      out7 => reinterpret7_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/hilbert0/munge_even"

entity munge_even_entity_248d6bbbbb is
  port (
    din: in std_logic_vector(143 downto 0); 
    dout: out std_logic_vector(143 downto 0)
  );
end munge_even_entity_248d6bbbbb;

architecture structural of munge_even_entity_248d6bbbbb is
  signal concat_y_net_x0: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x0: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret5_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret6_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret7_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret8_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret_out_output_port_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret_output_port_net_x0: std_logic_vector(143 downto 0);

begin
  concat_y_net_x0 <= din;
  dout <= reinterpret_out_output_port_net_x1;

  join_c163b5d807: entity work.join_entity_5ce9a139c2
    port map (
      in1 => reinterpret8_output_port_net_x2,
      in2 => reinterpret4_output_port_net_x2,
      in3 => reinterpret7_output_port_net_x2,
      in4 => reinterpret3_output_port_net_x2,
      in5 => reinterpret6_output_port_net_x2,
      in6 => reinterpret2_output_port_net_x2,
      in7 => reinterpret5_output_port_net_x2,
      in8 => reinterpret1_output_port_net_x2,
      bus_out => concatenate_y_net_x0
    );

  reinterpret: entity work.reinterpret_d35711d5ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net_x0,
      output_port => reinterpret_output_port_net_x0
    );

  reinterpret_out: entity work.reinterpret_d35711d5ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concatenate_y_net_x0,
      output_port => reinterpret_out_output_port_net_x1
    );

  split_2490ae330a: entity work.split_entity_661d924b40
    port map (
      bus_in => reinterpret_output_port_net_x0,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out8 => reinterpret8_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x2,
      out4 => reinterpret4_output_port_net_x2,
      out5 => reinterpret5_output_port_net_x2,
      out6 => reinterpret6_output_port_net_x2,
      out7 => reinterpret7_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/hilbert0/ri_to_c"

entity ri_to_c_entity_5a100f370b is
  port (
    im: in std_logic_vector(71 downto 0); 
    re: in std_logic_vector(71 downto 0); 
    c: out std_logic_vector(143 downto 0)
  );
end ri_to_c_entity_5a100f370b;

architecture structural of ri_to_c_entity_5a100f370b is
  signal concat_y_net_x1: std_logic_vector(143 downto 0);
  signal force_im_output_port_net: std_logic_vector(71 downto 0);
  signal force_re_output_port_net: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(71 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(71 downto 0);

begin
  reinterpret2_output_port_net_x1 <= im;
  reinterpret4_output_port_net_x1 <= re;
  c <= concat_y_net_x1;

  concat: entity work.concat_364e99894a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => force_re_output_port_net,
      in1 => force_im_output_port_net,
      y => concat_y_net_x1
    );

  force_im: entity work.reinterpret_8b4279cdc5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret2_output_port_net_x1,
      output_port => force_im_output_port_net
    );

  force_re: entity work.reinterpret_8b4279cdc5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret4_output_port_net_x1,
      output_port => force_re_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/hilbert0/sub_even_imag"

entity sub_even_imag_entity_700149a08b is
  port (
    a: in std_logic_vector(71 downto 0); 
    b: in std_logic_vector(71 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    dout: out std_logic_vector(75 downto 0)
  );
end sub_even_imag_entity_700149a08b;

architecture structural of sub_even_imag_entity_700149a08b is
  signal addsub1_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub2_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub3_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub4_s_net_x0: std_logic_vector(18 downto 0);
  signal ce_1_sg_x91: std_logic;
  signal clk_1_sg_x91: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(75 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(17 downto 0);

begin
  reinterpret1_output_port_net_x10 <= a;
  reinterpret1_output_port_net_x11 <= b;
  ce_1_sg_x91 <= ce_1;
  clk_1_sg_x91 <= clk_1;
  dout <= concatenate_y_net_x1;

  a_debus_1126cab8e2: entity work.a_debus_entity_659a478c77
    port map (
      bus_in => reinterpret1_output_port_net_x10,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  addsub1: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 19,
      core_name0 => "addsb_11_0_88a3fd223f485e8a",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 19,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 17,
      s_width => 19
    )
    port map (
      a => reinterpret4_output_port_net_x0,
      b => reinterpret4_output_port_net_x1,
      ce => ce_1_sg_x91,
      clk => clk_1_sg_x91,
      clr => '0',
      en => "1",
      s => addsub1_s_net_x0
    );

  addsub2: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 19,
      core_name0 => "addsb_11_0_88a3fd223f485e8a",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 19,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 17,
      s_width => 19
    )
    port map (
      a => reinterpret3_output_port_net_x0,
      b => reinterpret3_output_port_net_x1,
      ce => ce_1_sg_x91,
      clk => clk_1_sg_x91,
      clr => '0',
      en => "1",
      s => addsub2_s_net_x0
    );

  addsub3: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 19,
      core_name0 => "addsb_11_0_88a3fd223f485e8a",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 19,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 17,
      s_width => 19
    )
    port map (
      a => reinterpret2_output_port_net_x0,
      b => reinterpret2_output_port_net_x1,
      ce => ce_1_sg_x91,
      clk => clk_1_sg_x91,
      clr => '0',
      en => "1",
      s => addsub3_s_net_x0
    );

  addsub4: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 19,
      core_name0 => "addsb_11_0_88a3fd223f485e8a",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 19,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 17,
      s_width => 19
    )
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret1_output_port_net_x9,
      ce => ce_1_sg_x91,
      clk => clk_1_sg_x91,
      clr => '0',
      en => "1",
      s => addsub4_s_net_x0
    );

  b_debus_3d3109f6b5: entity work.a_debus_entity_659a478c77
    port map (
      bus_in => reinterpret1_output_port_net_x11,
      lsb_out1 => reinterpret1_output_port_net_x9,
      msb_out4 => reinterpret4_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1
    );

  op_bussify_4b00ea6f03: entity work.op_bussify_entity_920272f09d
    port map (
      in1 => addsub1_s_net_x0,
      in2 => addsub2_s_net_x0,
      in3 => addsub3_s_net_x0,
      in4 => addsub4_s_net_x0,
      bus_out => concatenate_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/hilbert0"

entity hilbert0_entity_790bd5ff7d is
  port (
    a: in std_logic_vector(143 downto 0); 
    b: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    even: out std_logic_vector(143 downto 0); 
    odd: out std_logic_vector(143 downto 0)
  );
end hilbert0_entity_790bd5ff7d;

architecture structural of hilbert0_entity_790bd5ff7d is
  signal ce_1_sg_x93: std_logic;
  signal clk_1_sg_x93: std_logic;
  signal concat_y_net_x1: std_logic_vector(303 downto 0);
  signal concat_y_net_x2: std_logic_vector(143 downto 0);
  signal concat_y_net_x3: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x1: std_logic_vector(75 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(75 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(287 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(303 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(75 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(75 downto 0);
  signal mux0_y_net_x1: std_logic_vector(143 downto 0);
  signal mux1_y_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x10: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x11: std_logic_vector(71 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(71 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(71 downto 0);
  signal reinterpret_out_output_port_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x5: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x6: std_logic_vector(143 downto 0);

begin
  mux0_y_net_x1 <= a;
  mux1_y_net_x1 <= b;
  ce_1_sg_x93 <= ce_1;
  clk_1_sg_x93 <= clk_1;
  even <= reinterpret_out_output_port_net_x5;
  odd <= reinterpret_out_output_port_net_x6;

  add_even_real_05aaa4cea5: entity work.add_even_real_entity_05aaa4cea5
    port map (
      a => reinterpret2_output_port_net_x10,
      b => reinterpret2_output_port_net_x11,
      ce_1 => ce_1_sg_x93,
      clk_1 => clk_1_sg_x93,
      dout => concatenate_y_net_x1
    );

  add_odd_real_aa034b8796: entity work.add_even_real_entity_05aaa4cea5
    port map (
      a => reinterpret1_output_port_net_x10,
      b => reinterpret1_output_port_net_x11,
      ce_1 => ce_1_sg_x93,
      clk_1 => clk_1_sg_x93,
      dout => concatenate_y_net_x2
    );

  bus_convert_eca2f244c0: entity work.bus_convert_entity_eca2f244c0
    port map (
      ce_1 => ce_1_sg_x93,
      clk_1 => clk_1_sg_x93,
      din => concatenate_y_net_x5,
      dout => concatenate_y_net_x4
    );

  bus_expand_6b8be46d40: entity work.bus_expand_entity_6b8be46d40
    port map (
      bus_in => concatenate_y_net_x4,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out4 => reinterpret4_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1
    );

  bus_expand_a_1605f56624: entity work.bus_expand_a_entity_1605f56624
    port map (
      bus_in => reinterpret_out_output_port_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x10,
      msb_out2 => reinterpret2_output_port_net_x10
    );

  bus_expand_b_038c0bb14b: entity work.bus_expand_a_entity_1605f56624
    port map (
      bus_in => reinterpret_out_output_port_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x11,
      msb_out2 => reinterpret2_output_port_net_x11
    );

  bus_scale_e9d1be8911: entity work.bus_scale_entity_e9d1be8911
    port map (
      din => concat_y_net_x1,
      dout => concatenate_y_net_x5
    );

  concat: entity work.concat_80d9132ef6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x1,
      in1 => concatenate_y_net_x7,
      in2 => concatenate_y_net_x6,
      in3 => concatenate_y_net_x2,
      y => concat_y_net_x1
    );

  munge_a_4ff9248a49: entity work.munge_a_entity_4ff9248a49
    port map (
      din => mux0_y_net_x1,
      dout => reinterpret_out_output_port_net_x1
    );

  munge_b_98aef76357: entity work.munge_a_entity_4ff9248a49
    port map (
      din => mux1_y_net_x1,
      dout => reinterpret_out_output_port_net_x2
    );

  munge_even_248d6bbbbb: entity work.munge_even_entity_248d6bbbbb
    port map (
      din => concat_y_net_x2,
      dout => reinterpret_out_output_port_net_x5
    );

  munge_odd_cc63e0f3aa: entity work.munge_even_entity_248d6bbbbb
    port map (
      din => concat_y_net_x3,
      dout => reinterpret_out_output_port_net_x6
    );

  ri_to_c1_f9fde8b6e1: entity work.ri_to_c_entity_5a100f370b
    port map (
      im => reinterpret3_output_port_net_x1,
      re => reinterpret1_output_port_net_x1,
      c => concat_y_net_x3
    );

  ri_to_c_5a100f370b: entity work.ri_to_c_entity_5a100f370b
    port map (
      im => reinterpret2_output_port_net_x1,
      re => reinterpret4_output_port_net_x1,
      c => concat_y_net_x2
    );

  sub_even_imag_700149a08b: entity work.sub_even_imag_entity_700149a08b
    port map (
      a => reinterpret1_output_port_net_x10,
      b => reinterpret1_output_port_net_x11,
      ce_1 => ce_1_sg_x93,
      clk_1 => clk_1_sg_x93,
      dout => concatenate_y_net_x6
    );

  sub_odd_imag_b2e0d0dbe2: entity work.sub_even_imag_entity_700149a08b
    port map (
      a => reinterpret2_output_port_net_x11,
      b => reinterpret2_output_port_net_x10,
      ce_1 => ce_1_sg_x93,
      clk_1 => clk_1_sg_x93,
      dout => concatenate_y_net_x7
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/mirror_spectrum/complex_conj0/bus_create"

entity bus_create_entity_19688e8659 is
  port (
    in1: in std_logic_vector(71 downto 0); 
    in2: in std_logic_vector(71 downto 0); 
    bus_out: out std_logic_vector(143 downto 0)
  );
end bus_create_entity_19688e8659;

architecture structural of bus_create_entity_19688e8659 is
  signal concatenate_y_net_x1: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(143 downto 0);
  signal real_delay_q_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(71 downto 0);

begin
  real_delay_q_net_x0 <= in1;
  concatenate_y_net_x1 <= in2;
  bus_out <= concatenate_y_net_x2;

  concatenate: entity work.concat_364e99894a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concatenate_y_net_x2
    );

  reinterpret1: entity work.reinterpret_8b4279cdc5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => real_delay_q_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_8b4279cdc5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concatenate_y_net_x1,
      output_port => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/mirror_spectrum/complex_conj0/imag_negate/bussify"

entity bussify_entity_2706e362ec is
  port (
    in1: in std_logic_vector(17 downto 0); 
    in2: in std_logic_vector(17 downto 0); 
    in3: in std_logic_vector(17 downto 0); 
    in4: in std_logic_vector(17 downto 0); 
    bus_out: out std_logic_vector(71 downto 0)
  );
end bussify_entity_2706e362ec;

architecture structural of bussify_entity_2706e362ec is
  signal concatenate_y_net_x2: std_logic_vector(71 downto 0);
  signal neg1_op_net_x0: std_logic_vector(17 downto 0);
  signal neg2_op_net_x0: std_logic_vector(17 downto 0);
  signal neg3_op_net_x0: std_logic_vector(17 downto 0);
  signal neg4_op_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(17 downto 0);

begin
  neg1_op_net_x0 <= in1;
  neg2_op_net_x0 <= in2;
  neg3_op_net_x0 <= in3;
  neg4_op_net_x0 <= in4;
  bus_out <= concatenate_y_net_x2;

  concatenate: entity work.concat_a246e373e7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concatenate_y_net_x2
    );

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => neg1_op_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => neg2_op_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => neg3_op_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => neg4_op_net_x0,
      output_port => reinterpret4_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/mirror_spectrum/complex_conj0/imag_negate"

entity imag_negate_entity_9e158385ec is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(71 downto 0); 
    dout: out std_logic_vector(71 downto 0)
  );
end imag_negate_entity_9e158385ec;

architecture structural of imag_negate_entity_9e158385ec is
  signal ce_1_sg_x116: std_logic;
  signal clk_1_sg_x116: std_logic;
  signal concatenate_y_net_x3: std_logic_vector(71 downto 0);
  signal neg1_op_net_x0: std_logic_vector(17 downto 0);
  signal neg2_op_net_x0: std_logic_vector(17 downto 0);
  signal neg3_op_net_x0: std_logic_vector(17 downto 0);
  signal neg4_op_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x116 <= ce_1;
  clk_1_sg_x116 <= clk_1;
  reinterpret1_output_port_net_x3 <= din;
  dout <= concatenate_y_net_x3;

  bussify_2706e362ec: entity work.bussify_entity_2706e362ec
    port map (
      in1 => neg1_op_net_x0,
      in2 => neg2_op_net_x0,
      in3 => neg3_op_net_x0,
      in4 => neg4_op_net_x0,
      bus_out => concatenate_y_net_x3
    );

  debus_a1c4509d19: entity work.a_debus_entity_659a478c77
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  neg1: entity work.negate_f983e30a8b
    port map (
      ce => ce_1_sg_x116,
      clk => clk_1_sg_x116,
      clr => '0',
      ip => reinterpret4_output_port_net_x0,
      op => neg1_op_net_x0
    );

  neg2: entity work.negate_f983e30a8b
    port map (
      ce => ce_1_sg_x116,
      clk => clk_1_sg_x116,
      clr => '0',
      ip => reinterpret3_output_port_net_x0,
      op => neg2_op_net_x0
    );

  neg3: entity work.negate_f983e30a8b
    port map (
      ce => ce_1_sg_x116,
      clk => clk_1_sg_x116,
      clr => '0',
      ip => reinterpret2_output_port_net_x0,
      op => neg3_op_net_x0
    );

  neg4: entity work.negate_f983e30a8b
    port map (
      ce => ce_1_sg_x116,
      clk => clk_1_sg_x116,
      clr => '0',
      ip => reinterpret1_output_port_net_x2,
      op => neg4_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/mirror_spectrum/complex_conj0"

entity complex_conj0_entity_a0bcd01eeb is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    z: in std_logic_vector(143 downto 0); 
    z_x0: out std_logic_vector(143 downto 0)
  );
end complex_conj0_entity_a0bcd01eeb;

architecture structural of complex_conj0_entity_a0bcd01eeb is
  signal ce_1_sg_x117: std_logic;
  signal clk_1_sg_x117: std_logic;
  signal concatenate_y_net_x3: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(71 downto 0);
  signal d3_q_net_x1: std_logic_vector(143 downto 0);
  signal real_delay_q_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret_out_output_port_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(143 downto 0);

begin
  ce_1_sg_x117 <= ce_1;
  clk_1_sg_x117 <= clk_1;
  d3_q_net_x1 <= z;
  z_x0 <= reinterpret_out_output_port_net_x2;

  bus_create_19688e8659: entity work.bus_create_entity_19688e8659
    port map (
      in1 => real_delay_q_net_x0,
      in2 => concatenate_y_net_x4,
      bus_out => concatenate_y_net_x3
    );

  bus_expand_642c88e122: entity work.bus_expand_a_entity_1605f56624
    port map (
      bus_in => reinterpret_out_output_port_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x3,
      msb_out2 => reinterpret2_output_port_net_x0
    );

  imag_negate_9e158385ec: entity work.imag_negate_entity_9e158385ec
    port map (
      ce_1 => ce_1_sg_x117,
      clk_1 => clk_1_sg_x117,
      din => reinterpret1_output_port_net_x3,
      dout => concatenate_y_net_x4
    );

  munge_in_a6d1f8360b: entity work.munge_a_entity_4ff9248a49
    port map (
      din => d3_q_net_x1,
      dout => reinterpret_out_output_port_net_x1
    );

  munge_out_6aef03973c: entity work.munge_even_entity_248d6bbbbb
    port map (
      din => concatenate_y_net_x3,
      dout => reinterpret_out_output_port_net_x2
    );

  real_delay: entity work.delay_e1a1e37324
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reinterpret2_output_port_net_x0,
      q => real_delay_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/mirror_spectrum/dmux0/d_bussify"

entity d_bussify_entity_9462440c59 is
  port (
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    in3: in std_logic_vector(35 downto 0); 
    in4: in std_logic_vector(35 downto 0); 
    bus_out: out std_logic_vector(143 downto 0)
  );
end d_bussify_entity_9462440c59;

architecture structural of d_bussify_entity_9462440c59 is
  signal concatenate_y_net_x0: std_logic_vector(143 downto 0);
  signal mux0_y_net_x0: std_logic_vector(35 downto 0);
  signal mux1_y_net_x0: std_logic_vector(35 downto 0);
  signal mux2_y_net_x0: std_logic_vector(35 downto 0);
  signal mux3_y_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(35 downto 0);

begin
  mux0_y_net_x0 <= in1;
  mux1_y_net_x0 <= in2;
  mux2_y_net_x0 <= in3;
  mux3_y_net_x0 <= in4;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_bbc53d9757
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux0_y_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux1_y_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux2_y_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux3_y_net_x0,
      output_port => reinterpret4_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/mirror_spectrum/dmux0/expand0"

entity expand0_entity_faedf3e73c is
  port (
    bus_in: in std_logic_vector(143 downto 0); 
    lsb_out1: out std_logic_vector(35 downto 0); 
    msb_out4: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0); 
    out3: out std_logic_vector(35 downto 0)
  );
end expand0_entity_faedf3e73c;

architecture structural of expand0_entity_faedf3e73c is
  signal delay0_q_net_x0: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(35 downto 0);
  signal slice1_y_net: std_logic_vector(35 downto 0);
  signal slice2_y_net: std_logic_vector(35 downto 0);
  signal slice3_y_net: std_logic_vector(35 downto 0);
  signal slice4_y_net: std_logic_vector(35 downto 0);

begin
  delay0_q_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out4 <= reinterpret4_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;

  reinterpret1: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 35,
      x_width => 144,
      y_width => 36
    )
    port map (
      x => delay0_q_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 36,
      new_msb => 71,
      x_width => 144,
      y_width => 36
    )
    port map (
      x => delay0_q_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 72,
      new_msb => 107,
      x_width => 144,
      y_width => 36
    )
    port map (
      x => delay0_q_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 108,
      new_msb => 143,
      x_width => 144,
      y_width => 36
    )
    port map (
      x => delay0_q_net_x0,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/mirror_spectrum/dmux0/sel_expand"

entity sel_expand_entity_adc2425a23 is
  port (
    bus_in: in std_logic_vector(3 downto 0); 
    lsb_out1: out std_logic; 
    msb_out4: out std_logic; 
    out2: out std_logic; 
    out3: out std_logic
  );
end sel_expand_entity_adc2425a23;

architecture structural of sel_expand_entity_adc2425a23 is
  signal concatenate_y_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic;
  signal reinterpret2_output_port_net_x0: std_logic;
  signal reinterpret3_output_port_net_x0: std_logic;
  signal reinterpret4_output_port_net_x0: std_logic;
  signal slice1_y_net: std_logic;
  signal slice2_y_net: std_logic;
  signal slice3_y_net: std_logic;
  signal slice4_y_net: std_logic;

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out4 <= reinterpret4_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;

  reinterpret1: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice1_y_net,
      output_port(0) => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice2_y_net,
      output_port(0) => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice3_y_net,
      output_port(0) => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice4_y_net,
      output_port(0) => reinterpret4_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/mirror_spectrum/dmux0"

entity dmux0_entity_04a398b69a is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d0: in std_logic_vector(143 downto 0); 
    d1: in std_logic_vector(143 downto 0); 
    sel: in std_logic_vector(3 downto 0); 
    out_x0: out std_logic_vector(143 downto 0)
  );
end dmux0_entity_04a398b69a;

architecture structural of dmux0_entity_04a398b69a is
  signal ce_1_sg_x124: std_logic;
  signal clk_1_sg_x124: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(143 downto 0);
  signal delay0_q_net_x1: std_logic_vector(143 downto 0);
  signal mux0_y_net_x0: std_logic_vector(35 downto 0);
  signal mux1_y_net_x0: std_logic_vector(35 downto 0);
  signal mux2_y_net_x0: std_logic_vector(35 downto 0);
  signal mux3_y_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic;
  signal reinterpret2_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic;
  signal reinterpret3_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic;
  signal reinterpret4_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic;
  signal reinterpret_out_output_port_net_x4: std_logic_vector(143 downto 0);

begin
  ce_1_sg_x124 <= ce_1;
  clk_1_sg_x124 <= clk_1;
  delay0_q_net_x1 <= d0;
  reinterpret_out_output_port_net_x4 <= d1;
  concatenate_y_net_x2 <= sel;
  out_x0 <= concatenate_y_net_x3;

  d_bussify_9462440c59: entity work.d_bussify_entity_9462440c59
    port map (
      in1 => mux0_y_net_x0,
      in2 => mux1_y_net_x0,
      in3 => mux2_y_net_x0,
      in4 => mux3_y_net_x0,
      bus_out => concatenate_y_net_x3
    );

  expand0_faedf3e73c: entity work.expand0_entity_faedf3e73c
    port map (
      bus_in => delay0_q_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  expand1_df7f5ac7ec: entity work.expand0_entity_faedf3e73c
    port map (
      bus_in => reinterpret_out_output_port_net_x4,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out4 => reinterpret4_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1
    );

  mux0: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x124,
      clk => clk_1_sg_x124,
      clr => '0',
      d0 => reinterpret4_output_port_net_x0,
      d1 => reinterpret4_output_port_net_x1,
      sel(0) => reinterpret4_output_port_net_x2,
      y => mux0_y_net_x0
    );

  mux1: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x124,
      clk => clk_1_sg_x124,
      clr => '0',
      d0 => reinterpret3_output_port_net_x0,
      d1 => reinterpret3_output_port_net_x1,
      sel(0) => reinterpret3_output_port_net_x2,
      y => mux1_y_net_x0
    );

  mux2: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x124,
      clk => clk_1_sg_x124,
      clr => '0',
      d0 => reinterpret2_output_port_net_x0,
      d1 => reinterpret2_output_port_net_x1,
      sel(0) => reinterpret2_output_port_net_x2,
      y => mux2_y_net_x0
    );

  mux3: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x124,
      clk => clk_1_sg_x124,
      clr => '0',
      d0 => reinterpret1_output_port_net_x0,
      d1 => reinterpret1_output_port_net_x1,
      sel(0) => reinterpret1_output_port_net_x2,
      y => mux3_y_net_x0
    );

  sel_expand_adc2425a23: entity work.sel_expand_entity_adc2425a23
    port map (
      bus_in => concatenate_y_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out4 => reinterpret4_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/mirror_spectrum/sel_replicate0/bussify"

entity bussify_entity_40eba17d52 is
  port (
    in1: in std_logic; 
    in2: in std_logic; 
    in3: in std_logic; 
    in4: in std_logic; 
    bus_out: out std_logic_vector(3 downto 0)
  );
end bussify_entity_40eba17d52;

architecture structural of bussify_entity_40eba17d52 is
  signal concatenate_y_net_x3: std_logic_vector(3 downto 0);
  signal din1_0_q_net_x0: std_logic;
  signal din1_1_q_net_x0: std_logic;
  signal din1_2_q_net_x0: std_logic;
  signal din1_3_q_net_x0: std_logic;
  signal reinterpret1_output_port_net: std_logic;
  signal reinterpret2_output_port_net: std_logic;
  signal reinterpret3_output_port_net: std_logic;
  signal reinterpret4_output_port_net: std_logic;

begin
  din1_0_q_net_x0 <= in1;
  din1_1_q_net_x0 <= in2;
  din1_2_q_net_x0 <= in3;
  din1_3_q_net_x0 <= in4;
  bus_out <= concatenate_y_net_x3;

  concatenate: entity work.concat_a0c7cd7a34
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => reinterpret1_output_port_net,
      in1(0) => reinterpret2_output_port_net,
      in2(0) => reinterpret3_output_port_net,
      in3(0) => reinterpret4_output_port_net,
      y => concatenate_y_net_x3
    );

  reinterpret1: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => din1_0_q_net_x0,
      output_port(0) => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => din1_1_q_net_x0,
      output_port(0) => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => din1_2_q_net_x0,
      output_port(0) => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => din1_3_q_net_x0,
      output_port(0) => reinterpret4_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/mirror_spectrum/sel_replicate0"

entity sel_replicate0_entity_1cb27a3c05 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic_vector(3 downto 0)
  );
end sel_replicate0_entity_1cb27a3c05;

architecture structural of sel_replicate0_entity_1cb27a3c05 is
  signal ce_1_sg_x128: std_logic;
  signal clk_1_sg_x128: std_logic;
  signal concatenate_y_net_x4: std_logic_vector(3 downto 0);
  signal din0_0_q_net: std_logic;
  signal din0_1_q_net: std_logic;
  signal din1_0_q_net_x0: std_logic;
  signal din1_1_q_net_x0: std_logic;
  signal din1_2_q_net_x0: std_logic;
  signal din1_3_q_net_x0: std_logic;
  signal relational_op_net_x0: std_logic;

begin
  ce_1_sg_x128 <= ce_1;
  clk_1_sg_x128 <= clk_1;
  relational_op_net_x0 <= in_x0;
  out_x0 <= concatenate_y_net_x4;

  bussify_40eba17d52: entity work.bussify_entity_40eba17d52
    port map (
      in1 => din1_0_q_net_x0,
      in2 => din1_1_q_net_x0,
      in3 => din1_2_q_net_x0,
      in4 => din1_3_q_net_x0,
      bus_out => concatenate_y_net_x4
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x128,
      clk => clk_1_sg_x128,
      d(0) => relational_op_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_0_q_net
    );

  din0_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x128,
      clk => clk_1_sg_x128,
      d(0) => relational_op_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_1_q_net
    );

  din1_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x128,
      clk => clk_1_sg_x128,
      d(0) => din0_0_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_0_q_net_x0
    );

  din1_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x128,
      clk => clk_1_sg_x128,
      d(0) => din0_1_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_1_q_net_x0
    );

  din1_2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x128,
      clk => clk_1_sg_x128,
      d(0) => din0_0_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_2_q_net_x0
    );

  din1_3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x128,
      clk => clk_1_sg_x128,
      d(0) => din0_1_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_3_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/mirror_spectrum"

entity mirror_spectrum_entity_40a20069c2 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din0: in std_logic_vector(143 downto 0); 
    din1: in std_logic_vector(143 downto 0); 
    din2: in std_logic_vector(143 downto 0); 
    din3: in std_logic_vector(143 downto 0); 
    reo_in0: in std_logic_vector(143 downto 0); 
    reo_in1: in std_logic_vector(143 downto 0); 
    reo_in2: in std_logic_vector(143 downto 0); 
    reo_in3: in std_logic_vector(143 downto 0); 
    sync: in std_logic; 
    dout0: out std_logic_vector(143 downto 0); 
    dout1: out std_logic_vector(143 downto 0); 
    dout2: out std_logic_vector(143 downto 0); 
    dout3: out std_logic_vector(143 downto 0); 
    sync_out: out std_logic
  );
end mirror_spectrum_entity_40a20069c2;

architecture structural of mirror_spectrum_entity_40a20069c2 is
  signal ce_1_sg_x132: std_logic;
  signal clk_1_sg_x132: std_logic;
  signal concatenate_y_net_x10: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x13: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x14: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(3 downto 0);
  signal constant_op_net: std_logic_vector(9 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal d3_q_net_x2: std_logic_vector(143 downto 0);
  signal d4_q_net_x2: std_logic_vector(143 downto 0);
  signal d5_q_net_x2: std_logic_vector(143 downto 0);
  signal d6_q_net_x2: std_logic_vector(143 downto 0);
  signal delay0_q_net_x1: std_logic_vector(143 downto 0);
  signal delay1_q_net_x1: std_logic_vector(143 downto 0);
  signal delay2_q_net_x1: std_logic_vector(143 downto 0);
  signal delay3_q_net_x1: std_logic_vector(143 downto 0);
  signal mux_y_net_x0: std_logic;
  signal ram_data_out_net_x2: std_logic_vector(143 downto 0);
  signal ram_data_out_net_x3: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x10: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x11: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x6: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x7: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x8: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x9: std_logic_vector(143 downto 0);
  signal relational_op_net_x3: std_logic;
  signal sync_delay0_q_net: std_logic;
  signal sync_delay1_q_net_x1: std_logic;

begin
  ce_1_sg_x132 <= ce_1;
  clk_1_sg_x132 <= clk_1;
  ram_data_out_net_x2 <= din0;
  ram_data_out_net_x3 <= din1;
  reinterpret_out_output_port_net_x10 <= din2;
  reinterpret_out_output_port_net_x11 <= din3;
  d3_q_net_x2 <= reo_in0;
  d4_q_net_x2 <= reo_in1;
  d5_q_net_x2 <= reo_in2;
  d6_q_net_x2 <= reo_in3;
  mux_y_net_x0 <= sync;
  dout0 <= concatenate_y_net_x11;
  dout1 <= concatenate_y_net_x12;
  dout2 <= concatenate_y_net_x13;
  dout3 <= concatenate_y_net_x14;
  sync_out <= sync_delay1_q_net_x1;

  complex_conj0_a0bcd01eeb: entity work.complex_conj0_entity_a0bcd01eeb
    port map (
      ce_1 => ce_1_sg_x132,
      clk_1 => clk_1_sg_x132,
      z => d3_q_net_x2,
      z_x0 => reinterpret_out_output_port_net_x6
    );

  complex_conj1_06221b01c4: entity work.complex_conj0_entity_a0bcd01eeb
    port map (
      ce_1 => ce_1_sg_x132,
      clk_1 => clk_1_sg_x132,
      z => d4_q_net_x2,
      z_x0 => reinterpret_out_output_port_net_x7
    );

  complex_conj2_e3995c64d9: entity work.complex_conj0_entity_a0bcd01eeb
    port map (
      ce_1 => ce_1_sg_x132,
      clk_1 => clk_1_sg_x132,
      z => d5_q_net_x2,
      z_x0 => reinterpret_out_output_port_net_x8
    );

  complex_conj3_36c64174b9: entity work.complex_conj0_entity_a0bcd01eeb
    port map (
      ce_1 => ce_1_sg_x132,
      clk_1 => clk_1_sg_x132,
      z => d6_q_net_x2,
      z_x0 => reinterpret_out_output_port_net_x9
    );

  constant_x0: entity work.constant_fbc2f0cce1
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x132,
      clk => clk_1_sg_x132,
      clr => '0',
      rst(0) => sync_delay0_q_net,
      op => counter_op_net
    );

  delay0: entity work.delay_4f8ee98ddb
    port map (
      ce => ce_1_sg_x132,
      clk => clk_1_sg_x132,
      clr => '0',
      d => ram_data_out_net_x2,
      q => delay0_q_net_x1
    );

  delay1: entity work.delay_4f8ee98ddb
    port map (
      ce => ce_1_sg_x132,
      clk => clk_1_sg_x132,
      clr => '0',
      d => ram_data_out_net_x3,
      q => delay1_q_net_x1
    );

  delay2: entity work.delay_4f8ee98ddb
    port map (
      ce => ce_1_sg_x132,
      clk => clk_1_sg_x132,
      clr => '0',
      d => reinterpret_out_output_port_net_x10,
      q => delay2_q_net_x1
    );

  delay3: entity work.delay_4f8ee98ddb
    port map (
      ce => ce_1_sg_x132,
      clk => clk_1_sg_x132,
      clr => '0',
      d => reinterpret_out_output_port_net_x11,
      q => delay3_q_net_x1
    );

  dmux0_04a398b69a: entity work.dmux0_entity_04a398b69a
    port map (
      ce_1 => ce_1_sg_x132,
      clk_1 => clk_1_sg_x132,
      d0 => delay0_q_net_x1,
      d1 => reinterpret_out_output_port_net_x6,
      sel => concatenate_y_net_x7,
      out_x0 => concatenate_y_net_x11
    );

  dmux1_6908c85ebb: entity work.dmux0_entity_04a398b69a
    port map (
      ce_1 => ce_1_sg_x132,
      clk_1 => clk_1_sg_x132,
      d0 => delay1_q_net_x1,
      d1 => reinterpret_out_output_port_net_x7,
      sel => concatenate_y_net_x8,
      out_x0 => concatenate_y_net_x12
    );

  dmux2_bb3cd04d47: entity work.dmux0_entity_04a398b69a
    port map (
      ce_1 => ce_1_sg_x132,
      clk_1 => clk_1_sg_x132,
      d0 => delay2_q_net_x1,
      d1 => reinterpret_out_output_port_net_x8,
      sel => concatenate_y_net_x9,
      out_x0 => concatenate_y_net_x13
    );

  dmux3_b418e38154: entity work.dmux0_entity_04a398b69a
    port map (
      ce_1 => ce_1_sg_x132,
      clk_1 => clk_1_sg_x132,
      d0 => delay3_q_net_x1,
      d1 => reinterpret_out_output_port_net_x9,
      sel => concatenate_y_net_x10,
      out_x0 => concatenate_y_net_x14
    );

  relational: entity work.relational_e83dd85005
    port map (
      a => counter_op_net,
      b => constant_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net_x3
    );

  sel_replicate0_1cb27a3c05: entity work.sel_replicate0_entity_1cb27a3c05
    port map (
      ce_1 => ce_1_sg_x132,
      clk_1 => clk_1_sg_x132,
      in_x0 => relational_op_net_x3,
      out_x0 => concatenate_y_net_x7
    );

  sel_replicate1_8c684c637d: entity work.sel_replicate0_entity_1cb27a3c05
    port map (
      ce_1 => ce_1_sg_x132,
      clk_1 => clk_1_sg_x132,
      in_x0 => relational_op_net_x3,
      out_x0 => concatenate_y_net_x8
    );

  sel_replicate2_833f114bf9: entity work.sel_replicate0_entity_1cb27a3c05
    port map (
      ce_1 => ce_1_sg_x132,
      clk_1 => clk_1_sg_x132,
      in_x0 => relational_op_net_x3,
      out_x0 => concatenate_y_net_x9
    );

  sel_replicate3_ac31dc2941: entity work.sel_replicate0_entity_1cb27a3c05
    port map (
      ce_1 => ce_1_sg_x132,
      clk_1 => clk_1_sg_x132,
      in_x0 => relational_op_net_x3,
      out_x0 => concatenate_y_net_x10
    );

  sync_delay0: entity work.delay_065ed9934e
    port map (
      ce => ce_1_sg_x132,
      clk => clk_1_sg_x132,
      clr => '0',
      d(0) => mux_y_net_x0,
      q(0) => sync_delay0_q_net
    );

  sync_delay1: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x132,
      clk => clk_1_sg_x132,
      clr => '0',
      d(0) => sync_delay0_q_net,
      q(0) => sync_delay1_q_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/reorder_even/addr_expand"

entity addr_expand_entity_7576e82df6 is
  port (
    bus_in: in std_logic_vector(8 downto 0); 
    msb_lsb_out1: out std_logic_vector(8 downto 0)
  );
end addr_expand_entity_7576e82df6;

architecture structural of addr_expand_entity_7576e82df6 is
  signal reinterpret1_output_port_net_x1: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(8 downto 0);
  signal slice1_y_net: std_logic_vector(8 downto 0);

begin
  reinterpret1_output_port_net_x1 <= bus_in;
  msb_lsb_out1 <= reinterpret1_output_port_net_x2;

  reinterpret1: entity work.reinterpret_b754317574
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 8,
      x_width => 9,
      y_width => 9
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice1_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/reorder_even/addr_replicate/bussify"

entity bussify_entity_e8d26d2d98 is
  port (
    in1: in std_logic_vector(8 downto 0); 
    bus_out: out std_logic_vector(8 downto 0)
  );
end bussify_entity_e8d26d2d98;

architecture structural of bussify_entity_e8d26d2d98 is
  signal mux_y_net_x0: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(8 downto 0);

begin
  mux_y_net_x0 <= in1;
  bus_out <= reinterpret1_output_port_net_x2;

  reinterpret1: entity work.reinterpret_b754317574
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux_y_net_x0,
      output_port => reinterpret1_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/reorder_even/addr_replicate"

entity addr_replicate_entity_e94d3035fe is
  port (
    in_x0: in std_logic_vector(8 downto 0); 
    out_x0: out std_logic_vector(8 downto 0)
  );
end addr_replicate_entity_e94d3035fe;

architecture structural of addr_replicate_entity_e94d3035fe is
  signal mux_y_net_x1: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(8 downto 0);

begin
  mux_y_net_x1 <= in_x0;
  out_x0 <= reinterpret1_output_port_net_x3;

  bussify_e8d26d2d98: entity work.bussify_entity_e8d26d2d98
    port map (
      in1 => mux_y_net_x1,
      bus_out => reinterpret1_output_port_net_x3
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/reorder_even/buf0/debus_addr"

entity debus_addr_entity_08a7130bde is
  port (
    bus_in: in std_logic_vector(35 downto 0); 
    lsb_out1: out std_logic_vector(8 downto 0); 
    msb_out4: out std_logic_vector(8 downto 0); 
    out2: out std_logic_vector(8 downto 0); 
    out3: out std_logic_vector(8 downto 0)
  );
end debus_addr_entity_08a7130bde;

architecture structural of debus_addr_entity_08a7130bde is
  signal concatenate_y_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(8 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(8 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(8 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(8 downto 0);
  signal slice1_y_net: std_logic_vector(8 downto 0);
  signal slice2_y_net: std_logic_vector(8 downto 0);
  signal slice3_y_net: std_logic_vector(8 downto 0);
  signal slice4_y_net: std_logic_vector(8 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out4 <= reinterpret4_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;

  reinterpret1: entity work.reinterpret_b754317574
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_b754317574
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_b754317574
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_b754317574
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 8,
      x_width => 36,
      y_width => 9
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 9,
      new_msb => 17,
      x_width => 36,
      y_width => 9
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 26,
      x_width => 36,
      y_width => 9
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 27,
      new_msb => 35,
      x_width => 36,
      y_width => 9
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/reorder_even/buf0/debus_we"

entity debus_we_entity_fcf6995b5b is
  port (
    bus_in: in std_logic_vector(3 downto 0); 
    lsb_out1: out std_logic; 
    msb_out4: out std_logic; 
    out2: out std_logic; 
    out3: out std_logic
  );
end debus_we_entity_fcf6995b5b;

architecture structural of debus_we_entity_fcf6995b5b is
  signal concatenate_y_net_x0: std_logic_vector(3 downto 0);
  signal slice1_y_net_x0: std_logic;
  signal slice2_y_net_x0: std_logic;
  signal slice3_y_net_x0: std_logic;
  signal slice4_y_net_x0: std_logic;

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= slice1_y_net_x0;
  msb_out4 <= slice4_y_net_x0;
  out2 <= slice2_y_net_x0;
  out3 <= slice3_y_net_x0;

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice1_y_net_x0
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice2_y_net_x0
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice3_y_net_x0
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice4_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/reorder_even/buf0/rep_addr/bussify"

entity bussify_entity_58de197e8c is
  port (
    in1: in std_logic_vector(8 downto 0); 
    in2: in std_logic_vector(8 downto 0); 
    in3: in std_logic_vector(8 downto 0); 
    in4: in std_logic_vector(8 downto 0); 
    bus_out: out std_logic_vector(35 downto 0)
  );
end bussify_entity_58de197e8c;

architecture structural of bussify_entity_58de197e8c is
  signal concatenate_y_net_x1: std_logic_vector(35 downto 0);
  signal din2_0_q_net_x0: std_logic_vector(8 downto 0);
  signal din2_1_q_net_x0: std_logic_vector(8 downto 0);
  signal din2_2_q_net_x0: std_logic_vector(8 downto 0);
  signal din2_3_q_net_x0: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(8 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(8 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(8 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(8 downto 0);

begin
  din2_0_q_net_x0 <= in1;
  din2_1_q_net_x0 <= in2;
  din2_2_q_net_x0 <= in3;
  din2_3_q_net_x0 <= in4;
  bus_out <= concatenate_y_net_x1;

  concatenate: entity work.concat_88cfa744f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concatenate_y_net_x1
    );

  reinterpret1: entity work.reinterpret_b754317574
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din2_0_q_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_b754317574
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din2_1_q_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_b754317574
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din2_2_q_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_b754317574
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din2_3_q_net_x0,
      output_port => reinterpret4_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/reorder_even/buf0/rep_addr"

entity rep_addr_entity_848ca08456 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(8 downto 0); 
    out_x0: out std_logic_vector(35 downto 0)
  );
end rep_addr_entity_848ca08456;

architecture structural of rep_addr_entity_848ca08456 is
  signal ce_1_sg_x133: std_logic;
  signal clk_1_sg_x133: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(35 downto 0);
  signal din0_0_q_net: std_logic_vector(8 downto 0);
  signal din1_0_q_net: std_logic_vector(8 downto 0);
  signal din1_1_q_net: std_logic_vector(8 downto 0);
  signal din2_0_q_net_x0: std_logic_vector(8 downto 0);
  signal din2_1_q_net_x0: std_logic_vector(8 downto 0);
  signal din2_2_q_net_x0: std_logic_vector(8 downto 0);
  signal din2_3_q_net_x0: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(8 downto 0);

begin
  ce_1_sg_x133 <= ce_1;
  clk_1_sg_x133 <= clk_1;
  reinterpret1_output_port_net_x3 <= in_x0;
  out_x0 <= concatenate_y_net_x2;

  bussify_58de197e8c: entity work.bussify_entity_58de197e8c
    port map (
      in1 => din2_0_q_net_x0,
      in2 => din2_1_q_net_x0,
      in3 => din2_2_q_net_x0,
      in4 => din2_3_q_net_x0,
      bus_out => concatenate_y_net_x2
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x133,
      clk => clk_1_sg_x133,
      d => reinterpret1_output_port_net_x3,
      en => '1',
      rst => '1',
      q => din0_0_q_net
    );

  din1_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x133,
      clk => clk_1_sg_x133,
      d => din0_0_q_net,
      en => '1',
      rst => '1',
      q => din1_0_q_net
    );

  din1_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x133,
      clk => clk_1_sg_x133,
      d => din0_0_q_net,
      en => '1',
      rst => '1',
      q => din1_1_q_net
    );

  din2_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x133,
      clk => clk_1_sg_x133,
      d => din1_0_q_net,
      en => '1',
      rst => '1',
      q => din2_0_q_net_x0
    );

  din2_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x133,
      clk => clk_1_sg_x133,
      d => din1_1_q_net,
      en => '1',
      rst => '1',
      q => din2_1_q_net_x0
    );

  din2_2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x133,
      clk => clk_1_sg_x133,
      d => din1_0_q_net,
      en => '1',
      rst => '1',
      q => din2_2_q_net_x0
    );

  din2_3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x133,
      clk => clk_1_sg_x133,
      d => din1_1_q_net,
      en => '1',
      rst => '1',
      q => din2_3_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/reorder_even/buf0/rep_we"

entity rep_we_entity_a182d9507c is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic_vector(3 downto 0)
  );
end rep_we_entity_a182d9507c;

architecture structural of rep_we_entity_a182d9507c is
  signal ce_1_sg_x134: std_logic;
  signal clk_1_sg_x134: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(3 downto 0);
  signal din0_0_q_net: std_logic;
  signal din1_0_q_net: std_logic;
  signal din1_1_q_net: std_logic;
  signal din2_0_q_net_x0: std_logic;
  signal din2_1_q_net_x0: std_logic;
  signal din2_2_q_net_x0: std_logic;
  signal din2_3_q_net_x0: std_logic;
  signal slice1_y_net_x0: std_logic;

begin
  ce_1_sg_x134 <= ce_1;
  clk_1_sg_x134 <= clk_1;
  slice1_y_net_x0 <= in_x0;
  out_x0 <= concatenate_y_net_x2;

  bussify_9944a8fee9: entity work.bussify_entity_40eba17d52
    port map (
      in1 => din2_0_q_net_x0,
      in2 => din2_1_q_net_x0,
      in3 => din2_2_q_net_x0,
      in4 => din2_3_q_net_x0,
      bus_out => concatenate_y_net_x2
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x134,
      clk => clk_1_sg_x134,
      d(0) => slice1_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_0_q_net
    );

  din1_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x134,
      clk => clk_1_sg_x134,
      d(0) => din0_0_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_0_q_net
    );

  din1_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x134,
      clk => clk_1_sg_x134,
      d(0) => din0_0_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_1_q_net
    );

  din2_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x134,
      clk => clk_1_sg_x134,
      d(0) => din1_0_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_0_q_net_x0
    );

  din2_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x134,
      clk => clk_1_sg_x134,
      d(0) => din1_1_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_1_q_net_x0
    );

  din2_2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x134,
      clk => clk_1_sg_x134,
      d(0) => din1_0_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_2_q_net_x0
    );

  din2_3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x134,
      clk => clk_1_sg_x134,
      d(0) => din1_1_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_3_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/reorder_even/buf0"

entity buf0_entity_1076d70caf is
  port (
    addr: in std_logic_vector(8 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(143 downto 0); 
    we: in std_logic; 
    dout: out std_logic_vector(143 downto 0)
  );
end buf0_entity_1076d70caf;

architecture structural of buf0_entity_1076d70caf is
  signal bram0_data_out_net_x0: std_logic_vector(35 downto 0);
  signal bram1_data_out_net_x0: std_logic_vector(35 downto 0);
  signal bram2_data_out_net_x0: std_logic_vector(35 downto 0);
  signal bram3_data_out_net_x0: std_logic_vector(35 downto 0);
  signal ce_1_sg_x135: std_logic;
  signal clk_1_sg_x135: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(143 downto 0);
  signal ddin_q_net_x0: std_logic_vector(143 downto 0);
  signal delay_din0_q_net_x0: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(8 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(8 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(8 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(8 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(35 downto 0);
  signal slice1_y_net_x0: std_logic;
  signal slice1_y_net_x2: std_logic;
  signal slice2_y_net_x0: std_logic;
  signal slice3_y_net_x0: std_logic;
  signal slice4_y_net_x0: std_logic;

begin
  reinterpret1_output_port_net_x5 <= addr;
  ce_1_sg_x135 <= ce_1;
  clk_1_sg_x135 <= clk_1;
  delay_din0_q_net_x0 <= din;
  slice1_y_net_x2 <= we;
  dout <= concatenate_y_net_x4;

  bram0: entity work.xlspram_he6_cres_correlator
    generic map (
      c_address_width => 9,
      c_width => 36,
      core_name0 => "bmg_72_d53572f04cfc7154",
      latency => 2
    )
    port map (
      addr => reinterpret4_output_port_net_x0,
      ce => ce_1_sg_x135,
      clk => clk_1_sg_x135,
      data_in => reinterpret4_output_port_net_x1,
      en => "1",
      rst => "0",
      we(0) => slice4_y_net_x0,
      data_out => bram0_data_out_net_x0
    );

  bram1: entity work.xlspram_he6_cres_correlator
    generic map (
      c_address_width => 9,
      c_width => 36,
      core_name0 => "bmg_72_d53572f04cfc7154",
      latency => 2
    )
    port map (
      addr => reinterpret3_output_port_net_x0,
      ce => ce_1_sg_x135,
      clk => clk_1_sg_x135,
      data_in => reinterpret3_output_port_net_x1,
      en => "1",
      rst => "0",
      we(0) => slice3_y_net_x0,
      data_out => bram1_data_out_net_x0
    );

  bram2: entity work.xlspram_he6_cres_correlator
    generic map (
      c_address_width => 9,
      c_width => 36,
      core_name0 => "bmg_72_d53572f04cfc7154",
      latency => 2
    )
    port map (
      addr => reinterpret2_output_port_net_x0,
      ce => ce_1_sg_x135,
      clk => clk_1_sg_x135,
      data_in => reinterpret2_output_port_net_x1,
      en => "1",
      rst => "0",
      we(0) => slice2_y_net_x0,
      data_out => bram2_data_out_net_x0
    );

  bram3: entity work.xlspram_he6_cres_correlator
    generic map (
      c_address_width => 9,
      c_width => 36,
      core_name0 => "bmg_72_d53572f04cfc7154",
      latency => 2
    )
    port map (
      addr => reinterpret1_output_port_net_x0,
      ce => ce_1_sg_x135,
      clk => clk_1_sg_x135,
      data_in => reinterpret1_output_port_net_x4,
      en => "1",
      rst => "0",
      we(0) => slice1_y_net_x0,
      data_out => bram3_data_out_net_x0
    );

  ddin: entity work.delay_3926436d8b
    port map (
      ce => ce_1_sg_x135,
      clk => clk_1_sg_x135,
      clr => '0',
      d => delay_din0_q_net_x0,
      q => ddin_q_net_x0
    );

  debus_addr_08a7130bde: entity work.debus_addr_entity_08a7130bde
    port map (
      bus_in => concatenate_y_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  debus_din_d73cd783c4: entity work.expand0_entity_faedf3e73c
    port map (
      bus_in => ddin_q_net_x0,
      lsb_out1 => reinterpret1_output_port_net_x4,
      msb_out4 => reinterpret4_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1
    );

  debus_we_fcf6995b5b: entity work.debus_we_entity_fcf6995b5b
    port map (
      bus_in => concatenate_y_net_x3,
      lsb_out1 => slice1_y_net_x0,
      msb_out4 => slice4_y_net_x0,
      out2 => slice2_y_net_x0,
      out3 => slice3_y_net_x0
    );

  din_bussify_89bc9b2da6: entity work.d_bussify_entity_9462440c59
    port map (
      in1 => bram0_data_out_net_x0,
      in2 => bram1_data_out_net_x0,
      in3 => bram2_data_out_net_x0,
      in4 => bram3_data_out_net_x0,
      bus_out => concatenate_y_net_x4
    );

  rep_addr_848ca08456: entity work.rep_addr_entity_848ca08456
    port map (
      ce_1 => ce_1_sg_x135,
      clk_1 => clk_1_sg_x135,
      in_x0 => reinterpret1_output_port_net_x5,
      out_x0 => concatenate_y_net_x2
    );

  rep_we_a182d9507c: entity work.rep_we_entity_a182d9507c
    port map (
      ce_1 => ce_1_sg_x135,
      clk_1 => clk_1_sg_x135,
      in_x0 => slice1_y_net_x2,
      out_x0 => concatenate_y_net_x3
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/reorder_even/sync_delay_en"

entity sync_delay_en_entity_3cd3924f8f is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    en: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_en_entity_3cd3924f8f;

architecture structural of sync_delay_en_entity_3cd3924f8f is
  signal ce_1_sg_x136: std_logic;
  signal clk_1_sg_x136: std_logic;
  signal constant1_op_net: std_logic_vector(9 downto 0);
  signal constant2_op_net: std_logic_vector(9 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(9 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal logical1_y_net: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x0: std_logic;
  signal or_y_net_x0: std_logic;
  signal pre_sync_delay_q_net_x0: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x136 <= ce_1;
  clk_1_sg_x136 <= clk_1;
  or_y_net_x0 <= en;
  pre_sync_delay_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x0;

  constant1: entity work.constant_498bc68c14
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_fbc2f0cce1
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_f1ac4bddff
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.counter_d3720c25c3
    port map (
      ce => ce_1_sg_x136,
      clk => clk_1_sg_x136,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical1_y_net,
      load(0) => pre_sync_delay_q_net_x0,
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => pre_sync_delay_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  logical1: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical_y_net,
      d1(0) => or_y_net_x0,
      y(0) => logical1_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => pre_sync_delay_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x0
    );

  relational: entity work.relational_0ffd72e037
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_f6702ea2f7
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/reorder_even/we_expand"

entity we_expand_entity_c5b97811a6 is
  port (
    bus_in: in std_logic; 
    msb_lsb_out1: out std_logic
  );
end we_expand_entity_c5b97811a6;

architecture structural of we_expand_entity_c5b97811a6 is
  signal reinterpret1_output_port_net_x0: std_logic;
  signal slice1_y_net_x3: std_logic;

begin
  reinterpret1_output_port_net_x0 <= bus_in;
  msb_lsb_out1 <= slice1_y_net_x3;

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 1,
      y_width => 1
    )
    port map (
      x(0) => reinterpret1_output_port_net_x0,
      y(0) => slice1_y_net_x3
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/reorder_even/we_replicate/bussify"

entity bussify_entity_cb7efd63bc is
  port (
    in1: in std_logic; 
    bus_out: out std_logic
  );
end bussify_entity_cb7efd63bc;

architecture structural of bussify_entity_cb7efd63bc is
  signal delay_we2_q_net_x0: std_logic;
  signal reinterpret1_output_port_net_x1: std_logic;

begin
  delay_we2_q_net_x0 <= in1;
  bus_out <= reinterpret1_output_port_net_x1;

  reinterpret1: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => delay_we2_q_net_x0,
      output_port(0) => reinterpret1_output_port_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/reorder_even/we_replicate"

entity we_replicate_entity_fc91f86d0a is
  port (
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end we_replicate_entity_fc91f86d0a;

architecture structural of we_replicate_entity_fc91f86d0a is
  signal delay_we2_q_net_x1: std_logic;
  signal reinterpret1_output_port_net_x2: std_logic;

begin
  delay_we2_q_net_x1 <= in_x0;
  out_x0 <= reinterpret1_output_port_net_x2;

  bussify_cb7efd63bc: entity work.bussify_entity_cb7efd63bc
    port map (
      in1 => delay_we2_q_net_x1,
      bus_out => reinterpret1_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/reorder_even"

entity reorder_even_entity_f239e237dc is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din0: in std_logic_vector(143 downto 0); 
    en: in std_logic; 
    sync: in std_logic; 
    dout0: out std_logic_vector(143 downto 0); 
    sync_out: out std_logic
  );
end reorder_even_entity_f239e237dc;

architecture structural of reorder_even_entity_f239e237dc is
  signal ce_1_sg_x137: std_logic;
  signal clk_1_sg_x137: std_logic;
  signal concatenate_y_net_x5: std_logic_vector(143 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal delay_d0_q_net: std_logic_vector(8 downto 0);
  signal delay_din0_q_net_x0: std_logic_vector(143 downto 0);
  signal delay_map1_q_net: std_logic_vector(8 downto 0);
  signal delay_sel_q_net: std_logic;
  signal delay_we0_q_net: std_logic;
  signal delay_we2_q_net_x1: std_logic;
  signal en_even_op_net_x0: std_logic;
  signal map1_data_net: std_logic_vector(8 downto 0);
  signal mux_y_net_x0: std_logic;
  signal mux_y_net_x1: std_logic_vector(8 downto 0);
  signal or_y_net_x0: std_logic;
  signal post_sync_delay_q_net_x0: std_logic;
  signal pre_sync_delay_q_net_x0: std_logic;
  signal reinterpret1_output_port_net_x2: std_logic;
  signal reinterpret1_output_port_net_x3: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(8 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(143 downto 0);
  signal slice1_y_net: std_logic;
  signal slice1_y_net_x3: std_logic;
  signal slice2_y_net: std_logic_vector(8 downto 0);

begin
  ce_1_sg_x137 <= ce_1;
  clk_1_sg_x137 <= clk_1;
  reinterpret2_output_port_net_x0 <= din0;
  en_even_op_net_x0 <= en;
  delay0_q_net_x0 <= sync;
  dout0 <= concatenate_y_net_x5;
  sync_out <= post_sync_delay_q_net_x0;

  addr_expand_7576e82df6: entity work.addr_expand_entity_7576e82df6
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      msb_lsb_out1 => reinterpret1_output_port_net_x5
    );

  addr_replicate_e94d3035fe: entity work.addr_replicate_entity_e94d3035fe
    port map (
      in_x0 => mux_y_net_x1,
      out_x0 => reinterpret1_output_port_net_x3
    );

  buf0_1076d70caf: entity work.buf0_entity_1076d70caf
    port map (
      addr => reinterpret1_output_port_net_x5,
      ce_1 => ce_1_sg_x137,
      clk_1 => clk_1_sg_x137,
      din => delay_din0_q_net_x0,
      we => slice1_y_net_x3,
      dout => concatenate_y_net_x5
    );

  counter: entity work.counter_a1cad1a9ea
    port map (
      ce => ce_1_sg_x137,
      clk => clk_1_sg_x137,
      clr => '0',
      en(0) => en_even_op_net_x0,
      rst(0) => delay0_q_net_x0,
      op => counter_op_net
    );

  delay_d0: entity work.delay_e23bc04d9c
    port map (
      ce => ce_1_sg_x137,
      clk => clk_1_sg_x137,
      clr => '0',
      d => slice2_y_net,
      q => delay_d0_q_net
    );

  delay_din0: entity work.delay_adfe2fa7b6
    port map (
      ce => ce_1_sg_x137,
      clk => clk_1_sg_x137,
      clr => '0',
      d => reinterpret2_output_port_net_x0,
      q => delay_din0_q_net_x0
    );

  delay_map1: entity work.delay_a99984b20e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => map1_data_net,
      q => delay_map1_q_net
    );

  delay_sel: entity work.delay_85c2ef968b
    port map (
      ce => ce_1_sg_x137,
      clk => clk_1_sg_x137,
      clr => '0',
      d(0) => slice1_y_net,
      q(0) => delay_sel_q_net
    );

  delay_we0: entity work.delay_c53de546ea
    port map (
      ce => ce_1_sg_x137,
      clk => clk_1_sg_x137,
      clr => '0',
      d(0) => en_even_op_net_x0,
      q(0) => delay_we0_q_net
    );

  delay_we2: entity work.delay_c53de546ea
    port map (
      ce => ce_1_sg_x137,
      clk => clk_1_sg_x137,
      clr => '0',
      d(0) => en_even_op_net_x0,
      q(0) => delay_we2_q_net_x1
    );

  map1: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 9,
      c_width => 9,
      core_name0 => "bmg_72_7670ae7947456b32",
      latency => 2
    )
    port map (
      addr => slice2_y_net,
      ce => ce_1_sg_x137,
      clk => clk_1_sg_x137,
      en => "1",
      rst => "0",
      data => map1_data_net
    );

  mux: entity work.mux_57bd0e235a
    port map (
      ce => ce_1_sg_x137,
      clk => clk_1_sg_x137,
      clr => '0',
      d0 => delay_d0_q_net,
      d1 => delay_map1_q_net,
      sel(0) => delay_sel_q_net,
      y => mux_y_net_x1
    );

  or_x0: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => pre_sync_delay_q_net_x0,
      d1(0) => delay_we0_q_net,
      y(0) => or_y_net_x0
    );

  post_sync_delay: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x137,
      clk => clk_1_sg_x137,
      clr => '0',
      d(0) => mux_y_net_x0,
      q(0) => post_sync_delay_q_net_x0
    );

  pre_sync_delay: entity work.delay_c53de546ea
    port map (
      ce => ce_1_sg_x137,
      clk => clk_1_sg_x137,
      clr => '0',
      d(0) => delay0_q_net_x0,
      q(0) => pre_sync_delay_q_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 9,
      new_msb => 9,
      x_width => 10,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 8,
      x_width => 10,
      y_width => 9
    )
    port map (
      x => counter_op_net,
      y => slice2_y_net
    );

  sync_delay_en_3cd3924f8f: entity work.sync_delay_en_entity_3cd3924f8f
    port map (
      ce_1 => ce_1_sg_x137,
      clk_1 => clk_1_sg_x137,
      en => or_y_net_x0,
      in_x0 => pre_sync_delay_q_net_x0,
      out_x0 => mux_y_net_x0
    );

  we_expand_c5b97811a6: entity work.we_expand_entity_c5b97811a6
    port map (
      bus_in => reinterpret1_output_port_net_x2,
      msb_lsb_out1 => slice1_y_net_x3
    );

  we_replicate_fc91f86d0a: entity work.we_replicate_entity_fc91f86d0a
    port map (
      in_x0 => delay_we2_q_net_x1,
      out_x0 => reinterpret1_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/reorder_odd"

entity reorder_odd_entity_bb27ef4cc8 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din0: in std_logic_vector(143 downto 0); 
    en: in std_logic; 
    sync: in std_logic; 
    dout0: out std_logic_vector(143 downto 0)
  );
end reorder_odd_entity_bb27ef4cc8;

architecture structural of reorder_odd_entity_bb27ef4cc8 is
  signal ce_1_sg_x141: std_logic;
  signal clk_1_sg_x141: std_logic;
  signal concatenate_y_net_x5: std_logic_vector(143 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay0_q_net_x1: std_logic;
  signal delay_d0_q_net: std_logic_vector(8 downto 0);
  signal delay_din0_q_net_x0: std_logic_vector(143 downto 0);
  signal delay_map1_q_net: std_logic_vector(8 downto 0);
  signal delay_sel_q_net: std_logic;
  signal delay_we2_q_net_x1: std_logic;
  signal en_odd_op_net_x0: std_logic;
  signal map1_data_net: std_logic_vector(8 downto 0);
  signal mux_y_net_x1: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic;
  signal reinterpret1_output_port_net_x3: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(8 downto 0);
  signal slice1_y_net: std_logic;
  signal slice1_y_net_x3: std_logic;
  signal slice2_y_net: std_logic_vector(8 downto 0);

begin
  ce_1_sg_x141 <= ce_1;
  clk_1_sg_x141 <= clk_1;
  reinterpret1_output_port_net_x0 <= din0;
  en_odd_op_net_x0 <= en;
  delay0_q_net_x1 <= sync;
  dout0 <= concatenate_y_net_x5;

  addr_expand_b6f9f8701b: entity work.addr_expand_entity_7576e82df6
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      msb_lsb_out1 => reinterpret1_output_port_net_x5
    );

  addr_replicate_6eb6d8106e: entity work.addr_replicate_entity_e94d3035fe
    port map (
      in_x0 => mux_y_net_x1,
      out_x0 => reinterpret1_output_port_net_x3
    );

  buf0_280823868e: entity work.buf0_entity_1076d70caf
    port map (
      addr => reinterpret1_output_port_net_x5,
      ce_1 => ce_1_sg_x141,
      clk_1 => clk_1_sg_x141,
      din => delay_din0_q_net_x0,
      we => slice1_y_net_x3,
      dout => concatenate_y_net_x5
    );

  counter: entity work.counter_a1cad1a9ea
    port map (
      ce => ce_1_sg_x141,
      clk => clk_1_sg_x141,
      clr => '0',
      en(0) => en_odd_op_net_x0,
      rst(0) => delay0_q_net_x1,
      op => counter_op_net
    );

  delay_d0: entity work.delay_e23bc04d9c
    port map (
      ce => ce_1_sg_x141,
      clk => clk_1_sg_x141,
      clr => '0',
      d => slice2_y_net,
      q => delay_d0_q_net
    );

  delay_din0: entity work.delay_adfe2fa7b6
    port map (
      ce => ce_1_sg_x141,
      clk => clk_1_sg_x141,
      clr => '0',
      d => reinterpret1_output_port_net_x0,
      q => delay_din0_q_net_x0
    );

  delay_map1: entity work.delay_a99984b20e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => map1_data_net,
      q => delay_map1_q_net
    );

  delay_sel: entity work.delay_85c2ef968b
    port map (
      ce => ce_1_sg_x141,
      clk => clk_1_sg_x141,
      clr => '0',
      d(0) => slice1_y_net,
      q(0) => delay_sel_q_net
    );

  delay_we2: entity work.delay_c53de546ea
    port map (
      ce => ce_1_sg_x141,
      clk => clk_1_sg_x141,
      clr => '0',
      d(0) => en_odd_op_net_x0,
      q(0) => delay_we2_q_net_x1
    );

  map1: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 9,
      c_width => 9,
      core_name0 => "bmg_72_7e5123d892e8a550",
      latency => 2
    )
    port map (
      addr => slice2_y_net,
      ce => ce_1_sg_x141,
      clk => clk_1_sg_x141,
      en => "1",
      rst => "0",
      data => map1_data_net
    );

  mux: entity work.mux_57bd0e235a
    port map (
      ce => ce_1_sg_x141,
      clk => clk_1_sg_x141,
      clr => '0',
      d0 => delay_d0_q_net,
      d1 => delay_map1_q_net,
      sel(0) => delay_sel_q_net,
      y => mux_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 9,
      new_msb => 9,
      x_width => 10,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 8,
      x_width => 10,
      y_width => 9
    )
    port map (
      x => counter_op_net,
      y => slice2_y_net
    );

  we_expand_3bab0464fe: entity work.we_expand_entity_c5b97811a6
    port map (
      bus_in => reinterpret1_output_port_net_x2,
      msb_lsb_out1 => slice1_y_net_x3
    );

  we_replicate_ad1145f5c2: entity work.we_replicate_entity_fc91f86d0a
    port map (
      in_x0 => delay_we2_q_net_x1,
      out_x0 => reinterpret1_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/reorder_out/addr_replicate"

entity addr_replicate_entity_0188366a5b is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(8 downto 0); 
    out_x0: out std_logic_vector(35 downto 0)
  );
end addr_replicate_entity_0188366a5b;

architecture structural of addr_replicate_entity_0188366a5b is
  signal ce_1_sg_x142: std_logic;
  signal clk_1_sg_x142: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(35 downto 0);
  signal din0_0_q_net: std_logic_vector(8 downto 0);
  signal din0_1_q_net: std_logic_vector(8 downto 0);
  signal din1_0_q_net_x0: std_logic_vector(8 downto 0);
  signal din1_1_q_net_x0: std_logic_vector(8 downto 0);
  signal din1_2_q_net_x0: std_logic_vector(8 downto 0);
  signal din1_3_q_net_x0: std_logic_vector(8 downto 0);
  signal mux_y_net_x0: std_logic_vector(8 downto 0);

begin
  ce_1_sg_x142 <= ce_1;
  clk_1_sg_x142 <= clk_1;
  mux_y_net_x0 <= in_x0;
  out_x0 <= concatenate_y_net_x2;

  bussify_a47f5cc669: entity work.bussify_entity_58de197e8c
    port map (
      in1 => din1_0_q_net_x0,
      in2 => din1_1_q_net_x0,
      in3 => din1_2_q_net_x0,
      in4 => din1_3_q_net_x0,
      bus_out => concatenate_y_net_x2
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x142,
      clk => clk_1_sg_x142,
      d => mux_y_net_x0,
      en => '1',
      rst => '1',
      q => din0_0_q_net
    );

  din0_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x142,
      clk => clk_1_sg_x142,
      d => mux_y_net_x0,
      en => '1',
      rst => '1',
      q => din0_1_q_net
    );

  din1_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x142,
      clk => clk_1_sg_x142,
      d => din0_0_q_net,
      en => '1',
      rst => '1',
      q => din1_0_q_net_x0
    );

  din1_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x142,
      clk => clk_1_sg_x142,
      d => din0_1_q_net,
      en => '1',
      rst => '1',
      q => din1_1_q_net_x0
    );

  din1_2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x142,
      clk => clk_1_sg_x142,
      d => din0_0_q_net,
      en => '1',
      rst => '1',
      q => din1_2_q_net_x0
    );

  din1_3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x142,
      clk => clk_1_sg_x142,
      d => din0_1_q_net,
      en => '1',
      rst => '1',
      q => din1_3_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/reorder_out"

entity reorder_out_entity_ce7bce69c7 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din0: in std_logic_vector(143 downto 0); 
    din1: in std_logic_vector(143 downto 0); 
    din2: in std_logic_vector(143 downto 0); 
    din3: in std_logic_vector(143 downto 0); 
    en: in std_logic; 
    sync: in std_logic; 
    dout0: out std_logic_vector(143 downto 0); 
    dout1: out std_logic_vector(143 downto 0); 
    dout2: out std_logic_vector(143 downto 0); 
    dout3: out std_logic_vector(143 downto 0)
  );
end reorder_out_entity_ce7bce69c7;

architecture structural of reorder_out_entity_ce7bce69c7 is
  signal ce_1_sg_x156: std_logic;
  signal clk_1_sg_x156: std_logic;
  signal concatenate_y_net_x10: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(143 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay_d0_q_net: std_logic_vector(8 downto 0);
  signal delay_din0_q_net_x0: std_logic_vector(143 downto 0);
  signal delay_din1_q_net_x0: std_logic_vector(143 downto 0);
  signal delay_din2_q_net_x0: std_logic_vector(143 downto 0);
  signal delay_din3_q_net_x0: std_logic_vector(143 downto 0);
  signal delay_map1_q_net: std_logic_vector(8 downto 0);
  signal delay_sel_q_net: std_logic;
  signal delay_we2_q_net_x0: std_logic;
  signal en_out_op_net_x0: std_logic;
  signal map1_data_net: std_logic_vector(8 downto 0);
  signal mux_y_net_x0: std_logic_vector(8 downto 0);
  signal mux_y_net_x2: std_logic;
  signal ram_data_out_net_x4: std_logic_vector(143 downto 0);
  signal ram_data_out_net_x5: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(8 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(8 downto 0);
  signal reinterpret3_output_port_net_x3: std_logic_vector(8 downto 0);
  signal reinterpret4_output_port_net_x3: std_logic_vector(8 downto 0);
  signal reinterpret_out_output_port_net_x12: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x13: std_logic_vector(143 downto 0);
  signal slice1_y_net: std_logic;
  signal slice1_y_net_x3: std_logic;
  signal slice2_y_net: std_logic_vector(8 downto 0);
  signal slice2_y_net_x3: std_logic;
  signal slice3_y_net_x3: std_logic;
  signal slice4_y_net_x3: std_logic;

begin
  ce_1_sg_x156 <= ce_1;
  clk_1_sg_x156 <= clk_1;
  ram_data_out_net_x4 <= din0;
  ram_data_out_net_x5 <= din1;
  reinterpret_out_output_port_net_x12 <= din2;
  reinterpret_out_output_port_net_x13 <= din3;
  en_out_op_net_x0 <= en;
  mux_y_net_x2 <= sync;
  dout0 <= concatenate_y_net_x9;
  dout1 <= concatenate_y_net_x10;
  dout2 <= concatenate_y_net_x11;
  dout3 <= concatenate_y_net_x12;

  addr_expand_b8888947b3: entity work.debus_addr_entity_08a7130bde
    port map (
      bus_in => concatenate_y_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x3,
      msb_out4 => reinterpret4_output_port_net_x3,
      out2 => reinterpret2_output_port_net_x3,
      out3 => reinterpret3_output_port_net_x3
    );

  addr_replicate_0188366a5b: entity work.addr_replicate_entity_0188366a5b
    port map (
      ce_1 => ce_1_sg_x156,
      clk_1 => clk_1_sg_x156,
      in_x0 => mux_y_net_x0,
      out_x0 => concatenate_y_net_x2
    );

  buf0_e7f4bc7d68: entity work.buf0_entity_1076d70caf
    port map (
      addr => reinterpret4_output_port_net_x3,
      ce_1 => ce_1_sg_x156,
      clk_1 => clk_1_sg_x156,
      din => delay_din0_q_net_x0,
      we => slice4_y_net_x3,
      dout => concatenate_y_net_x9
    );

  buf1_263cecf6d8: entity work.buf0_entity_1076d70caf
    port map (
      addr => reinterpret3_output_port_net_x3,
      ce_1 => ce_1_sg_x156,
      clk_1 => clk_1_sg_x156,
      din => delay_din1_q_net_x0,
      we => slice3_y_net_x3,
      dout => concatenate_y_net_x10
    );

  buf2_0e7cc89581: entity work.buf0_entity_1076d70caf
    port map (
      addr => reinterpret2_output_port_net_x3,
      ce_1 => ce_1_sg_x156,
      clk_1 => clk_1_sg_x156,
      din => delay_din2_q_net_x0,
      we => slice2_y_net_x3,
      dout => concatenate_y_net_x11
    );

  buf3_9949b1eaa4: entity work.buf0_entity_1076d70caf
    port map (
      addr => reinterpret1_output_port_net_x3,
      ce_1 => ce_1_sg_x156,
      clk_1 => clk_1_sg_x156,
      din => delay_din3_q_net_x0,
      we => slice1_y_net_x3,
      dout => concatenate_y_net_x12
    );

  counter: entity work.counter_a1cad1a9ea
    port map (
      ce => ce_1_sg_x156,
      clk => clk_1_sg_x156,
      clr => '0',
      en(0) => en_out_op_net_x0,
      rst(0) => mux_y_net_x2,
      op => counter_op_net
    );

  delay_d0: entity work.delay_e23bc04d9c
    port map (
      ce => ce_1_sg_x156,
      clk => clk_1_sg_x156,
      clr => '0',
      d => slice2_y_net,
      q => delay_d0_q_net
    );

  delay_din0: entity work.delay_60ee3d33cd
    port map (
      ce => ce_1_sg_x156,
      clk => clk_1_sg_x156,
      clr => '0',
      d => ram_data_out_net_x4,
      q => delay_din0_q_net_x0
    );

  delay_din1: entity work.delay_60ee3d33cd
    port map (
      ce => ce_1_sg_x156,
      clk => clk_1_sg_x156,
      clr => '0',
      d => ram_data_out_net_x5,
      q => delay_din1_q_net_x0
    );

  delay_din2: entity work.delay_60ee3d33cd
    port map (
      ce => ce_1_sg_x156,
      clk => clk_1_sg_x156,
      clr => '0',
      d => reinterpret_out_output_port_net_x12,
      q => delay_din2_q_net_x0
    );

  delay_din3: entity work.delay_60ee3d33cd
    port map (
      ce => ce_1_sg_x156,
      clk => clk_1_sg_x156,
      clr => '0',
      d => reinterpret_out_output_port_net_x13,
      q => delay_din3_q_net_x0
    );

  delay_map1: entity work.delay_a99984b20e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => map1_data_net,
      q => delay_map1_q_net
    );

  delay_sel: entity work.delay_85c2ef968b
    port map (
      ce => ce_1_sg_x156,
      clk => clk_1_sg_x156,
      clr => '0',
      d(0) => slice1_y_net,
      q(0) => delay_sel_q_net
    );

  delay_we2: entity work.delay_c53de546ea
    port map (
      ce => ce_1_sg_x156,
      clk => clk_1_sg_x156,
      clr => '0',
      d(0) => en_out_op_net_x0,
      q(0) => delay_we2_q_net_x0
    );

  map1: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 9,
      c_width => 9,
      core_name0 => "bmg_72_51693f3038eeb355",
      latency => 2
    )
    port map (
      addr => slice2_y_net,
      ce => ce_1_sg_x156,
      clk => clk_1_sg_x156,
      en => "1",
      rst => "0",
      data => map1_data_net
    );

  mux: entity work.mux_57bd0e235a
    port map (
      ce => ce_1_sg_x156,
      clk => clk_1_sg_x156,
      clr => '0',
      d0 => delay_d0_q_net,
      d1 => delay_map1_q_net,
      sel(0) => delay_sel_q_net,
      y => mux_y_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 9,
      new_msb => 9,
      x_width => 10,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 8,
      x_width => 10,
      y_width => 9
    )
    port map (
      x => counter_op_net,
      y => slice2_y_net
    );

  we_expand_5ba9af217c: entity work.debus_we_entity_fcf6995b5b
    port map (
      bus_in => concatenate_y_net_x8,
      lsb_out1 => slice1_y_net_x3,
      msb_out4 => slice4_y_net_x3,
      out2 => slice2_y_net_x3,
      out3 => slice3_y_net_x3
    );

  we_replicate_2b1d4e966a: entity work.sel_replicate0_entity_1cb27a3c05
    port map (
      ce_1 => ce_1_sg_x156,
      clk_1 => clk_1_sg_x156,
      in_x0 => delay_we2_q_net_x0,
      out_x0 => concatenate_y_net_x8
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x/sync_delay"

entity sync_delay_entity_5bbe02bcd5 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_5bbe02bcd5;

architecture structural of sync_delay_entity_5bbe02bcd5 is
  signal ce_1_sg_x157: std_logic;
  signal clk_1_sg_x157: std_logic;
  signal constant1_op_net: std_logic_vector(9 downto 0);
  signal constant2_op_net: std_logic_vector(9 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(9 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal d2_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x3: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x157 <= ce_1;
  clk_1_sg_x157 <= clk_1;
  d2_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x3;

  constant1: entity work.constant_498bc68c14
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_fbc2f0cce1
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_f1ac4bddff
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.xlcounter_free_he6_cres_correlator
    generic map (
      core_name0 => "cntr_11_0_2fa687a4fd8aa200",
      op_arith => xlUnsigned,
      op_width => 10
    )
    port map (
      ce => ce_1_sg_x157,
      clk => clk_1_sg_x157,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => d2_q_net_x0,
      rst => "0",
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => d2_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => d2_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x3
    );

  relational: entity work.relational_0ffd72e037
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_f6702ea2f7
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/bi_real_unscr_4x"

entity bi_real_unscr_4x_entity_2d4efcbeb1 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    even: in std_logic_vector(143 downto 0); 
    odd: in std_logic_vector(143 downto 0); 
    sync: in std_logic; 
    pol1_out: out std_logic_vector(143 downto 0); 
    pol2_out: out std_logic_vector(143 downto 0); 
    pol3_out: out std_logic_vector(143 downto 0); 
    pol4_out: out std_logic_vector(143 downto 0); 
    sync_out: out std_logic
  );
end bi_real_unscr_4x_entity_2d4efcbeb1;

architecture structural of bi_real_unscr_4x_entity_2d4efcbeb1 is
  signal c0_op_net: std_logic_vector(9 downto 0);
  signal c1_op_net: std_logic_vector(9 downto 0);
  signal ce_1_sg_x158: std_logic;
  signal clk_1_sg_x158: std_logic;
  signal concatenate_y_net_x10: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x15: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x16: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x17: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x18: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x19: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x20: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x21: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(143 downto 0);
  signal count_op_net: std_logic_vector(9 downto 0);
  signal d0_q_net: std_logic_vector(143 downto 0);
  signal d2_q_net_x0: std_logic;
  signal d3_q_net_x2: std_logic_vector(143 downto 0);
  signal d4_q_net_x2: std_logic_vector(143 downto 0);
  signal d5_q_net_x2: std_logic_vector(143 downto 0);
  signal d6_q_net_x2: std_logic_vector(143 downto 0);
  signal delay0_q_net_x2: std_logic;
  signal en_even_op_net_x0: std_logic;
  signal en_odd_op_net_x0: std_logic;
  signal en_out_op_net_x0: std_logic;
  signal mux0_y_net_x1: std_logic_vector(143 downto 0);
  signal mux1_y_net_x1: std_logic_vector(143 downto 0);
  signal mux2_y_net_x1: std_logic_vector(143 downto 0);
  signal mux3_y_net_x1: std_logic_vector(143 downto 0);
  signal mux_y_net_x3: std_logic;
  signal post_sync_delay_q_net_x0: std_logic;
  signal r0_op_net: std_logic;
  signal r1_op_net: std_logic;
  signal ram_data_out_net_x4: std_logic_vector(143 downto 0);
  signal ram_data_out_net_x5: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x12: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x13: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x5: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x6: std_logic_vector(143 downto 0);
  signal sync_delay1_q_net_x2: std_logic;

begin
  ce_1_sg_x158 <= ce_1;
  clk_1_sg_x158 <= clk_1;
  reinterpret2_output_port_net_x1 <= even;
  reinterpret1_output_port_net_x1 <= odd;
  delay0_q_net_x2 <= sync;
  pol1_out <= concatenate_y_net_x18;
  pol2_out <= concatenate_y_net_x19;
  pol3_out <= concatenate_y_net_x20;
  pol4_out <= concatenate_y_net_x21;
  sync_out <= sync_delay1_q_net_x2;

  c0: entity work.constant_fbc2f0cce1
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => c0_op_net
    );

  c1: entity work.constant_498bc68c14
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => c1_op_net
    );

  count: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x158,
      clk => clk_1_sg_x158,
      clr => '0',
      rst(0) => post_sync_delay_q_net_x0,
      op => count_op_net
    );

  d0: entity work.delay_dc6e12a537
    port map (
      ce => ce_1_sg_x158,
      clk => clk_1_sg_x158,
      clr => '0',
      d => concatenate_y_net_x15,
      q => d0_q_net
    );

  d2: entity work.delay_a14e3dd1bd
    port map (
      ce => ce_1_sg_x158,
      clk => clk_1_sg_x158,
      clr => '0',
      d(0) => post_sync_delay_q_net_x0,
      q(0) => d2_q_net_x0
    );

  d3: entity work.delay_dc6e12a537
    port map (
      ce => ce_1_sg_x158,
      clk => clk_1_sg_x158,
      clr => '0',
      d => concatenate_y_net_x9,
      q => d3_q_net_x2
    );

  d4: entity work.delay_dc6e12a537
    port map (
      ce => ce_1_sg_x158,
      clk => clk_1_sg_x158,
      clr => '0',
      d => concatenate_y_net_x10,
      q => d4_q_net_x2
    );

  d5: entity work.delay_dc6e12a537
    port map (
      ce => ce_1_sg_x158,
      clk => clk_1_sg_x158,
      clr => '0',
      d => concatenate_y_net_x16,
      q => d5_q_net_x2
    );

  d6: entity work.delay_dc6e12a537
    port map (
      ce => ce_1_sg_x158,
      clk => clk_1_sg_x158,
      clr => '0',
      d => concatenate_y_net_x17,
      q => d6_q_net_x2
    );

  delay0_263830a8f6: entity work.delay0_entity_263830a8f6
    port map (
      ce_1 => ce_1_sg_x158,
      clk_1 => clk_1_sg_x158,
      din => reinterpret_out_output_port_net_x5,
      dout => ram_data_out_net_x4
    );

  delay1_76d955e1ad: entity work.delay0_entity_263830a8f6
    port map (
      ce_1 => ce_1_sg_x158,
      clk_1 => clk_1_sg_x158,
      din => reinterpret_out_output_port_net_x6,
      dout => ram_data_out_net_x5
    );

  en_even: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => en_even_op_net_x0
    );

  en_odd: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => en_odd_op_net_x0
    );

  en_out: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => en_out_op_net_x0
    );

  hilbert0_790bd5ff7d: entity work.hilbert0_entity_790bd5ff7d
    port map (
      a => mux0_y_net_x1,
      b => mux1_y_net_x1,
      ce_1 => ce_1_sg_x158,
      clk_1 => clk_1_sg_x158,
      even => reinterpret_out_output_port_net_x5,
      odd => reinterpret_out_output_port_net_x6
    );

  hilbert1_f2a57c464c: entity work.hilbert0_entity_790bd5ff7d
    port map (
      a => mux2_y_net_x1,
      b => mux3_y_net_x1,
      ce_1 => ce_1_sg_x158,
      clk_1 => clk_1_sg_x158,
      even => reinterpret_out_output_port_net_x12,
      odd => reinterpret_out_output_port_net_x13
    );

  mirror_spectrum_40a20069c2: entity work.mirror_spectrum_entity_40a20069c2
    port map (
      ce_1 => ce_1_sg_x158,
      clk_1 => clk_1_sg_x158,
      din0 => ram_data_out_net_x4,
      din1 => ram_data_out_net_x5,
      din2 => reinterpret_out_output_port_net_x12,
      din3 => reinterpret_out_output_port_net_x13,
      reo_in0 => d3_q_net_x2,
      reo_in1 => d4_q_net_x2,
      reo_in2 => d5_q_net_x2,
      reo_in3 => d6_q_net_x2,
      sync => mux_y_net_x3,
      dout0 => concatenate_y_net_x18,
      dout1 => concatenate_y_net_x19,
      dout2 => concatenate_y_net_x20,
      dout3 => concatenate_y_net_x21,
      sync_out => sync_delay1_q_net_x2
    );

  mux0: entity work.mux_6fe6de4a52
    port map (
      ce => ce_1_sg_x158,
      clk => clk_1_sg_x158,
      clr => '0',
      d0 => concatenate_y_net_x5,
      d1 => d0_q_net,
      sel(0) => r0_op_net,
      y => mux0_y_net_x1
    );

  mux1: entity work.mux_6fe6de4a52
    port map (
      ce => ce_1_sg_x158,
      clk => clk_1_sg_x158,
      clr => '0',
      d0 => d0_q_net,
      d1 => concatenate_y_net_x5,
      sel(0) => r1_op_net,
      y => mux1_y_net_x1
    );

  mux2: entity work.mux_6fe6de4a52
    port map (
      ce => ce_1_sg_x158,
      clk => clk_1_sg_x158,
      clr => '0',
      d0 => concatenate_y_net_x5,
      d1 => d0_q_net,
      sel(0) => r1_op_net,
      y => mux2_y_net_x1
    );

  mux3: entity work.mux_6fe6de4a52
    port map (
      ce => ce_1_sg_x158,
      clk => clk_1_sg_x158,
      clr => '0',
      d0 => d0_q_net,
      d1 => concatenate_y_net_x5,
      sel(0) => r0_op_net,
      y => mux3_y_net_x1
    );

  r0: entity work.relational_0ffd72e037
    port map (
      a => c0_op_net,
      b => count_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => r0_op_net
    );

  r1: entity work.relational_0ffd72e037
    port map (
      a => count_op_net,
      b => c1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => r1_op_net
    );

  reorder_even_f239e237dc: entity work.reorder_even_entity_f239e237dc
    port map (
      ce_1 => ce_1_sg_x158,
      clk_1 => clk_1_sg_x158,
      din0 => reinterpret2_output_port_net_x1,
      en => en_even_op_net_x0,
      sync => delay0_q_net_x2,
      dout0 => concatenate_y_net_x5,
      sync_out => post_sync_delay_q_net_x0
    );

  reorder_odd_bb27ef4cc8: entity work.reorder_odd_entity_bb27ef4cc8
    port map (
      ce_1 => ce_1_sg_x158,
      clk_1 => clk_1_sg_x158,
      din0 => reinterpret1_output_port_net_x1,
      en => en_odd_op_net_x0,
      sync => delay0_q_net_x2,
      dout0 => concatenate_y_net_x15
    );

  reorder_out_ce7bce69c7: entity work.reorder_out_entity_ce7bce69c7
    port map (
      ce_1 => ce_1_sg_x158,
      clk_1 => clk_1_sg_x158,
      din0 => ram_data_out_net_x4,
      din1 => ram_data_out_net_x5,
      din2 => reinterpret_out_output_port_net_x12,
      din3 => reinterpret_out_output_port_net_x13,
      en => en_out_op_net_x0,
      sync => mux_y_net_x3,
      dout0 => concatenate_y_net_x9,
      dout1 => concatenate_y_net_x10,
      dout2 => concatenate_y_net_x16,
      dout3 => concatenate_y_net_x17
    );

  sync_delay_5bbe02bcd5: entity work.sync_delay_entity_5bbe02bcd5
    port map (
      ce_1 => ce_1_sg_x158,
      clk_1 => clk_1_sg_x158,
      in_x0 => d2_q_net_x0,
      out_x0 => mux_y_net_x3
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct/bus_add/a_debus"

entity a_debus_entity_b79a0810db is
  port (
    bus_in: in std_logic_vector(143 downto 0); 
    lsb_out1: out std_logic_vector(17 downto 0); 
    msb_out8: out std_logic_vector(17 downto 0); 
    out2: out std_logic_vector(17 downto 0); 
    out3: out std_logic_vector(17 downto 0); 
    out4: out std_logic_vector(17 downto 0); 
    out5: out std_logic_vector(17 downto 0); 
    out6: out std_logic_vector(17 downto 0); 
    out7: out std_logic_vector(17 downto 0)
  );
end a_debus_entity_b79a0810db;

architecture structural of a_debus_entity_b79a0810db is
  signal concatenate_y_net_x0: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(17 downto 0);
  signal slice1_y_net: std_logic_vector(17 downto 0);
  signal slice2_y_net: std_logic_vector(17 downto 0);
  signal slice3_y_net: std_logic_vector(17 downto 0);
  signal slice4_y_net: std_logic_vector(17 downto 0);
  signal slice5_y_net: std_logic_vector(17 downto 0);
  signal slice6_y_net: std_logic_vector(17 downto 0);
  signal slice7_y_net: std_logic_vector(17 downto 0);
  signal slice8_y_net: std_logic_vector(17 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out8 <= reinterpret8_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;
  out4 <= reinterpret4_output_port_net_x0;
  out5 <= reinterpret5_output_port_net_x0;
  out6 <= reinterpret6_output_port_net_x0;
  out7 <= reinterpret7_output_port_net_x0;

  reinterpret1: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  reinterpret5: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_y_net,
      output_port => reinterpret5_output_port_net_x0
    );

  reinterpret6: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret6_output_port_net_x0
    );

  reinterpret7: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret7_output_port_net_x0
    );

  reinterpret8: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret8_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 144,
      y_width => 18
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 35,
      x_width => 144,
      y_width => 18
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 36,
      new_msb => 53,
      x_width => 144,
      y_width => 18
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 54,
      new_msb => 71,
      x_width => 144,
      y_width => 18
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 72,
      new_msb => 89,
      x_width => 144,
      y_width => 18
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 90,
      new_msb => 107,
      x_width => 144,
      y_width => 18
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 108,
      new_msb => 125,
      x_width => 144,
      y_width => 18
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 126,
      new_msb => 143,
      x_width => 144,
      y_width => 18
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice8_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct/bus_add/op_bussify"

entity op_bussify_entity_5ed58d1c87 is
  port (
    in1: in std_logic_vector(18 downto 0); 
    in2: in std_logic_vector(18 downto 0); 
    in3: in std_logic_vector(18 downto 0); 
    in4: in std_logic_vector(18 downto 0); 
    in5: in std_logic_vector(18 downto 0); 
    in6: in std_logic_vector(18 downto 0); 
    in7: in std_logic_vector(18 downto 0); 
    in8: in std_logic_vector(18 downto 0); 
    bus_out: out std_logic_vector(151 downto 0)
  );
end op_bussify_entity_5ed58d1c87;

architecture structural of op_bussify_entity_5ed58d1c87 is
  signal addsub1_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub2_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub3_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub4_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub5_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub6_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub7_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub8_s_net_x0: std_logic_vector(18 downto 0);
  signal concatenate_y_net_x0: std_logic_vector(151 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(18 downto 0);

begin
  addsub1_s_net_x0 <= in1;
  addsub2_s_net_x0 <= in2;
  addsub3_s_net_x0 <= in3;
  addsub4_s_net_x0 <= in4;
  addsub5_s_net_x0 <= in5;
  addsub6_s_net_x0 <= in6;
  addsub7_s_net_x0 <= in7;
  addsub8_s_net_x0 <= in8;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_18a603ff3c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub1_s_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub2_s_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub3_s_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub4_s_net_x0,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub5_s_net_x0,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub6_s_net_x0,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub7_s_net_x0,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub8_s_net_x0,
      output_port => reinterpret8_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct/bus_add"

entity bus_add_entity_e8b3d973ec is
  port (
    a: in std_logic_vector(143 downto 0); 
    b: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    dout: out std_logic_vector(151 downto 0)
  );
end bus_add_entity_e8b3d973ec;

architecture structural of bus_add_entity_e8b3d973ec is
  signal addsub1_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub2_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub3_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub4_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub5_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub6_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub7_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub8_s_net_x0: std_logic_vector(18 downto 0);
  signal ce_1_sg_x159: std_logic;
  signal clk_1_sg_x159: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(151 downto 0);
  signal dmux0_q_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret5_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret6_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret7_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret8_output_port_net_x1: std_logic_vector(17 downto 0);

begin
  concatenate_y_net_x2 <= a;
  dmux0_q_net_x1 <= b;
  ce_1_sg_x159 <= ce_1;
  clk_1_sg_x159 <= clk_1;
  dout <= concatenate_y_net_x3;

  a_debus_b79a0810db: entity work.a_debus_entity_b79a0810db
    port map (
      bus_in => concatenate_y_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out8 => reinterpret8_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0,
      out4 => reinterpret4_output_port_net_x0,
      out5 => reinterpret5_output_port_net_x0,
      out6 => reinterpret6_output_port_net_x0,
      out7 => reinterpret7_output_port_net_x0
    );

  addsub1: entity work.addsub_e140b59ec8
    port map (
      a => reinterpret8_output_port_net_x0,
      b => reinterpret8_output_port_net_x1,
      ce => ce_1_sg_x159,
      clk => clk_1_sg_x159,
      clr => '0',
      s => addsub1_s_net_x0
    );

  addsub2: entity work.addsub_e140b59ec8
    port map (
      a => reinterpret7_output_port_net_x0,
      b => reinterpret7_output_port_net_x1,
      ce => ce_1_sg_x159,
      clk => clk_1_sg_x159,
      clr => '0',
      s => addsub2_s_net_x0
    );

  addsub3: entity work.addsub_e140b59ec8
    port map (
      a => reinterpret6_output_port_net_x0,
      b => reinterpret6_output_port_net_x1,
      ce => ce_1_sg_x159,
      clk => clk_1_sg_x159,
      clr => '0',
      s => addsub3_s_net_x0
    );

  addsub4: entity work.addsub_e140b59ec8
    port map (
      a => reinterpret5_output_port_net_x0,
      b => reinterpret5_output_port_net_x1,
      ce => ce_1_sg_x159,
      clk => clk_1_sg_x159,
      clr => '0',
      s => addsub4_s_net_x0
    );

  addsub5: entity work.addsub_e140b59ec8
    port map (
      a => reinterpret4_output_port_net_x0,
      b => reinterpret4_output_port_net_x1,
      ce => ce_1_sg_x159,
      clk => clk_1_sg_x159,
      clr => '0',
      s => addsub5_s_net_x0
    );

  addsub6: entity work.addsub_e140b59ec8
    port map (
      a => reinterpret3_output_port_net_x0,
      b => reinterpret3_output_port_net_x1,
      ce => ce_1_sg_x159,
      clk => clk_1_sg_x159,
      clr => '0',
      s => addsub6_s_net_x0
    );

  addsub7: entity work.addsub_e140b59ec8
    port map (
      a => reinterpret2_output_port_net_x0,
      b => reinterpret2_output_port_net_x1,
      ce => ce_1_sg_x159,
      clk => clk_1_sg_x159,
      clr => '0',
      s => addsub7_s_net_x0
    );

  addsub8: entity work.addsub_e140b59ec8
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret1_output_port_net_x1,
      ce => ce_1_sg_x159,
      clk => clk_1_sg_x159,
      clr => '0',
      s => addsub8_s_net_x0
    );

  b_debus_4ca215f827: entity work.a_debus_entity_b79a0810db
    port map (
      bus_in => dmux0_q_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out8 => reinterpret8_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1,
      out4 => reinterpret4_output_port_net_x1,
      out5 => reinterpret5_output_port_net_x1,
      out6 => reinterpret6_output_port_net_x1,
      out7 => reinterpret7_output_port_net_x1
    );

  op_bussify_5ed58d1c87: entity work.op_bussify_entity_5ed58d1c87
    port map (
      in1 => addsub1_s_net_x0,
      in2 => addsub2_s_net_x0,
      in3 => addsub3_s_net_x0,
      in4 => addsub4_s_net_x0,
      in5 => addsub5_s_net_x0,
      in6 => addsub6_s_net_x0,
      in7 => addsub7_s_net_x0,
      in8 => addsub8_s_net_x0,
      bus_out => concatenate_y_net_x3
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct/bus_convert/conv1/convert"

entity convert_entity_7f299669bf is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(19 downto 0); 
    out_x0: out std_logic_vector(17 downto 0)
  );
end convert_entity_7f299669bf;

architecture structural of convert_entity_7f299669bf is
  signal adder_s_net_x16: std_logic_vector(17 downto 0);
  signal almost_half_op_net: std_logic_vector(18 downto 0);
  signal bit_y_net: std_logic;
  signal ce_1_sg_x160: std_logic;
  signal clk_1_sg_x160: std_logic;
  signal concat_y_net: std_logic_vector(20 downto 0);
  signal constant_op_net: std_logic;
  signal force1_output_port_net: std_logic_vector(20 downto 0);
  signal force2_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret16_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(19 downto 0);
  signal tweak_op_y_net: std_logic;

begin
  ce_1_sg_x160 <= ce_1;
  clk_1_sg_x160 <= clk_1;
  reinterpret16_output_port_net_x0 <= in_x0;
  out_x0 <= adder_s_net_x16;

  adder: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 19,
      a_width => 21,
      b_arith => xlUnsigned,
      b_bin_pt => 19,
      b_width => 19,
      c_has_c_out => 0,
      c_latency => 2,
      c_output_width => 22,
      core_name0 => "addsb_11_0_d9b3a3982e052de0",
      extra_registers => 1,
      full_s_arith => 2,
      full_s_width => 22,
      latency => 3,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 17,
      s_width => 18
    )
    port map (
      a => force1_output_port_net,
      b => force2_output_port_net,
      ce => ce_1_sg_x160,
      clk => clk_1_sg_x160,
      clr => '0',
      en => "1",
      s => adder_s_net_x16
    );

  almost_half: entity work.constant_4709ea49b5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => almost_half_op_net
    );

  bit: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 20,
      y_width => 1
    )
    port map (
      x => reinterpret16_output_port_net_x0,
      y(0) => bit_y_net
    );

  concat: entity work.concat_c615d93998
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret_output_port_net,
      in1(0) => tweak_op_y_net,
      y => concat_y_net
    );

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  force1: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net,
      output_port => force1_output_port_net
    );

  force2: entity work.reinterpret_d2180c9169
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => almost_half_op_net,
      output_port => force2_output_port_net
    );

  reinterpret: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret16_output_port_net_x0,
      output_port => reinterpret_output_port_net
    );

  tweak_op: entity work.logical_938d99ac11
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => bit_y_net,
      d1(0) => constant_op_net,
      y(0) => tweak_op_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct/bus_convert/conv1"

entity conv1_entity_78c555e3f3 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(19 downto 0); 
    dout: out std_logic_vector(17 downto 0); 
    of_x0: out std_logic
  );
end conv1_entity_78c555e3f3;

architecture structural of conv1_entity_78c555e3f3 is
  signal adder_s_net_x17: std_logic_vector(17 downto 0);
  signal all_0s_y_net: std_logic;
  signal all_1s_y_net: std_logic;
  signal and_y_net_x0: std_logic;
  signal ce_1_sg_x161: std_logic;
  signal clk_1_sg_x161: std_logic;
  signal invert1_op_net: std_logic;
  signal invert2_op_net: std_logic;
  signal reinterpret16_output_port_net_x1: std_logic_vector(19 downto 0);
  signal slice1_y_net: std_logic;
  signal slice2_y_net: std_logic;

begin
  ce_1_sg_x161 <= ce_1;
  clk_1_sg_x161 <= clk_1;
  reinterpret16_output_port_net_x1 <= din;
  dout <= adder_s_net_x17;
  of_x0 <= and_y_net_x0;

  all_0s: entity work.logical_5bc1b3bb27
    port map (
      ce => ce_1_sg_x161,
      clk => clk_1_sg_x161,
      clr => '0',
      d0(0) => invert1_op_net,
      d1(0) => invert2_op_net,
      y(0) => all_0s_y_net
    );

  all_1s: entity work.logical_5bc1b3bb27
    port map (
      ce => ce_1_sg_x161,
      clk => clk_1_sg_x161,
      clr => '0',
      d0(0) => slice1_y_net,
      d1(0) => slice2_y_net,
      y(0) => all_1s_y_net
    );

  and_x0: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => all_0s_y_net,
      d1(0) => all_1s_y_net,
      y(0) => and_y_net_x0
    );

  convert_7f299669bf: entity work.convert_entity_7f299669bf
    port map (
      ce_1 => ce_1_sg_x161,
      clk_1 => clk_1_sg_x161,
      in_x0 => reinterpret16_output_port_net_x1,
      out_x0 => adder_s_net_x17
    );

  invert1: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x161,
      clk => clk_1_sg_x161,
      clr => '0',
      ip(0) => slice1_y_net,
      op(0) => invert1_op_net
    );

  invert2: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x161,
      clk => clk_1_sg_x161,
      clr => '0',
      ip(0) => slice2_y_net,
      op(0) => invert2_op_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 19,
      new_msb => 19,
      x_width => 20,
      y_width => 1
    )
    port map (
      x => reinterpret16_output_port_net_x1,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 18,
      x_width => 20,
      y_width => 1
    )
    port map (
      x => reinterpret16_output_port_net_x1,
      y(0) => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct/bus_convert/conv10"

entity conv10_entity_5befe5562c is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(19 downto 0); 
    dout: out std_logic_vector(17 downto 0); 
    of_x0: out std_logic
  );
end conv10_entity_5befe5562c;

architecture structural of conv10_entity_5befe5562c is
  signal adder_s_net_x18: std_logic_vector(17 downto 0);
  signal all_0s_y_net: std_logic;
  signal all_1s_y_net: std_logic;
  signal and_y_net_x0: std_logic;
  signal ce_1_sg_x163: std_logic;
  signal clk_1_sg_x163: std_logic;
  signal invert1_op_net: std_logic;
  signal invert2_op_net: std_logic;
  signal reinterpret7_output_port_net_x1: std_logic_vector(19 downto 0);
  signal slice1_y_net: std_logic;
  signal slice2_y_net: std_logic;

begin
  ce_1_sg_x163 <= ce_1;
  clk_1_sg_x163 <= clk_1;
  reinterpret7_output_port_net_x1 <= din;
  dout <= adder_s_net_x18;
  of_x0 <= and_y_net_x0;

  all_0s: entity work.logical_89dc141487
    port map (
      ce => ce_1_sg_x163,
      clk => clk_1_sg_x163,
      clr => '0',
      d0(0) => invert1_op_net,
      d1(0) => invert2_op_net,
      y(0) => all_0s_y_net
    );

  all_1s: entity work.logical_89dc141487
    port map (
      ce => ce_1_sg_x163,
      clk => clk_1_sg_x163,
      clr => '0',
      d0(0) => slice1_y_net,
      d1(0) => slice2_y_net,
      y(0) => all_1s_y_net
    );

  and_x0: entity work.logical_799f62af22
    port map (
      ce => ce_1_sg_x163,
      clk => clk_1_sg_x163,
      clr => '0',
      d0(0) => all_0s_y_net,
      d1(0) => all_1s_y_net,
      y(0) => and_y_net_x0
    );

  convert_c9cc3247e2: entity work.convert_entity_7f299669bf
    port map (
      ce_1 => ce_1_sg_x163,
      clk_1 => clk_1_sg_x163,
      in_x0 => reinterpret7_output_port_net_x1,
      out_x0 => adder_s_net_x18
    );

  invert1: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x163,
      clk => clk_1_sg_x163,
      clr => '0',
      ip(0) => slice1_y_net,
      op(0) => invert1_op_net
    );

  invert2: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x163,
      clk => clk_1_sg_x163,
      clr => '0',
      ip(0) => slice2_y_net,
      op(0) => invert2_op_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 19,
      new_msb => 19,
      x_width => 20,
      y_width => 1
    )
    port map (
      x => reinterpret7_output_port_net_x1,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 18,
      x_width => 20,
      y_width => 1
    )
    port map (
      x => reinterpret7_output_port_net_x1,
      y(0) => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct/bus_convert/debus"

entity debus_entity_9e69c8cb4b is
  port (
    bus_in: in std_logic_vector(319 downto 0); 
    lsb_out1: out std_logic_vector(19 downto 0); 
    msb_out16: out std_logic_vector(19 downto 0); 
    out10: out std_logic_vector(19 downto 0); 
    out11: out std_logic_vector(19 downto 0); 
    out12: out std_logic_vector(19 downto 0); 
    out13: out std_logic_vector(19 downto 0); 
    out14: out std_logic_vector(19 downto 0); 
    out15: out std_logic_vector(19 downto 0); 
    out2: out std_logic_vector(19 downto 0); 
    out3: out std_logic_vector(19 downto 0); 
    out4: out std_logic_vector(19 downto 0); 
    out5: out std_logic_vector(19 downto 0); 
    out6: out std_logic_vector(19 downto 0); 
    out7: out std_logic_vector(19 downto 0); 
    out8: out std_logic_vector(19 downto 0); 
    out9: out std_logic_vector(19 downto 0)
  );
end debus_entity_9e69c8cb4b;

architecture structural of debus_entity_9e69c8cb4b is
  signal concatenate_y_net_x0: std_logic_vector(319 downto 0);
  signal reinterpret10_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret11_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret12_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret13_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret14_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret15_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret16_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret5_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret6_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret7_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret8_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret9_output_port_net_x2: std_logic_vector(19 downto 0);
  signal slice10_y_net: std_logic_vector(19 downto 0);
  signal slice11_y_net: std_logic_vector(19 downto 0);
  signal slice12_y_net: std_logic_vector(19 downto 0);
  signal slice13_y_net: std_logic_vector(19 downto 0);
  signal slice14_y_net: std_logic_vector(19 downto 0);
  signal slice15_y_net: std_logic_vector(19 downto 0);
  signal slice16_y_net: std_logic_vector(19 downto 0);
  signal slice1_y_net: std_logic_vector(19 downto 0);
  signal slice2_y_net: std_logic_vector(19 downto 0);
  signal slice3_y_net: std_logic_vector(19 downto 0);
  signal slice4_y_net: std_logic_vector(19 downto 0);
  signal slice5_y_net: std_logic_vector(19 downto 0);
  signal slice6_y_net: std_logic_vector(19 downto 0);
  signal slice7_y_net: std_logic_vector(19 downto 0);
  signal slice8_y_net: std_logic_vector(19 downto 0);
  signal slice9_y_net: std_logic_vector(19 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x2;
  msb_out16 <= reinterpret16_output_port_net_x2;
  out10 <= reinterpret10_output_port_net_x2;
  out11 <= reinterpret11_output_port_net_x2;
  out12 <= reinterpret12_output_port_net_x2;
  out13 <= reinterpret13_output_port_net_x2;
  out14 <= reinterpret14_output_port_net_x2;
  out15 <= reinterpret15_output_port_net_x2;
  out2 <= reinterpret2_output_port_net_x2;
  out3 <= reinterpret3_output_port_net_x2;
  out4 <= reinterpret4_output_port_net_x2;
  out5 <= reinterpret5_output_port_net_x2;
  out6 <= reinterpret6_output_port_net_x2;
  out7 <= reinterpret7_output_port_net_x2;
  out8 <= reinterpret8_output_port_net_x2;
  out9 <= reinterpret9_output_port_net_x2;

  reinterpret1: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  reinterpret10: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice10_y_net,
      output_port => reinterpret10_output_port_net_x2
    );

  reinterpret11: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice11_y_net,
      output_port => reinterpret11_output_port_net_x2
    );

  reinterpret12: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice12_y_net,
      output_port => reinterpret12_output_port_net_x2
    );

  reinterpret13: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice13_y_net,
      output_port => reinterpret13_output_port_net_x2
    );

  reinterpret14: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice14_y_net,
      output_port => reinterpret14_output_port_net_x2
    );

  reinterpret15: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice15_y_net,
      output_port => reinterpret15_output_port_net_x2
    );

  reinterpret16: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice16_y_net,
      output_port => reinterpret16_output_port_net_x2
    );

  reinterpret2: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x2
    );

  reinterpret3: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x2
    );

  reinterpret4: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x2
    );

  reinterpret5: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_y_net,
      output_port => reinterpret5_output_port_net_x2
    );

  reinterpret6: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret6_output_port_net_x2
    );

  reinterpret7: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret7_output_port_net_x2
    );

  reinterpret8: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret8_output_port_net_x2
    );

  reinterpret9: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice9_y_net,
      output_port => reinterpret9_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 19,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice10: entity work.xlslice
    generic map (
      new_lsb => 180,
      new_msb => 199,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice10_y_net
    );

  slice11: entity work.xlslice
    generic map (
      new_lsb => 200,
      new_msb => 219,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice11_y_net
    );

  slice12: entity work.xlslice
    generic map (
      new_lsb => 220,
      new_msb => 239,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice12_y_net
    );

  slice13: entity work.xlslice
    generic map (
      new_lsb => 240,
      new_msb => 259,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice13_y_net
    );

  slice14: entity work.xlslice
    generic map (
      new_lsb => 260,
      new_msb => 279,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice14_y_net
    );

  slice15: entity work.xlslice
    generic map (
      new_lsb => 280,
      new_msb => 299,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice15_y_net
    );

  slice16: entity work.xlslice
    generic map (
      new_lsb => 300,
      new_msb => 319,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice16_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 20,
      new_msb => 39,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 40,
      new_msb => 59,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 60,
      new_msb => 79,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 80,
      new_msb => 99,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 100,
      new_msb => 119,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 120,
      new_msb => 139,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 140,
      new_msb => 159,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice8_y_net
    );

  slice9: entity work.xlslice
    generic map (
      new_lsb => 160,
      new_msb => 179,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice9_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct/bus_convert/of_bussify"

entity of_bussify_entity_0574882070 is
  port (
    in1: in std_logic; 
    in10: in std_logic; 
    in11: in std_logic; 
    in12: in std_logic; 
    in13: in std_logic; 
    in14: in std_logic; 
    in15: in std_logic; 
    in16: in std_logic; 
    in2: in std_logic; 
    in3: in std_logic; 
    in4: in std_logic; 
    in5: in std_logic; 
    in6: in std_logic; 
    in7: in std_logic; 
    in8: in std_logic; 
    in9: in std_logic; 
    bus_out: out std_logic_vector(15 downto 0)
  );
end of_bussify_entity_0574882070;

architecture structural of of_bussify_entity_0574882070 is
  signal and_y_net_x16: std_logic;
  signal and_y_net_x17: std_logic;
  signal and_y_net_x18: std_logic;
  signal and_y_net_x19: std_logic;
  signal and_y_net_x20: std_logic;
  signal and_y_net_x21: std_logic;
  signal and_y_net_x22: std_logic;
  signal and_y_net_x23: std_logic;
  signal and_y_net_x24: std_logic;
  signal and_y_net_x25: std_logic;
  signal and_y_net_x26: std_logic;
  signal and_y_net_x27: std_logic;
  signal and_y_net_x28: std_logic;
  signal and_y_net_x29: std_logic;
  signal and_y_net_x30: std_logic;
  signal and_y_net_x31: std_logic;
  signal concatenate_y_net_x0: std_logic_vector(15 downto 0);
  signal reinterpret10_output_port_net: std_logic;
  signal reinterpret11_output_port_net: std_logic;
  signal reinterpret12_output_port_net: std_logic;
  signal reinterpret13_output_port_net: std_logic;
  signal reinterpret14_output_port_net: std_logic;
  signal reinterpret15_output_port_net: std_logic;
  signal reinterpret16_output_port_net: std_logic;
  signal reinterpret1_output_port_net: std_logic;
  signal reinterpret2_output_port_net: std_logic;
  signal reinterpret3_output_port_net: std_logic;
  signal reinterpret4_output_port_net: std_logic;
  signal reinterpret5_output_port_net: std_logic;
  signal reinterpret6_output_port_net: std_logic;
  signal reinterpret7_output_port_net: std_logic;
  signal reinterpret8_output_port_net: std_logic;
  signal reinterpret9_output_port_net: std_logic;

begin
  and_y_net_x16 <= in1;
  and_y_net_x17 <= in10;
  and_y_net_x18 <= in11;
  and_y_net_x19 <= in12;
  and_y_net_x20 <= in13;
  and_y_net_x21 <= in14;
  and_y_net_x22 <= in15;
  and_y_net_x23 <= in16;
  and_y_net_x24 <= in2;
  and_y_net_x25 <= in3;
  and_y_net_x26 <= in4;
  and_y_net_x27 <= in5;
  and_y_net_x28 <= in6;
  and_y_net_x29 <= in7;
  and_y_net_x30 <= in8;
  and_y_net_x31 <= in9;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_2f53a7da07
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => reinterpret1_output_port_net,
      in1(0) => reinterpret2_output_port_net,
      in10(0) => reinterpret11_output_port_net,
      in11(0) => reinterpret12_output_port_net,
      in12(0) => reinterpret13_output_port_net,
      in13(0) => reinterpret14_output_port_net,
      in14(0) => reinterpret15_output_port_net,
      in15(0) => reinterpret16_output_port_net,
      in2(0) => reinterpret3_output_port_net,
      in3(0) => reinterpret4_output_port_net,
      in4(0) => reinterpret5_output_port_net,
      in5(0) => reinterpret6_output_port_net,
      in6(0) => reinterpret7_output_port_net,
      in7(0) => reinterpret8_output_port_net,
      in8(0) => reinterpret9_output_port_net,
      in9(0) => reinterpret10_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x16,
      output_port(0) => reinterpret1_output_port_net
    );

  reinterpret10: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x17,
      output_port(0) => reinterpret10_output_port_net
    );

  reinterpret11: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x18,
      output_port(0) => reinterpret11_output_port_net
    );

  reinterpret12: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x19,
      output_port(0) => reinterpret12_output_port_net
    );

  reinterpret13: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x20,
      output_port(0) => reinterpret13_output_port_net
    );

  reinterpret14: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x21,
      output_port(0) => reinterpret14_output_port_net
    );

  reinterpret15: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x22,
      output_port(0) => reinterpret15_output_port_net
    );

  reinterpret16: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x23,
      output_port(0) => reinterpret16_output_port_net
    );

  reinterpret2: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x24,
      output_port(0) => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x25,
      output_port(0) => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x26,
      output_port(0) => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x27,
      output_port(0) => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x28,
      output_port(0) => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x29,
      output_port(0) => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x30,
      output_port(0) => reinterpret8_output_port_net
    );

  reinterpret9: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x31,
      output_port(0) => reinterpret9_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct/bus_convert"

entity bus_convert_entity_ea713e1089 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(319 downto 0); 
    dout: out std_logic_vector(287 downto 0); 
    overflow: out std_logic_vector(15 downto 0)
  );
end bus_convert_entity_ea713e1089;

architecture structural of bus_convert_entity_ea713e1089 is
  signal adder_s_net_x17: std_logic_vector(17 downto 0);
  signal adder_s_net_x18: std_logic_vector(17 downto 0);
  signal adder_s_net_x19: std_logic_vector(17 downto 0);
  signal adder_s_net_x20: std_logic_vector(17 downto 0);
  signal adder_s_net_x21: std_logic_vector(17 downto 0);
  signal adder_s_net_x22: std_logic_vector(17 downto 0);
  signal adder_s_net_x23: std_logic_vector(17 downto 0);
  signal adder_s_net_x24: std_logic_vector(17 downto 0);
  signal adder_s_net_x25: std_logic_vector(17 downto 0);
  signal adder_s_net_x26: std_logic_vector(17 downto 0);
  signal adder_s_net_x27: std_logic_vector(17 downto 0);
  signal adder_s_net_x28: std_logic_vector(17 downto 0);
  signal adder_s_net_x29: std_logic_vector(17 downto 0);
  signal adder_s_net_x30: std_logic_vector(17 downto 0);
  signal adder_s_net_x31: std_logic_vector(17 downto 0);
  signal adder_s_net_x32: std_logic_vector(17 downto 0);
  signal and_y_net_x16: std_logic;
  signal and_y_net_x17: std_logic;
  signal and_y_net_x18: std_logic;
  signal and_y_net_x19: std_logic;
  signal and_y_net_x20: std_logic;
  signal and_y_net_x21: std_logic;
  signal and_y_net_x22: std_logic;
  signal and_y_net_x23: std_logic;
  signal and_y_net_x24: std_logic;
  signal and_y_net_x25: std_logic;
  signal and_y_net_x26: std_logic;
  signal and_y_net_x27: std_logic;
  signal and_y_net_x28: std_logic;
  signal and_y_net_x29: std_logic;
  signal and_y_net_x30: std_logic;
  signal and_y_net_x31: std_logic;
  signal ce_1_sg_x192: std_logic;
  signal clk_1_sg_x192: std_logic;
  signal concatenate_y_net_x3: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(287 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(15 downto 0);
  signal reinterpret10_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret11_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret12_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret13_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret14_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret15_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret16_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret5_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret6_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret7_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret8_output_port_net_x2: std_logic_vector(19 downto 0);
  signal reinterpret9_output_port_net_x2: std_logic_vector(19 downto 0);

begin
  ce_1_sg_x192 <= ce_1;
  clk_1_sg_x192 <= clk_1;
  concatenate_y_net_x3 <= din;
  dout <= concatenate_y_net_x4;
  overflow <= concatenate_y_net_x5;

  bussify_ccb1206fdf: entity work.bussify_entity_9772614d31
    port map (
      in1 => adder_s_net_x17,
      in10 => adder_s_net_x18,
      in11 => adder_s_net_x19,
      in12 => adder_s_net_x20,
      in13 => adder_s_net_x21,
      in14 => adder_s_net_x22,
      in15 => adder_s_net_x23,
      in16 => adder_s_net_x24,
      in2 => adder_s_net_x25,
      in3 => adder_s_net_x26,
      in4 => adder_s_net_x27,
      in5 => adder_s_net_x28,
      in6 => adder_s_net_x29,
      in7 => adder_s_net_x30,
      in8 => adder_s_net_x31,
      in9 => adder_s_net_x32,
      bus_out => concatenate_y_net_x4
    );

  conv10_5befe5562c: entity work.conv10_entity_5befe5562c
    port map (
      ce_1 => ce_1_sg_x192,
      clk_1 => clk_1_sg_x192,
      din => reinterpret7_output_port_net_x2,
      dout => adder_s_net_x18,
      of_x0 => and_y_net_x17
    );

  conv11_6b226d1f9f: entity work.conv10_entity_5befe5562c
    port map (
      ce_1 => ce_1_sg_x192,
      clk_1 => clk_1_sg_x192,
      din => reinterpret6_output_port_net_x2,
      dout => adder_s_net_x19,
      of_x0 => and_y_net_x18
    );

  conv12_a29b617d88: entity work.conv10_entity_5befe5562c
    port map (
      ce_1 => ce_1_sg_x192,
      clk_1 => clk_1_sg_x192,
      din => reinterpret5_output_port_net_x2,
      dout => adder_s_net_x20,
      of_x0 => and_y_net_x19
    );

  conv13_3672372057: entity work.conv10_entity_5befe5562c
    port map (
      ce_1 => ce_1_sg_x192,
      clk_1 => clk_1_sg_x192,
      din => reinterpret4_output_port_net_x2,
      dout => adder_s_net_x21,
      of_x0 => and_y_net_x20
    );

  conv14_6f664f1b6e: entity work.conv10_entity_5befe5562c
    port map (
      ce_1 => ce_1_sg_x192,
      clk_1 => clk_1_sg_x192,
      din => reinterpret3_output_port_net_x2,
      dout => adder_s_net_x22,
      of_x0 => and_y_net_x21
    );

  conv15_de0a6fd7bc: entity work.conv10_entity_5befe5562c
    port map (
      ce_1 => ce_1_sg_x192,
      clk_1 => clk_1_sg_x192,
      din => reinterpret2_output_port_net_x2,
      dout => adder_s_net_x23,
      of_x0 => and_y_net_x22
    );

  conv16_9c8dd6020c: entity work.conv10_entity_5befe5562c
    port map (
      ce_1 => ce_1_sg_x192,
      clk_1 => clk_1_sg_x192,
      din => reinterpret1_output_port_net_x2,
      dout => adder_s_net_x24,
      of_x0 => and_y_net_x23
    );

  conv1_78c555e3f3: entity work.conv1_entity_78c555e3f3
    port map (
      ce_1 => ce_1_sg_x192,
      clk_1 => clk_1_sg_x192,
      din => reinterpret16_output_port_net_x2,
      dout => adder_s_net_x17,
      of_x0 => and_y_net_x16
    );

  conv2_20a6926e47: entity work.conv1_entity_78c555e3f3
    port map (
      ce_1 => ce_1_sg_x192,
      clk_1 => clk_1_sg_x192,
      din => reinterpret15_output_port_net_x2,
      dout => adder_s_net_x25,
      of_x0 => and_y_net_x24
    );

  conv3_c86ddc99d3: entity work.conv1_entity_78c555e3f3
    port map (
      ce_1 => ce_1_sg_x192,
      clk_1 => clk_1_sg_x192,
      din => reinterpret14_output_port_net_x2,
      dout => adder_s_net_x26,
      of_x0 => and_y_net_x25
    );

  conv4_f8f983c4fa: entity work.conv1_entity_78c555e3f3
    port map (
      ce_1 => ce_1_sg_x192,
      clk_1 => clk_1_sg_x192,
      din => reinterpret13_output_port_net_x2,
      dout => adder_s_net_x27,
      of_x0 => and_y_net_x26
    );

  conv5_bc93d5faa6: entity work.conv10_entity_5befe5562c
    port map (
      ce_1 => ce_1_sg_x192,
      clk_1 => clk_1_sg_x192,
      din => reinterpret12_output_port_net_x2,
      dout => adder_s_net_x28,
      of_x0 => and_y_net_x27
    );

  conv6_7524b51f62: entity work.conv10_entity_5befe5562c
    port map (
      ce_1 => ce_1_sg_x192,
      clk_1 => clk_1_sg_x192,
      din => reinterpret11_output_port_net_x2,
      dout => adder_s_net_x29,
      of_x0 => and_y_net_x28
    );

  conv7_05c7876d05: entity work.conv10_entity_5befe5562c
    port map (
      ce_1 => ce_1_sg_x192,
      clk_1 => clk_1_sg_x192,
      din => reinterpret10_output_port_net_x2,
      dout => adder_s_net_x30,
      of_x0 => and_y_net_x29
    );

  conv8_ac1137942b: entity work.conv10_entity_5befe5562c
    port map (
      ce_1 => ce_1_sg_x192,
      clk_1 => clk_1_sg_x192,
      din => reinterpret9_output_port_net_x2,
      dout => adder_s_net_x31,
      of_x0 => and_y_net_x30
    );

  conv9_b3ae786392: entity work.conv10_entity_5befe5562c
    port map (
      ce_1 => ce_1_sg_x192,
      clk_1 => clk_1_sg_x192,
      din => reinterpret8_output_port_net_x2,
      dout => adder_s_net_x32,
      of_x0 => and_y_net_x31
    );

  debus_9e69c8cb4b: entity work.debus_entity_9e69c8cb4b
    port map (
      bus_in => concatenate_y_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out16 => reinterpret16_output_port_net_x2,
      out10 => reinterpret10_output_port_net_x2,
      out11 => reinterpret11_output_port_net_x2,
      out12 => reinterpret12_output_port_net_x2,
      out13 => reinterpret13_output_port_net_x2,
      out14 => reinterpret14_output_port_net_x2,
      out15 => reinterpret15_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x2,
      out4 => reinterpret4_output_port_net_x2,
      out5 => reinterpret5_output_port_net_x2,
      out6 => reinterpret6_output_port_net_x2,
      out7 => reinterpret7_output_port_net_x2,
      out8 => reinterpret8_output_port_net_x2,
      out9 => reinterpret9_output_port_net_x2
    );

  of_bussify_0574882070: entity work.of_bussify_entity_0574882070
    port map (
      in1 => and_y_net_x16,
      in10 => and_y_net_x17,
      in11 => and_y_net_x18,
      in12 => and_y_net_x19,
      in13 => and_y_net_x20,
      in14 => and_y_net_x21,
      in15 => and_y_net_x22,
      in16 => and_y_net_x23,
      in2 => and_y_net_x24,
      in3 => and_y_net_x25,
      in4 => and_y_net_x26,
      in5 => and_y_net_x27,
      in6 => and_y_net_x28,
      in7 => and_y_net_x29,
      in8 => and_y_net_x30,
      in9 => and_y_net_x31,
      bus_out => concatenate_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct/bus_expand"

entity bus_expand_entity_2a52aaf3de is
  port (
    bus_in: in std_logic_vector(287 downto 0); 
    lsb_out1: out std_logic_vector(143 downto 0); 
    msb_out2: out std_logic_vector(143 downto 0)
  );
end bus_expand_entity_2a52aaf3de;

architecture structural of bus_expand_entity_2a52aaf3de is
  signal concatenate_y_net_x5: std_logic_vector(287 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(143 downto 0);
  signal slice1_y_net: std_logic_vector(143 downto 0);
  signal slice2_y_net: std_logic_vector(143 downto 0);

begin
  concatenate_y_net_x5 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out2 <= reinterpret2_output_port_net_x0;

  reinterpret1: entity work.reinterpret_d35711d5ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_d35711d5ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 143,
      x_width => 288,
      y_width => 144
    )
    port map (
      x => concatenate_y_net_x5,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 144,
      new_msb => 287,
      x_width => 288,
      y_width => 144
    )
    port map (
      x => concatenate_y_net_x5,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct/bus_norm0/bussify"

entity bussify_entity_cd2459b7b8 is
  port (
    in1: in std_logic_vector(19 downto 0); 
    in10: in std_logic_vector(19 downto 0); 
    in11: in std_logic_vector(19 downto 0); 
    in12: in std_logic_vector(19 downto 0); 
    in13: in std_logic_vector(19 downto 0); 
    in14: in std_logic_vector(19 downto 0); 
    in15: in std_logic_vector(19 downto 0); 
    in16: in std_logic_vector(19 downto 0); 
    in2: in std_logic_vector(19 downto 0); 
    in3: in std_logic_vector(19 downto 0); 
    in4: in std_logic_vector(19 downto 0); 
    in5: in std_logic_vector(19 downto 0); 
    in6: in std_logic_vector(19 downto 0); 
    in7: in std_logic_vector(19 downto 0); 
    in8: in std_logic_vector(19 downto 0); 
    in9: in std_logic_vector(19 downto 0); 
    bus_out: out std_logic_vector(319 downto 0)
  );
end bussify_entity_cd2459b7b8;

architecture structural of bussify_entity_cd2459b7b8 is
  signal concatenate_y_net_x0: std_logic_vector(319 downto 0);
  signal conv10_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv11_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv12_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv13_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv14_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv15_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv16_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv1_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv2_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv3_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv4_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv5_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv6_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv7_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv8_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv9_dout_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret10_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret11_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret12_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret13_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret14_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret15_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret16_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret9_output_port_net: std_logic_vector(19 downto 0);

begin
  conv1_dout_net_x0 <= in1;
  conv10_dout_net_x0 <= in10;
  conv11_dout_net_x0 <= in11;
  conv12_dout_net_x0 <= in12;
  conv13_dout_net_x0 <= in13;
  conv14_dout_net_x0 <= in14;
  conv15_dout_net_x0 <= in15;
  conv16_dout_net_x0 <= in16;
  conv2_dout_net_x0 <= in2;
  conv3_dout_net_x0 <= in3;
  conv4_dout_net_x0 <= in4;
  conv5_dout_net_x0 <= in5;
  conv6_dout_net_x0 <= in6;
  conv7_dout_net_x0 <= in7;
  conv8_dout_net_x0 <= in8;
  conv9_dout_net_x0 <= in9;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_ac56edb97a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in10 => reinterpret11_output_port_net,
      in11 => reinterpret12_output_port_net,
      in12 => reinterpret13_output_port_net,
      in13 => reinterpret14_output_port_net,
      in14 => reinterpret15_output_port_net,
      in15 => reinterpret16_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      in8 => reinterpret9_output_port_net,
      in9 => reinterpret10_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv1_dout_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret10: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv10_dout_net_x0,
      output_port => reinterpret10_output_port_net
    );

  reinterpret11: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv11_dout_net_x0,
      output_port => reinterpret11_output_port_net
    );

  reinterpret12: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv12_dout_net_x0,
      output_port => reinterpret12_output_port_net
    );

  reinterpret13: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv13_dout_net_x0,
      output_port => reinterpret13_output_port_net
    );

  reinterpret14: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv14_dout_net_x0,
      output_port => reinterpret14_output_port_net
    );

  reinterpret15: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv15_dout_net_x0,
      output_port => reinterpret15_output_port_net
    );

  reinterpret16: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv16_dout_net_x0,
      output_port => reinterpret16_output_port_net
    );

  reinterpret2: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv2_dout_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv3_dout_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv4_dout_net_x0,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv5_dout_net_x0,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv6_dout_net_x0,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv7_dout_net_x0,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv8_dout_net_x0,
      output_port => reinterpret8_output_port_net
    );

  reinterpret9: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv9_dout_net_x0,
      output_port => reinterpret9_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct/bus_norm0"

entity bus_norm0_entity_4d96ef7e4a is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(303 downto 0); 
    dout: out std_logic_vector(319 downto 0)
  );
end bus_norm0_entity_4d96ef7e4a;

architecture structural of bus_norm0_entity_4d96ef7e4a is
  signal ce_1_sg_x193: std_logic;
  signal clk_1_sg_x193: std_logic;
  signal concat_y_net_x1: std_logic_vector(303 downto 0);
  signal concatenate_y_net_x1: std_logic_vector(319 downto 0);
  signal conv10_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv11_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv12_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv13_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv14_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv15_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv16_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv1_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv2_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv3_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv4_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv5_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv6_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv7_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv8_dout_net_x0: std_logic_vector(19 downto 0);
  signal conv9_dout_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret10_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret11_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret12_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret13_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret14_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret15_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret16_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret9_output_port_net_x0: std_logic_vector(18 downto 0);

begin
  ce_1_sg_x193 <= ce_1;
  clk_1_sg_x193 <= clk_1;
  concat_y_net_x1 <= din;
  dout <= concatenate_y_net_x1;

  bussify_cd2459b7b8: entity work.bussify_entity_cd2459b7b8
    port map (
      in1 => conv1_dout_net_x0,
      in10 => conv10_dout_net_x0,
      in11 => conv11_dout_net_x0,
      in12 => conv12_dout_net_x0,
      in13 => conv13_dout_net_x0,
      in14 => conv14_dout_net_x0,
      in15 => conv15_dout_net_x0,
      in16 => conv16_dout_net_x0,
      in2 => conv2_dout_net_x0,
      in3 => conv3_dout_net_x0,
      in4 => conv4_dout_net_x0,
      in5 => conv5_dout_net_x0,
      in6 => conv6_dout_net_x0,
      in7 => conv7_dout_net_x0,
      in8 => conv8_dout_net_x0,
      in9 => conv9_dout_net_x0,
      bus_out => concatenate_y_net_x1
    );

  conv1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 20,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x193,
      clk => clk_1_sg_x193,
      clr => '0',
      din => reinterpret16_output_port_net_x0,
      en => "1",
      dout => conv1_dout_net_x0
    );

  conv10: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 20,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x193,
      clk => clk_1_sg_x193,
      clr => '0',
      din => reinterpret7_output_port_net_x0,
      en => "1",
      dout => conv10_dout_net_x0
    );

  conv11: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 20,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x193,
      clk => clk_1_sg_x193,
      clr => '0',
      din => reinterpret6_output_port_net_x0,
      en => "1",
      dout => conv11_dout_net_x0
    );

  conv12: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 20,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x193,
      clk => clk_1_sg_x193,
      clr => '0',
      din => reinterpret5_output_port_net_x0,
      en => "1",
      dout => conv12_dout_net_x0
    );

  conv13: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 20,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x193,
      clk => clk_1_sg_x193,
      clr => '0',
      din => reinterpret4_output_port_net_x0,
      en => "1",
      dout => conv13_dout_net_x0
    );

  conv14: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 20,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x193,
      clk => clk_1_sg_x193,
      clr => '0',
      din => reinterpret3_output_port_net_x0,
      en => "1",
      dout => conv14_dout_net_x0
    );

  conv15: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 20,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x193,
      clk => clk_1_sg_x193,
      clr => '0',
      din => reinterpret2_output_port_net_x0,
      en => "1",
      dout => conv15_dout_net_x0
    );

  conv16: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 20,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x193,
      clk => clk_1_sg_x193,
      clr => '0',
      din => reinterpret1_output_port_net_x0,
      en => "1",
      dout => conv16_dout_net_x0
    );

  conv2: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 20,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x193,
      clk => clk_1_sg_x193,
      clr => '0',
      din => reinterpret15_output_port_net_x0,
      en => "1",
      dout => conv2_dout_net_x0
    );

  conv3: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 20,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x193,
      clk => clk_1_sg_x193,
      clr => '0',
      din => reinterpret14_output_port_net_x0,
      en => "1",
      dout => conv3_dout_net_x0
    );

  conv4: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 20,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x193,
      clk => clk_1_sg_x193,
      clr => '0',
      din => reinterpret13_output_port_net_x0,
      en => "1",
      dout => conv4_dout_net_x0
    );

  conv5: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 20,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x193,
      clk => clk_1_sg_x193,
      clr => '0',
      din => reinterpret12_output_port_net_x0,
      en => "1",
      dout => conv5_dout_net_x0
    );

  conv6: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 20,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x193,
      clk => clk_1_sg_x193,
      clr => '0',
      din => reinterpret11_output_port_net_x0,
      en => "1",
      dout => conv6_dout_net_x0
    );

  conv7: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 20,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x193,
      clk => clk_1_sg_x193,
      clr => '0',
      din => reinterpret10_output_port_net_x0,
      en => "1",
      dout => conv7_dout_net_x0
    );

  conv8: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 20,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x193,
      clk => clk_1_sg_x193,
      clr => '0',
      din => reinterpret9_output_port_net_x0,
      en => "1",
      dout => conv8_dout_net_x0
    );

  conv9: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 19,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 20,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x193,
      clk => clk_1_sg_x193,
      clr => '0',
      din => reinterpret8_output_port_net_x0,
      en => "1",
      dout => conv9_dout_net_x0
    );

  debus_0ebd12c460: entity work.debus_entity_746e40ae9b
    port map (
      bus_in => concat_y_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out16 => reinterpret16_output_port_net_x0,
      out10 => reinterpret10_output_port_net_x0,
      out11 => reinterpret11_output_port_net_x0,
      out12 => reinterpret12_output_port_net_x0,
      out13 => reinterpret13_output_port_net_x0,
      out14 => reinterpret14_output_port_net_x0,
      out15 => reinterpret15_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0,
      out4 => reinterpret4_output_port_net_x0,
      out5 => reinterpret5_output_port_net_x0,
      out6 => reinterpret6_output_port_net_x0,
      out7 => reinterpret7_output_port_net_x0,
      out8 => reinterpret8_output_port_net_x0,
      out9 => reinterpret9_output_port_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct/bus_norm1/conv1"

entity conv1_entity_6940234f37 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(18 downto 0); 
    out_x0: out std_logic_vector(19 downto 0)
  );
end conv1_entity_6940234f37;

architecture structural of conv1_entity_6940234f37 is
  signal adder_s_net_x16: std_logic_vector(19 downto 0);
  signal almost_half_op_net: std_logic_vector(18 downto 0);
  signal bit_y_net: std_logic;
  signal ce_1_sg_x194: std_logic;
  signal clk_1_sg_x194: std_logic;
  signal concat_y_net: std_logic_vector(19 downto 0);
  signal constant_op_net: std_logic;
  signal force1_output_port_net: std_logic_vector(19 downto 0);
  signal force2_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret16_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(18 downto 0);
  signal tweak_op_y_net: std_logic;

begin
  ce_1_sg_x194 <= ce_1;
  clk_1_sg_x194 <= clk_1;
  reinterpret16_output_port_net_x0 <= in_x0;
  out_x0 <= adder_s_net_x16;

  adder: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 19,
      a_width => 20,
      b_arith => xlUnsigned,
      b_bin_pt => 19,
      b_width => 19,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 21,
      core_name0 => "addsb_11_0_5b4a22e47f2359ce",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 21,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 18,
      s_width => 20
    )
    port map (
      a => force1_output_port_net,
      b => force2_output_port_net,
      ce => ce_1_sg_x194,
      clk => clk_1_sg_x194,
      clr => '0',
      en => "1",
      s => adder_s_net_x16
    );

  almost_half: entity work.constant_b366689086
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => almost_half_op_net
    );

  bit: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 19,
      y_width => 1
    )
    port map (
      x => reinterpret16_output_port_net_x0,
      y(0) => bit_y_net
    );

  concat: entity work.concat_504cae28bd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret_output_port_net,
      in1(0) => tweak_op_y_net,
      y => concat_y_net
    );

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  force1: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net,
      output_port => force1_output_port_net
    );

  force2: entity work.reinterpret_d2180c9169
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => almost_half_op_net,
      output_port => force2_output_port_net
    );

  reinterpret: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret16_output_port_net_x0,
      output_port => reinterpret_output_port_net
    );

  tweak_op: entity work.logical_b1e9d7c303
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => bit_y_net,
      d1(0) => constant_op_net,
      y(0) => tweak_op_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct/bus_norm1"

entity bus_norm1_entity_58eff48426 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(303 downto 0); 
    dout: out std_logic_vector(319 downto 0)
  );
end bus_norm1_entity_58eff48426;

architecture structural of bus_norm1_entity_58eff48426 is
  signal adder_s_net_x16: std_logic_vector(19 downto 0);
  signal adder_s_net_x17: std_logic_vector(19 downto 0);
  signal adder_s_net_x18: std_logic_vector(19 downto 0);
  signal adder_s_net_x19: std_logic_vector(19 downto 0);
  signal adder_s_net_x20: std_logic_vector(19 downto 0);
  signal adder_s_net_x21: std_logic_vector(19 downto 0);
  signal adder_s_net_x22: std_logic_vector(19 downto 0);
  signal adder_s_net_x23: std_logic_vector(19 downto 0);
  signal adder_s_net_x24: std_logic_vector(19 downto 0);
  signal adder_s_net_x25: std_logic_vector(19 downto 0);
  signal adder_s_net_x26: std_logic_vector(19 downto 0);
  signal adder_s_net_x27: std_logic_vector(19 downto 0);
  signal adder_s_net_x28: std_logic_vector(19 downto 0);
  signal adder_s_net_x29: std_logic_vector(19 downto 0);
  signal adder_s_net_x30: std_logic_vector(19 downto 0);
  signal adder_s_net_x31: std_logic_vector(19 downto 0);
  signal ce_1_sg_x210: std_logic;
  signal clk_1_sg_x210: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(303 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(319 downto 0);
  signal reinterpret10_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret11_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret12_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret13_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret14_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret15_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret16_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret5_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret6_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret7_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret8_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret9_output_port_net_x1: std_logic_vector(18 downto 0);

begin
  ce_1_sg_x210 <= ce_1;
  clk_1_sg_x210 <= clk_1;
  concatenate_y_net_x2 <= din;
  dout <= concatenate_y_net_x3;

  bussify_e85b731e5d: entity work.bussify_entity_cd2459b7b8
    port map (
      in1 => adder_s_net_x16,
      in10 => adder_s_net_x17,
      in11 => adder_s_net_x18,
      in12 => adder_s_net_x19,
      in13 => adder_s_net_x20,
      in14 => adder_s_net_x21,
      in15 => adder_s_net_x22,
      in16 => adder_s_net_x23,
      in2 => adder_s_net_x24,
      in3 => adder_s_net_x25,
      in4 => adder_s_net_x26,
      in5 => adder_s_net_x27,
      in6 => adder_s_net_x28,
      in7 => adder_s_net_x29,
      in8 => adder_s_net_x30,
      in9 => adder_s_net_x31,
      bus_out => concatenate_y_net_x3
    );

  conv10_9bce43d516: entity work.conv1_entity_6940234f37
    port map (
      ce_1 => ce_1_sg_x210,
      clk_1 => clk_1_sg_x210,
      in_x0 => reinterpret7_output_port_net_x1,
      out_x0 => adder_s_net_x17
    );

  conv11_ccb337da2a: entity work.conv1_entity_6940234f37
    port map (
      ce_1 => ce_1_sg_x210,
      clk_1 => clk_1_sg_x210,
      in_x0 => reinterpret6_output_port_net_x1,
      out_x0 => adder_s_net_x18
    );

  conv12_2970cb6547: entity work.conv1_entity_6940234f37
    port map (
      ce_1 => ce_1_sg_x210,
      clk_1 => clk_1_sg_x210,
      in_x0 => reinterpret5_output_port_net_x1,
      out_x0 => adder_s_net_x19
    );

  conv13_6caf781596: entity work.conv1_entity_6940234f37
    port map (
      ce_1 => ce_1_sg_x210,
      clk_1 => clk_1_sg_x210,
      in_x0 => reinterpret4_output_port_net_x1,
      out_x0 => adder_s_net_x20
    );

  conv14_7b57a574d6: entity work.conv1_entity_6940234f37
    port map (
      ce_1 => ce_1_sg_x210,
      clk_1 => clk_1_sg_x210,
      in_x0 => reinterpret3_output_port_net_x1,
      out_x0 => adder_s_net_x21
    );

  conv15_fb9025b833: entity work.conv1_entity_6940234f37
    port map (
      ce_1 => ce_1_sg_x210,
      clk_1 => clk_1_sg_x210,
      in_x0 => reinterpret2_output_port_net_x1,
      out_x0 => adder_s_net_x22
    );

  conv16_2c99b7a683: entity work.conv1_entity_6940234f37
    port map (
      ce_1 => ce_1_sg_x210,
      clk_1 => clk_1_sg_x210,
      in_x0 => reinterpret1_output_port_net_x1,
      out_x0 => adder_s_net_x23
    );

  conv1_6940234f37: entity work.conv1_entity_6940234f37
    port map (
      ce_1 => ce_1_sg_x210,
      clk_1 => clk_1_sg_x210,
      in_x0 => reinterpret16_output_port_net_x1,
      out_x0 => adder_s_net_x16
    );

  conv2_42e8555987: entity work.conv1_entity_6940234f37
    port map (
      ce_1 => ce_1_sg_x210,
      clk_1 => clk_1_sg_x210,
      in_x0 => reinterpret15_output_port_net_x1,
      out_x0 => adder_s_net_x24
    );

  conv3_339514e702: entity work.conv1_entity_6940234f37
    port map (
      ce_1 => ce_1_sg_x210,
      clk_1 => clk_1_sg_x210,
      in_x0 => reinterpret14_output_port_net_x1,
      out_x0 => adder_s_net_x25
    );

  conv4_d8dad0a595: entity work.conv1_entity_6940234f37
    port map (
      ce_1 => ce_1_sg_x210,
      clk_1 => clk_1_sg_x210,
      in_x0 => reinterpret13_output_port_net_x1,
      out_x0 => adder_s_net_x26
    );

  conv5_586951c1de: entity work.conv1_entity_6940234f37
    port map (
      ce_1 => ce_1_sg_x210,
      clk_1 => clk_1_sg_x210,
      in_x0 => reinterpret12_output_port_net_x1,
      out_x0 => adder_s_net_x27
    );

  conv6_761fd4c57c: entity work.conv1_entity_6940234f37
    port map (
      ce_1 => ce_1_sg_x210,
      clk_1 => clk_1_sg_x210,
      in_x0 => reinterpret11_output_port_net_x1,
      out_x0 => adder_s_net_x28
    );

  conv7_5ce31b802e: entity work.conv1_entity_6940234f37
    port map (
      ce_1 => ce_1_sg_x210,
      clk_1 => clk_1_sg_x210,
      in_x0 => reinterpret10_output_port_net_x1,
      out_x0 => adder_s_net_x29
    );

  conv8_b30191b3fb: entity work.conv1_entity_6940234f37
    port map (
      ce_1 => ce_1_sg_x210,
      clk_1 => clk_1_sg_x210,
      in_x0 => reinterpret9_output_port_net_x1,
      out_x0 => adder_s_net_x30
    );

  conv9_d956d2cb35: entity work.conv1_entity_6940234f37
    port map (
      ce_1 => ce_1_sg_x210,
      clk_1 => clk_1_sg_x210,
      in_x0 => reinterpret8_output_port_net_x1,
      out_x0 => adder_s_net_x31
    );

  debus_7959c4e767: entity work.debus_entity_d8b36b57c6
    port map (
      bus_in => concatenate_y_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out16 => reinterpret16_output_port_net_x1,
      out10 => reinterpret10_output_port_net_x1,
      out11 => reinterpret11_output_port_net_x1,
      out12 => reinterpret12_output_port_net_x1,
      out13 => reinterpret13_output_port_net_x1,
      out14 => reinterpret14_output_port_net_x1,
      out15 => reinterpret15_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1,
      out4 => reinterpret4_output_port_net_x1,
      out5 => reinterpret5_output_port_net_x1,
      out6 => reinterpret6_output_port_net_x1,
      out7 => reinterpret7_output_port_net_x1,
      out8 => reinterpret8_output_port_net_x1,
      out9 => reinterpret9_output_port_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct/bus_relational/a_debus"

entity a_debus_entity_778d2a5625 is
  port (
    bus_in: in std_logic_vector(3 downto 0); 
    msb_lsb_out1: out std_logic_vector(3 downto 0)
  );
end a_debus_entity_778d2a5625;

architecture structural of a_debus_entity_778d2a5625 is
  signal constant_op_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(3 downto 0);
  signal slice1_y_net: std_logic_vector(3 downto 0);

begin
  constant_op_net_x0 <= bus_in;
  msb_lsb_out1 <= reinterpret1_output_port_net_x0;

  reinterpret1: entity work.reinterpret_d610556e85
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 3,
      x_width => 4,
      y_width => 4
    )
    port map (
      x => constant_op_net_x0,
      y => slice1_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct/bus_relational/b_debus"

entity b_debus_entity_f06bf9ea56 is
  port (
    bus_in: in std_logic_vector(15 downto 0); 
    lsb_out1: out std_logic_vector(3 downto 0); 
    msb_out4: out std_logic_vector(3 downto 0); 
    out2: out std_logic_vector(3 downto 0); 
    out3: out std_logic_vector(3 downto 0)
  );
end b_debus_entity_f06bf9ea56;

architecture structural of b_debus_entity_f06bf9ea56 is
  signal reinterpret1_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret_out_output_port_net_x0: std_logic_vector(15 downto 0);
  signal slice1_y_net: std_logic_vector(3 downto 0);
  signal slice2_y_net: std_logic_vector(3 downto 0);
  signal slice3_y_net: std_logic_vector(3 downto 0);
  signal slice4_y_net: std_logic_vector(3 downto 0);

begin
  reinterpret_out_output_port_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out4 <= reinterpret4_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;

  reinterpret1: entity work.reinterpret_d610556e85
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_d610556e85
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_d610556e85
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_d610556e85
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 3,
      x_width => 16,
      y_width => 4
    )
    port map (
      x => reinterpret_out_output_port_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 7,
      x_width => 16,
      y_width => 4
    )
    port map (
      x => reinterpret_out_output_port_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 8,
      new_msb => 11,
      x_width => 16,
      y_width => 4
    )
    port map (
      x => reinterpret_out_output_port_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 12,
      new_msb => 15,
      x_width => 16,
      y_width => 4
    )
    port map (
      x => reinterpret_out_output_port_net_x0,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct/bus_relational"

entity bus_relational_entity_633fc73315 is
  port (
    a: in std_logic_vector(3 downto 0); 
    b: in std_logic_vector(15 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    a_b: out std_logic_vector(3 downto 0)
  );
end bus_relational_entity_633fc73315;

architecture structural of bus_relational_entity_633fc73315 is
  signal ce_1_sg_x211: std_logic;
  signal clk_1_sg_x211: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(3 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(3 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret_out_output_port_net_x1: std_logic_vector(15 downto 0);
  signal relational1_op_net_x0: std_logic;
  signal relational2_op_net_x0: std_logic;
  signal relational3_op_net_x0: std_logic;
  signal relational4_op_net_x0: std_logic;

begin
  constant_op_net_x1 <= a;
  reinterpret_out_output_port_net_x1 <= b;
  ce_1_sg_x211 <= ce_1;
  clk_1_sg_x211 <= clk_1;
  a_b <= concatenate_y_net_x1;

  a_debus_778d2a5625: entity work.a_debus_entity_778d2a5625
    port map (
      bus_in => constant_op_net_x1,
      msb_lsb_out1 => reinterpret1_output_port_net_x0
    );

  b_debus_f06bf9ea56: entity work.b_debus_entity_f06bf9ea56
    port map (
      bus_in => reinterpret_out_output_port_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  bussify_645efbb725: entity work.bussify_entity_40eba17d52
    port map (
      in1 => relational1_op_net_x0,
      in2 => relational2_op_net_x0,
      in3 => relational3_op_net_x0,
      in4 => relational4_op_net_x0,
      bus_out => concatenate_y_net_x1
    );

  relational1: entity work.relational_01718d4f17
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret4_output_port_net_x0,
      ce => ce_1_sg_x211,
      clk => clk_1_sg_x211,
      clr => '0',
      op(0) => relational1_op_net_x0
    );

  relational2: entity work.relational_01718d4f17
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret3_output_port_net_x0,
      ce => ce_1_sg_x211,
      clk => clk_1_sg_x211,
      clr => '0',
      op(0) => relational2_op_net_x0
    );

  relational3: entity work.relational_01718d4f17
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret2_output_port_net_x0,
      ce => ce_1_sg_x211,
      clk => clk_1_sg_x211,
      clr => '0',
      op(0) => relational3_op_net_x0
    );

  relational4: entity work.relational_01718d4f17
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret1_output_port_net_x1,
      ce => ce_1_sg_x211,
      clk => clk_1_sg_x211,
      clr => '0',
      op(0) => relational4_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct/bus_sub"

entity bus_sub_entity_87b01b6f2d is
  port (
    a: in std_logic_vector(143 downto 0); 
    b: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    dout: out std_logic_vector(151 downto 0)
  );
end bus_sub_entity_87b01b6f2d;

architecture structural of bus_sub_entity_87b01b6f2d is
  signal addsub1_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub2_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub3_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub4_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub5_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub6_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub7_s_net_x0: std_logic_vector(18 downto 0);
  signal addsub8_s_net_x0: std_logic_vector(18 downto 0);
  signal ce_1_sg_x212: std_logic;
  signal clk_1_sg_x212: std_logic;
  signal concatenate_y_net_x4: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(151 downto 0);
  signal dmux0_q_net_x3: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret5_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret6_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret7_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret8_output_port_net_x1: std_logic_vector(17 downto 0);

begin
  concatenate_y_net_x4 <= a;
  dmux0_q_net_x3 <= b;
  ce_1_sg_x212 <= ce_1;
  clk_1_sg_x212 <= clk_1;
  dout <= concatenate_y_net_x5;

  a_debus_c0a02ad0cd: entity work.a_debus_entity_b79a0810db
    port map (
      bus_in => concatenate_y_net_x4,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out8 => reinterpret8_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0,
      out4 => reinterpret4_output_port_net_x0,
      out5 => reinterpret5_output_port_net_x0,
      out6 => reinterpret6_output_port_net_x0,
      out7 => reinterpret7_output_port_net_x0
    );

  addsub1: entity work.addsub_7461f1deba
    port map (
      a => reinterpret8_output_port_net_x0,
      b => reinterpret8_output_port_net_x1,
      ce => ce_1_sg_x212,
      clk => clk_1_sg_x212,
      clr => '0',
      s => addsub1_s_net_x0
    );

  addsub2: entity work.addsub_7461f1deba
    port map (
      a => reinterpret7_output_port_net_x0,
      b => reinterpret7_output_port_net_x1,
      ce => ce_1_sg_x212,
      clk => clk_1_sg_x212,
      clr => '0',
      s => addsub2_s_net_x0
    );

  addsub3: entity work.addsub_7461f1deba
    port map (
      a => reinterpret6_output_port_net_x0,
      b => reinterpret6_output_port_net_x1,
      ce => ce_1_sg_x212,
      clk => clk_1_sg_x212,
      clr => '0',
      s => addsub3_s_net_x0
    );

  addsub4: entity work.addsub_7461f1deba
    port map (
      a => reinterpret5_output_port_net_x0,
      b => reinterpret5_output_port_net_x1,
      ce => ce_1_sg_x212,
      clk => clk_1_sg_x212,
      clr => '0',
      s => addsub4_s_net_x0
    );

  addsub5: entity work.addsub_7461f1deba
    port map (
      a => reinterpret4_output_port_net_x0,
      b => reinterpret4_output_port_net_x1,
      ce => ce_1_sg_x212,
      clk => clk_1_sg_x212,
      clr => '0',
      s => addsub5_s_net_x0
    );

  addsub6: entity work.addsub_7461f1deba
    port map (
      a => reinterpret3_output_port_net_x0,
      b => reinterpret3_output_port_net_x1,
      ce => ce_1_sg_x212,
      clk => clk_1_sg_x212,
      clr => '0',
      s => addsub6_s_net_x0
    );

  addsub7: entity work.addsub_7461f1deba
    port map (
      a => reinterpret2_output_port_net_x0,
      b => reinterpret2_output_port_net_x1,
      ce => ce_1_sg_x212,
      clk => clk_1_sg_x212,
      clr => '0',
      s => addsub7_s_net_x0
    );

  addsub8: entity work.addsub_7461f1deba
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret1_output_port_net_x1,
      ce => ce_1_sg_x212,
      clk => clk_1_sg_x212,
      clr => '0',
      s => addsub8_s_net_x0
    );

  b_debus_7c7fd719ee: entity work.a_debus_entity_b79a0810db
    port map (
      bus_in => dmux0_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out8 => reinterpret8_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1,
      out4 => reinterpret4_output_port_net_x1,
      out5 => reinterpret5_output_port_net_x1,
      out6 => reinterpret6_output_port_net_x1,
      out7 => reinterpret7_output_port_net_x1
    );

  op_bussify_3f15ba792a: entity work.op_bussify_entity_5ed58d1c87
    port map (
      in1 => addsub1_s_net_x0,
      in2 => addsub2_s_net_x0,
      in3 => addsub3_s_net_x0,
      in4 => addsub4_s_net_x0,
      in5 => addsub5_s_net_x0,
      in6 => addsub6_s_net_x0,
      in7 => addsub7_s_net_x0,
      in8 => addsub8_s_net_x0,
      bus_out => concatenate_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct/munge/join"

entity join_entity_506f263874 is
  port (
    in1: in std_logic_vector(1 downto 0); 
    in2: in std_logic_vector(1 downto 0); 
    in3: in std_logic_vector(1 downto 0); 
    in4: in std_logic_vector(1 downto 0); 
    in5: in std_logic_vector(1 downto 0); 
    in6: in std_logic_vector(1 downto 0); 
    in7: in std_logic_vector(1 downto 0); 
    in8: in std_logic_vector(1 downto 0); 
    bus_out: out std_logic_vector(15 downto 0)
  );
end join_entity_506f263874;

architecture structural of join_entity_506f263874 is
  signal concatenate_y_net_x0: std_logic_vector(15 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret5_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret6_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret7_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret8_output_port_net_x1: std_logic_vector(1 downto 0);

begin
  reinterpret8_output_port_net_x1 <= in1;
  reinterpret4_output_port_net_x1 <= in2;
  reinterpret7_output_port_net_x1 <= in3;
  reinterpret3_output_port_net_x1 <= in4;
  reinterpret6_output_port_net_x1 <= in5;
  reinterpret2_output_port_net_x1 <= in6;
  reinterpret5_output_port_net_x1 <= in7;
  reinterpret1_output_port_net_x1 <= in8;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_910f8ba85a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret8_output_port_net_x1,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret4_output_port_net_x1,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret7_output_port_net_x1,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret3_output_port_net_x1,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret6_output_port_net_x1,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret2_output_port_net_x1,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret5_output_port_net_x1,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret1_output_port_net_x1,
      output_port => reinterpret8_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct/munge/split"

entity split_entity_68e9d8776c is
  port (
    bus_in: in std_logic_vector(15 downto 0); 
    lsb_out1: out std_logic_vector(1 downto 0); 
    msb_out8: out std_logic_vector(1 downto 0); 
    out2: out std_logic_vector(1 downto 0); 
    out3: out std_logic_vector(1 downto 0); 
    out4: out std_logic_vector(1 downto 0); 
    out5: out std_logic_vector(1 downto 0); 
    out6: out std_logic_vector(1 downto 0); 
    out7: out std_logic_vector(1 downto 0)
  );
end split_entity_68e9d8776c;

architecture structural of split_entity_68e9d8776c is
  signal reinterpret1_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret5_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret6_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret7_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret8_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret_output_port_net_x0: std_logic_vector(15 downto 0);
  signal slice1_y_net: std_logic_vector(1 downto 0);
  signal slice2_y_net: std_logic_vector(1 downto 0);
  signal slice3_y_net: std_logic_vector(1 downto 0);
  signal slice4_y_net: std_logic_vector(1 downto 0);
  signal slice5_y_net: std_logic_vector(1 downto 0);
  signal slice6_y_net: std_logic_vector(1 downto 0);
  signal slice7_y_net: std_logic_vector(1 downto 0);
  signal slice8_y_net: std_logic_vector(1 downto 0);

begin
  reinterpret_output_port_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x2;
  msb_out8 <= reinterpret8_output_port_net_x2;
  out2 <= reinterpret2_output_port_net_x2;
  out3 <= reinterpret3_output_port_net_x2;
  out4 <= reinterpret4_output_port_net_x2;
  out5 <= reinterpret5_output_port_net_x2;
  out6 <= reinterpret6_output_port_net_x2;
  out7 <= reinterpret7_output_port_net_x2;

  reinterpret1: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  reinterpret2: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x2
    );

  reinterpret3: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x2
    );

  reinterpret4: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x2
    );

  reinterpret5: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_y_net,
      output_port => reinterpret5_output_port_net_x2
    );

  reinterpret6: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret6_output_port_net_x2
    );

  reinterpret7: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret7_output_port_net_x2
    );

  reinterpret8: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret8_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 1,
      x_width => 16,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 3,
      x_width => 16,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 5,
      x_width => 16,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 7,
      x_width => 16,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 8,
      new_msb => 9,
      x_width => 16,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 10,
      new_msb => 11,
      x_width => 16,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 12,
      new_msb => 13,
      x_width => 16,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 14,
      new_msb => 15,
      x_width => 16,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice8_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct/munge"

entity munge_entity_7ae6614fdf is
  port (
    din: in std_logic_vector(15 downto 0); 
    dout: out std_logic_vector(15 downto 0)
  );
end munge_entity_7ae6614fdf;

architecture structural of munge_entity_7ae6614fdf is
  signal concatenate_y_net_x0: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(15 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret5_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret6_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret7_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret8_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(15 downto 0);
  signal reinterpret_output_port_net_x0: std_logic_vector(15 downto 0);

begin
  concatenate_y_net_x6 <= din;
  dout <= reinterpret_out_output_port_net_x2;

  join_506f263874: entity work.join_entity_506f263874
    port map (
      in1 => reinterpret8_output_port_net_x2,
      in2 => reinterpret4_output_port_net_x2,
      in3 => reinterpret7_output_port_net_x2,
      in4 => reinterpret3_output_port_net_x2,
      in5 => reinterpret6_output_port_net_x2,
      in6 => reinterpret2_output_port_net_x2,
      in7 => reinterpret5_output_port_net_x2,
      in8 => reinterpret1_output_port_net_x2,
      bus_out => concatenate_y_net_x0
    );

  reinterpret: entity work.reinterpret_ddc3ebdd7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concatenate_y_net_x6,
      output_port => reinterpret_output_port_net_x0
    );

  reinterpret_out: entity work.reinterpret_ddc3ebdd7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concatenate_y_net_x0,
      output_port => reinterpret_out_output_port_net_x2
    );

  split_68e9d8776c: entity work.split_entity_68e9d8776c
    port map (
      bus_in => reinterpret_output_port_net_x0,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out8 => reinterpret8_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x2,
      out4 => reinterpret4_output_port_net_x2,
      out5 => reinterpret5_output_port_net_x2,
      out6 => reinterpret6_output_port_net_x2,
      out7 => reinterpret7_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct/mux/d_bussify"

entity d_bussify_entity_7069c724c2 is
  port (
    in1: in std_logic_vector(19 downto 0); 
    in10: in std_logic_vector(19 downto 0); 
    in11: in std_logic_vector(19 downto 0); 
    in12: in std_logic_vector(19 downto 0); 
    in13: in std_logic_vector(19 downto 0); 
    in14: in std_logic_vector(19 downto 0); 
    in15: in std_logic_vector(19 downto 0); 
    in16: in std_logic_vector(19 downto 0); 
    in2: in std_logic_vector(19 downto 0); 
    in3: in std_logic_vector(19 downto 0); 
    in4: in std_logic_vector(19 downto 0); 
    in5: in std_logic_vector(19 downto 0); 
    in6: in std_logic_vector(19 downto 0); 
    in7: in std_logic_vector(19 downto 0); 
    in8: in std_logic_vector(19 downto 0); 
    in9: in std_logic_vector(19 downto 0); 
    bus_out: out std_logic_vector(319 downto 0)
  );
end d_bussify_entity_7069c724c2;

architecture structural of d_bussify_entity_7069c724c2 is
  signal concatenate_y_net_x4: std_logic_vector(319 downto 0);
  signal mux0_y_net_x0: std_logic_vector(19 downto 0);
  signal mux10_y_net_x0: std_logic_vector(19 downto 0);
  signal mux11_y_net_x0: std_logic_vector(19 downto 0);
  signal mux12_y_net_x0: std_logic_vector(19 downto 0);
  signal mux13_y_net_x0: std_logic_vector(19 downto 0);
  signal mux14_y_net_x0: std_logic_vector(19 downto 0);
  signal mux15_y_net_x0: std_logic_vector(19 downto 0);
  signal mux1_y_net_x0: std_logic_vector(19 downto 0);
  signal mux2_y_net_x0: std_logic_vector(19 downto 0);
  signal mux3_y_net_x0: std_logic_vector(19 downto 0);
  signal mux4_y_net_x0: std_logic_vector(19 downto 0);
  signal mux5_y_net_x0: std_logic_vector(19 downto 0);
  signal mux6_y_net_x0: std_logic_vector(19 downto 0);
  signal mux7_y_net_x0: std_logic_vector(19 downto 0);
  signal mux8_y_net_x0: std_logic_vector(19 downto 0);
  signal mux9_y_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret10_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret11_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret12_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret13_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret14_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret15_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret16_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret9_output_port_net: std_logic_vector(19 downto 0);

begin
  mux0_y_net_x0 <= in1;
  mux9_y_net_x0 <= in10;
  mux10_y_net_x0 <= in11;
  mux11_y_net_x0 <= in12;
  mux12_y_net_x0 <= in13;
  mux13_y_net_x0 <= in14;
  mux14_y_net_x0 <= in15;
  mux15_y_net_x0 <= in16;
  mux1_y_net_x0 <= in2;
  mux2_y_net_x0 <= in3;
  mux3_y_net_x0 <= in4;
  mux4_y_net_x0 <= in5;
  mux5_y_net_x0 <= in6;
  mux6_y_net_x0 <= in7;
  mux7_y_net_x0 <= in8;
  mux8_y_net_x0 <= in9;
  bus_out <= concatenate_y_net_x4;

  concatenate: entity work.concat_ac56edb97a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in10 => reinterpret11_output_port_net,
      in11 => reinterpret12_output_port_net,
      in12 => reinterpret13_output_port_net,
      in13 => reinterpret14_output_port_net,
      in14 => reinterpret15_output_port_net,
      in15 => reinterpret16_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      in8 => reinterpret9_output_port_net,
      in9 => reinterpret10_output_port_net,
      y => concatenate_y_net_x4
    );

  reinterpret1: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux0_y_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret10: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux9_y_net_x0,
      output_port => reinterpret10_output_port_net
    );

  reinterpret11: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux10_y_net_x0,
      output_port => reinterpret11_output_port_net
    );

  reinterpret12: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux11_y_net_x0,
      output_port => reinterpret12_output_port_net
    );

  reinterpret13: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux12_y_net_x0,
      output_port => reinterpret13_output_port_net
    );

  reinterpret14: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux13_y_net_x0,
      output_port => reinterpret14_output_port_net
    );

  reinterpret15: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux14_y_net_x0,
      output_port => reinterpret15_output_port_net
    );

  reinterpret16: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux15_y_net_x0,
      output_port => reinterpret16_output_port_net
    );

  reinterpret2: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux1_y_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux2_y_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux3_y_net_x0,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux4_y_net_x0,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux5_y_net_x0,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux6_y_net_x0,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux7_y_net_x0,
      output_port => reinterpret8_output_port_net
    );

  reinterpret9: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux8_y_net_x0,
      output_port => reinterpret9_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct/mux/expand0"

entity expand0_entity_d77b97237d is
  port (
    bus_in: in std_logic_vector(319 downto 0); 
    lsb_out1: out std_logic_vector(19 downto 0); 
    msb_out16: out std_logic_vector(19 downto 0); 
    out10: out std_logic_vector(19 downto 0); 
    out11: out std_logic_vector(19 downto 0); 
    out12: out std_logic_vector(19 downto 0); 
    out13: out std_logic_vector(19 downto 0); 
    out14: out std_logic_vector(19 downto 0); 
    out15: out std_logic_vector(19 downto 0); 
    out2: out std_logic_vector(19 downto 0); 
    out3: out std_logic_vector(19 downto 0); 
    out4: out std_logic_vector(19 downto 0); 
    out5: out std_logic_vector(19 downto 0); 
    out6: out std_logic_vector(19 downto 0); 
    out7: out std_logic_vector(19 downto 0); 
    out8: out std_logic_vector(19 downto 0); 
    out9: out std_logic_vector(19 downto 0)
  );
end expand0_entity_d77b97237d;

architecture structural of expand0_entity_d77b97237d is
  signal concatenate_y_net_x2: std_logic_vector(319 downto 0);
  signal reinterpret10_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret11_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret12_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret13_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret14_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret15_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret16_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret9_output_port_net_x0: std_logic_vector(19 downto 0);
  signal slice10_y_net: std_logic_vector(19 downto 0);
  signal slice11_y_net: std_logic_vector(19 downto 0);
  signal slice12_y_net: std_logic_vector(19 downto 0);
  signal slice13_y_net: std_logic_vector(19 downto 0);
  signal slice14_y_net: std_logic_vector(19 downto 0);
  signal slice15_y_net: std_logic_vector(19 downto 0);
  signal slice16_y_net: std_logic_vector(19 downto 0);
  signal slice1_y_net: std_logic_vector(19 downto 0);
  signal slice2_y_net: std_logic_vector(19 downto 0);
  signal slice3_y_net: std_logic_vector(19 downto 0);
  signal slice4_y_net: std_logic_vector(19 downto 0);
  signal slice5_y_net: std_logic_vector(19 downto 0);
  signal slice6_y_net: std_logic_vector(19 downto 0);
  signal slice7_y_net: std_logic_vector(19 downto 0);
  signal slice8_y_net: std_logic_vector(19 downto 0);
  signal slice9_y_net: std_logic_vector(19 downto 0);

begin
  concatenate_y_net_x2 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out16 <= reinterpret16_output_port_net_x0;
  out10 <= reinterpret10_output_port_net_x0;
  out11 <= reinterpret11_output_port_net_x0;
  out12 <= reinterpret12_output_port_net_x0;
  out13 <= reinterpret13_output_port_net_x0;
  out14 <= reinterpret14_output_port_net_x0;
  out15 <= reinterpret15_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;
  out4 <= reinterpret4_output_port_net_x0;
  out5 <= reinterpret5_output_port_net_x0;
  out6 <= reinterpret6_output_port_net_x0;
  out7 <= reinterpret7_output_port_net_x0;
  out8 <= reinterpret8_output_port_net_x0;
  out9 <= reinterpret9_output_port_net_x0;

  reinterpret1: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret10: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice10_y_net,
      output_port => reinterpret10_output_port_net_x0
    );

  reinterpret11: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice11_y_net,
      output_port => reinterpret11_output_port_net_x0
    );

  reinterpret12: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice12_y_net,
      output_port => reinterpret12_output_port_net_x0
    );

  reinterpret13: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice13_y_net,
      output_port => reinterpret13_output_port_net_x0
    );

  reinterpret14: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice14_y_net,
      output_port => reinterpret14_output_port_net_x0
    );

  reinterpret15: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice15_y_net,
      output_port => reinterpret15_output_port_net_x0
    );

  reinterpret16: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice16_y_net,
      output_port => reinterpret16_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  reinterpret5: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_y_net,
      output_port => reinterpret5_output_port_net_x0
    );

  reinterpret6: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret6_output_port_net_x0
    );

  reinterpret7: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret7_output_port_net_x0
    );

  reinterpret8: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret8_output_port_net_x0
    );

  reinterpret9: entity work.reinterpret_713b6c5d29
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice9_y_net,
      output_port => reinterpret9_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 19,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice1_y_net
    );

  slice10: entity work.xlslice
    generic map (
      new_lsb => 180,
      new_msb => 199,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice10_y_net
    );

  slice11: entity work.xlslice
    generic map (
      new_lsb => 200,
      new_msb => 219,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice11_y_net
    );

  slice12: entity work.xlslice
    generic map (
      new_lsb => 220,
      new_msb => 239,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice12_y_net
    );

  slice13: entity work.xlslice
    generic map (
      new_lsb => 240,
      new_msb => 259,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice13_y_net
    );

  slice14: entity work.xlslice
    generic map (
      new_lsb => 260,
      new_msb => 279,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice14_y_net
    );

  slice15: entity work.xlslice
    generic map (
      new_lsb => 280,
      new_msb => 299,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice15_y_net
    );

  slice16: entity work.xlslice
    generic map (
      new_lsb => 300,
      new_msb => 319,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice16_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 20,
      new_msb => 39,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 40,
      new_msb => 59,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 60,
      new_msb => 79,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 80,
      new_msb => 99,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 100,
      new_msb => 119,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 120,
      new_msb => 139,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 140,
      new_msb => 159,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice8_y_net
    );

  slice9: entity work.xlslice
    generic map (
      new_lsb => 160,
      new_msb => 179,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice9_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct/mux/sel_expand"

entity sel_expand_entity_3ebf81fe34 is
  port (
    bus_in: in std_logic_vector(15 downto 0); 
    lsb_out1: out std_logic; 
    msb_out16: out std_logic; 
    out10: out std_logic; 
    out11: out std_logic; 
    out12: out std_logic; 
    out13: out std_logic; 
    out14: out std_logic; 
    out15: out std_logic; 
    out2: out std_logic; 
    out3: out std_logic; 
    out4: out std_logic; 
    out5: out std_logic; 
    out6: out std_logic; 
    out7: out std_logic; 
    out8: out std_logic; 
    out9: out std_logic
  );
end sel_expand_entity_3ebf81fe34;

architecture structural of sel_expand_entity_3ebf81fe34 is
  signal concatenate_y_net_x0: std_logic_vector(15 downto 0);
  signal reinterpret10_output_port_net_x0: std_logic;
  signal reinterpret11_output_port_net_x0: std_logic;
  signal reinterpret12_output_port_net_x0: std_logic;
  signal reinterpret13_output_port_net_x0: std_logic;
  signal reinterpret14_output_port_net_x0: std_logic;
  signal reinterpret15_output_port_net_x0: std_logic;
  signal reinterpret16_output_port_net_x0: std_logic;
  signal reinterpret1_output_port_net_x0: std_logic;
  signal reinterpret2_output_port_net_x0: std_logic;
  signal reinterpret3_output_port_net_x0: std_logic;
  signal reinterpret4_output_port_net_x0: std_logic;
  signal reinterpret5_output_port_net_x0: std_logic;
  signal reinterpret6_output_port_net_x0: std_logic;
  signal reinterpret7_output_port_net_x0: std_logic;
  signal reinterpret8_output_port_net_x0: std_logic;
  signal reinterpret9_output_port_net_x0: std_logic;
  signal slice10_y_net: std_logic;
  signal slice11_y_net: std_logic;
  signal slice12_y_net: std_logic;
  signal slice13_y_net: std_logic;
  signal slice14_y_net: std_logic;
  signal slice15_y_net: std_logic;
  signal slice16_y_net: std_logic;
  signal slice1_y_net: std_logic;
  signal slice2_y_net: std_logic;
  signal slice3_y_net: std_logic;
  signal slice4_y_net: std_logic;
  signal slice5_y_net: std_logic;
  signal slice6_y_net: std_logic;
  signal slice7_y_net: std_logic;
  signal slice8_y_net: std_logic;
  signal slice9_y_net: std_logic;

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out16 <= reinterpret16_output_port_net_x0;
  out10 <= reinterpret10_output_port_net_x0;
  out11 <= reinterpret11_output_port_net_x0;
  out12 <= reinterpret12_output_port_net_x0;
  out13 <= reinterpret13_output_port_net_x0;
  out14 <= reinterpret14_output_port_net_x0;
  out15 <= reinterpret15_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;
  out4 <= reinterpret4_output_port_net_x0;
  out5 <= reinterpret5_output_port_net_x0;
  out6 <= reinterpret6_output_port_net_x0;
  out7 <= reinterpret7_output_port_net_x0;
  out8 <= reinterpret8_output_port_net_x0;
  out9 <= reinterpret9_output_port_net_x0;

  reinterpret1: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice1_y_net,
      output_port(0) => reinterpret1_output_port_net_x0
    );

  reinterpret10: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice10_y_net,
      output_port(0) => reinterpret10_output_port_net_x0
    );

  reinterpret11: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice11_y_net,
      output_port(0) => reinterpret11_output_port_net_x0
    );

  reinterpret12: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice12_y_net,
      output_port(0) => reinterpret12_output_port_net_x0
    );

  reinterpret13: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice13_y_net,
      output_port(0) => reinterpret13_output_port_net_x0
    );

  reinterpret14: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice14_y_net,
      output_port(0) => reinterpret14_output_port_net_x0
    );

  reinterpret15: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice15_y_net,
      output_port(0) => reinterpret15_output_port_net_x0
    );

  reinterpret16: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice16_y_net,
      output_port(0) => reinterpret16_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice2_y_net,
      output_port(0) => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice3_y_net,
      output_port(0) => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice4_y_net,
      output_port(0) => reinterpret4_output_port_net_x0
    );

  reinterpret5: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice5_y_net,
      output_port(0) => reinterpret5_output_port_net_x0
    );

  reinterpret6: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice6_y_net,
      output_port(0) => reinterpret6_output_port_net_x0
    );

  reinterpret7: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice7_y_net,
      output_port(0) => reinterpret7_output_port_net_x0
    );

  reinterpret8: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice8_y_net,
      output_port(0) => reinterpret8_output_port_net_x0
    );

  reinterpret9: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice9_y_net,
      output_port(0) => reinterpret9_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 16,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice1_y_net
    );

  slice10: entity work.xlslice
    generic map (
      new_lsb => 9,
      new_msb => 9,
      x_width => 16,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice10_y_net
    );

  slice11: entity work.xlslice
    generic map (
      new_lsb => 10,
      new_msb => 10,
      x_width => 16,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice11_y_net
    );

  slice12: entity work.xlslice
    generic map (
      new_lsb => 11,
      new_msb => 11,
      x_width => 16,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice12_y_net
    );

  slice13: entity work.xlslice
    generic map (
      new_lsb => 12,
      new_msb => 12,
      x_width => 16,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice13_y_net
    );

  slice14: entity work.xlslice
    generic map (
      new_lsb => 13,
      new_msb => 13,
      x_width => 16,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice14_y_net
    );

  slice15: entity work.xlslice
    generic map (
      new_lsb => 14,
      new_msb => 14,
      x_width => 16,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice15_y_net
    );

  slice16: entity work.xlslice
    generic map (
      new_lsb => 15,
      new_msb => 15,
      x_width => 16,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice16_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 16,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 16,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 16,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 4,
      x_width => 16,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 5,
      x_width => 16,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 6,
      x_width => 16,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 7,
      x_width => 16,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice8_y_net
    );

  slice9: entity work.xlslice
    generic map (
      new_lsb => 8,
      new_msb => 8,
      x_width => 16,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice9_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct/mux"

entity mux_entity_dae6517577 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d0: in std_logic_vector(319 downto 0); 
    d1: in std_logic_vector(319 downto 0); 
    sel: in std_logic_vector(15 downto 0); 
    out_x0: out std_logic_vector(319 downto 0)
  );
end mux_entity_dae6517577;

architecture structural of mux_entity_dae6517577 is
  signal ce_1_sg_x213: std_logic;
  signal clk_1_sg_x213: std_logic;
  signal concatenate_y_net_x6: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(319 downto 0);
  signal mux0_y_net_x0: std_logic_vector(19 downto 0);
  signal mux10_y_net_x0: std_logic_vector(19 downto 0);
  signal mux11_y_net_x0: std_logic_vector(19 downto 0);
  signal mux12_y_net_x0: std_logic_vector(19 downto 0);
  signal mux13_y_net_x0: std_logic_vector(19 downto 0);
  signal mux14_y_net_x0: std_logic_vector(19 downto 0);
  signal mux15_y_net_x0: std_logic_vector(19 downto 0);
  signal mux1_y_net_x0: std_logic_vector(19 downto 0);
  signal mux2_y_net_x0: std_logic_vector(19 downto 0);
  signal mux3_y_net_x0: std_logic_vector(19 downto 0);
  signal mux4_y_net_x0: std_logic_vector(19 downto 0);
  signal mux5_y_net_x0: std_logic_vector(19 downto 0);
  signal mux6_y_net_x0: std_logic_vector(19 downto 0);
  signal mux7_y_net_x0: std_logic_vector(19 downto 0);
  signal mux8_y_net_x0: std_logic_vector(19 downto 0);
  signal mux9_y_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret10_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret10_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret10_output_port_net_x2: std_logic;
  signal reinterpret11_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret11_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret11_output_port_net_x2: std_logic;
  signal reinterpret12_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret12_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret12_output_port_net_x2: std_logic;
  signal reinterpret13_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret13_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret13_output_port_net_x2: std_logic;
  signal reinterpret14_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret14_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret14_output_port_net_x2: std_logic;
  signal reinterpret15_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret15_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret15_output_port_net_x2: std_logic;
  signal reinterpret16_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret16_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret16_output_port_net_x2: std_logic;
  signal reinterpret1_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic;
  signal reinterpret2_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic;
  signal reinterpret3_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic;
  signal reinterpret4_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic;
  signal reinterpret5_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret5_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret5_output_port_net_x2: std_logic;
  signal reinterpret6_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret6_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret6_output_port_net_x2: std_logic;
  signal reinterpret7_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret7_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret7_output_port_net_x2: std_logic;
  signal reinterpret8_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret8_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret8_output_port_net_x2: std_logic;
  signal reinterpret9_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret9_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret9_output_port_net_x2: std_logic;

begin
  ce_1_sg_x213 <= ce_1;
  clk_1_sg_x213 <= clk_1;
  concatenate_y_net_x6 <= d0;
  concatenate_y_net_x7 <= d1;
  concatenate_y_net_x8 <= sel;
  out_x0 <= concatenate_y_net_x9;

  d_bussify_7069c724c2: entity work.d_bussify_entity_7069c724c2
    port map (
      in1 => mux0_y_net_x0,
      in10 => mux9_y_net_x0,
      in11 => mux10_y_net_x0,
      in12 => mux11_y_net_x0,
      in13 => mux12_y_net_x0,
      in14 => mux13_y_net_x0,
      in15 => mux14_y_net_x0,
      in16 => mux15_y_net_x0,
      in2 => mux1_y_net_x0,
      in3 => mux2_y_net_x0,
      in4 => mux3_y_net_x0,
      in5 => mux4_y_net_x0,
      in6 => mux5_y_net_x0,
      in7 => mux6_y_net_x0,
      in8 => mux7_y_net_x0,
      in9 => mux8_y_net_x0,
      bus_out => concatenate_y_net_x9
    );

  expand0_d77b97237d: entity work.expand0_entity_d77b97237d
    port map (
      bus_in => concatenate_y_net_x6,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out16 => reinterpret16_output_port_net_x0,
      out10 => reinterpret10_output_port_net_x0,
      out11 => reinterpret11_output_port_net_x0,
      out12 => reinterpret12_output_port_net_x0,
      out13 => reinterpret13_output_port_net_x0,
      out14 => reinterpret14_output_port_net_x0,
      out15 => reinterpret15_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0,
      out4 => reinterpret4_output_port_net_x0,
      out5 => reinterpret5_output_port_net_x0,
      out6 => reinterpret6_output_port_net_x0,
      out7 => reinterpret7_output_port_net_x0,
      out8 => reinterpret8_output_port_net_x0,
      out9 => reinterpret9_output_port_net_x0
    );

  expand1_bb9198411d: entity work.expand0_entity_d77b97237d
    port map (
      bus_in => concatenate_y_net_x7,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out16 => reinterpret16_output_port_net_x1,
      out10 => reinterpret10_output_port_net_x1,
      out11 => reinterpret11_output_port_net_x1,
      out12 => reinterpret12_output_port_net_x1,
      out13 => reinterpret13_output_port_net_x1,
      out14 => reinterpret14_output_port_net_x1,
      out15 => reinterpret15_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1,
      out4 => reinterpret4_output_port_net_x1,
      out5 => reinterpret5_output_port_net_x1,
      out6 => reinterpret6_output_port_net_x1,
      out7 => reinterpret7_output_port_net_x1,
      out8 => reinterpret8_output_port_net_x1,
      out9 => reinterpret9_output_port_net_x1
    );

  mux0: entity work.mux_ce20fdf7b8
    port map (
      ce => ce_1_sg_x213,
      clk => clk_1_sg_x213,
      clr => '0',
      d0 => reinterpret16_output_port_net_x0,
      d1 => reinterpret16_output_port_net_x1,
      sel(0) => reinterpret16_output_port_net_x2,
      y => mux0_y_net_x0
    );

  mux1: entity work.mux_ce20fdf7b8
    port map (
      ce => ce_1_sg_x213,
      clk => clk_1_sg_x213,
      clr => '0',
      d0 => reinterpret15_output_port_net_x0,
      d1 => reinterpret15_output_port_net_x1,
      sel(0) => reinterpret15_output_port_net_x2,
      y => mux1_y_net_x0
    );

  mux10: entity work.mux_ce20fdf7b8
    port map (
      ce => ce_1_sg_x213,
      clk => clk_1_sg_x213,
      clr => '0',
      d0 => reinterpret6_output_port_net_x0,
      d1 => reinterpret6_output_port_net_x1,
      sel(0) => reinterpret6_output_port_net_x2,
      y => mux10_y_net_x0
    );

  mux11: entity work.mux_ce20fdf7b8
    port map (
      ce => ce_1_sg_x213,
      clk => clk_1_sg_x213,
      clr => '0',
      d0 => reinterpret5_output_port_net_x0,
      d1 => reinterpret5_output_port_net_x1,
      sel(0) => reinterpret5_output_port_net_x2,
      y => mux11_y_net_x0
    );

  mux12: entity work.mux_ce20fdf7b8
    port map (
      ce => ce_1_sg_x213,
      clk => clk_1_sg_x213,
      clr => '0',
      d0 => reinterpret4_output_port_net_x0,
      d1 => reinterpret4_output_port_net_x1,
      sel(0) => reinterpret4_output_port_net_x2,
      y => mux12_y_net_x0
    );

  mux13: entity work.mux_ce20fdf7b8
    port map (
      ce => ce_1_sg_x213,
      clk => clk_1_sg_x213,
      clr => '0',
      d0 => reinterpret3_output_port_net_x0,
      d1 => reinterpret3_output_port_net_x1,
      sel(0) => reinterpret3_output_port_net_x2,
      y => mux13_y_net_x0
    );

  mux14: entity work.mux_ce20fdf7b8
    port map (
      ce => ce_1_sg_x213,
      clk => clk_1_sg_x213,
      clr => '0',
      d0 => reinterpret2_output_port_net_x0,
      d1 => reinterpret2_output_port_net_x1,
      sel(0) => reinterpret2_output_port_net_x2,
      y => mux14_y_net_x0
    );

  mux15: entity work.mux_ce20fdf7b8
    port map (
      ce => ce_1_sg_x213,
      clk => clk_1_sg_x213,
      clr => '0',
      d0 => reinterpret1_output_port_net_x0,
      d1 => reinterpret1_output_port_net_x1,
      sel(0) => reinterpret1_output_port_net_x2,
      y => mux15_y_net_x0
    );

  mux2: entity work.mux_ce20fdf7b8
    port map (
      ce => ce_1_sg_x213,
      clk => clk_1_sg_x213,
      clr => '0',
      d0 => reinterpret14_output_port_net_x0,
      d1 => reinterpret14_output_port_net_x1,
      sel(0) => reinterpret14_output_port_net_x2,
      y => mux2_y_net_x0
    );

  mux3: entity work.mux_ce20fdf7b8
    port map (
      ce => ce_1_sg_x213,
      clk => clk_1_sg_x213,
      clr => '0',
      d0 => reinterpret13_output_port_net_x0,
      d1 => reinterpret13_output_port_net_x1,
      sel(0) => reinterpret13_output_port_net_x2,
      y => mux3_y_net_x0
    );

  mux4: entity work.mux_ce20fdf7b8
    port map (
      ce => ce_1_sg_x213,
      clk => clk_1_sg_x213,
      clr => '0',
      d0 => reinterpret12_output_port_net_x0,
      d1 => reinterpret12_output_port_net_x1,
      sel(0) => reinterpret12_output_port_net_x2,
      y => mux4_y_net_x0
    );

  mux5: entity work.mux_ce20fdf7b8
    port map (
      ce => ce_1_sg_x213,
      clk => clk_1_sg_x213,
      clr => '0',
      d0 => reinterpret11_output_port_net_x0,
      d1 => reinterpret11_output_port_net_x1,
      sel(0) => reinterpret11_output_port_net_x2,
      y => mux5_y_net_x0
    );

  mux6: entity work.mux_ce20fdf7b8
    port map (
      ce => ce_1_sg_x213,
      clk => clk_1_sg_x213,
      clr => '0',
      d0 => reinterpret10_output_port_net_x0,
      d1 => reinterpret10_output_port_net_x1,
      sel(0) => reinterpret10_output_port_net_x2,
      y => mux6_y_net_x0
    );

  mux7: entity work.mux_ce20fdf7b8
    port map (
      ce => ce_1_sg_x213,
      clk => clk_1_sg_x213,
      clr => '0',
      d0 => reinterpret9_output_port_net_x0,
      d1 => reinterpret9_output_port_net_x1,
      sel(0) => reinterpret9_output_port_net_x2,
      y => mux7_y_net_x0
    );

  mux8: entity work.mux_ce20fdf7b8
    port map (
      ce => ce_1_sg_x213,
      clk => clk_1_sg_x213,
      clr => '0',
      d0 => reinterpret8_output_port_net_x0,
      d1 => reinterpret8_output_port_net_x1,
      sel(0) => reinterpret8_output_port_net_x2,
      y => mux8_y_net_x0
    );

  mux9: entity work.mux_ce20fdf7b8
    port map (
      ce => ce_1_sg_x213,
      clk => clk_1_sg_x213,
      clr => '0',
      d0 => reinterpret7_output_port_net_x0,
      d1 => reinterpret7_output_port_net_x1,
      sel(0) => reinterpret7_output_port_net_x2,
      y => mux9_y_net_x0
    );

  sel_expand_3ebf81fe34: entity work.sel_expand_entity_3ebf81fe34
    port map (
      bus_in => concatenate_y_net_x8,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out16 => reinterpret16_output_port_net_x2,
      out10 => reinterpret10_output_port_net_x2,
      out11 => reinterpret11_output_port_net_x2,
      out12 => reinterpret12_output_port_net_x2,
      out13 => reinterpret13_output_port_net_x2,
      out14 => reinterpret14_output_port_net_x2,
      out15 => reinterpret15_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x2,
      out4 => reinterpret4_output_port_net_x2,
      out5 => reinterpret5_output_port_net_x2,
      out6 => reinterpret6_output_port_net_x2,
      out7 => reinterpret7_output_port_net_x2,
      out8 => reinterpret8_output_port_net_x2,
      out9 => reinterpret9_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct/shift_replicate"

entity shift_replicate_entity_9dcff94fe9 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic_vector(15 downto 0)
  );
end shift_replicate_entity_9dcff94fe9;

architecture structural of shift_replicate_entity_9dcff94fe9 is
  signal ce_1_sg_x214: std_logic;
  signal clk_1_sg_x214: std_logic;
  signal concatenate_y_net_x10: std_logic_vector(15 downto 0);
  signal din0_0_q_net: std_logic;
  signal din0_1_q_net: std_logic;
  signal din0_2_q_net: std_logic;
  signal din0_3_q_net: std_logic;
  signal din1_0_q_net_x0: std_logic;
  signal din1_10_q_net_x0: std_logic;
  signal din1_11_q_net_x0: std_logic;
  signal din1_12_q_net_x0: std_logic;
  signal din1_13_q_net_x0: std_logic;
  signal din1_14_q_net_x0: std_logic;
  signal din1_15_q_net_x0: std_logic;
  signal din1_1_q_net_x0: std_logic;
  signal din1_2_q_net_x0: std_logic;
  signal din1_3_q_net_x0: std_logic;
  signal din1_4_q_net_x0: std_logic;
  signal din1_5_q_net_x0: std_logic;
  signal din1_6_q_net_x0: std_logic;
  signal din1_7_q_net_x0: std_logic;
  signal din1_8_q_net_x0: std_logic;
  signal din1_9_q_net_x0: std_logic;
  signal slice0_y_net_x0: std_logic;

begin
  ce_1_sg_x214 <= ce_1;
  clk_1_sg_x214 <= clk_1;
  slice0_y_net_x0 <= in_x0;
  out_x0 <= concatenate_y_net_x10;

  bussify_3cf150863a: entity work.of_bussify_entity_0574882070
    port map (
      in1 => din1_0_q_net_x0,
      in10 => din1_9_q_net_x0,
      in11 => din1_10_q_net_x0,
      in12 => din1_11_q_net_x0,
      in13 => din1_12_q_net_x0,
      in14 => din1_13_q_net_x0,
      in15 => din1_14_q_net_x0,
      in16 => din1_15_q_net_x0,
      in2 => din1_1_q_net_x0,
      in3 => din1_2_q_net_x0,
      in4 => din1_3_q_net_x0,
      in5 => din1_4_q_net_x0,
      in6 => din1_5_q_net_x0,
      in7 => din1_6_q_net_x0,
      in8 => din1_7_q_net_x0,
      in9 => din1_8_q_net_x0,
      bus_out => concatenate_y_net_x10
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x214,
      clk => clk_1_sg_x214,
      d(0) => slice0_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_0_q_net
    );

  din0_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x214,
      clk => clk_1_sg_x214,
      d(0) => slice0_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_1_q_net
    );

  din0_2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x214,
      clk => clk_1_sg_x214,
      d(0) => slice0_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_2_q_net
    );

  din0_3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x214,
      clk => clk_1_sg_x214,
      d(0) => slice0_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_3_q_net
    );

  din1_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x214,
      clk => clk_1_sg_x214,
      d(0) => din0_0_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_0_q_net_x0
    );

  din1_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x214,
      clk => clk_1_sg_x214,
      d(0) => din0_1_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_1_q_net_x0
    );

  din1_10: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x214,
      clk => clk_1_sg_x214,
      d(0) => din0_2_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_10_q_net_x0
    );

  din1_11: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x214,
      clk => clk_1_sg_x214,
      d(0) => din0_3_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_11_q_net_x0
    );

  din1_12: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x214,
      clk => clk_1_sg_x214,
      d(0) => din0_0_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_12_q_net_x0
    );

  din1_13: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x214,
      clk => clk_1_sg_x214,
      d(0) => din0_1_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_13_q_net_x0
    );

  din1_14: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x214,
      clk => clk_1_sg_x214,
      d(0) => din0_2_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_14_q_net_x0
    );

  din1_15: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x214,
      clk => clk_1_sg_x214,
      d(0) => din0_3_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_15_q_net_x0
    );

  din1_2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x214,
      clk => clk_1_sg_x214,
      d(0) => din0_2_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_2_q_net_x0
    );

  din1_3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x214,
      clk => clk_1_sg_x214,
      d(0) => din0_3_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_3_q_net_x0
    );

  din1_4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x214,
      clk => clk_1_sg_x214,
      d(0) => din0_0_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_4_q_net_x0
    );

  din1_5: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x214,
      clk => clk_1_sg_x214,
      d(0) => din0_1_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_5_q_net_x0
    );

  din1_6: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x214,
      clk => clk_1_sg_x214,
      d(0) => din0_2_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_6_q_net_x0
    );

  din1_7: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x214,
      clk => clk_1_sg_x214,
      d(0) => din0_3_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_7_q_net_x0
    );

  din1_8: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x214,
      clk => clk_1_sg_x214,
      d(0) => din0_0_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_8_q_net_x0
    );

  din1_9: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x214,
      clk => clk_1_sg_x214,
      d(0) => din0_1_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_9_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/butterfly_direct"

entity butterfly_direct_entity_a429c28881 is
  port (
    a: in std_logic_vector(143 downto 0); 
    b: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(143 downto 0); 
    a_bw_x0: out std_logic_vector(143 downto 0); 
    of_x0: out std_logic_vector(3 downto 0); 
    sync_out: out std_logic
  );
end butterfly_direct_entity_a429c28881;

architecture structural of butterfly_direct_entity_a429c28881 is
  signal ce_1_sg_x215: std_logic;
  signal clk_1_sg_x215: std_logic;
  signal concat_y_net_x3: std_logic_vector(303 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x13: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x14: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(151 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(303 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(287 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(151 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal dmux0_q_net_x4: std_logic_vector(143 downto 0);
  signal mux_y_net_x0: std_logic;
  signal reinterpret1_output_port_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(15 downto 0);
  signal slice0_y_net_x1: std_logic;

begin
  concatenate_y_net_x13 <= a;
  dmux0_q_net_x4 <= b;
  ce_1_sg_x215 <= ce_1;
  clk_1_sg_x215 <= clk_1;
  slice0_y_net_x1 <= shift;
  mux_y_net_x0 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x1;
  a_bw_x0 <= reinterpret2_output_port_net_x1;
  of_x0 <= concatenate_y_net_x14;
  sync_out <= delay0_q_net_x0;

  bus_add_e8b3d973ec: entity work.bus_add_entity_e8b3d973ec
    port map (
      a => concatenate_y_net_x13,
      b => dmux0_q_net_x4,
      ce_1 => ce_1_sg_x215,
      clk_1 => clk_1_sg_x215,
      dout => concatenate_y_net_x3
    );

  bus_convert_ea713e1089: entity work.bus_convert_entity_ea713e1089
    port map (
      ce_1 => ce_1_sg_x215,
      clk_1 => clk_1_sg_x215,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_2a52aaf3de: entity work.bus_expand_entity_2a52aaf3de
    port map (
      bus_in => concatenate_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  bus_norm0_4d96ef7e4a: entity work.bus_norm0_entity_4d96ef7e4a
    port map (
      ce_1 => ce_1_sg_x215,
      clk_1 => clk_1_sg_x215,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_58eff48426: entity work.bus_norm1_entity_58eff48426
    port map (
      ce_1 => ce_1_sg_x215,
      clk_1 => clk_1_sg_x215,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_633fc73315: entity work.bus_relational_entity_633fc73315
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      ce_1 => ce_1_sg_x215,
      clk_1 => clk_1_sg_x215,
      a_b => concatenate_y_net_x14
    );

  bus_scale_b937c81453: entity work.bus_scale_entity_e9d1be8911
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_87b01b6f2d: entity work.bus_sub_entity_87b01b6f2d
    port map (
      a => concatenate_y_net_x13,
      b => dmux0_q_net_x4,
      ce_1 => ce_1_sg_x215,
      clk_1 => clk_1_sg_x215,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_07f4466348
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x215,
      clk => clk_1_sg_x215,
      clr => '0',
      d(0) => mux_y_net_x0,
      q(0) => delay0_q_net_x0
    );

  munge_7ae6614fdf: entity work.munge_entity_7ae6614fdf
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_dae6517577: entity work.mux_entity_dae6517577
    port map (
      ce_1 => ce_1_sg_x215,
      clk_1 => clk_1_sg_x215,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_9dcff94fe9: entity work.shift_replicate_entity_9dcff94fe9
    port map (
      ce_1 => ce_1_sg_x215,
      clk_1 => clk_1_sg_x215,
      in_x0 => slice0_y_net_x1,
      out_x0 => concatenate_y_net_x11
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/delay0/rep_addr"

entity rep_addr_entity_893a6d5161 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(8 downto 0); 
    out_x0: out std_logic_vector(8 downto 0)
  );
end rep_addr_entity_893a6d5161;

architecture structural of rep_addr_entity_893a6d5161 is
  signal addr0_op_net_x0: std_logic_vector(8 downto 0);
  signal ce_1_sg_x216: std_logic;
  signal clk_1_sg_x216: std_logic;
  signal din0_0_q_net: std_logic_vector(8 downto 0);
  signal din1_0_q_net_x0: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(8 downto 0);

begin
  ce_1_sg_x216 <= ce_1;
  clk_1_sg_x216 <= clk_1;
  addr0_op_net_x0 <= in_x0;
  out_x0 <= reinterpret1_output_port_net_x3;

  bussify_8f6217b862: entity work.bussify_entity_e8d26d2d98
    port map (
      in1 => din1_0_q_net_x0,
      bus_out => reinterpret1_output_port_net_x3
    );

  din0_0: entity work.delay_09771002d6
    port map (
      ce => ce_1_sg_x216,
      clk => clk_1_sg_x216,
      clr => '0',
      d => addr0_op_net_x0,
      q => din0_0_q_net
    );

  din1_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x216,
      clk => clk_1_sg_x216,
      d => din0_0_q_net,
      en => '1',
      rst => '1',
      q => din1_0_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/delay0/rep_we"

entity rep_we_entity_7fc09cecc1 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end rep_we_entity_7fc09cecc1;

architecture structural of rep_we_entity_7fc09cecc1 is
  signal ce_1_sg_x217: std_logic;
  signal clk_1_sg_x217: std_logic;
  signal din0_0_q_net: std_logic;
  signal din1_0_q_net_x0: std_logic;
  signal reinterpret1_output_port_net_x2: std_logic;
  signal we0_op_net_x0: std_logic;

begin
  ce_1_sg_x217 <= ce_1;
  clk_1_sg_x217 <= clk_1;
  we0_op_net_x0 <= in_x0;
  out_x0 <= reinterpret1_output_port_net_x2;

  bussify_695ba7b767: entity work.bussify_entity_cb7efd63bc
    port map (
      in1 => din1_0_q_net_x0,
      bus_out => reinterpret1_output_port_net_x2
    );

  din0_0: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x217,
      clk => clk_1_sg_x217,
      clr => '0',
      d(0) => we0_op_net_x0,
      q(0) => din0_0_q_net
    );

  din1_0: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x217,
      clk => clk_1_sg_x217,
      clr => '0',
      d(0) => din0_0_q_net,
      q(0) => din1_0_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/delay0"

entity delay0_entity_89f7caa2fe is
  port (
    addr: in std_logic_vector(8 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(143 downto 0); 
    we: in std_logic; 
    dout: out std_logic_vector(143 downto 0)
  );
end delay0_entity_89f7caa2fe;

architecture structural of delay0_entity_89f7caa2fe is
  signal addr0_op_net_x1: std_logic_vector(8 downto 0);
  signal bram0_data_out_net_x0: std_logic_vector(35 downto 0);
  signal bram1_data_out_net_x0: std_logic_vector(35 downto 0);
  signal bram2_data_out_net_x0: std_logic_vector(35 downto 0);
  signal bram3_data_out_net_x0: std_logic_vector(35 downto 0);
  signal ce_1_sg_x218: std_logic;
  signal clk_1_sg_x218: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(143 downto 0);
  signal ddin_q_net_x0: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(8 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic;
  signal reinterpret2_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(35 downto 0);
  signal slice1_y_net_x0: std_logic;
  signal we0_op_net_x1: std_logic;

begin
  addr0_op_net_x1 <= addr;
  ce_1_sg_x218 <= ce_1;
  clk_1_sg_x218 <= clk_1;
  concatenate_y_net_x1 <= din;
  we0_op_net_x1 <= we;
  dout <= concatenate_y_net_x2;

  bram0: entity work.xlspram_he6_cres_correlator
    generic map (
      c_address_width => 9,
      c_width => 36,
      core_name0 => "bmg_72_d53572f04cfc7154",
      latency => 2
    )
    port map (
      addr => reinterpret1_output_port_net_x2,
      ce => ce_1_sg_x218,
      clk => clk_1_sg_x218,
      data_in => reinterpret4_output_port_net_x0,
      en => "1",
      rst => "0",
      we(0) => slice1_y_net_x0,
      data_out => bram0_data_out_net_x0
    );

  bram1: entity work.xlspram_he6_cres_correlator
    generic map (
      c_address_width => 9,
      c_width => 36,
      core_name0 => "bmg_72_d53572f04cfc7154",
      latency => 2
    )
    port map (
      addr => reinterpret1_output_port_net_x2,
      ce => ce_1_sg_x218,
      clk => clk_1_sg_x218,
      data_in => reinterpret3_output_port_net_x0,
      en => "1",
      rst => "0",
      we(0) => slice1_y_net_x0,
      data_out => bram1_data_out_net_x0
    );

  bram2: entity work.xlspram_he6_cres_correlator
    generic map (
      c_address_width => 9,
      c_width => 36,
      core_name0 => "bmg_72_d53572f04cfc7154",
      latency => 2
    )
    port map (
      addr => reinterpret1_output_port_net_x2,
      ce => ce_1_sg_x218,
      clk => clk_1_sg_x218,
      data_in => reinterpret2_output_port_net_x0,
      en => "1",
      rst => "0",
      we(0) => slice1_y_net_x0,
      data_out => bram2_data_out_net_x0
    );

  bram3: entity work.xlspram_he6_cres_correlator
    generic map (
      c_address_width => 9,
      c_width => 36,
      core_name0 => "bmg_72_d53572f04cfc7154",
      latency => 2
    )
    port map (
      addr => reinterpret1_output_port_net_x2,
      ce => ce_1_sg_x218,
      clk => clk_1_sg_x218,
      data_in => reinterpret1_output_port_net_x0,
      en => "1",
      rst => "0",
      we(0) => slice1_y_net_x0,
      data_out => bram3_data_out_net_x0
    );

  ddin: entity work.delay_479574aa10
    port map (
      ce => ce_1_sg_x218,
      clk => clk_1_sg_x218,
      clr => '0',
      d => concatenate_y_net_x1,
      q => ddin_q_net_x0
    );

  debus_addr_5aeae64857: entity work.addr_expand_entity_7576e82df6
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      msb_lsb_out1 => reinterpret1_output_port_net_x2
    );

  debus_din_32f58c6102: entity work.expand0_entity_faedf3e73c
    port map (
      bus_in => ddin_q_net_x0,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  debus_we_da8f831186: entity work.we_expand_entity_c5b97811a6
    port map (
      bus_in => reinterpret1_output_port_net_x4,
      msb_lsb_out1 => slice1_y_net_x0
    );

  din_bussify_94d01725a0: entity work.d_bussify_entity_9462440c59
    port map (
      in1 => bram0_data_out_net_x0,
      in2 => bram1_data_out_net_x0,
      in3 => bram2_data_out_net_x0,
      in4 => bram3_data_out_net_x0,
      bus_out => concatenate_y_net_x2
    );

  rep_addr_893a6d5161: entity work.rep_addr_entity_893a6d5161
    port map (
      ce_1 => ce_1_sg_x218,
      clk_1 => clk_1_sg_x218,
      in_x0 => addr0_op_net_x1,
      out_x0 => reinterpret1_output_port_net_x3
    );

  rep_we_7fc09cecc1: entity work.rep_we_entity_7fc09cecc1
    port map (
      ce_1 => ce_1_sg_x218,
      clk_1 => clk_1_sg_x218,
      in_x0 => we0_op_net_x1,
      out_x0 => reinterpret1_output_port_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1/sync_delay"

entity sync_delay_entity_fb718ae233 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_fb718ae233;

architecture structural of sync_delay_entity_fb718ae233 is
  signal ce_1_sg_x222: std_logic;
  signal clk_1_sg_x222: std_logic;
  signal constant1_op_net: std_logic_vector(9 downto 0);
  signal constant2_op_net: std_logic_vector(9 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(9 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal dsync1_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x1: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x222 <= ce_1;
  clk_1_sg_x222 <= clk_1;
  dsync1_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x1;

  constant1: entity work.constant_498bc68c14
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_fbc2f0cce1
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_f1ac4bddff
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.counter_d3720c25c3
    port map (
      ce => ce_1_sg_x222,
      clk => clk_1_sg_x222,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => dsync1_q_net_x0,
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x1
    );

  relational: entity work.relational_0ffd72e037
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_f6702ea2f7
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_1"

entity fft_stage_1_entity_befb2533cd is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(143 downto 0); 
    in2: in std_logic_vector(143 downto 0); 
    of_in: in std_logic_vector(3 downto 0); 
    shift: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic_vector(3 downto 0); 
    out1: out std_logic_vector(143 downto 0); 
    out2: out std_logic_vector(143 downto 0); 
    sync_out: out std_logic
  );
end fft_stage_1_entity_befb2533cd;

architecture structural of fft_stage_1_entity_befb2533cd is
  signal addr0_op_net_x1: std_logic_vector(8 downto 0);
  signal addr1_op_net_x1: std_logic_vector(8 downto 0);
  signal ce_1_sg_x223: std_logic;
  signal clk_1_sg_x223: std_logic;
  signal concatenate_y_net_x0: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x14: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x15: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(143 downto 0);
  signal constant2_op_net_x0: std_logic_vector(14 downto 0);
  signal constant_op_net_x0: std_logic_vector(3 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay0_q_net_x1: std_logic;
  signal din0_q_net: std_logic_vector(143 downto 0);
  signal din1_q_net: std_logic_vector(143 downto 0);
  signal dmux0_q_net_x4: std_logic_vector(143 downto 0);
  signal dsync0_q_net: std_logic;
  signal dsync1_q_net_x0: std_logic;
  signal dsync2_q_net: std_logic;
  signal logical1_y_net_x0: std_logic_vector(3 downto 0);
  signal mux0_y_net: std_logic_vector(143 downto 0);
  signal mux1_y_net_x0: std_logic_vector(143 downto 0);
  signal mux_y_net_x1: std_logic;
  signal register0_q_net_x0: std_logic;
  signal reinterpret1_output_port_net_x2: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(143 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice1_y_net: std_logic;
  signal we0_op_net_x1: std_logic;
  signal we1_op_net_x1: std_logic;

begin
  ce_1_sg_x223 <= ce_1;
  clk_1_sg_x223 <= clk_1;
  concatenate_y_net_x0 <= in1;
  concatenate_y_net_x3 <= in2;
  constant_op_net_x0 <= of_in;
  constant2_op_net_x0 <= shift;
  register0_q_net_x0 <= sync;
  of_x0 <= logical1_y_net_x0;
  out1 <= reinterpret2_output_port_net_x2;
  out2 <= reinterpret1_output_port_net_x2;
  sync_out <= delay0_q_net_x1;

  addr0: entity work.counter_ca85bf174a
    port map (
      ce => ce_1_sg_x223,
      clk => clk_1_sg_x223,
      clr => '0',
      op => addr0_op_net_x1
    );

  addr1: entity work.counter_ca85bf174a
    port map (
      ce => ce_1_sg_x223,
      clk => clk_1_sg_x223,
      clr => '0',
      op => addr1_op_net_x1
    );

  butterfly_direct_a429c28881: entity work.butterfly_direct_entity_a429c28881
    port map (
      a => concatenate_y_net_x15,
      b => dmux0_q_net_x4,
      ce_1 => ce_1_sg_x223,
      clk_1 => clk_1_sg_x223,
      shift => slice0_y_net_x1,
      sync_in => mux_y_net_x1,
      a_bw => reinterpret1_output_port_net_x2,
      a_bw_x0 => reinterpret2_output_port_net_x2,
      of_x0 => concatenate_y_net_x14,
      sync_out => delay0_q_net_x1
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x223,
      clk => clk_1_sg_x223,
      clr => '0',
      rst(0) => dsync2_q_net,
      op => counter_op_net
    );

  delay0_89f7caa2fe: entity work.delay0_entity_89f7caa2fe
    port map (
      addr => addr0_op_net_x1,
      ce_1 => ce_1_sg_x223,
      clk_1 => clk_1_sg_x223,
      din => concatenate_y_net_x3,
      we => we0_op_net_x1,
      dout => concatenate_y_net_x2
    );

  delay1_2074e6c411: entity work.delay0_entity_89f7caa2fe
    port map (
      addr => addr1_op_net_x1,
      ce_1 => ce_1_sg_x223,
      clk_1 => clk_1_sg_x223,
      din => mux1_y_net_x0,
      we => we1_op_net_x1,
      dout => concatenate_y_net_x15
    );

  din0: entity work.delay_479574aa10
    port map (
      ce => ce_1_sg_x223,
      clk => clk_1_sg_x223,
      clr => '0',
      d => concatenate_y_net_x0,
      q => din0_q_net
    );

  din1: entity work.delay_3926436d8b
    port map (
      ce => ce_1_sg_x223,
      clk => clk_1_sg_x223,
      clr => '0',
      d => din0_q_net,
      q => din1_q_net
    );

  dmux0: entity work.delay_f8b24bd8d7
    port map (
      ce => ce_1_sg_x223,
      clk => clk_1_sg_x223,
      clr => '0',
      d => mux0_y_net,
      q => dmux0_q_net_x4
    );

  dsync0: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x223,
      clk => clk_1_sg_x223,
      clr => '0',
      d(0) => register0_q_net_x0,
      q(0) => dsync0_q_net
    );

  dsync1: entity work.delay_fa260f7d22
    port map (
      ce => ce_1_sg_x223,
      clk => clk_1_sg_x223,
      clr => '0',
      d(0) => dsync2_q_net,
      q(0) => dsync1_q_net_x0
    );

  dsync2: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x223,
      clk => clk_1_sg_x223,
      clr => '0',
      d(0) => dsync0_q_net,
      q(0) => dsync2_q_net
    );

  logical1: entity work.logical_8c69d6f164
    port map (
      ce => ce_1_sg_x223,
      clk => clk_1_sg_x223,
      clr => '0',
      d0 => concatenate_y_net_x14,
      d1 => constant_op_net_x0,
      y => logical1_y_net_x0
    );

  mux0: entity work.mux_340b095e64
    port map (
      ce => ce_1_sg_x223,
      clk => clk_1_sg_x223,
      clr => '0',
      d0 => concatenate_y_net_x2,
      d1 => din1_q_net,
      sel(0) => slice1_y_net,
      y => mux0_y_net
    );

  mux1: entity work.mux_340b095e64
    port map (
      ce => ce_1_sg_x223,
      clk => clk_1_sg_x223,
      clr => '0',
      d0 => din1_q_net,
      d1 => concatenate_y_net_x2,
      sel(0) => slice1_y_net,
      y => mux1_y_net_x0
    );

  slice0: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 15,
      y_width => 1
    )
    port map (
      x => constant2_op_net_x0,
      y(0) => slice0_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 9,
      new_msb => 9,
      x_width => 10,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  sync_delay_fb718ae233: entity work.sync_delay_entity_fb718ae233
    port map (
      ce_1 => ce_1_sg_x223,
      clk_1 => clk_1_sg_x223,
      in_x0 => dsync1_q_net_x0,
      out_x0 => mux_y_net_x1
    );

  we0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => we0_op_net_x1
    );

  we1: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => we1_op_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/bus_add/b_debus"

entity b_debus_entity_c4afecffce is
  port (
    bus_in: in std_logic_vector(151 downto 0); 
    lsb_out1: out std_logic_vector(18 downto 0); 
    msb_out8: out std_logic_vector(18 downto 0); 
    out2: out std_logic_vector(18 downto 0); 
    out3: out std_logic_vector(18 downto 0); 
    out4: out std_logic_vector(18 downto 0); 
    out5: out std_logic_vector(18 downto 0); 
    out6: out std_logic_vector(18 downto 0); 
    out7: out std_logic_vector(18 downto 0)
  );
end b_debus_entity_c4afecffce;

architecture structural of b_debus_entity_c4afecffce is
  signal concatenate_y_net_x0: std_logic_vector(151 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(18 downto 0);
  signal slice1_y_net: std_logic_vector(18 downto 0);
  signal slice2_y_net: std_logic_vector(18 downto 0);
  signal slice3_y_net: std_logic_vector(18 downto 0);
  signal slice4_y_net: std_logic_vector(18 downto 0);
  signal slice5_y_net: std_logic_vector(18 downto 0);
  signal slice6_y_net: std_logic_vector(18 downto 0);
  signal slice7_y_net: std_logic_vector(18 downto 0);
  signal slice8_y_net: std_logic_vector(18 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out8 <= reinterpret8_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;
  out4 <= reinterpret4_output_port_net_x0;
  out5 <= reinterpret5_output_port_net_x0;
  out6 <= reinterpret6_output_port_net_x0;
  out7 <= reinterpret7_output_port_net_x0;

  reinterpret1: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  reinterpret5: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_y_net,
      output_port => reinterpret5_output_port_net_x0
    );

  reinterpret6: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret6_output_port_net_x0
    );

  reinterpret7: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret7_output_port_net_x0
    );

  reinterpret8: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret8_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 18,
      x_width => 152,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 19,
      new_msb => 37,
      x_width => 152,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 38,
      new_msb => 56,
      x_width => 152,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 57,
      new_msb => 75,
      x_width => 152,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 76,
      new_msb => 94,
      x_width => 152,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 95,
      new_msb => 113,
      x_width => 152,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 114,
      new_msb => 132,
      x_width => 152,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 133,
      new_msb => 151,
      x_width => 152,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice8_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/bus_add/op_bussify"

entity op_bussify_entity_86ae147e07 is
  port (
    in1: in std_logic_vector(19 downto 0); 
    in2: in std_logic_vector(19 downto 0); 
    in3: in std_logic_vector(19 downto 0); 
    in4: in std_logic_vector(19 downto 0); 
    in5: in std_logic_vector(19 downto 0); 
    in6: in std_logic_vector(19 downto 0); 
    in7: in std_logic_vector(19 downto 0); 
    in8: in std_logic_vector(19 downto 0); 
    bus_out: out std_logic_vector(159 downto 0)
  );
end op_bussify_entity_86ae147e07;

architecture structural of op_bussify_entity_86ae147e07 is
  signal addsub1_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub2_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub3_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub4_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub5_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub6_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub7_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub8_s_net_x0: std_logic_vector(19 downto 0);
  signal concatenate_y_net_x0: std_logic_vector(159 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(19 downto 0);

begin
  addsub1_s_net_x0 <= in1;
  addsub2_s_net_x0 <= in2;
  addsub3_s_net_x0 <= in3;
  addsub4_s_net_x0 <= in4;
  addsub5_s_net_x0 <= in5;
  addsub6_s_net_x0 <= in6;
  addsub7_s_net_x0 <= in7;
  addsub8_s_net_x0 <= in8;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_babbadab38
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub1_s_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub2_s_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub3_s_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub4_s_net_x0,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub5_s_net_x0,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub6_s_net_x0,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub7_s_net_x0,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub8_s_net_x0,
      output_port => reinterpret8_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/bus_add"

entity bus_add_entity_928fd44576 is
  port (
    a: in std_logic_vector(143 downto 0); 
    b: in std_logic_vector(151 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    dout: out std_logic_vector(159 downto 0)
  );
end bus_add_entity_928fd44576;

architecture structural of bus_add_entity_928fd44576 is
  signal addsub1_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub2_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub3_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub4_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub5_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub6_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub7_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub8_s_net_x0: std_logic_vector(19 downto 0);
  signal ce_1_sg_x224: std_logic;
  signal clk_1_sg_x224: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(151 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(159 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret5_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret6_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret7_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret8_output_port_net_x1: std_logic_vector(18 downto 0);

begin
  reinterpret1_output_port_net_x3 <= a;
  concatenate_y_net_x2 <= b;
  ce_1_sg_x224 <= ce_1;
  clk_1_sg_x224 <= clk_1;
  dout <= concatenate_y_net_x3;

  a_debus_47de91a750: entity work.a_debus_entity_b79a0810db
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out8 => reinterpret8_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0,
      out4 => reinterpret4_output_port_net_x0,
      out5 => reinterpret5_output_port_net_x0,
      out6 => reinterpret6_output_port_net_x0,
      out7 => reinterpret7_output_port_net_x0
    );

  addsub1: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret8_output_port_net_x0,
      b => reinterpret8_output_port_net_x1,
      ce => ce_1_sg_x224,
      clk => clk_1_sg_x224,
      clr => '0',
      s => addsub1_s_net_x0
    );

  addsub2: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret7_output_port_net_x0,
      b => reinterpret7_output_port_net_x1,
      ce => ce_1_sg_x224,
      clk => clk_1_sg_x224,
      clr => '0',
      s => addsub2_s_net_x0
    );

  addsub3: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret6_output_port_net_x0,
      b => reinterpret6_output_port_net_x1,
      ce => ce_1_sg_x224,
      clk => clk_1_sg_x224,
      clr => '0',
      s => addsub3_s_net_x0
    );

  addsub4: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret5_output_port_net_x0,
      b => reinterpret5_output_port_net_x1,
      ce => ce_1_sg_x224,
      clk => clk_1_sg_x224,
      clr => '0',
      s => addsub4_s_net_x0
    );

  addsub5: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret4_output_port_net_x0,
      b => reinterpret4_output_port_net_x1,
      ce => ce_1_sg_x224,
      clk => clk_1_sg_x224,
      clr => '0',
      s => addsub5_s_net_x0
    );

  addsub6: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret3_output_port_net_x0,
      b => reinterpret3_output_port_net_x1,
      ce => ce_1_sg_x224,
      clk => clk_1_sg_x224,
      clr => '0',
      s => addsub6_s_net_x0
    );

  addsub7: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret2_output_port_net_x0,
      b => reinterpret2_output_port_net_x1,
      ce => ce_1_sg_x224,
      clk => clk_1_sg_x224,
      clr => '0',
      s => addsub7_s_net_x0
    );

  addsub8: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret1_output_port_net_x2,
      b => reinterpret1_output_port_net_x0,
      ce => ce_1_sg_x224,
      clk => clk_1_sg_x224,
      clr => '0',
      s => addsub8_s_net_x0
    );

  b_debus_c4afecffce: entity work.b_debus_entity_c4afecffce
    port map (
      bus_in => concatenate_y_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out8 => reinterpret8_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1,
      out4 => reinterpret4_output_port_net_x1,
      out5 => reinterpret5_output_port_net_x1,
      out6 => reinterpret6_output_port_net_x1,
      out7 => reinterpret7_output_port_net_x1
    );

  op_bussify_86ae147e07: entity work.op_bussify_entity_86ae147e07
    port map (
      in1 => addsub1_s_net_x0,
      in2 => addsub2_s_net_x0,
      in3 => addsub3_s_net_x0,
      in4 => addsub4_s_net_x0,
      in5 => addsub5_s_net_x0,
      in6 => addsub6_s_net_x0,
      in7 => addsub7_s_net_x0,
      in8 => addsub8_s_net_x0,
      bus_out => concatenate_y_net_x3
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/bus_convert/conv1/convert"

entity convert_entity_10add4ec81 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(20 downto 0); 
    out_x0: out std_logic_vector(17 downto 0)
  );
end convert_entity_10add4ec81;

architecture structural of convert_entity_10add4ec81 is
  signal adder_s_net_x16: std_logic_vector(17 downto 0);
  signal almost_half_op_net: std_logic_vector(18 downto 0);
  signal bit_y_net: std_logic;
  signal ce_1_sg_x225: std_logic;
  signal clk_1_sg_x225: std_logic;
  signal concat_y_net: std_logic_vector(21 downto 0);
  signal constant_op_net: std_logic;
  signal force1_output_port_net: std_logic_vector(21 downto 0);
  signal force2_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret16_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(20 downto 0);
  signal tweak_op_y_net: std_logic;

begin
  ce_1_sg_x225 <= ce_1;
  clk_1_sg_x225 <= clk_1;
  reinterpret16_output_port_net_x0 <= in_x0;
  out_x0 <= adder_s_net_x16;

  adder: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 19,
      a_width => 22,
      b_arith => xlUnsigned,
      b_bin_pt => 19,
      b_width => 19,
      c_has_c_out => 0,
      c_latency => 2,
      c_output_width => 23,
      core_name0 => "addsb_11_0_e90c40e5de2551a6",
      extra_registers => 1,
      full_s_arith => 2,
      full_s_width => 23,
      latency => 3,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 17,
      s_width => 18
    )
    port map (
      a => force1_output_port_net,
      b => force2_output_port_net,
      ce => ce_1_sg_x225,
      clk => clk_1_sg_x225,
      clr => '0',
      en => "1",
      s => adder_s_net_x16
    );

  almost_half: entity work.constant_4709ea49b5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => almost_half_op_net
    );

  bit: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 21,
      y_width => 1
    )
    port map (
      x => reinterpret16_output_port_net_x0,
      y(0) => bit_y_net
    );

  concat: entity work.concat_e6bc20c81b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret_output_port_net,
      in1(0) => tweak_op_y_net,
      y => concat_y_net
    );

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  force1: entity work.reinterpret_c84451c80b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net,
      output_port => force1_output_port_net
    );

  force2: entity work.reinterpret_d2180c9169
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => almost_half_op_net,
      output_port => force2_output_port_net
    );

  reinterpret: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret16_output_port_net_x0,
      output_port => reinterpret_output_port_net
    );

  tweak_op: entity work.logical_938d99ac11
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => bit_y_net,
      d1(0) => constant_op_net,
      y(0) => tweak_op_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/bus_convert/conv1"

entity conv1_entity_a604afc213 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(20 downto 0); 
    dout: out std_logic_vector(17 downto 0); 
    of_x0: out std_logic
  );
end conv1_entity_a604afc213;

architecture structural of conv1_entity_a604afc213 is
  signal adder_s_net_x17: std_logic_vector(17 downto 0);
  signal all_0s_y_net: std_logic;
  signal all_1s_y_net: std_logic;
  signal and_y_net_x0: std_logic;
  signal ce_1_sg_x226: std_logic;
  signal clk_1_sg_x226: std_logic;
  signal invert1_op_net: std_logic;
  signal invert2_op_net: std_logic;
  signal invert3_op_net: std_logic;
  signal reinterpret16_output_port_net_x1: std_logic_vector(20 downto 0);
  signal slice1_y_net: std_logic;
  signal slice2_y_net: std_logic;
  signal slice3_y_net: std_logic;

begin
  ce_1_sg_x226 <= ce_1;
  clk_1_sg_x226 <= clk_1;
  reinterpret16_output_port_net_x1 <= din;
  dout <= adder_s_net_x17;
  of_x0 <= and_y_net_x0;

  all_0s: entity work.logical_fe87bb6ae4
    port map (
      ce => ce_1_sg_x226,
      clk => clk_1_sg_x226,
      clr => '0',
      d0(0) => invert1_op_net,
      d1(0) => invert2_op_net,
      d2(0) => invert3_op_net,
      y(0) => all_0s_y_net
    );

  all_1s: entity work.logical_fe87bb6ae4
    port map (
      ce => ce_1_sg_x226,
      clk => clk_1_sg_x226,
      clr => '0',
      d0(0) => slice1_y_net,
      d1(0) => slice2_y_net,
      d2(0) => slice3_y_net,
      y(0) => all_1s_y_net
    );

  and_x0: entity work.logical_799f62af22
    port map (
      ce => ce_1_sg_x226,
      clk => clk_1_sg_x226,
      clr => '0',
      d0(0) => all_0s_y_net,
      d1(0) => all_1s_y_net,
      y(0) => and_y_net_x0
    );

  convert_10add4ec81: entity work.convert_entity_10add4ec81
    port map (
      ce_1 => ce_1_sg_x226,
      clk_1 => clk_1_sg_x226,
      in_x0 => reinterpret16_output_port_net_x1,
      out_x0 => adder_s_net_x17
    );

  invert1: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x226,
      clk => clk_1_sg_x226,
      clr => '0',
      ip(0) => slice1_y_net,
      op(0) => invert1_op_net
    );

  invert2: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x226,
      clk => clk_1_sg_x226,
      clr => '0',
      ip(0) => slice2_y_net,
      op(0) => invert2_op_net
    );

  invert3: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x226,
      clk => clk_1_sg_x226,
      clr => '0',
      ip(0) => slice3_y_net,
      op(0) => invert3_op_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 20,
      new_msb => 20,
      x_width => 21,
      y_width => 1
    )
    port map (
      x => reinterpret16_output_port_net_x1,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 19,
      new_msb => 19,
      x_width => 21,
      y_width => 1
    )
    port map (
      x => reinterpret16_output_port_net_x1,
      y(0) => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 18,
      x_width => 21,
      y_width => 1
    )
    port map (
      x => reinterpret16_output_port_net_x1,
      y(0) => slice3_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/bus_convert/debus"

entity debus_entity_5017422da1 is
  port (
    bus_in: in std_logic_vector(335 downto 0); 
    lsb_out1: out std_logic_vector(20 downto 0); 
    msb_out16: out std_logic_vector(20 downto 0); 
    out10: out std_logic_vector(20 downto 0); 
    out11: out std_logic_vector(20 downto 0); 
    out12: out std_logic_vector(20 downto 0); 
    out13: out std_logic_vector(20 downto 0); 
    out14: out std_logic_vector(20 downto 0); 
    out15: out std_logic_vector(20 downto 0); 
    out2: out std_logic_vector(20 downto 0); 
    out3: out std_logic_vector(20 downto 0); 
    out4: out std_logic_vector(20 downto 0); 
    out5: out std_logic_vector(20 downto 0); 
    out6: out std_logic_vector(20 downto 0); 
    out7: out std_logic_vector(20 downto 0); 
    out8: out std_logic_vector(20 downto 0); 
    out9: out std_logic_vector(20 downto 0)
  );
end debus_entity_5017422da1;

architecture structural of debus_entity_5017422da1 is
  signal concatenate_y_net_x0: std_logic_vector(335 downto 0);
  signal reinterpret10_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret11_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret12_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret13_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret14_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret15_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret16_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret5_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret6_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret7_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret8_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret9_output_port_net_x2: std_logic_vector(20 downto 0);
  signal slice10_y_net: std_logic_vector(20 downto 0);
  signal slice11_y_net: std_logic_vector(20 downto 0);
  signal slice12_y_net: std_logic_vector(20 downto 0);
  signal slice13_y_net: std_logic_vector(20 downto 0);
  signal slice14_y_net: std_logic_vector(20 downto 0);
  signal slice15_y_net: std_logic_vector(20 downto 0);
  signal slice16_y_net: std_logic_vector(20 downto 0);
  signal slice1_y_net: std_logic_vector(20 downto 0);
  signal slice2_y_net: std_logic_vector(20 downto 0);
  signal slice3_y_net: std_logic_vector(20 downto 0);
  signal slice4_y_net: std_logic_vector(20 downto 0);
  signal slice5_y_net: std_logic_vector(20 downto 0);
  signal slice6_y_net: std_logic_vector(20 downto 0);
  signal slice7_y_net: std_logic_vector(20 downto 0);
  signal slice8_y_net: std_logic_vector(20 downto 0);
  signal slice9_y_net: std_logic_vector(20 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x2;
  msb_out16 <= reinterpret16_output_port_net_x2;
  out10 <= reinterpret10_output_port_net_x2;
  out11 <= reinterpret11_output_port_net_x2;
  out12 <= reinterpret12_output_port_net_x2;
  out13 <= reinterpret13_output_port_net_x2;
  out14 <= reinterpret14_output_port_net_x2;
  out15 <= reinterpret15_output_port_net_x2;
  out2 <= reinterpret2_output_port_net_x2;
  out3 <= reinterpret3_output_port_net_x2;
  out4 <= reinterpret4_output_port_net_x2;
  out5 <= reinterpret5_output_port_net_x2;
  out6 <= reinterpret6_output_port_net_x2;
  out7 <= reinterpret7_output_port_net_x2;
  out8 <= reinterpret8_output_port_net_x2;
  out9 <= reinterpret9_output_port_net_x2;

  reinterpret1: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  reinterpret10: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice10_y_net,
      output_port => reinterpret10_output_port_net_x2
    );

  reinterpret11: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice11_y_net,
      output_port => reinterpret11_output_port_net_x2
    );

  reinterpret12: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice12_y_net,
      output_port => reinterpret12_output_port_net_x2
    );

  reinterpret13: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice13_y_net,
      output_port => reinterpret13_output_port_net_x2
    );

  reinterpret14: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice14_y_net,
      output_port => reinterpret14_output_port_net_x2
    );

  reinterpret15: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice15_y_net,
      output_port => reinterpret15_output_port_net_x2
    );

  reinterpret16: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice16_y_net,
      output_port => reinterpret16_output_port_net_x2
    );

  reinterpret2: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x2
    );

  reinterpret3: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x2
    );

  reinterpret4: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x2
    );

  reinterpret5: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_y_net,
      output_port => reinterpret5_output_port_net_x2
    );

  reinterpret6: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret6_output_port_net_x2
    );

  reinterpret7: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret7_output_port_net_x2
    );

  reinterpret8: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret8_output_port_net_x2
    );

  reinterpret9: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice9_y_net,
      output_port => reinterpret9_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 20,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice10: entity work.xlslice
    generic map (
      new_lsb => 189,
      new_msb => 209,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice10_y_net
    );

  slice11: entity work.xlslice
    generic map (
      new_lsb => 210,
      new_msb => 230,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice11_y_net
    );

  slice12: entity work.xlslice
    generic map (
      new_lsb => 231,
      new_msb => 251,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice12_y_net
    );

  slice13: entity work.xlslice
    generic map (
      new_lsb => 252,
      new_msb => 272,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice13_y_net
    );

  slice14: entity work.xlslice
    generic map (
      new_lsb => 273,
      new_msb => 293,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice14_y_net
    );

  slice15: entity work.xlslice
    generic map (
      new_lsb => 294,
      new_msb => 314,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice15_y_net
    );

  slice16: entity work.xlslice
    generic map (
      new_lsb => 315,
      new_msb => 335,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice16_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 21,
      new_msb => 41,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 42,
      new_msb => 62,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 63,
      new_msb => 83,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 84,
      new_msb => 104,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 105,
      new_msb => 125,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 126,
      new_msb => 146,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 147,
      new_msb => 167,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice8_y_net
    );

  slice9: entity work.xlslice
    generic map (
      new_lsb => 168,
      new_msb => 188,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice9_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/bus_convert"

entity bus_convert_entity_dda507beeb is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(335 downto 0); 
    dout: out std_logic_vector(287 downto 0); 
    overflow: out std_logic_vector(15 downto 0)
  );
end bus_convert_entity_dda507beeb;

architecture structural of bus_convert_entity_dda507beeb is
  signal adder_s_net_x17: std_logic_vector(17 downto 0);
  signal adder_s_net_x18: std_logic_vector(17 downto 0);
  signal adder_s_net_x19: std_logic_vector(17 downto 0);
  signal adder_s_net_x20: std_logic_vector(17 downto 0);
  signal adder_s_net_x21: std_logic_vector(17 downto 0);
  signal adder_s_net_x22: std_logic_vector(17 downto 0);
  signal adder_s_net_x23: std_logic_vector(17 downto 0);
  signal adder_s_net_x24: std_logic_vector(17 downto 0);
  signal adder_s_net_x25: std_logic_vector(17 downto 0);
  signal adder_s_net_x26: std_logic_vector(17 downto 0);
  signal adder_s_net_x27: std_logic_vector(17 downto 0);
  signal adder_s_net_x28: std_logic_vector(17 downto 0);
  signal adder_s_net_x29: std_logic_vector(17 downto 0);
  signal adder_s_net_x30: std_logic_vector(17 downto 0);
  signal adder_s_net_x31: std_logic_vector(17 downto 0);
  signal adder_s_net_x32: std_logic_vector(17 downto 0);
  signal and_y_net_x16: std_logic;
  signal and_y_net_x17: std_logic;
  signal and_y_net_x18: std_logic;
  signal and_y_net_x19: std_logic;
  signal and_y_net_x20: std_logic;
  signal and_y_net_x21: std_logic;
  signal and_y_net_x22: std_logic;
  signal and_y_net_x23: std_logic;
  signal and_y_net_x24: std_logic;
  signal and_y_net_x25: std_logic;
  signal and_y_net_x26: std_logic;
  signal and_y_net_x27: std_logic;
  signal and_y_net_x28: std_logic;
  signal and_y_net_x29: std_logic;
  signal and_y_net_x30: std_logic;
  signal and_y_net_x31: std_logic;
  signal ce_1_sg_x257: std_logic;
  signal clk_1_sg_x257: std_logic;
  signal concatenate_y_net_x3: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(287 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(15 downto 0);
  signal reinterpret10_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret11_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret12_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret13_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret14_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret15_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret16_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret5_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret6_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret7_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret8_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret9_output_port_net_x2: std_logic_vector(20 downto 0);

begin
  ce_1_sg_x257 <= ce_1;
  clk_1_sg_x257 <= clk_1;
  concatenate_y_net_x3 <= din;
  dout <= concatenate_y_net_x4;
  overflow <= concatenate_y_net_x5;

  bussify_8500b4a2a7: entity work.bussify_entity_9772614d31
    port map (
      in1 => adder_s_net_x17,
      in10 => adder_s_net_x18,
      in11 => adder_s_net_x19,
      in12 => adder_s_net_x20,
      in13 => adder_s_net_x21,
      in14 => adder_s_net_x22,
      in15 => adder_s_net_x23,
      in16 => adder_s_net_x24,
      in2 => adder_s_net_x25,
      in3 => adder_s_net_x26,
      in4 => adder_s_net_x27,
      in5 => adder_s_net_x28,
      in6 => adder_s_net_x29,
      in7 => adder_s_net_x30,
      in8 => adder_s_net_x31,
      in9 => adder_s_net_x32,
      bus_out => concatenate_y_net_x4
    );

  conv10_d752d6e5b8: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x257,
      clk_1 => clk_1_sg_x257,
      din => reinterpret7_output_port_net_x2,
      dout => adder_s_net_x18,
      of_x0 => and_y_net_x17
    );

  conv11_09af813a49: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x257,
      clk_1 => clk_1_sg_x257,
      din => reinterpret6_output_port_net_x2,
      dout => adder_s_net_x19,
      of_x0 => and_y_net_x18
    );

  conv12_d718dc18c1: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x257,
      clk_1 => clk_1_sg_x257,
      din => reinterpret5_output_port_net_x2,
      dout => adder_s_net_x20,
      of_x0 => and_y_net_x19
    );

  conv13_607f23bfaf: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x257,
      clk_1 => clk_1_sg_x257,
      din => reinterpret4_output_port_net_x2,
      dout => adder_s_net_x21,
      of_x0 => and_y_net_x20
    );

  conv14_cef8ed576a: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x257,
      clk_1 => clk_1_sg_x257,
      din => reinterpret3_output_port_net_x2,
      dout => adder_s_net_x22,
      of_x0 => and_y_net_x21
    );

  conv15_ae3382ff5b: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x257,
      clk_1 => clk_1_sg_x257,
      din => reinterpret2_output_port_net_x2,
      dout => adder_s_net_x23,
      of_x0 => and_y_net_x22
    );

  conv16_10a93fe629: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x257,
      clk_1 => clk_1_sg_x257,
      din => reinterpret1_output_port_net_x2,
      dout => adder_s_net_x24,
      of_x0 => and_y_net_x23
    );

  conv1_a604afc213: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x257,
      clk_1 => clk_1_sg_x257,
      din => reinterpret16_output_port_net_x2,
      dout => adder_s_net_x17,
      of_x0 => and_y_net_x16
    );

  conv2_f5f62c1903: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x257,
      clk_1 => clk_1_sg_x257,
      din => reinterpret15_output_port_net_x2,
      dout => adder_s_net_x25,
      of_x0 => and_y_net_x24
    );

  conv3_ce30739072: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x257,
      clk_1 => clk_1_sg_x257,
      din => reinterpret14_output_port_net_x2,
      dout => adder_s_net_x26,
      of_x0 => and_y_net_x25
    );

  conv4_5a81e1099f: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x257,
      clk_1 => clk_1_sg_x257,
      din => reinterpret13_output_port_net_x2,
      dout => adder_s_net_x27,
      of_x0 => and_y_net_x26
    );

  conv5_941044452e: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x257,
      clk_1 => clk_1_sg_x257,
      din => reinterpret12_output_port_net_x2,
      dout => adder_s_net_x28,
      of_x0 => and_y_net_x27
    );

  conv6_24e2d50f57: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x257,
      clk_1 => clk_1_sg_x257,
      din => reinterpret11_output_port_net_x2,
      dout => adder_s_net_x29,
      of_x0 => and_y_net_x28
    );

  conv7_be3599041b: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x257,
      clk_1 => clk_1_sg_x257,
      din => reinterpret10_output_port_net_x2,
      dout => adder_s_net_x30,
      of_x0 => and_y_net_x29
    );

  conv8_4c32ec7580: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x257,
      clk_1 => clk_1_sg_x257,
      din => reinterpret9_output_port_net_x2,
      dout => adder_s_net_x31,
      of_x0 => and_y_net_x30
    );

  conv9_8806e9d310: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x257,
      clk_1 => clk_1_sg_x257,
      din => reinterpret8_output_port_net_x2,
      dout => adder_s_net_x32,
      of_x0 => and_y_net_x31
    );

  debus_5017422da1: entity work.debus_entity_5017422da1
    port map (
      bus_in => concatenate_y_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out16 => reinterpret16_output_port_net_x2,
      out10 => reinterpret10_output_port_net_x2,
      out11 => reinterpret11_output_port_net_x2,
      out12 => reinterpret12_output_port_net_x2,
      out13 => reinterpret13_output_port_net_x2,
      out14 => reinterpret14_output_port_net_x2,
      out15 => reinterpret15_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x2,
      out4 => reinterpret4_output_port_net_x2,
      out5 => reinterpret5_output_port_net_x2,
      out6 => reinterpret6_output_port_net_x2,
      out7 => reinterpret7_output_port_net_x2,
      out8 => reinterpret8_output_port_net_x2,
      out9 => reinterpret9_output_port_net_x2
    );

  of_bussify_7a2b02fef6: entity work.of_bussify_entity_0574882070
    port map (
      in1 => and_y_net_x16,
      in10 => and_y_net_x17,
      in11 => and_y_net_x18,
      in12 => and_y_net_x19,
      in13 => and_y_net_x20,
      in14 => and_y_net_x21,
      in15 => and_y_net_x22,
      in16 => and_y_net_x23,
      in2 => and_y_net_x24,
      in3 => and_y_net_x25,
      in4 => and_y_net_x26,
      in5 => and_y_net_x27,
      in6 => and_y_net_x28,
      in7 => and_y_net_x29,
      in8 => and_y_net_x30,
      in9 => and_y_net_x31,
      bus_out => concatenate_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/bus_norm0/bussify"

entity bussify_entity_dff3bd47cf is
  port (
    in1: in std_logic_vector(20 downto 0); 
    in10: in std_logic_vector(20 downto 0); 
    in11: in std_logic_vector(20 downto 0); 
    in12: in std_logic_vector(20 downto 0); 
    in13: in std_logic_vector(20 downto 0); 
    in14: in std_logic_vector(20 downto 0); 
    in15: in std_logic_vector(20 downto 0); 
    in16: in std_logic_vector(20 downto 0); 
    in2: in std_logic_vector(20 downto 0); 
    in3: in std_logic_vector(20 downto 0); 
    in4: in std_logic_vector(20 downto 0); 
    in5: in std_logic_vector(20 downto 0); 
    in6: in std_logic_vector(20 downto 0); 
    in7: in std_logic_vector(20 downto 0); 
    in8: in std_logic_vector(20 downto 0); 
    in9: in std_logic_vector(20 downto 0); 
    bus_out: out std_logic_vector(335 downto 0)
  );
end bussify_entity_dff3bd47cf;

architecture structural of bussify_entity_dff3bd47cf is
  signal concatenate_y_net_x0: std_logic_vector(335 downto 0);
  signal conv10_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv11_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv12_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv13_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv14_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv15_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv16_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv1_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv2_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv3_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv4_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv5_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv6_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv7_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv8_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv9_dout_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret10_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret11_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret12_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret13_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret14_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret15_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret16_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret9_output_port_net: std_logic_vector(20 downto 0);

begin
  conv1_dout_net_x0 <= in1;
  conv10_dout_net_x0 <= in10;
  conv11_dout_net_x0 <= in11;
  conv12_dout_net_x0 <= in12;
  conv13_dout_net_x0 <= in13;
  conv14_dout_net_x0 <= in14;
  conv15_dout_net_x0 <= in15;
  conv16_dout_net_x0 <= in16;
  conv2_dout_net_x0 <= in2;
  conv3_dout_net_x0 <= in3;
  conv4_dout_net_x0 <= in4;
  conv5_dout_net_x0 <= in5;
  conv6_dout_net_x0 <= in6;
  conv7_dout_net_x0 <= in7;
  conv8_dout_net_x0 <= in8;
  conv9_dout_net_x0 <= in9;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_59dd31cdf4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in10 => reinterpret11_output_port_net,
      in11 => reinterpret12_output_port_net,
      in12 => reinterpret13_output_port_net,
      in13 => reinterpret14_output_port_net,
      in14 => reinterpret15_output_port_net,
      in15 => reinterpret16_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      in8 => reinterpret9_output_port_net,
      in9 => reinterpret10_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv1_dout_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret10: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv10_dout_net_x0,
      output_port => reinterpret10_output_port_net
    );

  reinterpret11: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv11_dout_net_x0,
      output_port => reinterpret11_output_port_net
    );

  reinterpret12: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv12_dout_net_x0,
      output_port => reinterpret12_output_port_net
    );

  reinterpret13: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv13_dout_net_x0,
      output_port => reinterpret13_output_port_net
    );

  reinterpret14: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv14_dout_net_x0,
      output_port => reinterpret14_output_port_net
    );

  reinterpret15: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv15_dout_net_x0,
      output_port => reinterpret15_output_port_net
    );

  reinterpret16: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv16_dout_net_x0,
      output_port => reinterpret16_output_port_net
    );

  reinterpret2: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv2_dout_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv3_dout_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv4_dout_net_x0,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv5_dout_net_x0,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv6_dout_net_x0,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv7_dout_net_x0,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv8_dout_net_x0,
      output_port => reinterpret8_output_port_net
    );

  reinterpret9: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv9_dout_net_x0,
      output_port => reinterpret9_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/bus_norm0/debus"

entity debus_entity_8b4658c1d8 is
  port (
    bus_in: in std_logic_vector(319 downto 0); 
    lsb_out1: out std_logic_vector(19 downto 0); 
    msb_out16: out std_logic_vector(19 downto 0); 
    out10: out std_logic_vector(19 downto 0); 
    out11: out std_logic_vector(19 downto 0); 
    out12: out std_logic_vector(19 downto 0); 
    out13: out std_logic_vector(19 downto 0); 
    out14: out std_logic_vector(19 downto 0); 
    out15: out std_logic_vector(19 downto 0); 
    out2: out std_logic_vector(19 downto 0); 
    out3: out std_logic_vector(19 downto 0); 
    out4: out std_logic_vector(19 downto 0); 
    out5: out std_logic_vector(19 downto 0); 
    out6: out std_logic_vector(19 downto 0); 
    out7: out std_logic_vector(19 downto 0); 
    out8: out std_logic_vector(19 downto 0); 
    out9: out std_logic_vector(19 downto 0)
  );
end debus_entity_8b4658c1d8;

architecture structural of debus_entity_8b4658c1d8 is
  signal concat_y_net_x0: std_logic_vector(319 downto 0);
  signal reinterpret10_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret11_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret12_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret13_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret14_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret15_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret16_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret9_output_port_net_x0: std_logic_vector(19 downto 0);
  signal slice10_y_net: std_logic_vector(19 downto 0);
  signal slice11_y_net: std_logic_vector(19 downto 0);
  signal slice12_y_net: std_logic_vector(19 downto 0);
  signal slice13_y_net: std_logic_vector(19 downto 0);
  signal slice14_y_net: std_logic_vector(19 downto 0);
  signal slice15_y_net: std_logic_vector(19 downto 0);
  signal slice16_y_net: std_logic_vector(19 downto 0);
  signal slice1_y_net: std_logic_vector(19 downto 0);
  signal slice2_y_net: std_logic_vector(19 downto 0);
  signal slice3_y_net: std_logic_vector(19 downto 0);
  signal slice4_y_net: std_logic_vector(19 downto 0);
  signal slice5_y_net: std_logic_vector(19 downto 0);
  signal slice6_y_net: std_logic_vector(19 downto 0);
  signal slice7_y_net: std_logic_vector(19 downto 0);
  signal slice8_y_net: std_logic_vector(19 downto 0);
  signal slice9_y_net: std_logic_vector(19 downto 0);

begin
  concat_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out16 <= reinterpret16_output_port_net_x0;
  out10 <= reinterpret10_output_port_net_x0;
  out11 <= reinterpret11_output_port_net_x0;
  out12 <= reinterpret12_output_port_net_x0;
  out13 <= reinterpret13_output_port_net_x0;
  out14 <= reinterpret14_output_port_net_x0;
  out15 <= reinterpret15_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;
  out4 <= reinterpret4_output_port_net_x0;
  out5 <= reinterpret5_output_port_net_x0;
  out6 <= reinterpret6_output_port_net_x0;
  out7 <= reinterpret7_output_port_net_x0;
  out8 <= reinterpret8_output_port_net_x0;
  out9 <= reinterpret9_output_port_net_x0;

  reinterpret1: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret10: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice10_y_net,
      output_port => reinterpret10_output_port_net_x0
    );

  reinterpret11: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice11_y_net,
      output_port => reinterpret11_output_port_net_x0
    );

  reinterpret12: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice12_y_net,
      output_port => reinterpret12_output_port_net_x0
    );

  reinterpret13: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice13_y_net,
      output_port => reinterpret13_output_port_net_x0
    );

  reinterpret14: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice14_y_net,
      output_port => reinterpret14_output_port_net_x0
    );

  reinterpret15: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice15_y_net,
      output_port => reinterpret15_output_port_net_x0
    );

  reinterpret16: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice16_y_net,
      output_port => reinterpret16_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  reinterpret5: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_y_net,
      output_port => reinterpret5_output_port_net_x0
    );

  reinterpret6: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret6_output_port_net_x0
    );

  reinterpret7: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret7_output_port_net_x0
    );

  reinterpret8: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret8_output_port_net_x0
    );

  reinterpret9: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice9_y_net,
      output_port => reinterpret9_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 19,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice1_y_net
    );

  slice10: entity work.xlslice
    generic map (
      new_lsb => 180,
      new_msb => 199,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice10_y_net
    );

  slice11: entity work.xlslice
    generic map (
      new_lsb => 200,
      new_msb => 219,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice11_y_net
    );

  slice12: entity work.xlslice
    generic map (
      new_lsb => 220,
      new_msb => 239,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice12_y_net
    );

  slice13: entity work.xlslice
    generic map (
      new_lsb => 240,
      new_msb => 259,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice13_y_net
    );

  slice14: entity work.xlslice
    generic map (
      new_lsb => 260,
      new_msb => 279,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice14_y_net
    );

  slice15: entity work.xlslice
    generic map (
      new_lsb => 280,
      new_msb => 299,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice15_y_net
    );

  slice16: entity work.xlslice
    generic map (
      new_lsb => 300,
      new_msb => 319,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice16_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 20,
      new_msb => 39,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 40,
      new_msb => 59,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 60,
      new_msb => 79,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 80,
      new_msb => 99,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 100,
      new_msb => 119,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 120,
      new_msb => 139,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 140,
      new_msb => 159,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice8_y_net
    );

  slice9: entity work.xlslice
    generic map (
      new_lsb => 160,
      new_msb => 179,
      x_width => 320,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice9_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/bus_norm0"

entity bus_norm0_entity_2065c27fbe is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(319 downto 0); 
    dout: out std_logic_vector(335 downto 0)
  );
end bus_norm0_entity_2065c27fbe;

architecture structural of bus_norm0_entity_2065c27fbe is
  signal ce_1_sg_x258: std_logic;
  signal clk_1_sg_x258: std_logic;
  signal concat_y_net_x1: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x1: std_logic_vector(335 downto 0);
  signal conv10_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv11_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv12_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv13_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv14_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv15_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv16_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv1_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv2_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv3_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv4_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv5_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv6_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv7_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv8_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv9_dout_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret10_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret11_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret12_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret13_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret14_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret15_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret16_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret9_output_port_net_x0: std_logic_vector(19 downto 0);

begin
  ce_1_sg_x258 <= ce_1;
  clk_1_sg_x258 <= clk_1;
  concat_y_net_x1 <= din;
  dout <= concatenate_y_net_x1;

  bussify_dff3bd47cf: entity work.bussify_entity_dff3bd47cf
    port map (
      in1 => conv1_dout_net_x0,
      in10 => conv10_dout_net_x0,
      in11 => conv11_dout_net_x0,
      in12 => conv12_dout_net_x0,
      in13 => conv13_dout_net_x0,
      in14 => conv14_dout_net_x0,
      in15 => conv15_dout_net_x0,
      in16 => conv16_dout_net_x0,
      in2 => conv2_dout_net_x0,
      in3 => conv3_dout_net_x0,
      in4 => conv4_dout_net_x0,
      in5 => conv5_dout_net_x0,
      in6 => conv6_dout_net_x0,
      in7 => conv7_dout_net_x0,
      in8 => conv8_dout_net_x0,
      in9 => conv9_dout_net_x0,
      bus_out => concatenate_y_net_x1
    );

  conv1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x258,
      clk => clk_1_sg_x258,
      clr => '0',
      din => reinterpret16_output_port_net_x0,
      en => "1",
      dout => conv1_dout_net_x0
    );

  conv10: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x258,
      clk => clk_1_sg_x258,
      clr => '0',
      din => reinterpret7_output_port_net_x0,
      en => "1",
      dout => conv10_dout_net_x0
    );

  conv11: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x258,
      clk => clk_1_sg_x258,
      clr => '0',
      din => reinterpret6_output_port_net_x0,
      en => "1",
      dout => conv11_dout_net_x0
    );

  conv12: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x258,
      clk => clk_1_sg_x258,
      clr => '0',
      din => reinterpret5_output_port_net_x0,
      en => "1",
      dout => conv12_dout_net_x0
    );

  conv13: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x258,
      clk => clk_1_sg_x258,
      clr => '0',
      din => reinterpret4_output_port_net_x0,
      en => "1",
      dout => conv13_dout_net_x0
    );

  conv14: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x258,
      clk => clk_1_sg_x258,
      clr => '0',
      din => reinterpret3_output_port_net_x0,
      en => "1",
      dout => conv14_dout_net_x0
    );

  conv15: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x258,
      clk => clk_1_sg_x258,
      clr => '0',
      din => reinterpret2_output_port_net_x0,
      en => "1",
      dout => conv15_dout_net_x0
    );

  conv16: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x258,
      clk => clk_1_sg_x258,
      clr => '0',
      din => reinterpret1_output_port_net_x0,
      en => "1",
      dout => conv16_dout_net_x0
    );

  conv2: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x258,
      clk => clk_1_sg_x258,
      clr => '0',
      din => reinterpret15_output_port_net_x0,
      en => "1",
      dout => conv2_dout_net_x0
    );

  conv3: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x258,
      clk => clk_1_sg_x258,
      clr => '0',
      din => reinterpret14_output_port_net_x0,
      en => "1",
      dout => conv3_dout_net_x0
    );

  conv4: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x258,
      clk => clk_1_sg_x258,
      clr => '0',
      din => reinterpret13_output_port_net_x0,
      en => "1",
      dout => conv4_dout_net_x0
    );

  conv5: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x258,
      clk => clk_1_sg_x258,
      clr => '0',
      din => reinterpret12_output_port_net_x0,
      en => "1",
      dout => conv5_dout_net_x0
    );

  conv6: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x258,
      clk => clk_1_sg_x258,
      clr => '0',
      din => reinterpret11_output_port_net_x0,
      en => "1",
      dout => conv6_dout_net_x0
    );

  conv7: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x258,
      clk => clk_1_sg_x258,
      clr => '0',
      din => reinterpret10_output_port_net_x0,
      en => "1",
      dout => conv7_dout_net_x0
    );

  conv8: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x258,
      clk => clk_1_sg_x258,
      clr => '0',
      din => reinterpret9_output_port_net_x0,
      en => "1",
      dout => conv8_dout_net_x0
    );

  conv9: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x258,
      clk => clk_1_sg_x258,
      clr => '0',
      din => reinterpret8_output_port_net_x0,
      en => "1",
      dout => conv9_dout_net_x0
    );

  debus_8b4658c1d8: entity work.debus_entity_8b4658c1d8
    port map (
      bus_in => concat_y_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out16 => reinterpret16_output_port_net_x0,
      out10 => reinterpret10_output_port_net_x0,
      out11 => reinterpret11_output_port_net_x0,
      out12 => reinterpret12_output_port_net_x0,
      out13 => reinterpret13_output_port_net_x0,
      out14 => reinterpret14_output_port_net_x0,
      out15 => reinterpret15_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0,
      out4 => reinterpret4_output_port_net_x0,
      out5 => reinterpret5_output_port_net_x0,
      out6 => reinterpret6_output_port_net_x0,
      out7 => reinterpret7_output_port_net_x0,
      out8 => reinterpret8_output_port_net_x0,
      out9 => reinterpret9_output_port_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/bus_norm1/conv1"

entity conv1_entity_d9a6ef2b1d is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(19 downto 0); 
    out_x0: out std_logic_vector(20 downto 0)
  );
end conv1_entity_d9a6ef2b1d;

architecture structural of conv1_entity_d9a6ef2b1d is
  signal adder_s_net_x16: std_logic_vector(20 downto 0);
  signal almost_half_op_net: std_logic_vector(18 downto 0);
  signal bit_y_net: std_logic;
  signal ce_1_sg_x259: std_logic;
  signal clk_1_sg_x259: std_logic;
  signal concat_y_net: std_logic_vector(20 downto 0);
  signal constant_op_net: std_logic;
  signal force1_output_port_net: std_logic_vector(20 downto 0);
  signal force2_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret16_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(19 downto 0);
  signal tweak_op_y_net: std_logic;

begin
  ce_1_sg_x259 <= ce_1;
  clk_1_sg_x259 <= clk_1;
  reinterpret16_output_port_net_x0 <= in_x0;
  out_x0 <= adder_s_net_x16;

  adder: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 19,
      a_width => 21,
      b_arith => xlUnsigned,
      b_bin_pt => 19,
      b_width => 19,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 22,
      core_name0 => "addsb_11_0_3892e7a2bbe55936",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 22,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 18,
      s_width => 21
    )
    port map (
      a => force1_output_port_net,
      b => force2_output_port_net,
      ce => ce_1_sg_x259,
      clk => clk_1_sg_x259,
      clr => '0',
      en => "1",
      s => adder_s_net_x16
    );

  almost_half: entity work.constant_b366689086
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => almost_half_op_net
    );

  bit: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 20,
      y_width => 1
    )
    port map (
      x => reinterpret16_output_port_net_x0,
      y(0) => bit_y_net
    );

  concat: entity work.concat_c615d93998
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret_output_port_net,
      in1(0) => tweak_op_y_net,
      y => concat_y_net
    );

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  force1: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net,
      output_port => force1_output_port_net
    );

  force2: entity work.reinterpret_d2180c9169
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => almost_half_op_net,
      output_port => force2_output_port_net
    );

  reinterpret: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret16_output_port_net_x0,
      output_port => reinterpret_output_port_net
    );

  tweak_op: entity work.logical_b1e9d7c303
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => bit_y_net,
      d1(0) => constant_op_net,
      y(0) => tweak_op_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/bus_norm1"

entity bus_norm1_entity_ebb4710d83 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(319 downto 0); 
    dout: out std_logic_vector(335 downto 0)
  );
end bus_norm1_entity_ebb4710d83;

architecture structural of bus_norm1_entity_ebb4710d83 is
  signal adder_s_net_x16: std_logic_vector(20 downto 0);
  signal adder_s_net_x17: std_logic_vector(20 downto 0);
  signal adder_s_net_x18: std_logic_vector(20 downto 0);
  signal adder_s_net_x19: std_logic_vector(20 downto 0);
  signal adder_s_net_x20: std_logic_vector(20 downto 0);
  signal adder_s_net_x21: std_logic_vector(20 downto 0);
  signal adder_s_net_x22: std_logic_vector(20 downto 0);
  signal adder_s_net_x23: std_logic_vector(20 downto 0);
  signal adder_s_net_x24: std_logic_vector(20 downto 0);
  signal adder_s_net_x25: std_logic_vector(20 downto 0);
  signal adder_s_net_x26: std_logic_vector(20 downto 0);
  signal adder_s_net_x27: std_logic_vector(20 downto 0);
  signal adder_s_net_x28: std_logic_vector(20 downto 0);
  signal adder_s_net_x29: std_logic_vector(20 downto 0);
  signal adder_s_net_x30: std_logic_vector(20 downto 0);
  signal adder_s_net_x31: std_logic_vector(20 downto 0);
  signal ce_1_sg_x275: std_logic;
  signal clk_1_sg_x275: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(335 downto 0);
  signal reinterpret10_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret11_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret12_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret13_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret14_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret15_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret16_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret5_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret6_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret7_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret8_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret9_output_port_net_x1: std_logic_vector(19 downto 0);

begin
  ce_1_sg_x275 <= ce_1;
  clk_1_sg_x275 <= clk_1;
  concatenate_y_net_x2 <= din;
  dout <= concatenate_y_net_x3;

  bussify_05304a41f2: entity work.bussify_entity_dff3bd47cf
    port map (
      in1 => adder_s_net_x16,
      in10 => adder_s_net_x17,
      in11 => adder_s_net_x18,
      in12 => adder_s_net_x19,
      in13 => adder_s_net_x20,
      in14 => adder_s_net_x21,
      in15 => adder_s_net_x22,
      in16 => adder_s_net_x23,
      in2 => adder_s_net_x24,
      in3 => adder_s_net_x25,
      in4 => adder_s_net_x26,
      in5 => adder_s_net_x27,
      in6 => adder_s_net_x28,
      in7 => adder_s_net_x29,
      in8 => adder_s_net_x30,
      in9 => adder_s_net_x31,
      bus_out => concatenate_y_net_x3
    );

  conv10_75471cda0c: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x275,
      clk_1 => clk_1_sg_x275,
      in_x0 => reinterpret7_output_port_net_x1,
      out_x0 => adder_s_net_x17
    );

  conv11_37f6c70228: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x275,
      clk_1 => clk_1_sg_x275,
      in_x0 => reinterpret6_output_port_net_x1,
      out_x0 => adder_s_net_x18
    );

  conv12_7c31383e0b: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x275,
      clk_1 => clk_1_sg_x275,
      in_x0 => reinterpret5_output_port_net_x1,
      out_x0 => adder_s_net_x19
    );

  conv13_ad4e5c602b: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x275,
      clk_1 => clk_1_sg_x275,
      in_x0 => reinterpret4_output_port_net_x1,
      out_x0 => adder_s_net_x20
    );

  conv14_4269b3368d: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x275,
      clk_1 => clk_1_sg_x275,
      in_x0 => reinterpret3_output_port_net_x1,
      out_x0 => adder_s_net_x21
    );

  conv15_3f8e260e15: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x275,
      clk_1 => clk_1_sg_x275,
      in_x0 => reinterpret2_output_port_net_x1,
      out_x0 => adder_s_net_x22
    );

  conv16_7e0d34428f: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x275,
      clk_1 => clk_1_sg_x275,
      in_x0 => reinterpret1_output_port_net_x1,
      out_x0 => adder_s_net_x23
    );

  conv1_d9a6ef2b1d: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x275,
      clk_1 => clk_1_sg_x275,
      in_x0 => reinterpret16_output_port_net_x1,
      out_x0 => adder_s_net_x16
    );

  conv2_e3394e80e1: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x275,
      clk_1 => clk_1_sg_x275,
      in_x0 => reinterpret15_output_port_net_x1,
      out_x0 => adder_s_net_x24
    );

  conv3_18b1810d07: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x275,
      clk_1 => clk_1_sg_x275,
      in_x0 => reinterpret14_output_port_net_x1,
      out_x0 => adder_s_net_x25
    );

  conv4_e2359d2300: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x275,
      clk_1 => clk_1_sg_x275,
      in_x0 => reinterpret13_output_port_net_x1,
      out_x0 => adder_s_net_x26
    );

  conv5_d746a95dab: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x275,
      clk_1 => clk_1_sg_x275,
      in_x0 => reinterpret12_output_port_net_x1,
      out_x0 => adder_s_net_x27
    );

  conv6_13565bc116: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x275,
      clk_1 => clk_1_sg_x275,
      in_x0 => reinterpret11_output_port_net_x1,
      out_x0 => adder_s_net_x28
    );

  conv7_be0e42072d: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x275,
      clk_1 => clk_1_sg_x275,
      in_x0 => reinterpret10_output_port_net_x1,
      out_x0 => adder_s_net_x29
    );

  conv8_ae74e8bd49: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x275,
      clk_1 => clk_1_sg_x275,
      in_x0 => reinterpret9_output_port_net_x1,
      out_x0 => adder_s_net_x30
    );

  conv9_4804f5e9bc: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x275,
      clk_1 => clk_1_sg_x275,
      in_x0 => reinterpret8_output_port_net_x1,
      out_x0 => adder_s_net_x31
    );

  debus_794784792a: entity work.debus_entity_9e69c8cb4b
    port map (
      bus_in => concatenate_y_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out16 => reinterpret16_output_port_net_x1,
      out10 => reinterpret10_output_port_net_x1,
      out11 => reinterpret11_output_port_net_x1,
      out12 => reinterpret12_output_port_net_x1,
      out13 => reinterpret13_output_port_net_x1,
      out14 => reinterpret14_output_port_net_x1,
      out15 => reinterpret15_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1,
      out4 => reinterpret4_output_port_net_x1,
      out5 => reinterpret5_output_port_net_x1,
      out6 => reinterpret6_output_port_net_x1,
      out7 => reinterpret7_output_port_net_x1,
      out8 => reinterpret8_output_port_net_x1,
      out9 => reinterpret9_output_port_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/bus_scale"

entity bus_scale_entity_0ad20b8fc9 is
  port (
    din: in std_logic_vector(319 downto 0); 
    dout: out std_logic_vector(319 downto 0)
  );
end bus_scale_entity_0ad20b8fc9;

architecture structural of bus_scale_entity_0ad20b8fc9 is
  signal concat_y_net_x3: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(319 downto 0);
  signal reinterpret10_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret11_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret12_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret13_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret14_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret15_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret16_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret9_output_port_net_x0: std_logic_vector(19 downto 0);
  signal scale10_op_net_x0: std_logic_vector(19 downto 0);
  signal scale11_op_net_x0: std_logic_vector(19 downto 0);
  signal scale12_op_net_x0: std_logic_vector(19 downto 0);
  signal scale13_op_net_x0: std_logic_vector(19 downto 0);
  signal scale14_op_net_x0: std_logic_vector(19 downto 0);
  signal scale15_op_net_x0: std_logic_vector(19 downto 0);
  signal scale16_op_net_x0: std_logic_vector(19 downto 0);
  signal scale1_op_net_x0: std_logic_vector(19 downto 0);
  signal scale2_op_net_x0: std_logic_vector(19 downto 0);
  signal scale3_op_net_x0: std_logic_vector(19 downto 0);
  signal scale4_op_net_x0: std_logic_vector(19 downto 0);
  signal scale5_op_net_x0: std_logic_vector(19 downto 0);
  signal scale6_op_net_x0: std_logic_vector(19 downto 0);
  signal scale7_op_net_x0: std_logic_vector(19 downto 0);
  signal scale8_op_net_x0: std_logic_vector(19 downto 0);
  signal scale9_op_net_x0: std_logic_vector(19 downto 0);

begin
  concat_y_net_x3 <= din;
  dout <= concatenate_y_net_x4;

  bussify_86d4794b19: entity work.bussify_entity_cd2459b7b8
    port map (
      in1 => scale1_op_net_x0,
      in10 => scale10_op_net_x0,
      in11 => scale11_op_net_x0,
      in12 => scale12_op_net_x0,
      in13 => scale13_op_net_x0,
      in14 => scale14_op_net_x0,
      in15 => scale15_op_net_x0,
      in16 => scale16_op_net_x0,
      in2 => scale2_op_net_x0,
      in3 => scale3_op_net_x0,
      in4 => scale4_op_net_x0,
      in5 => scale5_op_net_x0,
      in6 => scale6_op_net_x0,
      in7 => scale7_op_net_x0,
      in8 => scale8_op_net_x0,
      in9 => scale9_op_net_x0,
      bus_out => concatenate_y_net_x4
    );

  debus_97f75a68bb: entity work.debus_entity_8b4658c1d8
    port map (
      bus_in => concat_y_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out16 => reinterpret16_output_port_net_x0,
      out10 => reinterpret10_output_port_net_x0,
      out11 => reinterpret11_output_port_net_x0,
      out12 => reinterpret12_output_port_net_x0,
      out13 => reinterpret13_output_port_net_x0,
      out14 => reinterpret14_output_port_net_x0,
      out15 => reinterpret15_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0,
      out4 => reinterpret4_output_port_net_x0,
      out5 => reinterpret5_output_port_net_x0,
      out6 => reinterpret6_output_port_net_x0,
      out7 => reinterpret7_output_port_net_x0,
      out8 => reinterpret8_output_port_net_x0,
      out9 => reinterpret9_output_port_net_x0
    );

  scale1: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret16_output_port_net_x0,
      op => scale1_op_net_x0
    );

  scale10: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret7_output_port_net_x0,
      op => scale10_op_net_x0
    );

  scale11: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret6_output_port_net_x0,
      op => scale11_op_net_x0
    );

  scale12: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret5_output_port_net_x0,
      op => scale12_op_net_x0
    );

  scale13: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret4_output_port_net_x0,
      op => scale13_op_net_x0
    );

  scale14: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret3_output_port_net_x0,
      op => scale14_op_net_x0
    );

  scale15: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret2_output_port_net_x0,
      op => scale15_op_net_x0
    );

  scale16: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret1_output_port_net_x0,
      op => scale16_op_net_x0
    );

  scale2: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret15_output_port_net_x0,
      op => scale2_op_net_x0
    );

  scale3: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret14_output_port_net_x0,
      op => scale3_op_net_x0
    );

  scale4: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret13_output_port_net_x0,
      op => scale4_op_net_x0
    );

  scale5: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret12_output_port_net_x0,
      op => scale5_op_net_x0
    );

  scale6: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret11_output_port_net_x0,
      op => scale6_op_net_x0
    );

  scale7: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret10_output_port_net_x0,
      op => scale7_op_net_x0
    );

  scale8: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret9_output_port_net_x0,
      op => scale8_op_net_x0
    );

  scale9: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret8_output_port_net_x0,
      op => scale9_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/bus_sub"

entity bus_sub_entity_c471a0f176 is
  port (
    a: in std_logic_vector(143 downto 0); 
    b: in std_logic_vector(151 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    dout: out std_logic_vector(159 downto 0)
  );
end bus_sub_entity_c471a0f176;

architecture structural of bus_sub_entity_c471a0f176 is
  signal addsub1_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub2_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub3_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub4_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub5_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub6_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub7_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub8_s_net_x0: std_logic_vector(19 downto 0);
  signal ce_1_sg_x277: std_logic;
  signal clk_1_sg_x277: std_logic;
  signal concatenate_y_net_x4: std_logic_vector(151 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(159 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret5_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret6_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret7_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret8_output_port_net_x1: std_logic_vector(18 downto 0);

begin
  reinterpret1_output_port_net_x5 <= a;
  concatenate_y_net_x4 <= b;
  ce_1_sg_x277 <= ce_1;
  clk_1_sg_x277 <= clk_1;
  dout <= concatenate_y_net_x5;

  a_debus_a66a1127e7: entity work.a_debus_entity_b79a0810db
    port map (
      bus_in => reinterpret1_output_port_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out8 => reinterpret8_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0,
      out4 => reinterpret4_output_port_net_x0,
      out5 => reinterpret5_output_port_net_x0,
      out6 => reinterpret6_output_port_net_x0,
      out7 => reinterpret7_output_port_net_x0
    );

  addsub1: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret8_output_port_net_x0,
      b => reinterpret8_output_port_net_x1,
      ce => ce_1_sg_x277,
      clk => clk_1_sg_x277,
      clr => '0',
      s => addsub1_s_net_x0
    );

  addsub2: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret7_output_port_net_x0,
      b => reinterpret7_output_port_net_x1,
      ce => ce_1_sg_x277,
      clk => clk_1_sg_x277,
      clr => '0',
      s => addsub2_s_net_x0
    );

  addsub3: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret6_output_port_net_x0,
      b => reinterpret6_output_port_net_x1,
      ce => ce_1_sg_x277,
      clk => clk_1_sg_x277,
      clr => '0',
      s => addsub3_s_net_x0
    );

  addsub4: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret5_output_port_net_x0,
      b => reinterpret5_output_port_net_x1,
      ce => ce_1_sg_x277,
      clk => clk_1_sg_x277,
      clr => '0',
      s => addsub4_s_net_x0
    );

  addsub5: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret4_output_port_net_x0,
      b => reinterpret4_output_port_net_x1,
      ce => ce_1_sg_x277,
      clk => clk_1_sg_x277,
      clr => '0',
      s => addsub5_s_net_x0
    );

  addsub6: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret3_output_port_net_x0,
      b => reinterpret3_output_port_net_x1,
      ce => ce_1_sg_x277,
      clk => clk_1_sg_x277,
      clr => '0',
      s => addsub6_s_net_x0
    );

  addsub7: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret2_output_port_net_x0,
      b => reinterpret2_output_port_net_x1,
      ce => ce_1_sg_x277,
      clk => clk_1_sg_x277,
      clr => '0',
      s => addsub7_s_net_x0
    );

  addsub8: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret1_output_port_net_x1,
      ce => ce_1_sg_x277,
      clk => clk_1_sg_x277,
      clr => '0',
      s => addsub8_s_net_x0
    );

  b_debus_b6dc43289f: entity work.b_debus_entity_c4afecffce
    port map (
      bus_in => concatenate_y_net_x4,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out8 => reinterpret8_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1,
      out4 => reinterpret4_output_port_net_x1,
      out5 => reinterpret5_output_port_net_x1,
      out6 => reinterpret6_output_port_net_x1,
      out7 => reinterpret7_output_port_net_x1
    );

  op_bussify_55568e4b7b: entity work.op_bussify_entity_86ae147e07
    port map (
      in1 => addsub1_s_net_x0,
      in2 => addsub2_s_net_x0,
      in3 => addsub3_s_net_x0,
      in4 => addsub4_s_net_x0,
      in5 => addsub5_s_net_x0,
      in6 => addsub6_s_net_x0,
      in7 => addsub7_s_net_x0,
      in8 => addsub8_s_net_x0,
      bus_out => concatenate_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/mux/d_bussify"

entity d_bussify_entity_591ecaefc8 is
  port (
    in1: in std_logic_vector(20 downto 0); 
    in10: in std_logic_vector(20 downto 0); 
    in11: in std_logic_vector(20 downto 0); 
    in12: in std_logic_vector(20 downto 0); 
    in13: in std_logic_vector(20 downto 0); 
    in14: in std_logic_vector(20 downto 0); 
    in15: in std_logic_vector(20 downto 0); 
    in16: in std_logic_vector(20 downto 0); 
    in2: in std_logic_vector(20 downto 0); 
    in3: in std_logic_vector(20 downto 0); 
    in4: in std_logic_vector(20 downto 0); 
    in5: in std_logic_vector(20 downto 0); 
    in6: in std_logic_vector(20 downto 0); 
    in7: in std_logic_vector(20 downto 0); 
    in8: in std_logic_vector(20 downto 0); 
    in9: in std_logic_vector(20 downto 0); 
    bus_out: out std_logic_vector(335 downto 0)
  );
end d_bussify_entity_591ecaefc8;

architecture structural of d_bussify_entity_591ecaefc8 is
  signal concatenate_y_net_x4: std_logic_vector(335 downto 0);
  signal mux0_y_net_x0: std_logic_vector(20 downto 0);
  signal mux10_y_net_x0: std_logic_vector(20 downto 0);
  signal mux11_y_net_x0: std_logic_vector(20 downto 0);
  signal mux12_y_net_x0: std_logic_vector(20 downto 0);
  signal mux13_y_net_x0: std_logic_vector(20 downto 0);
  signal mux14_y_net_x0: std_logic_vector(20 downto 0);
  signal mux15_y_net_x0: std_logic_vector(20 downto 0);
  signal mux1_y_net_x0: std_logic_vector(20 downto 0);
  signal mux2_y_net_x0: std_logic_vector(20 downto 0);
  signal mux3_y_net_x0: std_logic_vector(20 downto 0);
  signal mux4_y_net_x0: std_logic_vector(20 downto 0);
  signal mux5_y_net_x0: std_logic_vector(20 downto 0);
  signal mux6_y_net_x0: std_logic_vector(20 downto 0);
  signal mux7_y_net_x0: std_logic_vector(20 downto 0);
  signal mux8_y_net_x0: std_logic_vector(20 downto 0);
  signal mux9_y_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret10_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret11_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret12_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret13_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret14_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret15_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret16_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret9_output_port_net: std_logic_vector(20 downto 0);

begin
  mux0_y_net_x0 <= in1;
  mux9_y_net_x0 <= in10;
  mux10_y_net_x0 <= in11;
  mux11_y_net_x0 <= in12;
  mux12_y_net_x0 <= in13;
  mux13_y_net_x0 <= in14;
  mux14_y_net_x0 <= in15;
  mux15_y_net_x0 <= in16;
  mux1_y_net_x0 <= in2;
  mux2_y_net_x0 <= in3;
  mux3_y_net_x0 <= in4;
  mux4_y_net_x0 <= in5;
  mux5_y_net_x0 <= in6;
  mux6_y_net_x0 <= in7;
  mux7_y_net_x0 <= in8;
  mux8_y_net_x0 <= in9;
  bus_out <= concatenate_y_net_x4;

  concatenate: entity work.concat_59dd31cdf4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in10 => reinterpret11_output_port_net,
      in11 => reinterpret12_output_port_net,
      in12 => reinterpret13_output_port_net,
      in13 => reinterpret14_output_port_net,
      in14 => reinterpret15_output_port_net,
      in15 => reinterpret16_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      in8 => reinterpret9_output_port_net,
      in9 => reinterpret10_output_port_net,
      y => concatenate_y_net_x4
    );

  reinterpret1: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux0_y_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret10: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux9_y_net_x0,
      output_port => reinterpret10_output_port_net
    );

  reinterpret11: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux10_y_net_x0,
      output_port => reinterpret11_output_port_net
    );

  reinterpret12: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux11_y_net_x0,
      output_port => reinterpret12_output_port_net
    );

  reinterpret13: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux12_y_net_x0,
      output_port => reinterpret13_output_port_net
    );

  reinterpret14: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux13_y_net_x0,
      output_port => reinterpret14_output_port_net
    );

  reinterpret15: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux14_y_net_x0,
      output_port => reinterpret15_output_port_net
    );

  reinterpret16: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux15_y_net_x0,
      output_port => reinterpret16_output_port_net
    );

  reinterpret2: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux1_y_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux2_y_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux3_y_net_x0,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux4_y_net_x0,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux5_y_net_x0,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux6_y_net_x0,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux7_y_net_x0,
      output_port => reinterpret8_output_port_net
    );

  reinterpret9: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux8_y_net_x0,
      output_port => reinterpret9_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/mux/expand0"

entity expand0_entity_4e2a454712 is
  port (
    bus_in: in std_logic_vector(335 downto 0); 
    lsb_out1: out std_logic_vector(20 downto 0); 
    msb_out16: out std_logic_vector(20 downto 0); 
    out10: out std_logic_vector(20 downto 0); 
    out11: out std_logic_vector(20 downto 0); 
    out12: out std_logic_vector(20 downto 0); 
    out13: out std_logic_vector(20 downto 0); 
    out14: out std_logic_vector(20 downto 0); 
    out15: out std_logic_vector(20 downto 0); 
    out2: out std_logic_vector(20 downto 0); 
    out3: out std_logic_vector(20 downto 0); 
    out4: out std_logic_vector(20 downto 0); 
    out5: out std_logic_vector(20 downto 0); 
    out6: out std_logic_vector(20 downto 0); 
    out7: out std_logic_vector(20 downto 0); 
    out8: out std_logic_vector(20 downto 0); 
    out9: out std_logic_vector(20 downto 0)
  );
end expand0_entity_4e2a454712;

architecture structural of expand0_entity_4e2a454712 is
  signal concatenate_y_net_x2: std_logic_vector(335 downto 0);
  signal reinterpret10_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret11_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret12_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret13_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret14_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret15_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret16_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret9_output_port_net_x0: std_logic_vector(20 downto 0);
  signal slice10_y_net: std_logic_vector(20 downto 0);
  signal slice11_y_net: std_logic_vector(20 downto 0);
  signal slice12_y_net: std_logic_vector(20 downto 0);
  signal slice13_y_net: std_logic_vector(20 downto 0);
  signal slice14_y_net: std_logic_vector(20 downto 0);
  signal slice15_y_net: std_logic_vector(20 downto 0);
  signal slice16_y_net: std_logic_vector(20 downto 0);
  signal slice1_y_net: std_logic_vector(20 downto 0);
  signal slice2_y_net: std_logic_vector(20 downto 0);
  signal slice3_y_net: std_logic_vector(20 downto 0);
  signal slice4_y_net: std_logic_vector(20 downto 0);
  signal slice5_y_net: std_logic_vector(20 downto 0);
  signal slice6_y_net: std_logic_vector(20 downto 0);
  signal slice7_y_net: std_logic_vector(20 downto 0);
  signal slice8_y_net: std_logic_vector(20 downto 0);
  signal slice9_y_net: std_logic_vector(20 downto 0);

begin
  concatenate_y_net_x2 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out16 <= reinterpret16_output_port_net_x0;
  out10 <= reinterpret10_output_port_net_x0;
  out11 <= reinterpret11_output_port_net_x0;
  out12 <= reinterpret12_output_port_net_x0;
  out13 <= reinterpret13_output_port_net_x0;
  out14 <= reinterpret14_output_port_net_x0;
  out15 <= reinterpret15_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;
  out4 <= reinterpret4_output_port_net_x0;
  out5 <= reinterpret5_output_port_net_x0;
  out6 <= reinterpret6_output_port_net_x0;
  out7 <= reinterpret7_output_port_net_x0;
  out8 <= reinterpret8_output_port_net_x0;
  out9 <= reinterpret9_output_port_net_x0;

  reinterpret1: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret10: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice10_y_net,
      output_port => reinterpret10_output_port_net_x0
    );

  reinterpret11: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice11_y_net,
      output_port => reinterpret11_output_port_net_x0
    );

  reinterpret12: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice12_y_net,
      output_port => reinterpret12_output_port_net_x0
    );

  reinterpret13: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice13_y_net,
      output_port => reinterpret13_output_port_net_x0
    );

  reinterpret14: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice14_y_net,
      output_port => reinterpret14_output_port_net_x0
    );

  reinterpret15: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice15_y_net,
      output_port => reinterpret15_output_port_net_x0
    );

  reinterpret16: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice16_y_net,
      output_port => reinterpret16_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  reinterpret5: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_y_net,
      output_port => reinterpret5_output_port_net_x0
    );

  reinterpret6: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret6_output_port_net_x0
    );

  reinterpret7: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret7_output_port_net_x0
    );

  reinterpret8: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret8_output_port_net_x0
    );

  reinterpret9: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice9_y_net,
      output_port => reinterpret9_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 20,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice1_y_net
    );

  slice10: entity work.xlslice
    generic map (
      new_lsb => 189,
      new_msb => 209,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice10_y_net
    );

  slice11: entity work.xlslice
    generic map (
      new_lsb => 210,
      new_msb => 230,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice11_y_net
    );

  slice12: entity work.xlslice
    generic map (
      new_lsb => 231,
      new_msb => 251,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice12_y_net
    );

  slice13: entity work.xlslice
    generic map (
      new_lsb => 252,
      new_msb => 272,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice13_y_net
    );

  slice14: entity work.xlslice
    generic map (
      new_lsb => 273,
      new_msb => 293,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice14_y_net
    );

  slice15: entity work.xlslice
    generic map (
      new_lsb => 294,
      new_msb => 314,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice15_y_net
    );

  slice16: entity work.xlslice
    generic map (
      new_lsb => 315,
      new_msb => 335,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice16_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 21,
      new_msb => 41,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 42,
      new_msb => 62,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 63,
      new_msb => 83,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 84,
      new_msb => 104,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 105,
      new_msb => 125,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 126,
      new_msb => 146,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 147,
      new_msb => 167,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice8_y_net
    );

  slice9: entity work.xlslice
    generic map (
      new_lsb => 168,
      new_msb => 188,
      x_width => 336,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice9_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/mux"

entity mux_entity_bd9bbc285a is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d0: in std_logic_vector(335 downto 0); 
    d1: in std_logic_vector(335 downto 0); 
    sel: in std_logic_vector(15 downto 0); 
    out_x0: out std_logic_vector(335 downto 0)
  );
end mux_entity_bd9bbc285a;

architecture structural of mux_entity_bd9bbc285a is
  signal ce_1_sg_x278: std_logic;
  signal clk_1_sg_x278: std_logic;
  signal concatenate_y_net_x6: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(335 downto 0);
  signal mux0_y_net_x0: std_logic_vector(20 downto 0);
  signal mux10_y_net_x0: std_logic_vector(20 downto 0);
  signal mux11_y_net_x0: std_logic_vector(20 downto 0);
  signal mux12_y_net_x0: std_logic_vector(20 downto 0);
  signal mux13_y_net_x0: std_logic_vector(20 downto 0);
  signal mux14_y_net_x0: std_logic_vector(20 downto 0);
  signal mux15_y_net_x0: std_logic_vector(20 downto 0);
  signal mux1_y_net_x0: std_logic_vector(20 downto 0);
  signal mux2_y_net_x0: std_logic_vector(20 downto 0);
  signal mux3_y_net_x0: std_logic_vector(20 downto 0);
  signal mux4_y_net_x0: std_logic_vector(20 downto 0);
  signal mux5_y_net_x0: std_logic_vector(20 downto 0);
  signal mux6_y_net_x0: std_logic_vector(20 downto 0);
  signal mux7_y_net_x0: std_logic_vector(20 downto 0);
  signal mux8_y_net_x0: std_logic_vector(20 downto 0);
  signal mux9_y_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret10_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret10_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret10_output_port_net_x2: std_logic;
  signal reinterpret11_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret11_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret11_output_port_net_x2: std_logic;
  signal reinterpret12_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret12_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret12_output_port_net_x2: std_logic;
  signal reinterpret13_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret13_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret13_output_port_net_x2: std_logic;
  signal reinterpret14_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret14_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret14_output_port_net_x2: std_logic;
  signal reinterpret15_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret15_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret15_output_port_net_x2: std_logic;
  signal reinterpret16_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret16_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret16_output_port_net_x2: std_logic;
  signal reinterpret1_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic;
  signal reinterpret2_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic;
  signal reinterpret3_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic;
  signal reinterpret4_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic;
  signal reinterpret5_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret5_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret5_output_port_net_x2: std_logic;
  signal reinterpret6_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret6_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret6_output_port_net_x2: std_logic;
  signal reinterpret7_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret7_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret7_output_port_net_x2: std_logic;
  signal reinterpret8_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret8_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret8_output_port_net_x2: std_logic;
  signal reinterpret9_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret9_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret9_output_port_net_x2: std_logic;

begin
  ce_1_sg_x278 <= ce_1;
  clk_1_sg_x278 <= clk_1;
  concatenate_y_net_x6 <= d0;
  concatenate_y_net_x7 <= d1;
  concatenate_y_net_x8 <= sel;
  out_x0 <= concatenate_y_net_x9;

  d_bussify_591ecaefc8: entity work.d_bussify_entity_591ecaefc8
    port map (
      in1 => mux0_y_net_x0,
      in10 => mux9_y_net_x0,
      in11 => mux10_y_net_x0,
      in12 => mux11_y_net_x0,
      in13 => mux12_y_net_x0,
      in14 => mux13_y_net_x0,
      in15 => mux14_y_net_x0,
      in16 => mux15_y_net_x0,
      in2 => mux1_y_net_x0,
      in3 => mux2_y_net_x0,
      in4 => mux3_y_net_x0,
      in5 => mux4_y_net_x0,
      in6 => mux5_y_net_x0,
      in7 => mux6_y_net_x0,
      in8 => mux7_y_net_x0,
      in9 => mux8_y_net_x0,
      bus_out => concatenate_y_net_x9
    );

  expand0_4e2a454712: entity work.expand0_entity_4e2a454712
    port map (
      bus_in => concatenate_y_net_x6,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out16 => reinterpret16_output_port_net_x0,
      out10 => reinterpret10_output_port_net_x0,
      out11 => reinterpret11_output_port_net_x0,
      out12 => reinterpret12_output_port_net_x0,
      out13 => reinterpret13_output_port_net_x0,
      out14 => reinterpret14_output_port_net_x0,
      out15 => reinterpret15_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0,
      out4 => reinterpret4_output_port_net_x0,
      out5 => reinterpret5_output_port_net_x0,
      out6 => reinterpret6_output_port_net_x0,
      out7 => reinterpret7_output_port_net_x0,
      out8 => reinterpret8_output_port_net_x0,
      out9 => reinterpret9_output_port_net_x0
    );

  expand1_62d59d2497: entity work.expand0_entity_4e2a454712
    port map (
      bus_in => concatenate_y_net_x7,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out16 => reinterpret16_output_port_net_x1,
      out10 => reinterpret10_output_port_net_x1,
      out11 => reinterpret11_output_port_net_x1,
      out12 => reinterpret12_output_port_net_x1,
      out13 => reinterpret13_output_port_net_x1,
      out14 => reinterpret14_output_port_net_x1,
      out15 => reinterpret15_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1,
      out4 => reinterpret4_output_port_net_x1,
      out5 => reinterpret5_output_port_net_x1,
      out6 => reinterpret6_output_port_net_x1,
      out7 => reinterpret7_output_port_net_x1,
      out8 => reinterpret8_output_port_net_x1,
      out9 => reinterpret9_output_port_net_x1
    );

  mux0: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x278,
      clk => clk_1_sg_x278,
      clr => '0',
      d0 => reinterpret16_output_port_net_x0,
      d1 => reinterpret16_output_port_net_x1,
      sel(0) => reinterpret16_output_port_net_x2,
      y => mux0_y_net_x0
    );

  mux1: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x278,
      clk => clk_1_sg_x278,
      clr => '0',
      d0 => reinterpret15_output_port_net_x0,
      d1 => reinterpret15_output_port_net_x1,
      sel(0) => reinterpret15_output_port_net_x2,
      y => mux1_y_net_x0
    );

  mux10: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x278,
      clk => clk_1_sg_x278,
      clr => '0',
      d0 => reinterpret6_output_port_net_x0,
      d1 => reinterpret6_output_port_net_x1,
      sel(0) => reinterpret6_output_port_net_x2,
      y => mux10_y_net_x0
    );

  mux11: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x278,
      clk => clk_1_sg_x278,
      clr => '0',
      d0 => reinterpret5_output_port_net_x0,
      d1 => reinterpret5_output_port_net_x1,
      sel(0) => reinterpret5_output_port_net_x2,
      y => mux11_y_net_x0
    );

  mux12: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x278,
      clk => clk_1_sg_x278,
      clr => '0',
      d0 => reinterpret4_output_port_net_x0,
      d1 => reinterpret4_output_port_net_x1,
      sel(0) => reinterpret4_output_port_net_x2,
      y => mux12_y_net_x0
    );

  mux13: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x278,
      clk => clk_1_sg_x278,
      clr => '0',
      d0 => reinterpret3_output_port_net_x0,
      d1 => reinterpret3_output_port_net_x1,
      sel(0) => reinterpret3_output_port_net_x2,
      y => mux13_y_net_x0
    );

  mux14: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x278,
      clk => clk_1_sg_x278,
      clr => '0',
      d0 => reinterpret2_output_port_net_x0,
      d1 => reinterpret2_output_port_net_x1,
      sel(0) => reinterpret2_output_port_net_x2,
      y => mux14_y_net_x0
    );

  mux15: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x278,
      clk => clk_1_sg_x278,
      clr => '0',
      d0 => reinterpret1_output_port_net_x0,
      d1 => reinterpret1_output_port_net_x1,
      sel(0) => reinterpret1_output_port_net_x2,
      y => mux15_y_net_x0
    );

  mux2: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x278,
      clk => clk_1_sg_x278,
      clr => '0',
      d0 => reinterpret14_output_port_net_x0,
      d1 => reinterpret14_output_port_net_x1,
      sel(0) => reinterpret14_output_port_net_x2,
      y => mux2_y_net_x0
    );

  mux3: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x278,
      clk => clk_1_sg_x278,
      clr => '0',
      d0 => reinterpret13_output_port_net_x0,
      d1 => reinterpret13_output_port_net_x1,
      sel(0) => reinterpret13_output_port_net_x2,
      y => mux3_y_net_x0
    );

  mux4: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x278,
      clk => clk_1_sg_x278,
      clr => '0',
      d0 => reinterpret12_output_port_net_x0,
      d1 => reinterpret12_output_port_net_x1,
      sel(0) => reinterpret12_output_port_net_x2,
      y => mux4_y_net_x0
    );

  mux5: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x278,
      clk => clk_1_sg_x278,
      clr => '0',
      d0 => reinterpret11_output_port_net_x0,
      d1 => reinterpret11_output_port_net_x1,
      sel(0) => reinterpret11_output_port_net_x2,
      y => mux5_y_net_x0
    );

  mux6: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x278,
      clk => clk_1_sg_x278,
      clr => '0',
      d0 => reinterpret10_output_port_net_x0,
      d1 => reinterpret10_output_port_net_x1,
      sel(0) => reinterpret10_output_port_net_x2,
      y => mux6_y_net_x0
    );

  mux7: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x278,
      clk => clk_1_sg_x278,
      clr => '0',
      d0 => reinterpret9_output_port_net_x0,
      d1 => reinterpret9_output_port_net_x1,
      sel(0) => reinterpret9_output_port_net_x2,
      y => mux7_y_net_x0
    );

  mux8: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x278,
      clk => clk_1_sg_x278,
      clr => '0',
      d0 => reinterpret8_output_port_net_x0,
      d1 => reinterpret8_output_port_net_x1,
      sel(0) => reinterpret8_output_port_net_x2,
      y => mux8_y_net_x0
    );

  mux9: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x278,
      clk => clk_1_sg_x278,
      clr => '0',
      d0 => reinterpret7_output_port_net_x0,
      d1 => reinterpret7_output_port_net_x1,
      sel(0) => reinterpret7_output_port_net_x2,
      y => mux9_y_net_x0
    );

  sel_expand_9915316824: entity work.sel_expand_entity_3ebf81fe34
    port map (
      bus_in => concatenate_y_net_x8,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out16 => reinterpret16_output_port_net_x2,
      out10 => reinterpret10_output_port_net_x2,
      out11 => reinterpret11_output_port_net_x2,
      out12 => reinterpret12_output_port_net_x2,
      out13 => reinterpret13_output_port_net_x2,
      out14 => reinterpret14_output_port_net_x2,
      out15 => reinterpret15_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x2,
      out4 => reinterpret4_output_port_net_x2,
      out5 => reinterpret5_output_port_net_x2,
      out6 => reinterpret6_output_port_net_x2,
      out7 => reinterpret7_output_port_net_x2,
      out8 => reinterpret8_output_port_net_x2,
      out9 => reinterpret9_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/twiddle/bus_convert/conv1"

entity conv1_entity_da7c425d8c is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(36 downto 0); 
    out_x0: out std_logic_vector(18 downto 0)
  );
end conv1_entity_da7c425d8c;

architecture structural of conv1_entity_da7c425d8c is
  signal adder_s_net_x8: std_logic_vector(18 downto 0);
  signal almost_half_op_net: std_logic_vector(34 downto 0);
  signal bit_y_net: std_logic;
  signal ce_1_sg_x280: std_logic;
  signal clk_1_sg_x280: std_logic;
  signal concat_y_net: std_logic_vector(37 downto 0);
  signal constant_op_net: std_logic;
  signal force1_output_port_net: std_logic_vector(37 downto 0);
  signal force2_output_port_net: std_logic_vector(34 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(36 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(36 downto 0);
  signal tweak_op_y_net: std_logic;

begin
  ce_1_sg_x280 <= ce_1;
  clk_1_sg_x280 <= clk_1;
  reinterpret8_output_port_net_x0 <= in_x0;
  out_x0 <= adder_s_net_x8;

  adder: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 35,
      a_width => 38,
      b_arith => xlUnsigned,
      b_bin_pt => 35,
      b_width => 35,
      c_has_c_out => 0,
      c_latency => 2,
      c_output_width => 39,
      core_name0 => "addsb_11_0_14f58d3187abde45",
      extra_registers => 1,
      full_s_arith => 2,
      full_s_width => 39,
      latency => 3,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 17,
      s_width => 19
    )
    port map (
      a => force1_output_port_net,
      b => force2_output_port_net,
      ce => ce_1_sg_x280,
      clk => clk_1_sg_x280,
      clr => '0',
      en => "1",
      s => adder_s_net_x8
    );

  almost_half: entity work.constant_2da6af93c2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => almost_half_op_net
    );

  bit: entity work.xlslice
    generic map (
      new_lsb => 17,
      new_msb => 17,
      x_width => 37,
      y_width => 1
    )
    port map (
      x => reinterpret8_output_port_net_x0,
      y(0) => bit_y_net
    );

  concat: entity work.concat_83820b2faf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret_output_port_net,
      in1(0) => tweak_op_y_net,
      y => concat_y_net
    );

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  force1: entity work.reinterpret_620dd01637
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net,
      output_port => force1_output_port_net
    );

  force2: entity work.reinterpret_ec14c62a89
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => almost_half_op_net,
      output_port => force2_output_port_net
    );

  reinterpret: entity work.reinterpret_db4c53ade5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret8_output_port_net_x0,
      output_port => reinterpret_output_port_net
    );

  tweak_op: entity work.logical_938d99ac11
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => bit_y_net,
      d1(0) => constant_op_net,
      y(0) => tweak_op_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/twiddle/bus_convert/debus"

entity debus_entity_b09e5ff0e4 is
  port (
    bus_in: in std_logic_vector(295 downto 0); 
    lsb_out1: out std_logic_vector(36 downto 0); 
    msb_out8: out std_logic_vector(36 downto 0); 
    out2: out std_logic_vector(36 downto 0); 
    out3: out std_logic_vector(36 downto 0); 
    out4: out std_logic_vector(36 downto 0); 
    out5: out std_logic_vector(36 downto 0); 
    out6: out std_logic_vector(36 downto 0); 
    out7: out std_logic_vector(36 downto 0)
  );
end debus_entity_b09e5ff0e4;

architecture structural of debus_entity_b09e5ff0e4 is
  signal concatenate_y_net_x0: std_logic_vector(295 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret5_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret6_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret7_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret8_output_port_net_x1: std_logic_vector(36 downto 0);
  signal slice1_y_net: std_logic_vector(36 downto 0);
  signal slice2_y_net: std_logic_vector(36 downto 0);
  signal slice3_y_net: std_logic_vector(36 downto 0);
  signal slice4_y_net: std_logic_vector(36 downto 0);
  signal slice5_y_net: std_logic_vector(36 downto 0);
  signal slice6_y_net: std_logic_vector(36 downto 0);
  signal slice7_y_net: std_logic_vector(36 downto 0);
  signal slice8_y_net: std_logic_vector(36 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x1;
  msb_out8 <= reinterpret8_output_port_net_x1;
  out2 <= reinterpret2_output_port_net_x1;
  out3 <= reinterpret3_output_port_net_x1;
  out4 <= reinterpret4_output_port_net_x1;
  out5 <= reinterpret5_output_port_net_x1;
  out6 <= reinterpret6_output_port_net_x1;
  out7 <= reinterpret7_output_port_net_x1;

  reinterpret1: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x1
    );

  reinterpret2: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x1
    );

  reinterpret3: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x1
    );

  reinterpret4: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x1
    );

  reinterpret5: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_y_net,
      output_port => reinterpret5_output_port_net_x1
    );

  reinterpret6: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret6_output_port_net_x1
    );

  reinterpret7: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret7_output_port_net_x1
    );

  reinterpret8: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret8_output_port_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 36,
      x_width => 296,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 37,
      new_msb => 73,
      x_width => 296,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 74,
      new_msb => 110,
      x_width => 296,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 111,
      new_msb => 147,
      x_width => 296,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 148,
      new_msb => 184,
      x_width => 296,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 185,
      new_msb => 221,
      x_width => 296,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 222,
      new_msb => 258,
      x_width => 296,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 259,
      new_msb => 295,
      x_width => 296,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice8_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/twiddle/bus_convert"

entity bus_convert_entity_fc9d20fae7 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(295 downto 0); 
    misci: in std_logic_vector(144 downto 0); 
    dout: out std_logic_vector(151 downto 0); 
    misco: out std_logic_vector(144 downto 0)
  );
end bus_convert_entity_fc9d20fae7;

architecture structural of bus_convert_entity_fc9d20fae7 is
  signal adder_s_net_x10: std_logic_vector(18 downto 0);
  signal adder_s_net_x11: std_logic_vector(18 downto 0);
  signal adder_s_net_x12: std_logic_vector(18 downto 0);
  signal adder_s_net_x13: std_logic_vector(18 downto 0);
  signal adder_s_net_x14: std_logic_vector(18 downto 0);
  signal adder_s_net_x15: std_logic_vector(18 downto 0);
  signal adder_s_net_x8: std_logic_vector(18 downto 0);
  signal adder_s_net_x9: std_logic_vector(18 downto 0);
  signal ce_1_sg_x288: std_logic;
  signal clk_1_sg_x288: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(295 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(151 downto 0);
  signal dmisc_q_net_x1: std_logic_vector(144 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(144 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret5_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret6_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret7_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret8_output_port_net_x1: std_logic_vector(36 downto 0);

begin
  ce_1_sg_x288 <= ce_1;
  clk_1_sg_x288 <= clk_1;
  concatenate_y_net_x1 <= din;
  dmisc_q_net_x1 <= misci;
  dout <= concatenate_y_net_x6;
  misco <= dmisc_q_net_x2;

  bussify_c8565db3d1: entity work.op_bussify_entity_5ed58d1c87
    port map (
      in1 => adder_s_net_x8,
      in2 => adder_s_net_x9,
      in3 => adder_s_net_x10,
      in4 => adder_s_net_x11,
      in5 => adder_s_net_x12,
      in6 => adder_s_net_x13,
      in7 => adder_s_net_x14,
      in8 => adder_s_net_x15,
      bus_out => concatenate_y_net_x6
    );

  conv1_da7c425d8c: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x288,
      clk_1 => clk_1_sg_x288,
      in_x0 => reinterpret8_output_port_net_x1,
      out_x0 => adder_s_net_x8
    );

  conv2_1a2f87e108: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x288,
      clk_1 => clk_1_sg_x288,
      in_x0 => reinterpret7_output_port_net_x1,
      out_x0 => adder_s_net_x9
    );

  conv3_245bc92d63: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x288,
      clk_1 => clk_1_sg_x288,
      in_x0 => reinterpret6_output_port_net_x1,
      out_x0 => adder_s_net_x10
    );

  conv4_ddca1ca621: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x288,
      clk_1 => clk_1_sg_x288,
      in_x0 => reinterpret5_output_port_net_x1,
      out_x0 => adder_s_net_x11
    );

  conv5_94e271804c: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x288,
      clk_1 => clk_1_sg_x288,
      in_x0 => reinterpret4_output_port_net_x1,
      out_x0 => adder_s_net_x12
    );

  conv6_f89df82d8b: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x288,
      clk_1 => clk_1_sg_x288,
      in_x0 => reinterpret3_output_port_net_x1,
      out_x0 => adder_s_net_x13
    );

  conv7_2c18fea71e: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x288,
      clk_1 => clk_1_sg_x288,
      in_x0 => reinterpret2_output_port_net_x1,
      out_x0 => adder_s_net_x14
    );

  conv8_921adeec77: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x288,
      clk_1 => clk_1_sg_x288,
      in_x0 => reinterpret1_output_port_net_x1,
      out_x0 => adder_s_net_x15
    );

  debus_b09e5ff0e4: entity work.debus_entity_b09e5ff0e4
    port map (
      bus_in => concatenate_y_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out8 => reinterpret8_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1,
      out4 => reinterpret4_output_port_net_x1,
      out5 => reinterpret5_output_port_net_x1,
      out6 => reinterpret6_output_port_net_x1,
      out7 => reinterpret7_output_port_net_x1
    );

  dmisc: entity work.delay_c52fce8d02
    port map (
      ce => ce_1_sg_x288,
      clk => clk_1_sg_x288,
      clr => '0',
      d => dmisc_q_net_x1,
      q => dmisc_q_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/twiddle/bus_create"

entity bus_create_entity_3d2f105ae8 is
  port (
    in1: in std_logic_vector(143 downto 0); 
    in2: in std_logic; 
    in3: in std_logic_vector(143 downto 0); 
    bus_out: out std_logic_vector(288 downto 0)
  );
end bus_create_entity_3d2f105ae8;

architecture structural of bus_create_entity_3d2f105ae8 is
  signal concatenate_y_net_x1: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(288 downto 0);
  signal dmux0_q_net_x0: std_logic_vector(143 downto 0);
  signal mux_y_net_x0: std_logic;
  signal reinterpret1_output_port_net: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net: std_logic;
  signal reinterpret3_output_port_net: std_logic_vector(143 downto 0);

begin
  dmux0_q_net_x0 <= in1;
  mux_y_net_x0 <= in2;
  concatenate_y_net_x1 <= in3;
  bus_out <= concatenate_y_net_x2;

  concatenate: entity work.concat_671fe83589
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1(0) => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      y => concatenate_y_net_x2
    );

  reinterpret1: entity work.reinterpret_d35711d5ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => dmux0_q_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => mux_y_net_x0,
      output_port(0) => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_d35711d5ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concatenate_y_net_x1,
      output_port => reinterpret3_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/twiddle/bus_expand"

entity bus_expand_entity_1995b7ac80 is
  port (
    bus_in: in std_logic_vector(288 downto 0); 
    lsb_out1: out std_logic_vector(144 downto 0); 
    msb_out2: out std_logic_vector(143 downto 0)
  );
end bus_expand_entity_1995b7ac80;

architecture structural of bus_expand_entity_1995b7ac80 is
  signal delay1_q_net_x0: std_logic_vector(288 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(144 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(143 downto 0);
  signal slice1_y_net: std_logic_vector(144 downto 0);
  signal slice2_y_net: std_logic_vector(143 downto 0);

begin
  delay1_q_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out2 <= reinterpret2_output_port_net_x0;

  reinterpret1: entity work.reinterpret_341d1e6e2c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_d35711d5ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 144,
      x_width => 289,
      y_width => 145
    )
    port map (
      x => delay1_q_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 145,
      new_msb => 288,
      x_width => 289,
      y_width => 144
    )
    port map (
      x => delay1_q_net_x0,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/twiddle/bus_expand1"

entity bus_expand1_entity_0d80282e07 is
  port (
    bus_in: in std_logic_vector(144 downto 0); 
    lsb_out1: out std_logic_vector(143 downto 0); 
    msb_out2: out std_logic
  );
end bus_expand1_entity_0d80282e07;

architecture structural of bus_expand1_entity_0d80282e07 is
  signal dmisc_q_net_x3: std_logic_vector(144 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic_vector(143 downto 0);
  signal slice1_y_net: std_logic_vector(143 downto 0);
  signal slice2_y_net_x0: std_logic;

begin
  dmisc_q_net_x3 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x6;
  msb_out2 <= slice2_y_net_x0;

  reinterpret1: entity work.reinterpret_d35711d5ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x6
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 143,
      x_width => 145,
      y_width => 144
    )
    port map (
      x => dmisc_q_net_x3,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 144,
      new_msb => 144,
      x_width => 145,
      y_width => 1
    )
    port map (
      x => dmisc_q_net_x3,
      y(0) => slice2_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/twiddle/bus_mult/a*b_bussify"

entity a_b_bussify_entity_7f35de9aa8 is
  port (
    in1: in std_logic_vector(73 downto 0); 
    in2: in std_logic_vector(73 downto 0); 
    in3: in std_logic_vector(73 downto 0); 
    in4: in std_logic_vector(73 downto 0); 
    bus_out: out std_logic_vector(295 downto 0)
  );
end a_b_bussify_entity_7f35de9aa8;

architecture structural of a_b_bussify_entity_7f35de9aa8 is
  signal concat_y_net_x3: std_logic_vector(73 downto 0);
  signal concat_y_net_x4: std_logic_vector(73 downto 0);
  signal concat_y_net_x5: std_logic_vector(73 downto 0);
  signal concat_y_net_x6: std_logic_vector(73 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(295 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(73 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(73 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(73 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(73 downto 0);

begin
  concat_y_net_x3 <= in1;
  concat_y_net_x4 <= in2;
  concat_y_net_x5 <= in3;
  concat_y_net_x6 <= in4;
  bus_out <= concatenate_y_net_x2;

  concatenate: entity work.concat_d67a480105
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concatenate_y_net_x2
    );

  reinterpret1: entity work.reinterpret_efdf1c3890
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net_x3,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_efdf1c3890
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net_x4,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_efdf1c3890
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net_x5,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_efdf1c3890
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net_x6,
      output_port => reinterpret4_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/twiddle/bus_mult/a_debus"

entity a_debus_entity_43e449aa4c is
  port (
    bus_in: in std_logic_vector(35 downto 0); 
    msb_lsb_out1: out std_logic_vector(35 downto 0)
  );
end a_debus_entity_43e449aa4c;

architecture structural of a_debus_entity_43e449aa4c is
  signal reinterpret1_output_port_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(35 downto 0);
  signal slice1_y_net: std_logic_vector(35 downto 0);

begin
  reinterpret1_output_port_net_x1 <= bus_in;
  msb_lsb_out1 <= reinterpret1_output_port_net_x2;

  reinterpret1: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 35,
      x_width => 36,
      y_width => 36
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice1_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/twiddle/bus_mult/mult1/a_replicate/bussify"

entity bussify_entity_aad5f56754 is
  port (
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    bus_out: out std_logic_vector(71 downto 0)
  );
end bussify_entity_aad5f56754;

architecture structural of bussify_entity_aad5f56754 is
  signal concatenate_y_net_x1: std_logic_vector(71 downto 0);
  signal din0_0_q_net_x0: std_logic_vector(35 downto 0);
  signal din0_1_q_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(35 downto 0);

begin
  din0_0_q_net_x0 <= in1;
  din0_1_q_net_x0 <= in2;
  bus_out <= concatenate_y_net_x1;

  concatenate: entity work.concat_c3ccc04d1a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concatenate_y_net_x1
    );

  reinterpret1: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din0_0_q_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din0_1_q_net_x0,
      output_port => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/twiddle/bus_mult/mult1/a_replicate"

entity a_replicate_entity_38ec1bb0d8 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(35 downto 0); 
    out_x0: out std_logic_vector(71 downto 0)
  );
end a_replicate_entity_38ec1bb0d8;

architecture structural of a_replicate_entity_38ec1bb0d8 is
  signal ce_1_sg_x289: std_logic;
  signal clk_1_sg_x289: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(71 downto 0);
  signal din0_0_q_net_x0: std_logic_vector(35 downto 0);
  signal din0_1_q_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x289 <= ce_1;
  clk_1_sg_x289 <= clk_1;
  reinterpret1_output_port_net_x3 <= in_x0;
  out_x0 <= concatenate_y_net_x2;

  bussify_aad5f56754: entity work.bussify_entity_aad5f56754
    port map (
      in1 => din0_0_q_net_x0,
      in2 => din0_1_q_net_x0,
      bus_out => concatenate_y_net_x2
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x289,
      clk => clk_1_sg_x289,
      d => reinterpret1_output_port_net_x3,
      en => '1',
      rst => '1',
      q => din0_0_q_net_x0
    );

  din0_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x289,
      clk => clk_1_sg_x289,
      d => reinterpret1_output_port_net_x3,
      en => '1',
      rst => '1',
      q => din0_1_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/twiddle/bus_mult/mult1/ri_to_c"

entity ri_to_c_entity_c7da1e00c2 is
  port (
    im: in std_logic_vector(36 downto 0); 
    re: in std_logic_vector(36 downto 0); 
    c: out std_logic_vector(73 downto 0)
  );
end ri_to_c_entity_c7da1e00c2;

architecture structural of ri_to_c_entity_c7da1e00c2 is
  signal concat_y_net_x4: std_logic_vector(73 downto 0);
  signal convert_im_dout_net_x0: std_logic_vector(36 downto 0);
  signal convert_re_dout_net_x0: std_logic_vector(36 downto 0);
  signal force_im_output_port_net: std_logic_vector(36 downto 0);
  signal force_re_output_port_net: std_logic_vector(36 downto 0);

begin
  convert_im_dout_net_x0 <= im;
  convert_re_dout_net_x0 <= re;
  c <= concat_y_net_x4;

  concat: entity work.concat_56d57d2c92
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => force_re_output_port_net,
      in1 => force_im_output_port_net,
      y => concat_y_net_x4
    );

  force_im: entity work.reinterpret_db4c53ade5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert_im_dout_net_x0,
      output_port => force_im_output_port_net
    );

  force_re: entity work.reinterpret_db4c53ade5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => convert_re_dout_net_x0,
      output_port => force_re_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/twiddle/bus_mult/mult1"

entity mult1_entity_675dd78166 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    ab: out std_logic_vector(73 downto 0)
  );
end mult1_entity_675dd78166;

architecture structural of mult1_entity_675dd78166 is
  signal addsub_im_s_net: std_logic_vector(36 downto 0);
  signal addsub_re_s_net: std_logic_vector(36 downto 0);
  signal ce_1_sg_x291: std_logic;
  signal clk_1_sg_x291: std_logic;
  signal concat_y_net_x5: std_logic_vector(73 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(71 downto 0);
  signal convert_im_dout_net_x0: std_logic_vector(36 downto 0);
  signal convert_re_dout_net_x0: std_logic_vector(36 downto 0);
  signal imim_p_net: std_logic_vector(35 downto 0);
  signal imre_p_net: std_logic_vector(35 downto 0);
  signal reim_p_net: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x3: std_logic_vector(35 downto 0);
  signal rere_p_net: std_logic_vector(35 downto 0);

begin
  reinterpret1_output_port_net_x5 <= a;
  reinterpret4_output_port_net_x3 <= b;
  ce_1_sg_x291 <= ce_1;
  clk_1_sg_x291 <= clk_1;
  ab <= concat_y_net_x5;

  a_expand_75114129f3: entity work.a_debus_entity_659a478c77
    port map (
      bus_in => concatenate_y_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  a_replicate_38ec1bb0d8: entity work.a_replicate_entity_38ec1bb0d8
    port map (
      ce_1 => ce_1_sg_x291,
      clk_1 => clk_1_sg_x291,
      in_x0 => reinterpret1_output_port_net_x5,
      out_x0 => concatenate_y_net_x2
    );

  addsub_im: entity work.addsub_44b396c607
    port map (
      a => imre_p_net,
      b => reim_p_net,
      ce => ce_1_sg_x291,
      clk => clk_1_sg_x291,
      clr => '0',
      s => addsub_im_s_net
    );

  addsub_re: entity work.addsub_74747a130a
    port map (
      a => rere_p_net,
      b => imim_p_net,
      ce => ce_1_sg_x291,
      clk => clk_1_sg_x291,
      clr => '0',
      s => addsub_re_s_net
    );

  b_expand_feba913c60: entity work.a_debus_entity_659a478c77
    port map (
      bus_in => concatenate_y_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x4,
      msb_out4 => reinterpret4_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1
    );

  b_replicate_cef4b283e0: entity work.a_replicate_entity_38ec1bb0d8
    port map (
      ce_1 => ce_1_sg_x291,
      clk_1 => clk_1_sg_x291,
      in_x0 => reinterpret4_output_port_net_x3,
      out_x0 => concatenate_y_net_x3
    );

  convert_im: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 34,
      din_width => 37,
      dout_arith => 2,
      dout_bin_pt => 34,
      dout_width => 37,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x291,
      clk => clk_1_sg_x291,
      clr => '0',
      din => addsub_im_s_net,
      en => "1",
      dout => convert_im_dout_net_x0
    );

  convert_re: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 34,
      din_width => 37,
      dout_arith => 2,
      dout_bin_pt => 34,
      dout_width => 37,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x291,
      clk => clk_1_sg_x291,
      clr => '0',
      din => addsub_re_s_net,
      en => "1",
      dout => convert_re_dout_net_x0
    );

  imim: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_a_type => 0,
      c_a_width => 18,
      c_b_type => 0,
      c_b_width => 18,
      c_baat => 18,
      c_output_width => 36,
      c_type => 0,
      core_name0 => "mult_11_2_ecdcb40ad0958e64",
      extra_registers => 0,
      multsign => 2,
      overflow => 1,
      p_arith => xlSigned,
      p_bin_pt => 34,
      p_width => 36,
      quantization => 1
    )
    port map (
      a => reinterpret3_output_port_net_x0,
      b => reinterpret3_output_port_net_x1,
      ce => ce_1_sg_x291,
      clk => clk_1_sg_x291,
      clr => '0',
      core_ce => ce_1_sg_x291,
      core_clk => clk_1_sg_x291,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => imim_p_net
    );

  imre: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_a_type => 0,
      c_a_width => 18,
      c_b_type => 0,
      c_b_width => 18,
      c_baat => 18,
      c_output_width => 36,
      c_type => 0,
      core_name0 => "mult_11_2_ecdcb40ad0958e64",
      extra_registers => 0,
      multsign => 2,
      overflow => 1,
      p_arith => xlSigned,
      p_bin_pt => 34,
      p_width => 36,
      quantization => 1
    )
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret2_output_port_net_x1,
      ce => ce_1_sg_x291,
      clk => clk_1_sg_x291,
      clr => '0',
      core_ce => ce_1_sg_x291,
      core_clk => clk_1_sg_x291,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => imre_p_net
    );

  reim: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_a_type => 0,
      c_a_width => 18,
      c_b_type => 0,
      c_b_width => 18,
      c_baat => 18,
      c_output_width => 36,
      c_type => 0,
      core_name0 => "mult_11_2_ecdcb40ad0958e64",
      extra_registers => 0,
      multsign => 2,
      overflow => 1,
      p_arith => xlSigned,
      p_bin_pt => 34,
      p_width => 36,
      quantization => 1
    )
    port map (
      a => reinterpret2_output_port_net_x0,
      b => reinterpret1_output_port_net_x4,
      ce => ce_1_sg_x291,
      clk => clk_1_sg_x291,
      clr => '0',
      core_ce => ce_1_sg_x291,
      core_clk => clk_1_sg_x291,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => reim_p_net
    );

  rere: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_a_type => 0,
      c_a_width => 18,
      c_b_type => 0,
      c_b_width => 18,
      c_baat => 18,
      c_output_width => 36,
      c_type => 0,
      core_name0 => "mult_11_2_ecdcb40ad0958e64",
      extra_registers => 0,
      multsign => 2,
      overflow => 1,
      p_arith => xlSigned,
      p_bin_pt => 34,
      p_width => 36,
      quantization => 1
    )
    port map (
      a => reinterpret4_output_port_net_x0,
      b => reinterpret4_output_port_net_x2,
      ce => ce_1_sg_x291,
      clk => clk_1_sg_x291,
      clr => '0',
      core_ce => ce_1_sg_x291,
      core_clk => clk_1_sg_x291,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => rere_p_net
    );

  ri_to_c_c7da1e00c2: entity work.ri_to_c_entity_c7da1e00c2
    port map (
      im => convert_im_dout_net_x0,
      re => convert_re_dout_net_x0,
      c => concat_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/twiddle/bus_mult/repa/bussify"

entity bussify_entity_8f36b365fb is
  port (
    in1: in std_logic_vector(35 downto 0); 
    bus_out: out std_logic_vector(35 downto 0)
  );
end bussify_entity_8f36b365fb;

architecture structural of bussify_entity_8f36b365fb is
  signal din1_0_q_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(35 downto 0);

begin
  din1_0_q_net_x0 <= in1;
  bus_out <= reinterpret1_output_port_net_x2;

  reinterpret1: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din1_0_q_net_x0,
      output_port => reinterpret1_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/twiddle/bus_mult/repa"

entity repa_entity_cb50ef8fcf is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(35 downto 0); 
    out_x0: out std_logic_vector(35 downto 0)
  );
end repa_entity_cb50ef8fcf;

architecture structural of repa_entity_cb50ef8fcf is
  signal ce_1_sg_x301: std_logic;
  signal clk_1_sg_x301: std_logic;
  signal concat_y_net_x0: std_logic_vector(35 downto 0);
  signal din0_0_q_net: std_logic_vector(35 downto 0);
  signal din1_0_q_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x301 <= ce_1;
  clk_1_sg_x301 <= clk_1;
  concat_y_net_x0 <= in_x0;
  out_x0 <= reinterpret1_output_port_net_x3;

  bussify_8f36b365fb: entity work.bussify_entity_8f36b365fb
    port map (
      in1 => din1_0_q_net_x0,
      bus_out => reinterpret1_output_port_net_x3
    );

  din0_0: entity work.delay_e4b9fcaf02
    port map (
      ce => ce_1_sg_x301,
      clk => clk_1_sg_x301,
      clr => '0',
      d => concat_y_net_x0,
      q => din0_0_q_net
    );

  din1_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x301,
      clk => clk_1_sg_x301,
      d => din0_0_q_net,
      en => '1',
      rst => '1',
      q => din1_0_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/twiddle/bus_mult/repb/bussify"

entity bussify_entity_3cc7e1734b is
  port (
    in1: in std_logic_vector(143 downto 0); 
    bus_out: out std_logic_vector(143 downto 0)
  );
end bussify_entity_3cc7e1734b;

architecture structural of bussify_entity_3cc7e1734b is
  signal din1_0_q_net_x0: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(143 downto 0);

begin
  din1_0_q_net_x0 <= in1;
  bus_out <= reinterpret1_output_port_net_x2;

  reinterpret1: entity work.reinterpret_d35711d5ec
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din1_0_q_net_x0,
      output_port => reinterpret1_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/twiddle/bus_mult/repb"

entity repb_entity_68faede9ad is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(143 downto 0); 
    out_x0: out std_logic_vector(143 downto 0)
  );
end repb_entity_68faede9ad;

architecture structural of repb_entity_68faede9ad is
  signal ce_1_sg_x302: std_logic;
  signal clk_1_sg_x302: std_logic;
  signal din0_0_q_net: std_logic_vector(143 downto 0);
  signal din1_0_q_net_x0: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(143 downto 0);

begin
  ce_1_sg_x302 <= ce_1;
  clk_1_sg_x302 <= clk_1;
  reinterpret2_output_port_net_x1 <= in_x0;
  out_x0 <= reinterpret1_output_port_net_x3;

  bussify_3cc7e1734b: entity work.bussify_entity_3cc7e1734b
    port map (
      in1 => din1_0_q_net_x0,
      bus_out => reinterpret1_output_port_net_x3
    );

  din0_0: entity work.delay_dc6e12a537
    port map (
      ce => ce_1_sg_x302,
      clk => clk_1_sg_x302,
      clr => '0',
      d => reinterpret2_output_port_net_x1,
      q => din0_0_q_net
    );

  din1_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 144
    )
    port map (
      ce => ce_1_sg_x302,
      clk => clk_1_sg_x302,
      d => din0_0_q_net,
      en => '1',
      rst => '1',
      q => din1_0_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/twiddle/bus_mult"

entity bus_mult_entity_cc3ac8248d is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(144 downto 0); 
    a_b: out std_logic_vector(295 downto 0); 
    misco: out std_logic_vector(144 downto 0)
  );
end bus_mult_entity_cc3ac8248d;

architecture structural of bus_mult_entity_cc3ac8248d is
  signal ce_1_sg_x303: std_logic;
  signal clk_1_sg_x303: std_logic;
  signal concat_y_net_x5: std_logic_vector(73 downto 0);
  signal concat_y_net_x6: std_logic_vector(73 downto 0);
  signal concat_y_net_x7: std_logic_vector(73 downto 0);
  signal concat_y_net_x8: std_logic_vector(73 downto 0);
  signal concat_y_net_x9: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(295 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(144 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x12: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(144 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net_x3: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net_x3: std_logic_vector(35 downto 0);

begin
  concat_y_net_x9 <= a;
  reinterpret2_output_port_net_x2 <= b;
  ce_1_sg_x303 <= ce_1;
  clk_1_sg_x303 <= clk_1;
  reinterpret1_output_port_net_x5 <= misci;
  a_b <= concatenate_y_net_x3;
  misco <= dmisc_q_net_x2;

  a_b_bussify_7f35de9aa8: entity work.a_b_bussify_entity_7f35de9aa8
    port map (
      in1 => concat_y_net_x5,
      in2 => concat_y_net_x6,
      in3 => concat_y_net_x7,
      in4 => concat_y_net_x8,
      bus_out => concatenate_y_net_x3
    );

  a_debus_43e449aa4c: entity work.a_debus_entity_43e449aa4c
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      msb_lsb_out1 => reinterpret1_output_port_net_x11
    );

  b_debus_f66195e434: entity work.expand0_entity_faedf3e73c
    port map (
      bus_in => reinterpret1_output_port_net_x4,
      lsb_out1 => reinterpret1_output_port_net_x12,
      msb_out4 => reinterpret4_output_port_net_x3,
      out2 => reinterpret2_output_port_net_x3,
      out3 => reinterpret3_output_port_net_x3
    );

  dmisc: entity work.delay_0a6280bd95
    port map (
      ce => ce_1_sg_x303,
      clk => clk_1_sg_x303,
      clr => '0',
      d => reinterpret1_output_port_net_x5,
      q => dmisc_q_net_x2
    );

  mult1_675dd78166: entity work.mult1_entity_675dd78166
    port map (
      a => reinterpret1_output_port_net_x11,
      b => reinterpret4_output_port_net_x3,
      ce_1 => ce_1_sg_x303,
      clk_1 => clk_1_sg_x303,
      ab => concat_y_net_x5
    );

  mult2_6d1cf8f4d8: entity work.mult1_entity_675dd78166
    port map (
      a => reinterpret1_output_port_net_x11,
      b => reinterpret3_output_port_net_x3,
      ce_1 => ce_1_sg_x303,
      clk_1 => clk_1_sg_x303,
      ab => concat_y_net_x6
    );

  mult3_797f75ef14: entity work.mult1_entity_675dd78166
    port map (
      a => reinterpret1_output_port_net_x11,
      b => reinterpret2_output_port_net_x3,
      ce_1 => ce_1_sg_x303,
      clk_1 => clk_1_sg_x303,
      ab => concat_y_net_x7
    );

  mult4_94d6d71130: entity work.mult1_entity_675dd78166
    port map (
      a => reinterpret1_output_port_net_x11,
      b => reinterpret1_output_port_net_x12,
      ce_1 => ce_1_sg_x303,
      clk_1 => clk_1_sg_x303,
      ab => concat_y_net_x8
    );

  repa_cb50ef8fcf: entity work.repa_entity_cb50ef8fcf
    port map (
      ce_1 => ce_1_sg_x303,
      clk_1 => clk_1_sg_x303,
      in_x0 => concat_y_net_x9,
      out_x0 => reinterpret1_output_port_net_x3
    );

  repb_68faede9ad: entity work.repb_entity_68faede9ad
    port map (
      ce_1 => ce_1_sg_x303,
      clk_1 => clk_1_sg_x303,
      in_x0 => reinterpret2_output_port_net_x2,
      out_x0 => reinterpret1_output_port_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/twiddle/coeff_gen/bit_reverse"

entity bit_reverse_entity_c0af7b9792 is
  port (
    in_x0: in std_logic_vector(8 downto 0); 
    out_x0: out std_logic_vector(8 downto 0)
  );
end bit_reverse_entity_c0af7b9792;

architecture structural of bit_reverse_entity_c0af7b9792 is
  signal bit0_y_net: std_logic;
  signal bit1_y_net: std_logic;
  signal bit2_y_net: std_logic;
  signal bit3_y_net: std_logic;
  signal bit4_y_net: std_logic;
  signal bit5_y_net: std_logic;
  signal bit6_y_net: std_logic;
  signal bit7_y_net: std_logic;
  signal bit8_y_net: std_logic;
  signal concat_y_net_x0: std_logic_vector(8 downto 0);
  signal slice_y_net_x0: std_logic_vector(8 downto 0);

begin
  slice_y_net_x0 <= in_x0;
  out_x0 <= concat_y_net_x0;

  bit0: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 9,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit0_y_net
    );

  bit1: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 9,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit1_y_net
    );

  bit2: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 9,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit2_y_net
    );

  bit3: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 9,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit3_y_net
    );

  bit4: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 4,
      x_width => 9,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit4_y_net
    );

  bit5: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 5,
      x_width => 9,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit5_y_net
    );

  bit6: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 6,
      x_width => 9,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit6_y_net
    );

  bit7: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 7,
      x_width => 9,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit7_y_net
    );

  bit8: entity work.xlslice
    generic map (
      new_lsb => 8,
      new_msb => 8,
      x_width => 9,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit8_y_net
    );

  concat: entity work.concat_0cc72cd991
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => bit0_y_net,
      in1(0) => bit1_y_net,
      in2(0) => bit2_y_net,
      in3(0) => bit3_y_net,
      in4(0) => bit4_y_net,
      in5(0) => bit5_y_net,
      in6(0) => bit6_y_net,
      in7(0) => bit7_y_net,
      in8(0) => bit8_y_net,
      y => concat_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/twiddle/coeff_gen/cosin/add_convert0"

entity add_convert0_entity_191d2df48a is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    theta: in std_logic_vector(8 downto 0); 
    add: out std_logic_vector(8 downto 0); 
    negate: out std_logic
  );
end add_convert0_entity_191d2df48a;

architecture structural of add_convert0_entity_191d2df48a is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x0: std_logic_vector(8 downto 0);
  signal ce_1_sg_x304: std_logic;
  signal clk_1_sg_x304: std_logic;
  signal concat_y_net: std_logic_vector(9 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(8 downto 0);
  signal delay13_q_net: std_logic_vector(8 downto 0);
  signal delay14_q_net: std_logic_vector(8 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(9 downto 0);
  signal invert_y_net: std_logic;
  signal lookup_y_net: std_logic_vector(7 downto 0);
  signal new_add_y_net: std_logic_vector(8 downto 0);
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x304 <= ce_1;
  clk_1_sg_x304 <= clk_1;
  assert_dout_net_x0 <= theta;
  add <= convert2_dout_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x304,
      clk => clk_1_sg_x304,
      clr => '0',
      en => "1",
      s => addsub5_s_net
    );

  concat: entity work.concat_7eef56098d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => addsub5_s_net,
      in1 => lookup_y_net,
      y => concat_y_net
    );

  convert2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 9,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 9,
      latency => 3,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x304,
      clk => clk_1_sg_x304,
      clr => '0',
      din => delay13_q_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  delay13: entity work.delay_6104cbef7a
    port map (
      ce => ce_1_sg_x304,
      clk => clk_1_sg_x304,
      clr => '0',
      d => delay14_q_net,
      q => delay13_q_net
    );

  delay14: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 9
    )
    port map (
      ce => ce_1_sg_x304,
      clk => clk_1_sg_x304,
      d => new_add_y_net,
      en => '1',
      rst => '1',
      q => delay14_q_net
    );

  delay2: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x304,
      clk => clk_1_sg_x304,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_9779a5cf83
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x0,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  lookup: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 7,
      x_width => 10,
      y_width => 8
    )
    port map (
      x => fluff_y_net,
      y => lookup_y_net
    );

  new_add: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 8,
      x_width => 10,
      y_width => 9
    )
    port map (
      x => concat_y_net,
      y => new_add_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 8,
      new_msb => 9,
      x_width => 10,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/twiddle/coeff_gen/cosin/add_convert1"

entity add_convert1_entity_27abb6a0ab is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    theta: in std_logic_vector(8 downto 0); 
    misco: out std_logic_vector(288 downto 0); 
    negate: out std_logic
  );
end add_convert1_entity_27abb6a0ab;

architecture structural of add_convert1_entity_27abb6a0ab is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x1: std_logic_vector(8 downto 0);
  signal ce_1_sg_x305: std_logic;
  signal clk_1_sg_x305: std_logic;
  signal concatenate_y_net_x3: std_logic_vector(288 downto 0);
  signal delay1_q_net_x0: std_logic_vector(288 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(9 downto 0);
  signal invert_y_net: std_logic;
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x305 <= ce_1;
  clk_1_sg_x305 <= clk_1;
  concatenate_y_net_x3 <= misci;
  assert_dout_net_x1 <= theta;
  misco <= delay1_q_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x305,
      clk => clk_1_sg_x305,
      clr => '0',
      en => "1",
      s => addsub5_s_net
    );

  delay1: entity work.delay_4583411594
    port map (
      ce => ce_1_sg_x305,
      clk => clk_1_sg_x305,
      clr => '0',
      d => concatenate_y_net_x3,
      q => delay1_q_net_x0
    );

  delay2: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x305,
      clk => clk_1_sg_x305,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_9779a5cf83
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x1,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 8,
      new_msb => 9,
      x_width => 10,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/twiddle/coeff_gen/cosin/invert0"

entity invert0_entity_0a6af8c8da is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(17 downto 0); 
    negate_x0: in std_logic; 
    out_x0: out std_logic_vector(17 downto 0)
  );
end invert0_entity_0a6af8c8da;

architecture structural of invert0_entity_0a6af8c8da is
  signal ce_1_sg_x306: std_logic;
  signal clk_1_sg_x306: std_logic;
  signal delay10_q_net_x0: std_logic;
  signal delay20_q_net: std_logic_vector(17 downto 0);
  signal delay21_q_net: std_logic;
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x0: std_logic_vector(17 downto 0);
  signal negate_op_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x306 <= ce_1;
  clk_1_sg_x306 <= clk_1;
  force_re_output_port_net_x1 <= in_x0;
  delay10_q_net_x0 <= negate_x0;
  out_x0 <= mux_y_net_x0;

  delay20: entity work.delay_2f744cdafb
    port map (
      ce => ce_1_sg_x306,
      clk => clk_1_sg_x306,
      clr => '0',
      d => force_re_output_port_net_x1,
      q => delay20_q_net
    );

  delay21: entity work.delay_c53de546ea
    port map (
      ce => ce_1_sg_x306,
      clk => clk_1_sg_x306,
      clr => '0',
      d(0) => delay10_q_net_x0,
      q(0) => delay21_q_net
    );

  mux: entity work.mux_1896e7760c
    port map (
      ce => ce_1_sg_x306,
      clk => clk_1_sg_x306,
      clr => '0',
      d0 => delay20_q_net,
      d1 => negate_op_net,
      sel(0) => delay21_q_net,
      y => mux_y_net_x0
    );

  negate: entity work.negate_894f23b88c
    port map (
      ce => ce_1_sg_x306,
      clk => clk_1_sg_x306,
      clr => '0',
      ip => force_re_output_port_net_x1,
      op => negate_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/twiddle/coeff_gen/cosin/invert1"

entity invert1_entity_b107bd9d55 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(17 downto 0); 
    misci: in std_logic_vector(288 downto 0); 
    negate_x0: in std_logic; 
    misco: out std_logic_vector(288 downto 0); 
    out_x0: out std_logic_vector(17 downto 0)
  );
end invert1_entity_b107bd9d55;

architecture structural of invert1_entity_b107bd9d55 is
  signal ce_1_sg_x307: std_logic;
  signal clk_1_sg_x307: std_logic;
  signal delay1_q_net_x1: std_logic_vector(288 downto 0);
  signal delay20_q_net: std_logic_vector(17 downto 0);
  signal delay21_q_net: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(288 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x0: std_logic_vector(17 downto 0);
  signal negate_op_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x307 <= ce_1;
  clk_1_sg_x307 <= clk_1;
  force_im_output_port_net_x1 <= in_x0;
  delay_q_net_x0 <= misci;
  delay8_q_net_x0 <= negate_x0;
  misco <= delay1_q_net_x1;
  out_x0 <= mux_y_net_x0;

  delay1: entity work.delay_4583411594
    port map (
      ce => ce_1_sg_x307,
      clk => clk_1_sg_x307,
      clr => '0',
      d => delay_q_net_x0,
      q => delay1_q_net_x1
    );

  delay20: entity work.delay_2f744cdafb
    port map (
      ce => ce_1_sg_x307,
      clk => clk_1_sg_x307,
      clr => '0',
      d => force_im_output_port_net_x1,
      q => delay20_q_net
    );

  delay21: entity work.delay_c53de546ea
    port map (
      ce => ce_1_sg_x307,
      clk => clk_1_sg_x307,
      clr => '0',
      d(0) => delay8_q_net_x0,
      q(0) => delay21_q_net
    );

  mux: entity work.mux_1896e7760c
    port map (
      ce => ce_1_sg_x307,
      clk => clk_1_sg_x307,
      clr => '0',
      d0 => delay20_q_net,
      d1 => negate_op_net,
      sel(0) => delay21_q_net,
      y => mux_y_net_x0
    );

  negate: entity work.negate_894f23b88c
    port map (
      ce => ce_1_sg_x307,
      clk => clk_1_sg_x307,
      clr => '0',
      ip => force_im_output_port_net_x1,
      op => negate_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/twiddle/coeff_gen/cosin"

entity cosin_entity_3a696ef8e5 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    theta: in std_logic_vector(8 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(288 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_3a696ef8e5;

architecture structural of cosin_entity_3a696ef8e5 is
  signal assert_dout_net_x1: std_logic_vector(8 downto 0);
  signal ce_1_sg_x308: std_logic;
  signal clk_1_sg_x308: std_logic;
  signal concat_y_net_x1: std_logic_vector(8 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(288 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(8 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(288 downto 0);
  signal delay1_q_net_x2: std_logic_vector(288 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(288 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x308 <= ce_1;
  clk_1_sg_x308 <= clk_1;
  concatenate_y_net_x4 <= misci;
  concat_y_net_x1 <= theta;
  cos <= mux_y_net_x2;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x3;

  add_convert0_191d2df48a: entity work.add_convert0_entity_191d2df48a
    port map (
      ce_1 => ce_1_sg_x308,
      clk_1 => clk_1_sg_x308,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_27abb6a0ab: entity work.add_convert1_entity_27abb6a0ab
    port map (
      ce_1 => ce_1_sg_x308,
      clk_1 => clk_1_sg_x308,
      misci => concatenate_y_net_x4,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 9,
      dout_width => 9
    )
    port map (
      din => concat_y_net_x1,
      dout => assert_dout_net_x1
    );

  c_to_ri_515946e4d9: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_80f3e767fa
    port map (
      ce => ce_1_sg_x308,
      clk => clk_1_sg_x308,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x308,
      clk => clk_1_sg_x308,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x308,
      clk => clk_1_sg_x308,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_0a6af8c8da: entity work.invert0_entity_0a6af8c8da
    port map (
      ce_1 => ce_1_sg_x308,
      clk_1 => clk_1_sg_x308,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_b107bd9d55: entity work.invert1_entity_b107bd9d55
    port map (
      ce_1 => ce_1_sg_x308,
      clk_1 => clk_1_sg_x308,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 9,
      c_width => 36,
      core_name0 => "bmg_72_81b435f9a41a8de3",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x308,
      clk => clk_1_sg_x308,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/twiddle/coeff_gen/ri_to_c"

entity ri_to_c_entity_5c6a2cd5f2 is
  port (
    im: in std_logic_vector(17 downto 0); 
    re: in std_logic_vector(17 downto 0); 
    c: out std_logic_vector(35 downto 0)
  );
end ri_to_c_entity_5c6a2cd5f2;

architecture structural of ri_to_c_entity_5c6a2cd5f2 is
  signal concat_y_net_x10: std_logic_vector(35 downto 0);
  signal force_im_output_port_net: std_logic_vector(17 downto 0);
  signal force_re_output_port_net: std_logic_vector(17 downto 0);
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);

begin
  mux_y_net_x5 <= im;
  mux_y_net_x4 <= re;
  c <= concat_y_net_x10;

  concat: entity work.concat_b198bd62b0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => force_re_output_port_net,
      in1 => force_im_output_port_net,
      y => concat_y_net_x10
    );

  force_im: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux_y_net_x5,
      output_port => force_im_output_port_net
    );

  force_re: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux_y_net_x4,
      output_port => force_re_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/twiddle/coeff_gen"

entity coeff_gen_entity_14f4621bbf is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(288 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_14f4621bbf;

architecture structural of coeff_gen_entity_14f4621bbf is
  signal ce_1_sg_x309: std_logic;
  signal clk_1_sg_x309: std_logic;
  signal concat_y_net_x1: std_logic_vector(8 downto 0);
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(288 downto 0);
  signal counter_op_net: std_logic_vector(8 downto 0);
  signal delay1_q_net_x3: std_logic_vector(288 downto 0);
  signal mux_y_net_x1: std_logic;
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(8 downto 0);

begin
  ce_1_sg_x309 <= ce_1;
  clk_1_sg_x309 <= clk_1;
  concatenate_y_net_x5 <= misci;
  mux_y_net_x1 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x11;

  bit_reverse_c0af7b9792: entity work.bit_reverse_entity_c0af7b9792
    port map (
      in_x0 => slice_y_net_x0,
      out_x0 => concat_y_net_x1
    );

  cosin_3a696ef8e5: entity work.cosin_entity_3a696ef8e5
    port map (
      ce_1 => ce_1_sg_x309,
      clk_1 => clk_1_sg_x309,
      misci => concatenate_y_net_x5,
      theta => concat_y_net_x1,
      cos => mux_y_net_x4,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x5
    );

  counter: entity work.counter_d5d467f1b8
    port map (
      ce => ce_1_sg_x309,
      clk => clk_1_sg_x309,
      clr => '0',
      rst(0) => mux_y_net_x1,
      op => counter_op_net
    );

  ri_to_c_5c6a2cd5f2: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x11
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 8,
      x_width => 9,
      y_width => 9
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct/twiddle"

entity twiddle_entity_f9a91ebcb3 is
  port (
    ai: in std_logic_vector(143 downto 0); 
    bi: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(143 downto 0); 
    bwo: out std_logic_vector(151 downto 0); 
    sync_out: out std_logic
  );
end twiddle_entity_f9a91ebcb3;

architecture structural of twiddle_entity_f9a91ebcb3 is
  signal ce_1_sg_x310: std_logic;
  signal clk_1_sg_x310: std_logic;
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(295 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(288 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(151 downto 0);
  signal delay1_q_net_x3: std_logic_vector(288 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(144 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(144 downto 0);
  signal dmux0_q_net_x1: std_logic_vector(143 downto 0);
  signal mux_y_net_x2: std_logic;
  signal reinterpret1_output_port_net_x5: std_logic_vector(144 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(143 downto 0);
  signal slice2_y_net_x1: std_logic;

begin
  concatenate_y_net_x2 <= ai;
  dmux0_q_net_x1 <= bi;
  ce_1_sg_x310 <= ce_1;
  clk_1_sg_x310 <= clk_1;
  mux_y_net_x2 <= sync_in;
  ao <= reinterpret1_output_port_net_x7;
  bwo <= concatenate_y_net_x7;
  sync_out <= slice2_y_net_x1;

  bus_convert_fc9d20fae7: entity work.bus_convert_entity_fc9d20fae7
    port map (
      ce_1 => ce_1_sg_x310,
      clk_1 => clk_1_sg_x310,
      din => concatenate_y_net_x3,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x7,
      misco => dmisc_q_net_x3
    );

  bus_create_3d2f105ae8: entity work.bus_create_entity_3d2f105ae8
    port map (
      in1 => dmux0_q_net_x1,
      in2 => mux_y_net_x2,
      in3 => concatenate_y_net_x2,
      bus_out => concatenate_y_net_x5
    );

  bus_expand1_0d80282e07: entity work.bus_expand1_entity_0d80282e07
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x7,
      msb_out2 => slice2_y_net_x1
    );

  bus_expand_1995b7ac80: entity work.bus_expand_entity_1995b7ac80
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x5,
      msb_out2 => reinterpret2_output_port_net_x2
    );

  bus_mult_cc3ac8248d: entity work.bus_mult_entity_cc3ac8248d
    port map (
      a => concat_y_net_x11,
      b => reinterpret2_output_port_net_x2,
      ce_1 => ce_1_sg_x310,
      clk_1 => clk_1_sg_x310,
      misci => reinterpret1_output_port_net_x5,
      a_b => concatenate_y_net_x3,
      misco => dmisc_q_net_x2
    );

  coeff_gen_14f4621bbf: entity work.coeff_gen_entity_14f4621bbf
    port map (
      ce_1 => ce_1_sg_x310,
      clk_1 => clk_1_sg_x310,
      misci => concatenate_y_net_x5,
      rst => mux_y_net_x2,
      misco => delay1_q_net_x3,
      w => concat_y_net_x11
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/butterfly_direct"

entity butterfly_direct_entity_2281a56290 is
  port (
    a: in std_logic_vector(143 downto 0); 
    b: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(143 downto 0); 
    a_bw_x0: out std_logic_vector(143 downto 0); 
    of_x0: out std_logic_vector(3 downto 0); 
    sync_out: out std_logic
  );
end butterfly_direct_entity_2281a56290;

architecture structural of butterfly_direct_entity_2281a56290 is
  signal ce_1_sg_x311: std_logic;
  signal clk_1_sg_x311: std_logic;
  signal concat_y_net_x3: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(151 downto 0);
  signal concatenate_y_net_x13: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x14: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(159 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(287 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(159 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x3: std_logic;
  signal dmux0_q_net_x2: std_logic_vector(143 downto 0);
  signal mux_y_net_x3: std_logic;
  signal reinterpret1_output_port_net_x3: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(15 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice2_y_net_x1: std_logic;

begin
  concatenate_y_net_x13 <= a;
  dmux0_q_net_x2 <= b;
  ce_1_sg_x311 <= ce_1;
  clk_1_sg_x311 <= clk_1;
  slice0_y_net_x1 <= shift;
  mux_y_net_x3 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x3;
  a_bw_x0 <= reinterpret2_output_port_net_x3;
  of_x0 <= concatenate_y_net_x14;
  sync_out <= delay0_q_net_x3;

  bus_add_928fd44576: entity work.bus_add_entity_928fd44576
    port map (
      a => reinterpret1_output_port_net_x7,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x311,
      clk_1 => clk_1_sg_x311,
      dout => concatenate_y_net_x3
    );

  bus_convert_dda507beeb: entity work.bus_convert_entity_dda507beeb
    port map (
      ce_1 => ce_1_sg_x311,
      clk_1 => clk_1_sg_x311,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_99ce14435d: entity work.bus_expand_entity_2a52aaf3de
    port map (
      bus_in => concatenate_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x3,
      msb_out2 => reinterpret2_output_port_net_x3
    );

  bus_norm0_2065c27fbe: entity work.bus_norm0_entity_2065c27fbe
    port map (
      ce_1 => ce_1_sg_x311,
      clk_1 => clk_1_sg_x311,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_ebb4710d83: entity work.bus_norm1_entity_ebb4710d83
    port map (
      ce_1 => ce_1_sg_x311,
      clk_1 => clk_1_sg_x311,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_f663c2d83d: entity work.bus_relational_entity_633fc73315
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      ce_1 => ce_1_sg_x311,
      clk_1 => clk_1_sg_x311,
      a_b => concatenate_y_net_x14
    );

  bus_scale_0ad20b8fc9: entity work.bus_scale_entity_0ad20b8fc9
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_c471a0f176: entity work.bus_sub_entity_c471a0f176
    port map (
      a => reinterpret1_output_port_net_x7,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x311,
      clk_1 => clk_1_sg_x311,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_2a42ff61a3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x311,
      clk => clk_1_sg_x311,
      clr => '0',
      d(0) => slice2_y_net_x1,
      q(0) => delay0_q_net_x3
    );

  munge_f59a95663b: entity work.munge_entity_7ae6614fdf
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_bd9bbc285a: entity work.mux_entity_bd9bbc285a
    port map (
      ce_1 => ce_1_sg_x311,
      clk_1 => clk_1_sg_x311,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_c414c62e39: entity work.shift_replicate_entity_9dcff94fe9
    port map (
      ce_1 => ce_1_sg_x311,
      clk_1 => clk_1_sg_x311,
      in_x0 => slice0_y_net_x1,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_f9a91ebcb3: entity work.twiddle_entity_f9a91ebcb3
    port map (
      ai => concatenate_y_net_x13,
      bi => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x311,
      clk_1 => clk_1_sg_x311,
      sync_in => mux_y_net_x3,
      ao => reinterpret1_output_port_net_x7,
      bwo => concatenate_y_net_x12,
      sync_out => slice2_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/delay0"

entity delay0_entity_b4cbac6aa0 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(143 downto 0); 
    dout: out std_logic_vector(143 downto 0)
  );
end delay0_entity_b4cbac6aa0;

architecture structural of delay0_entity_b4cbac6aa0 is
  signal ce_1_sg_x312: std_logic;
  signal clk_1_sg_x312: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(143 downto 0);
  signal del1_q_net_x0: std_logic_vector(35 downto 0);
  signal del2_q_net_x0: std_logic_vector(35 downto 0);
  signal del3_q_net_x0: std_logic_vector(35 downto 0);
  signal del4_q_net_x0: std_logic_vector(35 downto 0);
  signal din2_q_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x312 <= ce_1;
  clk_1_sg_x312 <= clk_1;
  din2_q_net_x1 <= din;
  dout <= concatenate_y_net_x1;

  del1: entity work.delay_e4b9fcaf02
    port map (
      ce => ce_1_sg_x312,
      clk => clk_1_sg_x312,
      clr => '0',
      d => reinterpret4_output_port_net_x0,
      q => del1_q_net_x0
    );

  del2: entity work.delay_e4b9fcaf02
    port map (
      ce => ce_1_sg_x312,
      clk => clk_1_sg_x312,
      clr => '0',
      d => reinterpret3_output_port_net_x0,
      q => del2_q_net_x0
    );

  del3: entity work.delay_e4b9fcaf02
    port map (
      ce => ce_1_sg_x312,
      clk => clk_1_sg_x312,
      clr => '0',
      d => reinterpret2_output_port_net_x0,
      q => del3_q_net_x0
    );

  del4: entity work.delay_e4b9fcaf02
    port map (
      ce => ce_1_sg_x312,
      clk => clk_1_sg_x312,
      clr => '0',
      d => reinterpret1_output_port_net_x0,
      q => del4_q_net_x0
    );

  din_expand_e03146786a: entity work.expand0_entity_faedf3e73c
    port map (
      bus_in => din2_q_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  dout_compress_37a7b13363: entity work.d_bussify_entity_9462440c59
    port map (
      in1 => del1_q_net_x0,
      in2 => del2_q_net_x0,
      in3 => del3_q_net_x0,
      in4 => del4_q_net_x0,
      bus_out => concatenate_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10/sync_delay"

entity sync_delay_entity_b90276a426 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_b90276a426;

architecture structural of sync_delay_entity_b90276a426 is
  signal ce_1_sg_x314: std_logic;
  signal clk_1_sg_x314: std_logic;
  signal constant1_op_net: std_logic_vector(1 downto 0);
  signal constant2_op_net: std_logic_vector(1 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(1 downto 0);
  signal counter_op_net: std_logic_vector(1 downto 0);
  signal dsync1_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x4: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x314 <= ce_1;
  clk_1_sg_x314 <= clk_1;
  dsync1_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x4;

  constant1: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_a7e2bb9e12
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_a7e2bb9e12
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.counter_e095645f0c
    port map (
      ce => ce_1_sg_x314,
      clk => clk_1_sg_x314,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => dsync1_q_net_x0,
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x4
    );

  relational: entity work.relational_5f1eb17108
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_f9928864ea
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_10"

entity fft_stage_10_entity_430236410e is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(143 downto 0); 
    in2: in std_logic_vector(143 downto 0); 
    of_in: in std_logic_vector(3 downto 0); 
    shift: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic_vector(3 downto 0); 
    out1: out std_logic_vector(143 downto 0); 
    out2: out std_logic_vector(143 downto 0); 
    sync_out: out std_logic
  );
end fft_stage_10_entity_430236410e;

architecture structural of fft_stage_10_entity_430236410e is
  signal ce_1_sg_x315: std_logic;
  signal clk_1_sg_x315: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x14: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x15: std_logic_vector(143 downto 0);
  signal constant2_op_net_x1: std_logic_vector(14 downto 0);
  signal counter_op_net: std_logic;
  signal delay0_q_net_x0: std_logic;
  signal delay0_q_net_x4: std_logic;
  signal din0_q_net: std_logic_vector(143 downto 0);
  signal din2_q_net_x1: std_logic_vector(143 downto 0);
  signal dmux0_q_net_x2: std_logic_vector(143 downto 0);
  signal dmux1_q_net_x1: std_logic_vector(143 downto 0);
  signal dsync0_q_net: std_logic;
  signal dsync1_q_net_x0: std_logic;
  signal logical1_y_net_x1: std_logic_vector(3 downto 0);
  signal logical1_y_net_x2: std_logic_vector(3 downto 0);
  signal mux0_y_net: std_logic_vector(143 downto 0);
  signal mux1_y_net: std_logic_vector(143 downto 0);
  signal mux_y_net_x4: std_logic;
  signal reinterpret1_output_port_net_x0: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(143 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice1_y_net: std_logic;

begin
  ce_1_sg_x315 <= ce_1;
  clk_1_sg_x315 <= clk_1;
  reinterpret2_output_port_net_x0 <= in1;
  reinterpret1_output_port_net_x0 <= in2;
  logical1_y_net_x1 <= of_in;
  constant2_op_net_x1 <= shift;
  delay0_q_net_x0 <= sync;
  of_x0 <= logical1_y_net_x2;
  out1 <= reinterpret2_output_port_net_x4;
  out2 <= reinterpret1_output_port_net_x4;
  sync_out <= delay0_q_net_x4;

  butterfly_direct_2281a56290: entity work.butterfly_direct_entity_2281a56290
    port map (
      a => concatenate_y_net_x15,
      b => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x315,
      clk_1 => clk_1_sg_x315,
      shift => slice0_y_net_x1,
      sync_in => mux_y_net_x4,
      a_bw => reinterpret1_output_port_net_x4,
      a_bw_x0 => reinterpret2_output_port_net_x4,
      of_x0 => concatenate_y_net_x14,
      sync_out => delay0_q_net_x4
    );

  counter: entity work.counter_9b03e3d644
    port map (
      ce => ce_1_sg_x315,
      clk => clk_1_sg_x315,
      clr => '0',
      rst(0) => dsync0_q_net,
      op(0) => counter_op_net
    );

  delay0_b4cbac6aa0: entity work.delay0_entity_b4cbac6aa0
    port map (
      ce_1 => ce_1_sg_x315,
      clk_1 => clk_1_sg_x315,
      din => din2_q_net_x1,
      dout => concatenate_y_net_x1
    );

  delay1_0c60560235: entity work.delay0_entity_b4cbac6aa0
    port map (
      ce_1 => ce_1_sg_x315,
      clk_1 => clk_1_sg_x315,
      din => dmux1_q_net_x1,
      dout => concatenate_y_net_x15
    );

  din0: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reinterpret2_output_port_net_x0,
      q => din0_q_net
    );

  din2: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reinterpret1_output_port_net_x0,
      q => din2_q_net_x1
    );

  dmux0: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => mux0_y_net,
      q => dmux0_q_net_x2
    );

  dmux1: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => mux1_y_net,
      q => dmux1_q_net_x1
    );

  dsync0: entity work.delay_0341f7be44
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d(0) => delay0_q_net_x0,
      q(0) => dsync0_q_net
    );

  dsync1: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x315,
      clk => clk_1_sg_x315,
      clr => '0',
      d(0) => dsync0_q_net,
      q(0) => dsync1_q_net_x0
    );

  logical1: entity work.logical_8c69d6f164
    port map (
      ce => ce_1_sg_x315,
      clk => clk_1_sg_x315,
      clr => '0',
      d0 => concatenate_y_net_x14,
      d1 => logical1_y_net_x1,
      y => logical1_y_net_x2
    );

  mux0: entity work.mux_340b095e64
    port map (
      ce => ce_1_sg_x315,
      clk => clk_1_sg_x315,
      clr => '0',
      d0 => concatenate_y_net_x1,
      d1 => din0_q_net,
      sel(0) => slice1_y_net,
      y => mux0_y_net
    );

  mux1: entity work.mux_340b095e64
    port map (
      ce => ce_1_sg_x315,
      clk => clk_1_sg_x315,
      clr => '0',
      d0 => din0_q_net,
      d1 => concatenate_y_net_x1,
      sel(0) => slice1_y_net,
      y => mux1_y_net
    );

  slice0: entity work.xlslice
    generic map (
      new_lsb => 9,
      new_msb => 9,
      x_width => 15,
      y_width => 1
    )
    port map (
      x => constant2_op_net_x1,
      y(0) => slice0_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 1,
      y_width => 1
    )
    port map (
      x(0) => counter_op_net,
      y(0) => slice1_y_net
    );

  sync_delay_b90276a426: entity work.sync_delay_entity_b90276a426
    port map (
      ce_1 => ce_1_sg_x315,
      clk_1 => clk_1_sg_x315,
      in_x0 => dsync1_q_net_x0,
      out_x0 => mux_y_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_2/butterfly_direct/twiddle/negate"

entity negate_entity_3c498fd3d6 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(71 downto 0); 
    dout: out std_logic_vector(71 downto 0)
  );
end negate_entity_3c498fd3d6;

architecture structural of negate_entity_3c498fd3d6 is
  signal ce_1_sg_x372: std_logic;
  signal clk_1_sg_x372: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(71 downto 0);
  signal neg1_op_net_x0: std_logic_vector(17 downto 0);
  signal neg2_op_net_x0: std_logic_vector(17 downto 0);
  signal neg3_op_net_x0: std_logic_vector(17 downto 0);
  signal neg4_op_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(71 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x372 <= ce_1;
  clk_1_sg_x372 <= clk_1;
  reinterpret2_output_port_net_x3 <= din;
  dout <= concatenate_y_net_x1;

  bussify_701f99ace3: entity work.bussify_entity_2706e362ec
    port map (
      in1 => neg1_op_net_x0,
      in2 => neg2_op_net_x0,
      in3 => neg3_op_net_x0,
      in4 => neg4_op_net_x0,
      bus_out => concatenate_y_net_x1
    );

  debus_c6f6ce5bf1: entity work.a_debus_entity_659a478c77
    port map (
      bus_in => reinterpret2_output_port_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x0
    );

  neg1: entity work.negate_894f23b88c
    port map (
      ce => ce_1_sg_x372,
      clk => clk_1_sg_x372,
      clr => '0',
      ip => reinterpret4_output_port_net_x0,
      op => neg1_op_net_x0
    );

  neg2: entity work.negate_894f23b88c
    port map (
      ce => ce_1_sg_x372,
      clk => clk_1_sg_x372,
      clr => '0',
      ip => reinterpret3_output_port_net_x0,
      op => neg2_op_net_x0
    );

  neg3: entity work.negate_894f23b88c
    port map (
      ce => ce_1_sg_x372,
      clk => clk_1_sg_x372,
      clr => '0',
      ip => reinterpret2_output_port_net_x2,
      op => neg3_op_net_x0
    );

  neg4: entity work.negate_894f23b88c
    port map (
      ce => ce_1_sg_x372,
      clk => clk_1_sg_x372,
      clr => '0',
      ip => reinterpret1_output_port_net_x0,
      op => neg4_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_2/butterfly_direct/twiddle"

entity twiddle_entity_d93753d98a is
  port (
    ai: in std_logic_vector(143 downto 0); 
    bi: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(143 downto 0); 
    bwo: out std_logic_vector(143 downto 0); 
    sync_out: out std_logic
  );
end twiddle_entity_d93753d98a;

architecture structural of twiddle_entity_d93753d98a is
  signal ce_1_sg_x373: std_logic;
  signal clk_1_sg_x373: std_logic;
  signal concatenate_y_net_x0: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x1: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(143 downto 0);
  signal counter_op_net: std_logic_vector(8 downto 0);
  signal delay0_q_net_x4: std_logic_vector(143 downto 0);
  signal delay2_q_net: std_logic;
  signal delay3_q_net: std_logic_vector(71 downto 0);
  signal delay4_q_net: std_logic_vector(71 downto 0);
  signal delay5_q_net: std_logic_vector(71 downto 0);
  signal delay6_q_net: std_logic_vector(71 downto 0);
  signal delay7_q_net: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal dmux0_q_net_x1: std_logic_vector(143 downto 0);
  signal mux0_y_net_x0: std_logic_vector(71 downto 0);
  signal mux1_y_net_x0: std_logic_vector(71 downto 0);
  signal mux_y_net_x0: std_logic;
  signal reinterpret1_output_port_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(71 downto 0);
  signal reinterpret_out_output_port_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x5: std_logic_vector(143 downto 0);
  signal slice_y_net: std_logic;

begin
  concatenate_y_net_x0 <= ai;
  dmux0_q_net_x1 <= bi;
  ce_1_sg_x373 <= ce_1;
  clk_1_sg_x373 <= clk_1;
  mux_y_net_x0 <= sync_in;
  ao <= delay0_q_net_x4;
  bwo <= reinterpret_out_output_port_net_x5;
  sync_out <= delay8_q_net_x0;

  bus_create_7e2b5c6c40: entity work.bus_create_entity_19688e8659
    port map (
      in1 => mux0_y_net_x0,
      in2 => mux1_y_net_x0,
      bus_out => concatenate_y_net_x2
    );

  bus_expand_f79d73e571: entity work.bus_expand_a_entity_1605f56624
    port map (
      bus_in => reinterpret_out_output_port_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out2 => reinterpret2_output_port_net_x3
    );

  counter: entity work.counter_d5d467f1b8
    port map (
      ce => ce_1_sg_x373,
      clk => clk_1_sg_x373,
      clr => '0',
      rst(0) => delay7_q_net,
      op => counter_op_net
    );

  delay0: entity work.delay_3a07e89d7c
    port map (
      ce => ce_1_sg_x373,
      clk => clk_1_sg_x373,
      clr => '0',
      d => concatenate_y_net_x0,
      q => delay0_q_net_x4
    );

  delay2: entity work.delay_5b3ce5f2ae
    port map (
      ce => ce_1_sg_x373,
      clk => clk_1_sg_x373,
      clr => '0',
      d(0) => slice_y_net,
      q(0) => delay2_q_net
    );

  delay3: entity work.delay_d045e729a5
    port map (
      ce => ce_1_sg_x373,
      clk => clk_1_sg_x373,
      clr => '0',
      d => delay6_q_net,
      q => delay3_q_net
    );

  delay4: entity work.delay_35ebbe4bd4
    port map (
      ce => ce_1_sg_x373,
      clk => clk_1_sg_x373,
      clr => '0',
      d => concatenate_y_net_x1,
      q => delay4_q_net
    );

  delay5: entity work.delay_18feacf6a1
    port map (
      ce => ce_1_sg_x373,
      clk => clk_1_sg_x373,
      clr => '0',
      d => reinterpret2_output_port_net_x3,
      q => delay5_q_net
    );

  delay6: entity work.delay_18feacf6a1
    port map (
      ce => ce_1_sg_x373,
      clk => clk_1_sg_x373,
      clr => '0',
      d => reinterpret1_output_port_net_x0,
      q => delay6_q_net
    );

  delay7: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x373,
      clk => clk_1_sg_x373,
      clr => '0',
      d(0) => mux_y_net_x0,
      q(0) => delay7_q_net
    );

  delay8: entity work.delay_fa260f7d22
    port map (
      ce => ce_1_sg_x373,
      clk => clk_1_sg_x373,
      clr => '0',
      d(0) => delay7_q_net,
      q(0) => delay8_q_net_x0
    );

  munge_in_b57cb3b61e: entity work.munge_a_entity_4ff9248a49
    port map (
      din => dmux0_q_net_x1,
      dout => reinterpret_out_output_port_net_x1
    );

  munge_out_69e5fd067c: entity work.munge_even_entity_248d6bbbbb
    port map (
      din => concatenate_y_net_x2,
      dout => reinterpret_out_output_port_net_x5
    );

  mux0: entity work.mux_d98188e61d
    port map (
      ce => ce_1_sg_x373,
      clk => clk_1_sg_x373,
      clr => '0',
      d0 => delay5_q_net,
      d1 => delay6_q_net,
      sel(0) => slice_y_net,
      y => mux0_y_net_x0
    );

  mux1: entity work.mux_3d87a88ac3
    port map (
      ce => ce_1_sg_x373,
      clk => clk_1_sg_x373,
      clr => '0',
      d0 => delay3_q_net,
      d1 => delay4_q_net,
      sel(0) => delay2_q_net,
      y => mux1_y_net_x0
    );

  negate_3c498fd3d6: entity work.negate_entity_3c498fd3d6
    port map (
      ce_1 => ce_1_sg_x373,
      clk_1 => clk_1_sg_x373,
      din => reinterpret2_output_port_net_x3,
      dout => concatenate_y_net_x1
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 8,
      new_msb => 8,
      x_width => 9,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_2/butterfly_direct"

entity butterfly_direct_entity_39edb56578 is
  port (
    a: in std_logic_vector(143 downto 0); 
    b: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(143 downto 0); 
    a_bw_x0: out std_logic_vector(143 downto 0); 
    of_x0: out std_logic_vector(3 downto 0); 
    sync_out: out std_logic
  );
end butterfly_direct_entity_39edb56578;

architecture structural of butterfly_direct_entity_39edb56578 is
  signal ce_1_sg_x374: std_logic;
  signal clk_1_sg_x374: std_logic;
  signal concat_y_net_x3: std_logic_vector(303 downto 0);
  signal concatenate_y_net_x1: std_logic_vector(151 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(151 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x13: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x14: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(303 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(287 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(319 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal delay0_q_net_x4: std_logic_vector(143 downto 0);
  signal delay8_q_net_x0: std_logic;
  signal dmux0_q_net_x2: std_logic_vector(143 downto 0);
  signal mux_y_net_x1: std_logic;
  signal reinterpret1_output_port_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(15 downto 0);
  signal reinterpret_out_output_port_net_x5: std_logic_vector(143 downto 0);
  signal slice0_y_net_x1: std_logic;

begin
  concatenate_y_net_x13 <= a;
  dmux0_q_net_x2 <= b;
  ce_1_sg_x374 <= ce_1;
  clk_1_sg_x374 <= clk_1;
  slice0_y_net_x1 <= shift;
  mux_y_net_x1 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x1;
  a_bw_x0 <= reinterpret2_output_port_net_x1;
  of_x0 <= concatenate_y_net_x14;
  sync_out <= delay0_q_net_x0;

  bus_add_524ad1a425: entity work.bus_add_entity_e8b3d973ec
    port map (
      a => delay0_q_net_x4,
      b => reinterpret_out_output_port_net_x5,
      ce_1 => ce_1_sg_x374,
      clk_1 => clk_1_sg_x374,
      dout => concatenate_y_net_x1
    );

  bus_convert_f3d3bc9235: entity work.bus_convert_entity_ea713e1089
    port map (
      ce_1 => ce_1_sg_x374,
      clk_1 => clk_1_sg_x374,
      din => concatenate_y_net_x11,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_0c47b04039: entity work.bus_expand_entity_2a52aaf3de
    port map (
      bus_in => concatenate_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  bus_norm0_634fe2fab2: entity work.bus_norm0_entity_4d96ef7e4a
    port map (
      ce_1 => ce_1_sg_x374,
      clk_1 => clk_1_sg_x374,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_ac5fd92eef: entity work.bus_norm1_entity_58eff48426
    port map (
      ce_1 => ce_1_sg_x374,
      clk_1 => clk_1_sg_x374,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_20887b76f2: entity work.bus_relational_entity_633fc73315
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      ce_1 => ce_1_sg_x374,
      clk_1 => clk_1_sg_x374,
      a_b => concatenate_y_net_x14
    );

  bus_scale_eb6ac01d28: entity work.bus_scale_entity_e9d1be8911
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_2a3b2a1bdd: entity work.bus_sub_entity_87b01b6f2d
    port map (
      a => delay0_q_net_x4,
      b => reinterpret_out_output_port_net_x5,
      ce_1 => ce_1_sg_x374,
      clk_1 => clk_1_sg_x374,
      dout => concatenate_y_net_x10
    );

  concat: entity work.concat_07f4466348
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x1,
      in1 => concatenate_y_net_x10,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x374,
      clk => clk_1_sg_x374,
      clr => '0',
      d(0) => delay8_q_net_x0,
      q(0) => delay0_q_net_x0
    );

  munge_d41d931d2e: entity work.munge_entity_7ae6614fdf
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_b82e73b7f8: entity work.mux_entity_dae6517577
    port map (
      ce_1 => ce_1_sg_x374,
      clk_1 => clk_1_sg_x374,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x12,
      out_x0 => concatenate_y_net_x11
    );

  shift_replicate_1a8c0eaa1b: entity work.shift_replicate_entity_9dcff94fe9
    port map (
      ce_1 => ce_1_sg_x374,
      clk_1 => clk_1_sg_x374,
      in_x0 => slice0_y_net_x1,
      out_x0 => concatenate_y_net_x12
    );

  twiddle_d93753d98a: entity work.twiddle_entity_d93753d98a
    port map (
      ai => concatenate_y_net_x13,
      bi => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x374,
      clk_1 => clk_1_sg_x374,
      sync_in => mux_y_net_x1,
      ao => delay0_q_net_x4,
      bwo => reinterpret_out_output_port_net_x5,
      sync_out => delay8_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_2/delay0"

entity delay0_entity_0630343799 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(143 downto 0); 
    dout: out std_logic_vector(143 downto 0)
  );
end delay0_entity_0630343799;

architecture structural of delay0_entity_0630343799 is
  signal ce_1_sg_x375: std_logic;
  signal clk_1_sg_x375: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(143 downto 0);
  signal del1_q_net_x0: std_logic_vector(35 downto 0);
  signal del2_q_net_x0: std_logic_vector(35 downto 0);
  signal del3_q_net_x0: std_logic_vector(35 downto 0);
  signal del4_q_net_x0: std_logic_vector(35 downto 0);
  signal din2_q_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x375 <= ce_1;
  clk_1_sg_x375 <= clk_1;
  din2_q_net_x1 <= din;
  dout <= concatenate_y_net_x1;

  del1: entity work.delay_1f855d073b
    port map (
      ce => ce_1_sg_x375,
      clk => clk_1_sg_x375,
      clr => '0',
      d => reinterpret4_output_port_net_x0,
      q => del1_q_net_x0
    );

  del2: entity work.delay_1f855d073b
    port map (
      ce => ce_1_sg_x375,
      clk => clk_1_sg_x375,
      clr => '0',
      d => reinterpret3_output_port_net_x0,
      q => del2_q_net_x0
    );

  del3: entity work.delay_1f855d073b
    port map (
      ce => ce_1_sg_x375,
      clk => clk_1_sg_x375,
      clr => '0',
      d => reinterpret2_output_port_net_x0,
      q => del3_q_net_x0
    );

  del4: entity work.delay_1f855d073b
    port map (
      ce => ce_1_sg_x375,
      clk => clk_1_sg_x375,
      clr => '0',
      d => reinterpret1_output_port_net_x0,
      q => del4_q_net_x0
    );

  din_expand_bef7ac19ba: entity work.expand0_entity_faedf3e73c
    port map (
      bus_in => din2_q_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  dout_compress_eb396ff2a2: entity work.d_bussify_entity_9462440c59
    port map (
      in1 => del1_q_net_x0,
      in2 => del2_q_net_x0,
      in3 => del3_q_net_x0,
      in4 => del4_q_net_x0,
      bus_out => concatenate_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_2/sync_delay"

entity sync_delay_entity_77c19fd796 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_77c19fd796;

architecture structural of sync_delay_entity_77c19fd796 is
  signal ce_1_sg_x377: std_logic;
  signal clk_1_sg_x377: std_logic;
  signal constant1_op_net: std_logic_vector(8 downto 0);
  signal constant2_op_net: std_logic_vector(8 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(8 downto 0);
  signal counter_op_net: std_logic_vector(8 downto 0);
  signal dsync1_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x2: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x377 <= ce_1;
  clk_1_sg_x377 <= clk_1;
  dsync1_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x2;

  constant1: entity work.constant_fd85eb7067
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_4a391b9a0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_b4ec9de7d1
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.counter_1dea202a2f
    port map (
      ce => ce_1_sg_x377,
      clk => clk_1_sg_x377,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => dsync1_q_net_x0,
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x2
    );

  relational: entity work.relational_6c3ee657fa
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_78eac2928d
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_2"

entity fft_stage_2_entity_880b7654c5 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(143 downto 0); 
    in2: in std_logic_vector(143 downto 0); 
    of_in: in std_logic_vector(3 downto 0); 
    shift: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic_vector(3 downto 0); 
    out1: out std_logic_vector(143 downto 0); 
    out2: out std_logic_vector(143 downto 0); 
    sync_out: out std_logic
  );
end fft_stage_2_entity_880b7654c5;

architecture structural of fft_stage_2_entity_880b7654c5 is
  signal ce_1_sg_x378: std_logic;
  signal clk_1_sg_x378: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x14: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x15: std_logic_vector(143 downto 0);
  signal constant2_op_net_x2: std_logic_vector(14 downto 0);
  signal counter_op_net: std_logic_vector(8 downto 0);
  signal delay0_q_net_x2: std_logic;
  signal delay0_q_net_x3: std_logic;
  signal din0_q_net: std_logic_vector(143 downto 0);
  signal din2_q_net_x1: std_logic_vector(143 downto 0);
  signal dmux0_q_net_x2: std_logic_vector(143 downto 0);
  signal dmux1_q_net_x1: std_logic_vector(143 downto 0);
  signal dsync0_q_net: std_logic;
  signal dsync1_q_net_x0: std_logic;
  signal logical1_y_net_x1: std_logic_vector(3 downto 0);
  signal logical1_y_net_x2: std_logic_vector(3 downto 0);
  signal mux0_y_net: std_logic_vector(143 downto 0);
  signal mux1_y_net: std_logic_vector(143 downto 0);
  signal mux_y_net_x2: std_logic;
  signal reinterpret1_output_port_net_x3: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(143 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice1_y_net: std_logic;

begin
  ce_1_sg_x378 <= ce_1;
  clk_1_sg_x378 <= clk_1;
  reinterpret2_output_port_net_x3 <= in1;
  reinterpret1_output_port_net_x3 <= in2;
  logical1_y_net_x1 <= of_in;
  constant2_op_net_x2 <= shift;
  delay0_q_net_x2 <= sync;
  of_x0 <= logical1_y_net_x2;
  out1 <= reinterpret2_output_port_net_x4;
  out2 <= reinterpret1_output_port_net_x4;
  sync_out <= delay0_q_net_x3;

  butterfly_direct_39edb56578: entity work.butterfly_direct_entity_39edb56578
    port map (
      a => concatenate_y_net_x15,
      b => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x378,
      clk_1 => clk_1_sg_x378,
      shift => slice0_y_net_x1,
      sync_in => mux_y_net_x2,
      a_bw => reinterpret1_output_port_net_x4,
      a_bw_x0 => reinterpret2_output_port_net_x4,
      of_x0 => concatenate_y_net_x14,
      sync_out => delay0_q_net_x3
    );

  counter: entity work.counter_d5d467f1b8
    port map (
      ce => ce_1_sg_x378,
      clk => clk_1_sg_x378,
      clr => '0',
      rst(0) => dsync0_q_net,
      op => counter_op_net
    );

  delay0_0630343799: entity work.delay0_entity_0630343799
    port map (
      ce_1 => ce_1_sg_x378,
      clk_1 => clk_1_sg_x378,
      din => din2_q_net_x1,
      dout => concatenate_y_net_x1
    );

  delay1_b867427b89: entity work.delay0_entity_0630343799
    port map (
      ce_1 => ce_1_sg_x378,
      clk_1 => clk_1_sg_x378,
      din => dmux1_q_net_x1,
      dout => concatenate_y_net_x15
    );

  din0: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reinterpret2_output_port_net_x3,
      q => din0_q_net
    );

  din2: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reinterpret1_output_port_net_x3,
      q => din2_q_net_x1
    );

  dmux0: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => mux0_y_net,
      q => dmux0_q_net_x2
    );

  dmux1: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => mux1_y_net,
      q => dmux1_q_net_x1
    );

  dsync0: entity work.delay_0341f7be44
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d(0) => delay0_q_net_x2,
      q(0) => dsync0_q_net
    );

  dsync1: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x378,
      clk => clk_1_sg_x378,
      clr => '0',
      d(0) => dsync0_q_net,
      q(0) => dsync1_q_net_x0
    );

  logical1: entity work.logical_8c69d6f164
    port map (
      ce => ce_1_sg_x378,
      clk => clk_1_sg_x378,
      clr => '0',
      d0 => concatenate_y_net_x14,
      d1 => logical1_y_net_x1,
      y => logical1_y_net_x2
    );

  mux0: entity work.mux_340b095e64
    port map (
      ce => ce_1_sg_x378,
      clk => clk_1_sg_x378,
      clr => '0',
      d0 => concatenate_y_net_x1,
      d1 => din0_q_net,
      sel(0) => slice1_y_net,
      y => mux0_y_net
    );

  mux1: entity work.mux_340b095e64
    port map (
      ce => ce_1_sg_x378,
      clk => clk_1_sg_x378,
      clr => '0',
      d0 => din0_q_net,
      d1 => concatenate_y_net_x1,
      sel(0) => slice1_y_net,
      y => mux1_y_net
    );

  slice0: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 15,
      y_width => 1
    )
    port map (
      x => constant2_op_net_x2,
      y(0) => slice0_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 8,
      new_msb => 8,
      x_width => 9,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  sync_delay_77c19fd796: entity work.sync_delay_entity_77c19fd796
    port map (
      ce_1 => ce_1_sg_x378,
      clk_1 => clk_1_sg_x378,
      in_x0 => dsync1_q_net_x0,
      out_x0 => mux_y_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_3/butterfly_direct/bus_convert/conv1"

entity conv1_entity_9b1f51cacb is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(20 downto 0); 
    dout: out std_logic_vector(17 downto 0); 
    of_x0: out std_logic
  );
end conv1_entity_9b1f51cacb;

architecture structural of conv1_entity_9b1f51cacb is
  signal adder_s_net_x17: std_logic_vector(17 downto 0);
  signal all_0s_y_net: std_logic;
  signal all_1s_y_net: std_logic;
  signal and_y_net_x0: std_logic;
  signal ce_1_sg_x381: std_logic;
  signal clk_1_sg_x381: std_logic;
  signal invert1_op_net: std_logic;
  signal invert2_op_net: std_logic;
  signal invert3_op_net: std_logic;
  signal reinterpret16_output_port_net_x1: std_logic_vector(20 downto 0);
  signal slice1_y_net: std_logic;
  signal slice2_y_net: std_logic;
  signal slice3_y_net: std_logic;

begin
  ce_1_sg_x381 <= ce_1;
  clk_1_sg_x381 <= clk_1;
  reinterpret16_output_port_net_x1 <= din;
  dout <= adder_s_net_x17;
  of_x0 <= and_y_net_x0;

  all_0s: entity work.logical_3013ab8805
    port map (
      ce => ce_1_sg_x381,
      clk => clk_1_sg_x381,
      clr => '0',
      d0(0) => invert1_op_net,
      d1(0) => invert2_op_net,
      d2(0) => invert3_op_net,
      y(0) => all_0s_y_net
    );

  all_1s: entity work.logical_3013ab8805
    port map (
      ce => ce_1_sg_x381,
      clk => clk_1_sg_x381,
      clr => '0',
      d0(0) => slice1_y_net,
      d1(0) => slice2_y_net,
      d2(0) => slice3_y_net,
      y(0) => all_1s_y_net
    );

  and_x0: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => all_0s_y_net,
      d1(0) => all_1s_y_net,
      y(0) => and_y_net_x0
    );

  convert_dc70671d28: entity work.convert_entity_10add4ec81
    port map (
      ce_1 => ce_1_sg_x381,
      clk_1 => clk_1_sg_x381,
      in_x0 => reinterpret16_output_port_net_x1,
      out_x0 => adder_s_net_x17
    );

  invert1: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x381,
      clk => clk_1_sg_x381,
      clr => '0',
      ip(0) => slice1_y_net,
      op(0) => invert1_op_net
    );

  invert2: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x381,
      clk => clk_1_sg_x381,
      clr => '0',
      ip(0) => slice2_y_net,
      op(0) => invert2_op_net
    );

  invert3: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x381,
      clk => clk_1_sg_x381,
      clr => '0',
      ip(0) => slice3_y_net,
      op(0) => invert3_op_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 20,
      new_msb => 20,
      x_width => 21,
      y_width => 1
    )
    port map (
      x => reinterpret16_output_port_net_x1,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 19,
      new_msb => 19,
      x_width => 21,
      y_width => 1
    )
    port map (
      x => reinterpret16_output_port_net_x1,
      y(0) => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 18,
      x_width => 21,
      y_width => 1
    )
    port map (
      x => reinterpret16_output_port_net_x1,
      y(0) => slice3_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_3/butterfly_direct/bus_convert"

entity bus_convert_entity_8625f90d6a is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(335 downto 0); 
    dout: out std_logic_vector(287 downto 0); 
    overflow: out std_logic_vector(15 downto 0)
  );
end bus_convert_entity_8625f90d6a;

architecture structural of bus_convert_entity_8625f90d6a is
  signal adder_s_net_x17: std_logic_vector(17 downto 0);
  signal adder_s_net_x18: std_logic_vector(17 downto 0);
  signal adder_s_net_x19: std_logic_vector(17 downto 0);
  signal adder_s_net_x20: std_logic_vector(17 downto 0);
  signal adder_s_net_x21: std_logic_vector(17 downto 0);
  signal adder_s_net_x22: std_logic_vector(17 downto 0);
  signal adder_s_net_x23: std_logic_vector(17 downto 0);
  signal adder_s_net_x24: std_logic_vector(17 downto 0);
  signal adder_s_net_x25: std_logic_vector(17 downto 0);
  signal adder_s_net_x26: std_logic_vector(17 downto 0);
  signal adder_s_net_x27: std_logic_vector(17 downto 0);
  signal adder_s_net_x28: std_logic_vector(17 downto 0);
  signal adder_s_net_x29: std_logic_vector(17 downto 0);
  signal adder_s_net_x30: std_logic_vector(17 downto 0);
  signal adder_s_net_x31: std_logic_vector(17 downto 0);
  signal adder_s_net_x32: std_logic_vector(17 downto 0);
  signal and_y_net_x16: std_logic;
  signal and_y_net_x17: std_logic;
  signal and_y_net_x18: std_logic;
  signal and_y_net_x19: std_logic;
  signal and_y_net_x20: std_logic;
  signal and_y_net_x21: std_logic;
  signal and_y_net_x22: std_logic;
  signal and_y_net_x23: std_logic;
  signal and_y_net_x24: std_logic;
  signal and_y_net_x25: std_logic;
  signal and_y_net_x26: std_logic;
  signal and_y_net_x27: std_logic;
  signal and_y_net_x28: std_logic;
  signal and_y_net_x29: std_logic;
  signal and_y_net_x30: std_logic;
  signal and_y_net_x31: std_logic;
  signal ce_1_sg_x412: std_logic;
  signal clk_1_sg_x412: std_logic;
  signal concatenate_y_net_x3: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(287 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(15 downto 0);
  signal reinterpret10_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret11_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret12_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret13_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret14_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret15_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret16_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret5_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret6_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret7_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret8_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret9_output_port_net_x2: std_logic_vector(20 downto 0);

begin
  ce_1_sg_x412 <= ce_1;
  clk_1_sg_x412 <= clk_1;
  concatenate_y_net_x3 <= din;
  dout <= concatenate_y_net_x4;
  overflow <= concatenate_y_net_x5;

  bussify_e83c0e3ff3: entity work.bussify_entity_9772614d31
    port map (
      in1 => adder_s_net_x17,
      in10 => adder_s_net_x18,
      in11 => adder_s_net_x19,
      in12 => adder_s_net_x20,
      in13 => adder_s_net_x21,
      in14 => adder_s_net_x22,
      in15 => adder_s_net_x23,
      in16 => adder_s_net_x24,
      in2 => adder_s_net_x25,
      in3 => adder_s_net_x26,
      in4 => adder_s_net_x27,
      in5 => adder_s_net_x28,
      in6 => adder_s_net_x29,
      in7 => adder_s_net_x30,
      in8 => adder_s_net_x31,
      in9 => adder_s_net_x32,
      bus_out => concatenate_y_net_x4
    );

  conv10_9b2f4a3da7: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x412,
      clk_1 => clk_1_sg_x412,
      din => reinterpret7_output_port_net_x2,
      dout => adder_s_net_x18,
      of_x0 => and_y_net_x17
    );

  conv11_8a6a1eada2: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x412,
      clk_1 => clk_1_sg_x412,
      din => reinterpret6_output_port_net_x2,
      dout => adder_s_net_x19,
      of_x0 => and_y_net_x18
    );

  conv12_925a20ae21: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x412,
      clk_1 => clk_1_sg_x412,
      din => reinterpret5_output_port_net_x2,
      dout => adder_s_net_x20,
      of_x0 => and_y_net_x19
    );

  conv13_c4eda527df: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x412,
      clk_1 => clk_1_sg_x412,
      din => reinterpret4_output_port_net_x2,
      dout => adder_s_net_x21,
      of_x0 => and_y_net_x20
    );

  conv14_94a971a431: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x412,
      clk_1 => clk_1_sg_x412,
      din => reinterpret3_output_port_net_x2,
      dout => adder_s_net_x22,
      of_x0 => and_y_net_x21
    );

  conv15_6b9edc3301: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x412,
      clk_1 => clk_1_sg_x412,
      din => reinterpret2_output_port_net_x2,
      dout => adder_s_net_x23,
      of_x0 => and_y_net_x22
    );

  conv16_30297d5d19: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x412,
      clk_1 => clk_1_sg_x412,
      din => reinterpret1_output_port_net_x2,
      dout => adder_s_net_x24,
      of_x0 => and_y_net_x23
    );

  conv1_9b1f51cacb: entity work.conv1_entity_9b1f51cacb
    port map (
      ce_1 => ce_1_sg_x412,
      clk_1 => clk_1_sg_x412,
      din => reinterpret16_output_port_net_x2,
      dout => adder_s_net_x17,
      of_x0 => and_y_net_x16
    );

  conv2_a6c93a3181: entity work.conv1_entity_9b1f51cacb
    port map (
      ce_1 => ce_1_sg_x412,
      clk_1 => clk_1_sg_x412,
      din => reinterpret15_output_port_net_x2,
      dout => adder_s_net_x25,
      of_x0 => and_y_net_x24
    );

  conv3_d405565884: entity work.conv1_entity_9b1f51cacb
    port map (
      ce_1 => ce_1_sg_x412,
      clk_1 => clk_1_sg_x412,
      din => reinterpret14_output_port_net_x2,
      dout => adder_s_net_x26,
      of_x0 => and_y_net_x25
    );

  conv4_5f4dedf4fd: entity work.conv1_entity_9b1f51cacb
    port map (
      ce_1 => ce_1_sg_x412,
      clk_1 => clk_1_sg_x412,
      din => reinterpret13_output_port_net_x2,
      dout => adder_s_net_x27,
      of_x0 => and_y_net_x26
    );

  conv5_e7c311b741: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x412,
      clk_1 => clk_1_sg_x412,
      din => reinterpret12_output_port_net_x2,
      dout => adder_s_net_x28,
      of_x0 => and_y_net_x27
    );

  conv6_7b71bab0c8: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x412,
      clk_1 => clk_1_sg_x412,
      din => reinterpret11_output_port_net_x2,
      dout => adder_s_net_x29,
      of_x0 => and_y_net_x28
    );

  conv7_8b63fb591d: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x412,
      clk_1 => clk_1_sg_x412,
      din => reinterpret10_output_port_net_x2,
      dout => adder_s_net_x30,
      of_x0 => and_y_net_x29
    );

  conv8_938d48b266: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x412,
      clk_1 => clk_1_sg_x412,
      din => reinterpret9_output_port_net_x2,
      dout => adder_s_net_x31,
      of_x0 => and_y_net_x30
    );

  conv9_07e04e0607: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x412,
      clk_1 => clk_1_sg_x412,
      din => reinterpret8_output_port_net_x2,
      dout => adder_s_net_x32,
      of_x0 => and_y_net_x31
    );

  debus_c9f2c7f779: entity work.debus_entity_5017422da1
    port map (
      bus_in => concatenate_y_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out16 => reinterpret16_output_port_net_x2,
      out10 => reinterpret10_output_port_net_x2,
      out11 => reinterpret11_output_port_net_x2,
      out12 => reinterpret12_output_port_net_x2,
      out13 => reinterpret13_output_port_net_x2,
      out14 => reinterpret14_output_port_net_x2,
      out15 => reinterpret15_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x2,
      out4 => reinterpret4_output_port_net_x2,
      out5 => reinterpret5_output_port_net_x2,
      out6 => reinterpret6_output_port_net_x2,
      out7 => reinterpret7_output_port_net_x2,
      out8 => reinterpret8_output_port_net_x2,
      out9 => reinterpret9_output_port_net_x2
    );

  of_bussify_c7a92ba8fa: entity work.of_bussify_entity_0574882070
    port map (
      in1 => and_y_net_x16,
      in10 => and_y_net_x17,
      in11 => and_y_net_x18,
      in12 => and_y_net_x19,
      in13 => and_y_net_x20,
      in14 => and_y_net_x21,
      in15 => and_y_net_x22,
      in16 => and_y_net_x23,
      in2 => and_y_net_x24,
      in3 => and_y_net_x25,
      in4 => and_y_net_x26,
      in5 => and_y_net_x27,
      in6 => and_y_net_x28,
      in7 => and_y_net_x29,
      in8 => and_y_net_x30,
      in9 => and_y_net_x31,
      bus_out => concatenate_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_3/butterfly_direct/twiddle/coeff_gen/bit_reverse"

entity bit_reverse_entity_b29fe741c7 is
  port (
    in_x0: in std_logic_vector(1 downto 0); 
    out_x0: out std_logic_vector(1 downto 0)
  );
end bit_reverse_entity_b29fe741c7;

architecture structural of bit_reverse_entity_b29fe741c7 is
  signal bit0_y_net: std_logic;
  signal bit1_y_net: std_logic;
  signal concat_y_net_x0: std_logic_vector(1 downto 0);
  signal slice_y_net_x0: std_logic_vector(1 downto 0);

begin
  slice_y_net_x0 <= in_x0;
  out_x0 <= concat_y_net_x0;

  bit0: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit0_y_net
    );

  bit1: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit1_y_net
    );

  concat: entity work.concat_e6f5ee726b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => bit0_y_net,
      in1(0) => bit1_y_net,
      y => concat_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_3/butterfly_direct/twiddle/coeff_gen/cosin/add_convert0"

entity add_convert0_entity_af8d7c003b is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    theta: in std_logic_vector(1 downto 0); 
    add: out std_logic_vector(1 downto 0); 
    negate: out std_logic
  );
end add_convert0_entity_af8d7c003b;

architecture structural of add_convert0_entity_af8d7c003b is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x0: std_logic_vector(1 downto 0);
  signal ce_1_sg_x459: std_logic;
  signal clk_1_sg_x459: std_logic;
  signal concat_y_net: std_logic_vector(2 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(1 downto 0);
  signal delay13_q_net: std_logic_vector(1 downto 0);
  signal delay14_q_net: std_logic_vector(1 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(2 downto 0);
  signal invert_y_net: std_logic;
  signal lookup_y_net: std_logic;
  signal new_add_y_net: std_logic_vector(1 downto 0);
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x459 <= ce_1;
  clk_1_sg_x459 <= clk_1;
  assert_dout_net_x0 <= theta;
  add <= convert2_dout_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x459,
      clk => clk_1_sg_x459,
      clr => '0',
      en => "1",
      s => addsub5_s_net
    );

  concat: entity work.concat_6160d7387c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => addsub5_s_net,
      in1(0) => lookup_y_net,
      y => concat_y_net
    );

  convert2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 2,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 2,
      latency => 3,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x459,
      clk => clk_1_sg_x459,
      clr => '0',
      din => delay13_q_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  delay13: entity work.delay_fcebea29b9
    port map (
      ce => ce_1_sg_x459,
      clk => clk_1_sg_x459,
      clr => '0',
      d => delay14_q_net,
      q => delay13_q_net
    );

  delay14: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 2
    )
    port map (
      ce => ce_1_sg_x459,
      clk => clk_1_sg_x459,
      d => new_add_y_net,
      en => '1',
      rst => '1',
      q => delay14_q_net
    );

  delay2: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x459,
      clk => clk_1_sg_x459,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_4a9a9a25a3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x0,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  lookup: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 3,
      y_width => 1
    )
    port map (
      x => fluff_y_net,
      y(0) => lookup_y_net
    );

  new_add: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 1,
      x_width => 3,
      y_width => 2
    )
    port map (
      x => concat_y_net,
      y => new_add_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 2,
      x_width => 3,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_3/butterfly_direct/twiddle/coeff_gen/cosin/add_convert1"

entity add_convert1_entity_c0b91479c1 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    theta: in std_logic_vector(1 downto 0); 
    misco: out std_logic_vector(288 downto 0); 
    negate: out std_logic
  );
end add_convert1_entity_c0b91479c1;

architecture structural of add_convert1_entity_c0b91479c1 is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x1: std_logic_vector(1 downto 0);
  signal ce_1_sg_x460: std_logic;
  signal clk_1_sg_x460: std_logic;
  signal concatenate_y_net_x3: std_logic_vector(288 downto 0);
  signal delay1_q_net_x0: std_logic_vector(288 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(2 downto 0);
  signal invert_y_net: std_logic;
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x460 <= ce_1;
  clk_1_sg_x460 <= clk_1;
  concatenate_y_net_x3 <= misci;
  assert_dout_net_x1 <= theta;
  misco <= delay1_q_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x460,
      clk => clk_1_sg_x460,
      clr => '0',
      en => "1",
      s => addsub5_s_net
    );

  delay1: entity work.delay_4583411594
    port map (
      ce => ce_1_sg_x460,
      clk => clk_1_sg_x460,
      clr => '0',
      d => concatenate_y_net_x3,
      q => delay1_q_net_x0
    );

  delay2: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x460,
      clk => clk_1_sg_x460,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_4a9a9a25a3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x1,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 2,
      x_width => 3,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_3/butterfly_direct/twiddle/coeff_gen/cosin/invert0"

entity invert0_entity_6963cb9e38 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(17 downto 0); 
    negate_x0: in std_logic; 
    out_x0: out std_logic_vector(17 downto 0)
  );
end invert0_entity_6963cb9e38;

architecture structural of invert0_entity_6963cb9e38 is
  signal ce_1_sg_x461: std_logic;
  signal clk_1_sg_x461: std_logic;
  signal delay10_q_net_x0: std_logic;
  signal delay20_q_net: std_logic_vector(17 downto 0);
  signal delay21_q_net: std_logic;
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x0: std_logic_vector(17 downto 0);
  signal negate_op_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x461 <= ce_1;
  clk_1_sg_x461 <= clk_1;
  force_re_output_port_net_x1 <= in_x0;
  delay10_q_net_x0 <= negate_x0;
  out_x0 <= mux_y_net_x0;

  delay20: entity work.delay_2f744cdafb
    port map (
      ce => ce_1_sg_x461,
      clk => clk_1_sg_x461,
      clr => '0',
      d => force_re_output_port_net_x1,
      q => delay20_q_net
    );

  delay21: entity work.delay_c53de546ea
    port map (
      ce => ce_1_sg_x461,
      clk => clk_1_sg_x461,
      clr => '0',
      d(0) => delay10_q_net_x0,
      q(0) => delay21_q_net
    );

  mux: entity work.mux_1896e7760c
    port map (
      ce => ce_1_sg_x461,
      clk => clk_1_sg_x461,
      clr => '0',
      d0 => delay20_q_net,
      d1 => negate_op_net,
      sel(0) => delay21_q_net,
      y => mux_y_net_x0
    );

  negate: entity work.negate_894f23b88c
    port map (
      ce => ce_1_sg_x461,
      clk => clk_1_sg_x461,
      clr => '0',
      ip => force_re_output_port_net_x1,
      op => negate_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_3/butterfly_direct/twiddle/coeff_gen/cosin/invert1"

entity invert1_entity_4148cefff8 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(17 downto 0); 
    misci: in std_logic_vector(288 downto 0); 
    negate_x0: in std_logic; 
    misco: out std_logic_vector(288 downto 0); 
    out_x0: out std_logic_vector(17 downto 0)
  );
end invert1_entity_4148cefff8;

architecture structural of invert1_entity_4148cefff8 is
  signal ce_1_sg_x462: std_logic;
  signal clk_1_sg_x462: std_logic;
  signal delay1_q_net_x1: std_logic_vector(288 downto 0);
  signal delay20_q_net: std_logic_vector(17 downto 0);
  signal delay21_q_net: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(288 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x0: std_logic_vector(17 downto 0);
  signal negate_op_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x462 <= ce_1;
  clk_1_sg_x462 <= clk_1;
  force_im_output_port_net_x1 <= in_x0;
  delay_q_net_x0 <= misci;
  delay8_q_net_x0 <= negate_x0;
  misco <= delay1_q_net_x1;
  out_x0 <= mux_y_net_x0;

  delay1: entity work.delay_4583411594
    port map (
      ce => ce_1_sg_x462,
      clk => clk_1_sg_x462,
      clr => '0',
      d => delay_q_net_x0,
      q => delay1_q_net_x1
    );

  delay20: entity work.delay_2f744cdafb
    port map (
      ce => ce_1_sg_x462,
      clk => clk_1_sg_x462,
      clr => '0',
      d => force_im_output_port_net_x1,
      q => delay20_q_net
    );

  delay21: entity work.delay_c53de546ea
    port map (
      ce => ce_1_sg_x462,
      clk => clk_1_sg_x462,
      clr => '0',
      d(0) => delay8_q_net_x0,
      q(0) => delay21_q_net
    );

  mux: entity work.mux_1896e7760c
    port map (
      ce => ce_1_sg_x462,
      clk => clk_1_sg_x462,
      clr => '0',
      d0 => delay20_q_net,
      d1 => negate_op_net,
      sel(0) => delay21_q_net,
      y => mux_y_net_x0
    );

  negate: entity work.negate_894f23b88c
    port map (
      ce => ce_1_sg_x462,
      clk => clk_1_sg_x462,
      clr => '0',
      ip => force_im_output_port_net_x1,
      op => negate_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_3/butterfly_direct/twiddle/coeff_gen/cosin"

entity cosin_entity_b949f2deb2 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    theta: in std_logic_vector(1 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(288 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_b949f2deb2;

architecture structural of cosin_entity_b949f2deb2 is
  signal assert_dout_net_x1: std_logic_vector(1 downto 0);
  signal ce_1_sg_x463: std_logic;
  signal clk_1_sg_x463: std_logic;
  signal concat_y_net_x1: std_logic_vector(1 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(288 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(1 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(288 downto 0);
  signal delay1_q_net_x2: std_logic_vector(288 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(288 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x463 <= ce_1;
  clk_1_sg_x463 <= clk_1;
  concatenate_y_net_x4 <= misci;
  concat_y_net_x1 <= theta;
  cos <= mux_y_net_x2;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x3;

  add_convert0_af8d7c003b: entity work.add_convert0_entity_af8d7c003b
    port map (
      ce_1 => ce_1_sg_x463,
      clk_1 => clk_1_sg_x463,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_c0b91479c1: entity work.add_convert1_entity_c0b91479c1
    port map (
      ce_1 => ce_1_sg_x463,
      clk_1 => clk_1_sg_x463,
      misci => concatenate_y_net_x4,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 2,
      dout_width => 2
    )
    port map (
      din => concat_y_net_x1,
      dout => assert_dout_net_x1
    );

  c_to_ri_c8cc14a36a: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_80f3e767fa
    port map (
      ce => ce_1_sg_x463,
      clk => clk_1_sg_x463,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x463,
      clk => clk_1_sg_x463,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x463,
      clk => clk_1_sg_x463,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_6963cb9e38: entity work.invert0_entity_6963cb9e38
    port map (
      ce_1 => ce_1_sg_x463,
      clk_1 => clk_1_sg_x463,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_4148cefff8: entity work.invert1_entity_4148cefff8
    port map (
      ce_1 => ce_1_sg_x463,
      clk_1 => clk_1_sg_x463,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_dist_he6_cres_correlator
    generic map (
      addr_width => 2,
      c_address_width => 4,
      c_width => 36,
      core_name0 => "dmg_72_4bdef3e2183e064a",
      latency => 3
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x463,
      clk => clk_1_sg_x463,
      en => "1",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_3/butterfly_direct/twiddle/coeff_gen"

entity coeff_gen_entity_9a23b80bb1 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(288 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_9a23b80bb1;

architecture structural of coeff_gen_entity_9a23b80bb1 is
  signal ce_1_sg_x464: std_logic;
  signal clk_1_sg_x464: std_logic;
  signal concat_y_net_x1: std_logic_vector(1 downto 0);
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(288 downto 0);
  signal counter_op_net: std_logic_vector(8 downto 0);
  signal delay1_q_net_x3: std_logic_vector(288 downto 0);
  signal mux_y_net_x1: std_logic;
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x464 <= ce_1;
  clk_1_sg_x464 <= clk_1;
  concatenate_y_net_x5 <= misci;
  mux_y_net_x1 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x11;

  bit_reverse_b29fe741c7: entity work.bit_reverse_entity_b29fe741c7
    port map (
      in_x0 => slice_y_net_x0,
      out_x0 => concat_y_net_x1
    );

  cosin_b949f2deb2: entity work.cosin_entity_b949f2deb2
    port map (
      ce_1 => ce_1_sg_x464,
      clk_1 => clk_1_sg_x464,
      misci => concatenate_y_net_x5,
      theta => concat_y_net_x1,
      cos => mux_y_net_x4,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x5
    );

  counter: entity work.counter_d5d467f1b8
    port map (
      ce => ce_1_sg_x464,
      clk => clk_1_sg_x464,
      clr => '0',
      rst(0) => mux_y_net_x1,
      op => counter_op_net
    );

  ri_to_c_cb64f13cfc: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x11
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 8,
      x_width => 9,
      y_width => 2
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_3/butterfly_direct/twiddle"

entity twiddle_entity_4923c8b535 is
  port (
    ai: in std_logic_vector(143 downto 0); 
    bi: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(143 downto 0); 
    bwo: out std_logic_vector(151 downto 0); 
    sync_out: out std_logic
  );
end twiddle_entity_4923c8b535;

architecture structural of twiddle_entity_4923c8b535 is
  signal ce_1_sg_x465: std_logic;
  signal clk_1_sg_x465: std_logic;
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(295 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(288 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(151 downto 0);
  signal delay1_q_net_x3: std_logic_vector(288 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(144 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(144 downto 0);
  signal dmux0_q_net_x1: std_logic_vector(143 downto 0);
  signal mux_y_net_x2: std_logic;
  signal reinterpret1_output_port_net_x5: std_logic_vector(144 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(143 downto 0);
  signal slice2_y_net_x1: std_logic;

begin
  concatenate_y_net_x2 <= ai;
  dmux0_q_net_x1 <= bi;
  ce_1_sg_x465 <= ce_1;
  clk_1_sg_x465 <= clk_1;
  mux_y_net_x2 <= sync_in;
  ao <= reinterpret1_output_port_net_x7;
  bwo <= concatenate_y_net_x7;
  sync_out <= slice2_y_net_x1;

  bus_convert_011c9f0736: entity work.bus_convert_entity_fc9d20fae7
    port map (
      ce_1 => ce_1_sg_x465,
      clk_1 => clk_1_sg_x465,
      din => concatenate_y_net_x3,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x7,
      misco => dmisc_q_net_x3
    );

  bus_create_b563ff7ba0: entity work.bus_create_entity_3d2f105ae8
    port map (
      in1 => dmux0_q_net_x1,
      in2 => mux_y_net_x2,
      in3 => concatenate_y_net_x2,
      bus_out => concatenate_y_net_x5
    );

  bus_expand1_0357631118: entity work.bus_expand1_entity_0d80282e07
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x7,
      msb_out2 => slice2_y_net_x1
    );

  bus_expand_2c4af04e9d: entity work.bus_expand_entity_1995b7ac80
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x5,
      msb_out2 => reinterpret2_output_port_net_x2
    );

  bus_mult_5cc41df8ab: entity work.bus_mult_entity_cc3ac8248d
    port map (
      a => concat_y_net_x11,
      b => reinterpret2_output_port_net_x2,
      ce_1 => ce_1_sg_x465,
      clk_1 => clk_1_sg_x465,
      misci => reinterpret1_output_port_net_x5,
      a_b => concatenate_y_net_x3,
      misco => dmisc_q_net_x2
    );

  coeff_gen_9a23b80bb1: entity work.coeff_gen_entity_9a23b80bb1
    port map (
      ce_1 => ce_1_sg_x465,
      clk_1 => clk_1_sg_x465,
      misci => concatenate_y_net_x5,
      rst => mux_y_net_x2,
      misco => delay1_q_net_x3,
      w => concat_y_net_x11
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_3/butterfly_direct"

entity butterfly_direct_entity_eed6de4542 is
  port (
    a: in std_logic_vector(143 downto 0); 
    b: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(143 downto 0); 
    a_bw_x0: out std_logic_vector(143 downto 0); 
    of_x0: out std_logic_vector(3 downto 0); 
    sync_out: out std_logic
  );
end butterfly_direct_entity_eed6de4542;

architecture structural of butterfly_direct_entity_eed6de4542 is
  signal ce_1_sg_x466: std_logic;
  signal clk_1_sg_x466: std_logic;
  signal concat_y_net_x3: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(151 downto 0);
  signal concatenate_y_net_x13: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x14: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(159 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(287 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(159 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal dmux0_q_net_x2: std_logic_vector(143 downto 0);
  signal mux_y_net_x3: std_logic;
  signal reinterpret1_output_port_net_x7: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x8: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(15 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice2_y_net_x1: std_logic;

begin
  concatenate_y_net_x13 <= a;
  dmux0_q_net_x2 <= b;
  ce_1_sg_x466 <= ce_1;
  clk_1_sg_x466 <= clk_1;
  slice0_y_net_x1 <= shift;
  mux_y_net_x3 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x8;
  a_bw_x0 <= reinterpret2_output_port_net_x1;
  of_x0 <= concatenate_y_net_x14;
  sync_out <= delay0_q_net_x0;

  bus_add_03f67a7dd5: entity work.bus_add_entity_928fd44576
    port map (
      a => reinterpret1_output_port_net_x7,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x466,
      clk_1 => clk_1_sg_x466,
      dout => concatenate_y_net_x3
    );

  bus_convert_8625f90d6a: entity work.bus_convert_entity_8625f90d6a
    port map (
      ce_1 => ce_1_sg_x466,
      clk_1 => clk_1_sg_x466,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_f785265e88: entity work.bus_expand_entity_2a52aaf3de
    port map (
      bus_in => concatenate_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x8,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  bus_norm0_679067252f: entity work.bus_norm0_entity_2065c27fbe
    port map (
      ce_1 => ce_1_sg_x466,
      clk_1 => clk_1_sg_x466,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_5f2cbabd52: entity work.bus_norm1_entity_ebb4710d83
    port map (
      ce_1 => ce_1_sg_x466,
      clk_1 => clk_1_sg_x466,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_e77fb04c8f: entity work.bus_relational_entity_633fc73315
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      ce_1 => ce_1_sg_x466,
      clk_1 => clk_1_sg_x466,
      a_b => concatenate_y_net_x14
    );

  bus_scale_33e42989c1: entity work.bus_scale_entity_0ad20b8fc9
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_6f16edcac5: entity work.bus_sub_entity_c471a0f176
    port map (
      a => reinterpret1_output_port_net_x7,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x466,
      clk_1 => clk_1_sg_x466,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_2a42ff61a3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x466,
      clk => clk_1_sg_x466,
      clr => '0',
      d(0) => slice2_y_net_x1,
      q(0) => delay0_q_net_x0
    );

  munge_c8abd0c4c4: entity work.munge_entity_7ae6614fdf
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_98e63365df: entity work.mux_entity_bd9bbc285a
    port map (
      ce_1 => ce_1_sg_x466,
      clk_1 => clk_1_sg_x466,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_b954600091: entity work.shift_replicate_entity_9dcff94fe9
    port map (
      ce_1 => ce_1_sg_x466,
      clk_1 => clk_1_sg_x466,
      in_x0 => slice0_y_net_x1,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_4923c8b535: entity work.twiddle_entity_4923c8b535
    port map (
      ai => concatenate_y_net_x13,
      bi => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x466,
      clk_1 => clk_1_sg_x466,
      sync_in => mux_y_net_x3,
      ao => reinterpret1_output_port_net_x7,
      bwo => concatenate_y_net_x12,
      sync_out => slice2_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_3/delay0"

entity delay0_entity_2eee6707d5 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(143 downto 0); 
    dout: out std_logic_vector(143 downto 0)
  );
end delay0_entity_2eee6707d5;

architecture structural of delay0_entity_2eee6707d5 is
  signal ce_1_sg_x467: std_logic;
  signal clk_1_sg_x467: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(143 downto 0);
  signal del1_q_net_x0: std_logic_vector(35 downto 0);
  signal del2_q_net_x0: std_logic_vector(35 downto 0);
  signal del3_q_net_x0: std_logic_vector(35 downto 0);
  signal del4_q_net_x0: std_logic_vector(35 downto 0);
  signal din2_q_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x467 <= ce_1;
  clk_1_sg_x467 <= clk_1;
  din2_q_net_x1 <= din;
  dout <= concatenate_y_net_x1;

  del1: entity work.delay_c33e9b879a
    port map (
      ce => ce_1_sg_x467,
      clk => clk_1_sg_x467,
      clr => '0',
      d => reinterpret4_output_port_net_x0,
      q => del1_q_net_x0
    );

  del2: entity work.delay_c33e9b879a
    port map (
      ce => ce_1_sg_x467,
      clk => clk_1_sg_x467,
      clr => '0',
      d => reinterpret3_output_port_net_x0,
      q => del2_q_net_x0
    );

  del3: entity work.delay_c33e9b879a
    port map (
      ce => ce_1_sg_x467,
      clk => clk_1_sg_x467,
      clr => '0',
      d => reinterpret2_output_port_net_x0,
      q => del3_q_net_x0
    );

  del4: entity work.delay_c33e9b879a
    port map (
      ce => ce_1_sg_x467,
      clk => clk_1_sg_x467,
      clr => '0',
      d => reinterpret1_output_port_net_x0,
      q => del4_q_net_x0
    );

  din_expand_62d04a06db: entity work.expand0_entity_faedf3e73c
    port map (
      bus_in => din2_q_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  dout_compress_98e6ed723d: entity work.d_bussify_entity_9462440c59
    port map (
      in1 => del1_q_net_x0,
      in2 => del2_q_net_x0,
      in3 => del3_q_net_x0,
      in4 => del4_q_net_x0,
      bus_out => concatenate_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_3/sync_delay"

entity sync_delay_entity_25d4adb454 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_25d4adb454;

architecture structural of sync_delay_entity_25d4adb454 is
  signal ce_1_sg_x469: std_logic;
  signal clk_1_sg_x469: std_logic;
  signal constant1_op_net: std_logic_vector(7 downto 0);
  signal constant2_op_net: std_logic_vector(7 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(7 downto 0);
  signal counter_op_net: std_logic_vector(7 downto 0);
  signal dsync1_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x4: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x469 <= ce_1;
  clk_1_sg_x469 <= clk_1;
  dsync1_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x4;

  constant1: entity work.constant_91ef1678ca
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_e8aae5d3bb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_b437b02512
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.counter_a98fb09579
    port map (
      ce => ce_1_sg_x469,
      clk => clk_1_sg_x469,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => dsync1_q_net_x0,
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x4
    );

  relational: entity work.relational_54048c8b02
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_16235eb2bf
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_3"

entity fft_stage_3_entity_b4d19d4e15 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(143 downto 0); 
    in2: in std_logic_vector(143 downto 0); 
    of_in: in std_logic_vector(3 downto 0); 
    shift: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic_vector(3 downto 0); 
    out1: out std_logic_vector(143 downto 0); 
    out2: out std_logic_vector(143 downto 0); 
    sync_out: out std_logic
  );
end fft_stage_3_entity_b4d19d4e15;

architecture structural of fft_stage_3_entity_b4d19d4e15 is
  signal ce_1_sg_x470: std_logic;
  signal clk_1_sg_x470: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x14: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x15: std_logic_vector(143 downto 0);
  signal constant2_op_net_x3: std_logic_vector(14 downto 0);
  signal counter_op_net: std_logic_vector(7 downto 0);
  signal delay0_q_net_x4: std_logic;
  signal delay0_q_net_x5: std_logic;
  signal din0_q_net: std_logic_vector(143 downto 0);
  signal din2_q_net_x1: std_logic_vector(143 downto 0);
  signal dmux0_q_net_x2: std_logic_vector(143 downto 0);
  signal dmux1_q_net_x1: std_logic_vector(143 downto 0);
  signal dsync0_q_net: std_logic;
  signal dsync1_q_net_x0: std_logic;
  signal logical1_y_net_x0: std_logic_vector(3 downto 0);
  signal logical1_y_net_x3: std_logic_vector(3 downto 0);
  signal mux0_y_net: std_logic_vector(143 downto 0);
  signal mux1_y_net: std_logic_vector(143 downto 0);
  signal mux_y_net_x4: std_logic;
  signal reinterpret1_output_port_net_x5: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x5: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x6: std_logic_vector(143 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice1_y_net: std_logic;

begin
  ce_1_sg_x470 <= ce_1;
  clk_1_sg_x470 <= clk_1;
  reinterpret2_output_port_net_x5 <= in1;
  reinterpret1_output_port_net_x5 <= in2;
  logical1_y_net_x3 <= of_in;
  constant2_op_net_x3 <= shift;
  delay0_q_net_x4 <= sync;
  of_x0 <= logical1_y_net_x0;
  out1 <= reinterpret2_output_port_net_x6;
  out2 <= reinterpret1_output_port_net_x9;
  sync_out <= delay0_q_net_x5;

  butterfly_direct_eed6de4542: entity work.butterfly_direct_entity_eed6de4542
    port map (
      a => concatenate_y_net_x15,
      b => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x470,
      clk_1 => clk_1_sg_x470,
      shift => slice0_y_net_x1,
      sync_in => mux_y_net_x4,
      a_bw => reinterpret1_output_port_net_x9,
      a_bw_x0 => reinterpret2_output_port_net_x6,
      of_x0 => concatenate_y_net_x14,
      sync_out => delay0_q_net_x5
    );

  counter: entity work.counter_11ccef49a2
    port map (
      ce => ce_1_sg_x470,
      clk => clk_1_sg_x470,
      clr => '0',
      rst(0) => dsync0_q_net,
      op => counter_op_net
    );

  delay0_2eee6707d5: entity work.delay0_entity_2eee6707d5
    port map (
      ce_1 => ce_1_sg_x470,
      clk_1 => clk_1_sg_x470,
      din => din2_q_net_x1,
      dout => concatenate_y_net_x1
    );

  delay1_e9d5afbd44: entity work.delay0_entity_2eee6707d5
    port map (
      ce_1 => ce_1_sg_x470,
      clk_1 => clk_1_sg_x470,
      din => dmux1_q_net_x1,
      dout => concatenate_y_net_x15
    );

  din0: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reinterpret2_output_port_net_x5,
      q => din0_q_net
    );

  din2: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reinterpret1_output_port_net_x5,
      q => din2_q_net_x1
    );

  dmux0: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => mux0_y_net,
      q => dmux0_q_net_x2
    );

  dmux1: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => mux1_y_net,
      q => dmux1_q_net_x1
    );

  dsync0: entity work.delay_0341f7be44
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d(0) => delay0_q_net_x4,
      q(0) => dsync0_q_net
    );

  dsync1: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x470,
      clk => clk_1_sg_x470,
      clr => '0',
      d(0) => dsync0_q_net,
      q(0) => dsync1_q_net_x0
    );

  logical1: entity work.logical_8c69d6f164
    port map (
      ce => ce_1_sg_x470,
      clk => clk_1_sg_x470,
      clr => '0',
      d0 => concatenate_y_net_x14,
      d1 => logical1_y_net_x3,
      y => logical1_y_net_x0
    );

  mux0: entity work.mux_340b095e64
    port map (
      ce => ce_1_sg_x470,
      clk => clk_1_sg_x470,
      clr => '0',
      d0 => concatenate_y_net_x1,
      d1 => din0_q_net,
      sel(0) => slice1_y_net,
      y => mux0_y_net
    );

  mux1: entity work.mux_340b095e64
    port map (
      ce => ce_1_sg_x470,
      clk => clk_1_sg_x470,
      clr => '0',
      d0 => din0_q_net,
      d1 => concatenate_y_net_x1,
      sel(0) => slice1_y_net,
      y => mux1_y_net
    );

  slice0: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 15,
      y_width => 1
    )
    port map (
      x => constant2_op_net_x3,
      y(0) => slice0_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 7,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  sync_delay_25d4adb454: entity work.sync_delay_entity_25d4adb454
    port map (
      ce_1 => ce_1_sg_x470,
      clk_1 => clk_1_sg_x470,
      in_x0 => dsync1_q_net_x0,
      out_x0 => mux_y_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_4/butterfly_direct/twiddle/coeff_gen/bit_reverse"

entity bit_reverse_entity_e22677698d is
  port (
    in_x0: in std_logic_vector(2 downto 0); 
    out_x0: out std_logic_vector(2 downto 0)
  );
end bit_reverse_entity_e22677698d;

architecture structural of bit_reverse_entity_e22677698d is
  signal bit0_y_net: std_logic;
  signal bit1_y_net: std_logic;
  signal bit2_y_net: std_logic;
  signal concat_y_net_x0: std_logic_vector(2 downto 0);
  signal slice_y_net_x0: std_logic_vector(2 downto 0);

begin
  slice_y_net_x0 <= in_x0;
  out_x0 <= concat_y_net_x0;

  bit0: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 3,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit0_y_net
    );

  bit1: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 3,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit1_y_net
    );

  bit2: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 3,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit2_y_net
    );

  concat: entity work.concat_452c4d3410
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => bit0_y_net,
      in1(0) => bit1_y_net,
      in2(0) => bit2_y_net,
      y => concat_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_4/butterfly_direct/twiddle/coeff_gen/cosin/add_convert0"

entity add_convert0_entity_2e0e75d8a3 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    theta: in std_logic_vector(2 downto 0); 
    add: out std_logic_vector(2 downto 0); 
    negate: out std_logic
  );
end add_convert0_entity_2e0e75d8a3;

architecture structural of add_convert0_entity_2e0e75d8a3 is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x0: std_logic_vector(2 downto 0);
  signal ce_1_sg_x551: std_logic;
  signal clk_1_sg_x551: std_logic;
  signal concat_y_net: std_logic_vector(3 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(2 downto 0);
  signal delay13_q_net: std_logic_vector(2 downto 0);
  signal delay14_q_net: std_logic_vector(2 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(3 downto 0);
  signal invert_y_net: std_logic;
  signal lookup_y_net: std_logic_vector(1 downto 0);
  signal new_add_y_net: std_logic_vector(2 downto 0);
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x551 <= ce_1;
  clk_1_sg_x551 <= clk_1;
  assert_dout_net_x0 <= theta;
  add <= convert2_dout_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x551,
      clk => clk_1_sg_x551,
      clr => '0',
      en => "1",
      s => addsub5_s_net
    );

  concat: entity work.concat_bd20dd351d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => addsub5_s_net,
      in1 => lookup_y_net,
      y => concat_y_net
    );

  convert2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 3,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 3,
      latency => 3,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x551,
      clk => clk_1_sg_x551,
      clr => '0',
      din => delay13_q_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  delay13: entity work.delay_6edcd04662
    port map (
      ce => ce_1_sg_x551,
      clk => clk_1_sg_x551,
      clr => '0',
      d => delay14_q_net,
      q => delay13_q_net
    );

  delay14: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 3
    )
    port map (
      ce => ce_1_sg_x551,
      clk => clk_1_sg_x551,
      d => new_add_y_net,
      en => '1',
      rst => '1',
      q => delay14_q_net
    );

  delay2: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x551,
      clk => clk_1_sg_x551,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_949f038a6d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x0,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  lookup: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 1,
      x_width => 4,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => lookup_y_net
    );

  new_add: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 2,
      x_width => 4,
      y_width => 3
    )
    port map (
      x => concat_y_net,
      y => new_add_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 3,
      x_width => 4,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_4/butterfly_direct/twiddle/coeff_gen/cosin/add_convert1"

entity add_convert1_entity_35c581a0ef is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    theta: in std_logic_vector(2 downto 0); 
    misco: out std_logic_vector(288 downto 0); 
    negate: out std_logic
  );
end add_convert1_entity_35c581a0ef;

architecture structural of add_convert1_entity_35c581a0ef is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x1: std_logic_vector(2 downto 0);
  signal ce_1_sg_x552: std_logic;
  signal clk_1_sg_x552: std_logic;
  signal concatenate_y_net_x3: std_logic_vector(288 downto 0);
  signal delay1_q_net_x0: std_logic_vector(288 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(3 downto 0);
  signal invert_y_net: std_logic;
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x552 <= ce_1;
  clk_1_sg_x552 <= clk_1;
  concatenate_y_net_x3 <= misci;
  assert_dout_net_x1 <= theta;
  misco <= delay1_q_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x552,
      clk => clk_1_sg_x552,
      clr => '0',
      en => "1",
      s => addsub5_s_net
    );

  delay1: entity work.delay_4583411594
    port map (
      ce => ce_1_sg_x552,
      clk => clk_1_sg_x552,
      clr => '0',
      d => concatenate_y_net_x3,
      q => delay1_q_net_x0
    );

  delay2: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x552,
      clk => clk_1_sg_x552,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_949f038a6d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x1,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 3,
      x_width => 4,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_4/butterfly_direct/twiddle/coeff_gen/cosin"

entity cosin_entity_32a18ab11b is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    theta: in std_logic_vector(2 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(288 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_32a18ab11b;

architecture structural of cosin_entity_32a18ab11b is
  signal assert_dout_net_x1: std_logic_vector(2 downto 0);
  signal ce_1_sg_x555: std_logic;
  signal clk_1_sg_x555: std_logic;
  signal concat_y_net_x1: std_logic_vector(2 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(288 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(2 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(288 downto 0);
  signal delay1_q_net_x2: std_logic_vector(288 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(288 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x555 <= ce_1;
  clk_1_sg_x555 <= clk_1;
  concatenate_y_net_x4 <= misci;
  concat_y_net_x1 <= theta;
  cos <= mux_y_net_x2;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x3;

  add_convert0_2e0e75d8a3: entity work.add_convert0_entity_2e0e75d8a3
    port map (
      ce_1 => ce_1_sg_x555,
      clk_1 => clk_1_sg_x555,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_35c581a0ef: entity work.add_convert1_entity_35c581a0ef
    port map (
      ce_1 => ce_1_sg_x555,
      clk_1 => clk_1_sg_x555,
      misci => concatenate_y_net_x4,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 3,
      dout_width => 3
    )
    port map (
      din => concat_y_net_x1,
      dout => assert_dout_net_x1
    );

  c_to_ri_b42fdeb1b1: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_80f3e767fa
    port map (
      ce => ce_1_sg_x555,
      clk => clk_1_sg_x555,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x555,
      clk => clk_1_sg_x555,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x555,
      clk => clk_1_sg_x555,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_f04f44f03e: entity work.invert0_entity_6963cb9e38
    port map (
      ce_1 => ce_1_sg_x555,
      clk_1 => clk_1_sg_x555,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_c9a5bf9712: entity work.invert1_entity_4148cefff8
    port map (
      ce_1 => ce_1_sg_x555,
      clk_1 => clk_1_sg_x555,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 3,
      c_width => 36,
      core_name0 => "bmg_72_98882796f45625cb",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x555,
      clk => clk_1_sg_x555,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_4/butterfly_direct/twiddle/coeff_gen"

entity coeff_gen_entity_2883c760cb is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(288 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_2883c760cb;

architecture structural of coeff_gen_entity_2883c760cb is
  signal ce_1_sg_x556: std_logic;
  signal clk_1_sg_x556: std_logic;
  signal concat_y_net_x1: std_logic_vector(2 downto 0);
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(288 downto 0);
  signal counter_op_net: std_logic_vector(8 downto 0);
  signal delay1_q_net_x3: std_logic_vector(288 downto 0);
  signal mux_y_net_x1: std_logic;
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(2 downto 0);

begin
  ce_1_sg_x556 <= ce_1;
  clk_1_sg_x556 <= clk_1;
  concatenate_y_net_x5 <= misci;
  mux_y_net_x1 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x11;

  bit_reverse_e22677698d: entity work.bit_reverse_entity_e22677698d
    port map (
      in_x0 => slice_y_net_x0,
      out_x0 => concat_y_net_x1
    );

  cosin_32a18ab11b: entity work.cosin_entity_32a18ab11b
    port map (
      ce_1 => ce_1_sg_x556,
      clk_1 => clk_1_sg_x556,
      misci => concatenate_y_net_x5,
      theta => concat_y_net_x1,
      cos => mux_y_net_x4,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x5
    );

  counter: entity work.counter_d5d467f1b8
    port map (
      ce => ce_1_sg_x556,
      clk => clk_1_sg_x556,
      clr => '0',
      rst(0) => mux_y_net_x1,
      op => counter_op_net
    );

  ri_to_c_63233e2da9: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x11
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 8,
      x_width => 9,
      y_width => 3
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_4/butterfly_direct/twiddle"

entity twiddle_entity_89127186f4 is
  port (
    ai: in std_logic_vector(143 downto 0); 
    bi: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(143 downto 0); 
    bwo: out std_logic_vector(151 downto 0); 
    sync_out: out std_logic
  );
end twiddle_entity_89127186f4;

architecture structural of twiddle_entity_89127186f4 is
  signal ce_1_sg_x557: std_logic;
  signal clk_1_sg_x557: std_logic;
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(295 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(288 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(151 downto 0);
  signal delay1_q_net_x3: std_logic_vector(288 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(144 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(144 downto 0);
  signal dmux0_q_net_x1: std_logic_vector(143 downto 0);
  signal mux_y_net_x2: std_logic;
  signal reinterpret1_output_port_net_x5: std_logic_vector(144 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(143 downto 0);
  signal slice2_y_net_x1: std_logic;

begin
  concatenate_y_net_x2 <= ai;
  dmux0_q_net_x1 <= bi;
  ce_1_sg_x557 <= ce_1;
  clk_1_sg_x557 <= clk_1;
  mux_y_net_x2 <= sync_in;
  ao <= reinterpret1_output_port_net_x7;
  bwo <= concatenate_y_net_x7;
  sync_out <= slice2_y_net_x1;

  bus_convert_2d0307916d: entity work.bus_convert_entity_fc9d20fae7
    port map (
      ce_1 => ce_1_sg_x557,
      clk_1 => clk_1_sg_x557,
      din => concatenate_y_net_x3,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x7,
      misco => dmisc_q_net_x3
    );

  bus_create_10beb8a1be: entity work.bus_create_entity_3d2f105ae8
    port map (
      in1 => dmux0_q_net_x1,
      in2 => mux_y_net_x2,
      in3 => concatenate_y_net_x2,
      bus_out => concatenate_y_net_x5
    );

  bus_expand1_ef1d951c35: entity work.bus_expand1_entity_0d80282e07
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x7,
      msb_out2 => slice2_y_net_x1
    );

  bus_expand_1e455dd7cd: entity work.bus_expand_entity_1995b7ac80
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x5,
      msb_out2 => reinterpret2_output_port_net_x2
    );

  bus_mult_3f4de6e3b6: entity work.bus_mult_entity_cc3ac8248d
    port map (
      a => concat_y_net_x11,
      b => reinterpret2_output_port_net_x2,
      ce_1 => ce_1_sg_x557,
      clk_1 => clk_1_sg_x557,
      misci => reinterpret1_output_port_net_x5,
      a_b => concatenate_y_net_x3,
      misco => dmisc_q_net_x2
    );

  coeff_gen_2883c760cb: entity work.coeff_gen_entity_2883c760cb
    port map (
      ce_1 => ce_1_sg_x557,
      clk_1 => clk_1_sg_x557,
      misci => concatenate_y_net_x5,
      rst => mux_y_net_x2,
      misco => delay1_q_net_x3,
      w => concat_y_net_x11
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_4/butterfly_direct"

entity butterfly_direct_entity_e15fb6b001 is
  port (
    a: in std_logic_vector(143 downto 0); 
    b: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(143 downto 0); 
    a_bw_x0: out std_logic_vector(143 downto 0); 
    of_x0: out std_logic_vector(3 downto 0); 
    sync_out: out std_logic
  );
end butterfly_direct_entity_e15fb6b001;

architecture structural of butterfly_direct_entity_e15fb6b001 is
  signal ce_1_sg_x558: std_logic;
  signal clk_1_sg_x558: std_logic;
  signal concat_y_net_x3: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(151 downto 0);
  signal concatenate_y_net_x13: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x14: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(159 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(287 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(159 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal dmux0_q_net_x2: std_logic_vector(143 downto 0);
  signal mux_y_net_x3: std_logic;
  signal reinterpret1_output_port_net_x7: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x8: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(15 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice2_y_net_x1: std_logic;

begin
  concatenate_y_net_x13 <= a;
  dmux0_q_net_x2 <= b;
  ce_1_sg_x558 <= ce_1;
  clk_1_sg_x558 <= clk_1;
  slice0_y_net_x1 <= shift;
  mux_y_net_x3 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x8;
  a_bw_x0 <= reinterpret2_output_port_net_x1;
  of_x0 <= concatenate_y_net_x14;
  sync_out <= delay0_q_net_x0;

  bus_add_e6b6d19fe4: entity work.bus_add_entity_928fd44576
    port map (
      a => reinterpret1_output_port_net_x7,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x558,
      clk_1 => clk_1_sg_x558,
      dout => concatenate_y_net_x3
    );

  bus_convert_f76f2117e9: entity work.bus_convert_entity_8625f90d6a
    port map (
      ce_1 => ce_1_sg_x558,
      clk_1 => clk_1_sg_x558,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_bd47d1f3b3: entity work.bus_expand_entity_2a52aaf3de
    port map (
      bus_in => concatenate_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x8,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  bus_norm0_6888a9a67c: entity work.bus_norm0_entity_2065c27fbe
    port map (
      ce_1 => ce_1_sg_x558,
      clk_1 => clk_1_sg_x558,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_c8ec81251a: entity work.bus_norm1_entity_ebb4710d83
    port map (
      ce_1 => ce_1_sg_x558,
      clk_1 => clk_1_sg_x558,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_c1826a79a1: entity work.bus_relational_entity_633fc73315
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      ce_1 => ce_1_sg_x558,
      clk_1 => clk_1_sg_x558,
      a_b => concatenate_y_net_x14
    );

  bus_scale_c7207e3f5a: entity work.bus_scale_entity_0ad20b8fc9
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_ae1449a440: entity work.bus_sub_entity_c471a0f176
    port map (
      a => reinterpret1_output_port_net_x7,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x558,
      clk_1 => clk_1_sg_x558,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_2a42ff61a3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x558,
      clk => clk_1_sg_x558,
      clr => '0',
      d(0) => slice2_y_net_x1,
      q(0) => delay0_q_net_x0
    );

  munge_d22216fe72: entity work.munge_entity_7ae6614fdf
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_ecca70ef24: entity work.mux_entity_bd9bbc285a
    port map (
      ce_1 => ce_1_sg_x558,
      clk_1 => clk_1_sg_x558,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_c5748b3285: entity work.shift_replicate_entity_9dcff94fe9
    port map (
      ce_1 => ce_1_sg_x558,
      clk_1 => clk_1_sg_x558,
      in_x0 => slice0_y_net_x1,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_89127186f4: entity work.twiddle_entity_89127186f4
    port map (
      ai => concatenate_y_net_x13,
      bi => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x558,
      clk_1 => clk_1_sg_x558,
      sync_in => mux_y_net_x3,
      ao => reinterpret1_output_port_net_x7,
      bwo => concatenate_y_net_x12,
      sync_out => slice2_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_4/delay0"

entity delay0_entity_bd1a159bf7 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(143 downto 0); 
    dout: out std_logic_vector(143 downto 0)
  );
end delay0_entity_bd1a159bf7;

architecture structural of delay0_entity_bd1a159bf7 is
  signal ce_1_sg_x559: std_logic;
  signal clk_1_sg_x559: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(143 downto 0);
  signal del1_q_net_x0: std_logic_vector(35 downto 0);
  signal del2_q_net_x0: std_logic_vector(35 downto 0);
  signal del3_q_net_x0: std_logic_vector(35 downto 0);
  signal del4_q_net_x0: std_logic_vector(35 downto 0);
  signal din2_q_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x559 <= ce_1;
  clk_1_sg_x559 <= clk_1;
  din2_q_net_x1 <= din;
  dout <= concatenate_y_net_x1;

  del1: entity work.delay_9b6c7a899e
    port map (
      ce => ce_1_sg_x559,
      clk => clk_1_sg_x559,
      clr => '0',
      d => reinterpret4_output_port_net_x0,
      q => del1_q_net_x0
    );

  del2: entity work.delay_9b6c7a899e
    port map (
      ce => ce_1_sg_x559,
      clk => clk_1_sg_x559,
      clr => '0',
      d => reinterpret3_output_port_net_x0,
      q => del2_q_net_x0
    );

  del3: entity work.delay_9b6c7a899e
    port map (
      ce => ce_1_sg_x559,
      clk => clk_1_sg_x559,
      clr => '0',
      d => reinterpret2_output_port_net_x0,
      q => del3_q_net_x0
    );

  del4: entity work.delay_9b6c7a899e
    port map (
      ce => ce_1_sg_x559,
      clk => clk_1_sg_x559,
      clr => '0',
      d => reinterpret1_output_port_net_x0,
      q => del4_q_net_x0
    );

  din_expand_dc552098b4: entity work.expand0_entity_faedf3e73c
    port map (
      bus_in => din2_q_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  dout_compress_9122b06b73: entity work.d_bussify_entity_9462440c59
    port map (
      in1 => del1_q_net_x0,
      in2 => del2_q_net_x0,
      in3 => del3_q_net_x0,
      in4 => del4_q_net_x0,
      bus_out => concatenate_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_4/sync_delay"

entity sync_delay_entity_ea3d789ac6 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_ea3d789ac6;

architecture structural of sync_delay_entity_ea3d789ac6 is
  signal ce_1_sg_x561: std_logic;
  signal clk_1_sg_x561: std_logic;
  signal constant1_op_net: std_logic_vector(6 downto 0);
  signal constant2_op_net: std_logic_vector(6 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(6 downto 0);
  signal counter_op_net: std_logic_vector(6 downto 0);
  signal dsync1_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x4: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x561 <= ce_1;
  clk_1_sg_x561 <= clk_1;
  dsync1_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x4;

  constant1: entity work.constant_7244cd602b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_7b07120b87
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_180df391de
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.counter_82d8714dde
    port map (
      ce => ce_1_sg_x561,
      clk => clk_1_sg_x561,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => dsync1_q_net_x0,
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x4
    );

  relational: entity work.relational_9a3978c602
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_23065a6aa3
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_4"

entity fft_stage_4_entity_c1be74421c is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(143 downto 0); 
    in2: in std_logic_vector(143 downto 0); 
    of_in: in std_logic_vector(3 downto 0); 
    shift: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic_vector(3 downto 0); 
    out1: out std_logic_vector(143 downto 0); 
    out2: out std_logic_vector(143 downto 0); 
    sync_out: out std_logic
  );
end fft_stage_4_entity_c1be74421c;

architecture structural of fft_stage_4_entity_c1be74421c is
  signal ce_1_sg_x562: std_logic;
  signal clk_1_sg_x562: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x14: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x15: std_logic_vector(143 downto 0);
  signal constant2_op_net_x4: std_logic_vector(14 downto 0);
  signal counter_op_net: std_logic_vector(6 downto 0);
  signal delay0_q_net_x1: std_logic;
  signal delay0_q_net_x6: std_logic;
  signal din0_q_net: std_logic_vector(143 downto 0);
  signal din2_q_net_x1: std_logic_vector(143 downto 0);
  signal dmux0_q_net_x2: std_logic_vector(143 downto 0);
  signal dmux1_q_net_x1: std_logic_vector(143 downto 0);
  signal dsync0_q_net: std_logic;
  signal dsync1_q_net_x0: std_logic;
  signal logical1_y_net_x1: std_logic_vector(3 downto 0);
  signal logical1_y_net_x2: std_logic_vector(3 downto 0);
  signal mux0_y_net: std_logic_vector(143 downto 0);
  signal mux1_y_net: std_logic_vector(143 downto 0);
  signal mux_y_net_x4: std_logic;
  signal reinterpret1_output_port_net_x10: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x7: std_logic_vector(143 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice1_y_net: std_logic;

begin
  ce_1_sg_x562 <= ce_1;
  clk_1_sg_x562 <= clk_1;
  reinterpret2_output_port_net_x7 <= in1;
  reinterpret1_output_port_net_x10 <= in2;
  logical1_y_net_x1 <= of_in;
  constant2_op_net_x4 <= shift;
  delay0_q_net_x6 <= sync;
  of_x0 <= logical1_y_net_x2;
  out1 <= reinterpret2_output_port_net_x2;
  out2 <= reinterpret1_output_port_net_x11;
  sync_out <= delay0_q_net_x1;

  butterfly_direct_e15fb6b001: entity work.butterfly_direct_entity_e15fb6b001
    port map (
      a => concatenate_y_net_x15,
      b => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x562,
      clk_1 => clk_1_sg_x562,
      shift => slice0_y_net_x1,
      sync_in => mux_y_net_x4,
      a_bw => reinterpret1_output_port_net_x11,
      a_bw_x0 => reinterpret2_output_port_net_x2,
      of_x0 => concatenate_y_net_x14,
      sync_out => delay0_q_net_x1
    );

  counter: entity work.counter_aaa565147f
    port map (
      ce => ce_1_sg_x562,
      clk => clk_1_sg_x562,
      clr => '0',
      rst(0) => dsync0_q_net,
      op => counter_op_net
    );

  delay0_bd1a159bf7: entity work.delay0_entity_bd1a159bf7
    port map (
      ce_1 => ce_1_sg_x562,
      clk_1 => clk_1_sg_x562,
      din => din2_q_net_x1,
      dout => concatenate_y_net_x1
    );

  delay1_9f160576f5: entity work.delay0_entity_bd1a159bf7
    port map (
      ce_1 => ce_1_sg_x562,
      clk_1 => clk_1_sg_x562,
      din => dmux1_q_net_x1,
      dout => concatenate_y_net_x15
    );

  din0: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reinterpret2_output_port_net_x7,
      q => din0_q_net
    );

  din2: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reinterpret1_output_port_net_x10,
      q => din2_q_net_x1
    );

  dmux0: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => mux0_y_net,
      q => dmux0_q_net_x2
    );

  dmux1: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => mux1_y_net,
      q => dmux1_q_net_x1
    );

  dsync0: entity work.delay_0341f7be44
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d(0) => delay0_q_net_x6,
      q(0) => dsync0_q_net
    );

  dsync1: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x562,
      clk => clk_1_sg_x562,
      clr => '0',
      d(0) => dsync0_q_net,
      q(0) => dsync1_q_net_x0
    );

  logical1: entity work.logical_8c69d6f164
    port map (
      ce => ce_1_sg_x562,
      clk => clk_1_sg_x562,
      clr => '0',
      d0 => concatenate_y_net_x14,
      d1 => logical1_y_net_x1,
      y => logical1_y_net_x2
    );

  mux0: entity work.mux_340b095e64
    port map (
      ce => ce_1_sg_x562,
      clk => clk_1_sg_x562,
      clr => '0',
      d0 => concatenate_y_net_x1,
      d1 => din0_q_net,
      sel(0) => slice1_y_net,
      y => mux0_y_net
    );

  mux1: entity work.mux_340b095e64
    port map (
      ce => ce_1_sg_x562,
      clk => clk_1_sg_x562,
      clr => '0',
      d0 => din0_q_net,
      d1 => concatenate_y_net_x1,
      sel(0) => slice1_y_net,
      y => mux1_y_net
    );

  slice0: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 15,
      y_width => 1
    )
    port map (
      x => constant2_op_net_x4,
      y(0) => slice0_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 6,
      x_width => 7,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  sync_delay_ea3d789ac6: entity work.sync_delay_entity_ea3d789ac6
    port map (
      ce_1 => ce_1_sg_x562,
      clk_1 => clk_1_sg_x562,
      in_x0 => dsync1_q_net_x0,
      out_x0 => mux_y_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_5/butterfly_direct/twiddle/coeff_gen/bit_reverse"

entity bit_reverse_entity_07291f75ea is
  port (
    in_x0: in std_logic_vector(3 downto 0); 
    out_x0: out std_logic_vector(3 downto 0)
  );
end bit_reverse_entity_07291f75ea;

architecture structural of bit_reverse_entity_07291f75ea is
  signal bit0_y_net: std_logic;
  signal bit1_y_net: std_logic;
  signal bit2_y_net: std_logic;
  signal bit3_y_net: std_logic;
  signal concat_y_net_x0: std_logic_vector(3 downto 0);
  signal slice_y_net_x0: std_logic_vector(3 downto 0);

begin
  slice_y_net_x0 <= in_x0;
  out_x0 <= concat_y_net_x0;

  bit0: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit0_y_net
    );

  bit1: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit1_y_net
    );

  bit2: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit2_y_net
    );

  bit3: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit3_y_net
    );

  concat: entity work.concat_a0c7cd7a34
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => bit0_y_net,
      in1(0) => bit1_y_net,
      in2(0) => bit2_y_net,
      in3(0) => bit3_y_net,
      y => concat_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_5/butterfly_direct/twiddle/coeff_gen/cosin/add_convert0"

entity add_convert0_entity_47cef8ff8c is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    theta: in std_logic_vector(3 downto 0); 
    add: out std_logic_vector(3 downto 0); 
    negate: out std_logic
  );
end add_convert0_entity_47cef8ff8c;

architecture structural of add_convert0_entity_47cef8ff8c is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x0: std_logic_vector(3 downto 0);
  signal ce_1_sg_x643: std_logic;
  signal clk_1_sg_x643: std_logic;
  signal concat_y_net: std_logic_vector(4 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(3 downto 0);
  signal delay13_q_net: std_logic_vector(3 downto 0);
  signal delay14_q_net: std_logic_vector(3 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(4 downto 0);
  signal invert_y_net: std_logic;
  signal lookup_y_net: std_logic_vector(2 downto 0);
  signal new_add_y_net: std_logic_vector(3 downto 0);
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x643 <= ce_1;
  clk_1_sg_x643 <= clk_1;
  assert_dout_net_x0 <= theta;
  add <= convert2_dout_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x643,
      clk => clk_1_sg_x643,
      clr => '0',
      en => "1",
      s => addsub5_s_net
    );

  concat: entity work.concat_8f12c32de0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => addsub5_s_net,
      in1 => lookup_y_net,
      y => concat_y_net
    );

  convert2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 4,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 4,
      latency => 3,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x643,
      clk => clk_1_sg_x643,
      clr => '0',
      din => delay13_q_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  delay13: entity work.delay_4f82bd00e5
    port map (
      ce => ce_1_sg_x643,
      clk => clk_1_sg_x643,
      clr => '0',
      d => delay14_q_net,
      q => delay13_q_net
    );

  delay14: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 4
    )
    port map (
      ce => ce_1_sg_x643,
      clk => clk_1_sg_x643,
      d => new_add_y_net,
      en => '1',
      rst => '1',
      q => delay14_q_net
    );

  delay2: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x643,
      clk => clk_1_sg_x643,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_cf540617d5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x0,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  lookup: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 2,
      x_width => 5,
      y_width => 3
    )
    port map (
      x => fluff_y_net,
      y => lookup_y_net
    );

  new_add: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 3,
      x_width => 5,
      y_width => 4
    )
    port map (
      x => concat_y_net,
      y => new_add_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 4,
      x_width => 5,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_5/butterfly_direct/twiddle/coeff_gen/cosin/add_convert1"

entity add_convert1_entity_fb25957140 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    theta: in std_logic_vector(3 downto 0); 
    misco: out std_logic_vector(288 downto 0); 
    negate: out std_logic
  );
end add_convert1_entity_fb25957140;

architecture structural of add_convert1_entity_fb25957140 is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x1: std_logic_vector(3 downto 0);
  signal ce_1_sg_x644: std_logic;
  signal clk_1_sg_x644: std_logic;
  signal concatenate_y_net_x3: std_logic_vector(288 downto 0);
  signal delay1_q_net_x0: std_logic_vector(288 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(4 downto 0);
  signal invert_y_net: std_logic;
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x644 <= ce_1;
  clk_1_sg_x644 <= clk_1;
  concatenate_y_net_x3 <= misci;
  assert_dout_net_x1 <= theta;
  misco <= delay1_q_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x644,
      clk => clk_1_sg_x644,
      clr => '0',
      en => "1",
      s => addsub5_s_net
    );

  delay1: entity work.delay_4583411594
    port map (
      ce => ce_1_sg_x644,
      clk => clk_1_sg_x644,
      clr => '0',
      d => concatenate_y_net_x3,
      q => delay1_q_net_x0
    );

  delay2: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x644,
      clk => clk_1_sg_x644,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_cf540617d5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x1,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 4,
      x_width => 5,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_5/butterfly_direct/twiddle/coeff_gen/cosin"

entity cosin_entity_4351fe43c2 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    theta: in std_logic_vector(3 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(288 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_4351fe43c2;

architecture structural of cosin_entity_4351fe43c2 is
  signal assert_dout_net_x1: std_logic_vector(3 downto 0);
  signal ce_1_sg_x647: std_logic;
  signal clk_1_sg_x647: std_logic;
  signal concat_y_net_x1: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(288 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(3 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(288 downto 0);
  signal delay1_q_net_x2: std_logic_vector(288 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(288 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x647 <= ce_1;
  clk_1_sg_x647 <= clk_1;
  concatenate_y_net_x4 <= misci;
  concat_y_net_x1 <= theta;
  cos <= mux_y_net_x2;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x3;

  add_convert0_47cef8ff8c: entity work.add_convert0_entity_47cef8ff8c
    port map (
      ce_1 => ce_1_sg_x647,
      clk_1 => clk_1_sg_x647,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_fb25957140: entity work.add_convert1_entity_fb25957140
    port map (
      ce_1 => ce_1_sg_x647,
      clk_1 => clk_1_sg_x647,
      misci => concatenate_y_net_x4,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 4,
      dout_width => 4
    )
    port map (
      din => concat_y_net_x1,
      dout => assert_dout_net_x1
    );

  c_to_ri_96b775bb3e: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_80f3e767fa
    port map (
      ce => ce_1_sg_x647,
      clk => clk_1_sg_x647,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x647,
      clk => clk_1_sg_x647,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x647,
      clk => clk_1_sg_x647,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_8228cc735b: entity work.invert0_entity_6963cb9e38
    port map (
      ce_1 => ce_1_sg_x647,
      clk_1 => clk_1_sg_x647,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_7e47ee0b09: entity work.invert1_entity_4148cefff8
    port map (
      ce_1 => ce_1_sg_x647,
      clk_1 => clk_1_sg_x647,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 4,
      c_width => 36,
      core_name0 => "bmg_72_448274d16c9804a7",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x647,
      clk => clk_1_sg_x647,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_5/butterfly_direct/twiddle/coeff_gen"

entity coeff_gen_entity_25c8300643 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(288 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_25c8300643;

architecture structural of coeff_gen_entity_25c8300643 is
  signal ce_1_sg_x648: std_logic;
  signal clk_1_sg_x648: std_logic;
  signal concat_y_net_x1: std_logic_vector(3 downto 0);
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(288 downto 0);
  signal counter_op_net: std_logic_vector(8 downto 0);
  signal delay1_q_net_x3: std_logic_vector(288 downto 0);
  signal mux_y_net_x1: std_logic;
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(3 downto 0);

begin
  ce_1_sg_x648 <= ce_1;
  clk_1_sg_x648 <= clk_1;
  concatenate_y_net_x5 <= misci;
  mux_y_net_x1 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x11;

  bit_reverse_07291f75ea: entity work.bit_reverse_entity_07291f75ea
    port map (
      in_x0 => slice_y_net_x0,
      out_x0 => concat_y_net_x1
    );

  cosin_4351fe43c2: entity work.cosin_entity_4351fe43c2
    port map (
      ce_1 => ce_1_sg_x648,
      clk_1 => clk_1_sg_x648,
      misci => concatenate_y_net_x5,
      theta => concat_y_net_x1,
      cos => mux_y_net_x4,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x5
    );

  counter: entity work.counter_d5d467f1b8
    port map (
      ce => ce_1_sg_x648,
      clk => clk_1_sg_x648,
      clr => '0',
      rst(0) => mux_y_net_x1,
      op => counter_op_net
    );

  ri_to_c_4a38f42e85: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x11
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 8,
      x_width => 9,
      y_width => 4
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_5/butterfly_direct/twiddle"

entity twiddle_entity_a00de8dad3 is
  port (
    ai: in std_logic_vector(143 downto 0); 
    bi: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(143 downto 0); 
    bwo: out std_logic_vector(151 downto 0); 
    sync_out: out std_logic
  );
end twiddle_entity_a00de8dad3;

architecture structural of twiddle_entity_a00de8dad3 is
  signal ce_1_sg_x649: std_logic;
  signal clk_1_sg_x649: std_logic;
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(295 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(288 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(151 downto 0);
  signal delay1_q_net_x3: std_logic_vector(288 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(144 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(144 downto 0);
  signal dmux0_q_net_x1: std_logic_vector(143 downto 0);
  signal mux_y_net_x2: std_logic;
  signal reinterpret1_output_port_net_x5: std_logic_vector(144 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(143 downto 0);
  signal slice2_y_net_x1: std_logic;

begin
  concatenate_y_net_x2 <= ai;
  dmux0_q_net_x1 <= bi;
  ce_1_sg_x649 <= ce_1;
  clk_1_sg_x649 <= clk_1;
  mux_y_net_x2 <= sync_in;
  ao <= reinterpret1_output_port_net_x7;
  bwo <= concatenate_y_net_x7;
  sync_out <= slice2_y_net_x1;

  bus_convert_069115a578: entity work.bus_convert_entity_fc9d20fae7
    port map (
      ce_1 => ce_1_sg_x649,
      clk_1 => clk_1_sg_x649,
      din => concatenate_y_net_x3,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x7,
      misco => dmisc_q_net_x3
    );

  bus_create_f22f04379f: entity work.bus_create_entity_3d2f105ae8
    port map (
      in1 => dmux0_q_net_x1,
      in2 => mux_y_net_x2,
      in3 => concatenate_y_net_x2,
      bus_out => concatenate_y_net_x5
    );

  bus_expand1_bf17996d6c: entity work.bus_expand1_entity_0d80282e07
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x7,
      msb_out2 => slice2_y_net_x1
    );

  bus_expand_ade8de1c07: entity work.bus_expand_entity_1995b7ac80
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x5,
      msb_out2 => reinterpret2_output_port_net_x2
    );

  bus_mult_4070575f31: entity work.bus_mult_entity_cc3ac8248d
    port map (
      a => concat_y_net_x11,
      b => reinterpret2_output_port_net_x2,
      ce_1 => ce_1_sg_x649,
      clk_1 => clk_1_sg_x649,
      misci => reinterpret1_output_port_net_x5,
      a_b => concatenate_y_net_x3,
      misco => dmisc_q_net_x2
    );

  coeff_gen_25c8300643: entity work.coeff_gen_entity_25c8300643
    port map (
      ce_1 => ce_1_sg_x649,
      clk_1 => clk_1_sg_x649,
      misci => concatenate_y_net_x5,
      rst => mux_y_net_x2,
      misco => delay1_q_net_x3,
      w => concat_y_net_x11
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_5/butterfly_direct"

entity butterfly_direct_entity_2899a2f8d0 is
  port (
    a: in std_logic_vector(143 downto 0); 
    b: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(143 downto 0); 
    a_bw_x0: out std_logic_vector(143 downto 0); 
    of_x0: out std_logic_vector(3 downto 0); 
    sync_out: out std_logic
  );
end butterfly_direct_entity_2899a2f8d0;

architecture structural of butterfly_direct_entity_2899a2f8d0 is
  signal ce_1_sg_x650: std_logic;
  signal clk_1_sg_x650: std_logic;
  signal concat_y_net_x3: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(151 downto 0);
  signal concatenate_y_net_x13: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x14: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(159 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(287 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(159 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal dmux0_q_net_x2: std_logic_vector(143 downto 0);
  signal mux_y_net_x3: std_logic;
  signal reinterpret1_output_port_net_x7: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x8: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(15 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice2_y_net_x1: std_logic;

begin
  concatenate_y_net_x13 <= a;
  dmux0_q_net_x2 <= b;
  ce_1_sg_x650 <= ce_1;
  clk_1_sg_x650 <= clk_1;
  slice0_y_net_x1 <= shift;
  mux_y_net_x3 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x8;
  a_bw_x0 <= reinterpret2_output_port_net_x1;
  of_x0 <= concatenate_y_net_x14;
  sync_out <= delay0_q_net_x0;

  bus_add_0e6ba93911: entity work.bus_add_entity_928fd44576
    port map (
      a => reinterpret1_output_port_net_x7,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x650,
      clk_1 => clk_1_sg_x650,
      dout => concatenate_y_net_x3
    );

  bus_convert_d028d5bce4: entity work.bus_convert_entity_8625f90d6a
    port map (
      ce_1 => ce_1_sg_x650,
      clk_1 => clk_1_sg_x650,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_604d0bcc6d: entity work.bus_expand_entity_2a52aaf3de
    port map (
      bus_in => concatenate_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x8,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  bus_norm0_35da39b8f5: entity work.bus_norm0_entity_2065c27fbe
    port map (
      ce_1 => ce_1_sg_x650,
      clk_1 => clk_1_sg_x650,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_a3c4121418: entity work.bus_norm1_entity_ebb4710d83
    port map (
      ce_1 => ce_1_sg_x650,
      clk_1 => clk_1_sg_x650,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_6d0ea304a0: entity work.bus_relational_entity_633fc73315
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      ce_1 => ce_1_sg_x650,
      clk_1 => clk_1_sg_x650,
      a_b => concatenate_y_net_x14
    );

  bus_scale_30a7cab8c6: entity work.bus_scale_entity_0ad20b8fc9
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_46e3a019fe: entity work.bus_sub_entity_c471a0f176
    port map (
      a => reinterpret1_output_port_net_x7,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x650,
      clk_1 => clk_1_sg_x650,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_2a42ff61a3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x650,
      clk => clk_1_sg_x650,
      clr => '0',
      d(0) => slice2_y_net_x1,
      q(0) => delay0_q_net_x0
    );

  munge_c76cf5ac73: entity work.munge_entity_7ae6614fdf
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_4cc220f9be: entity work.mux_entity_bd9bbc285a
    port map (
      ce_1 => ce_1_sg_x650,
      clk_1 => clk_1_sg_x650,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_3ca3d8cea7: entity work.shift_replicate_entity_9dcff94fe9
    port map (
      ce_1 => ce_1_sg_x650,
      clk_1 => clk_1_sg_x650,
      in_x0 => slice0_y_net_x1,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_a00de8dad3: entity work.twiddle_entity_a00de8dad3
    port map (
      ai => concatenate_y_net_x13,
      bi => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x650,
      clk_1 => clk_1_sg_x650,
      sync_in => mux_y_net_x3,
      ao => reinterpret1_output_port_net_x7,
      bwo => concatenate_y_net_x12,
      sync_out => slice2_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_5/delay0"

entity delay0_entity_bcc213ce61 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(143 downto 0); 
    dout: out std_logic_vector(143 downto 0)
  );
end delay0_entity_bcc213ce61;

architecture structural of delay0_entity_bcc213ce61 is
  signal ce_1_sg_x651: std_logic;
  signal clk_1_sg_x651: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(143 downto 0);
  signal del1_q_net_x0: std_logic_vector(35 downto 0);
  signal del2_q_net_x0: std_logic_vector(35 downto 0);
  signal del3_q_net_x0: std_logic_vector(35 downto 0);
  signal del4_q_net_x0: std_logic_vector(35 downto 0);
  signal din2_q_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x651 <= ce_1;
  clk_1_sg_x651 <= clk_1;
  din2_q_net_x1 <= din;
  dout <= concatenate_y_net_x1;

  del1: entity work.delay_895e998e80
    port map (
      ce => ce_1_sg_x651,
      clk => clk_1_sg_x651,
      clr => '0',
      d => reinterpret4_output_port_net_x0,
      q => del1_q_net_x0
    );

  del2: entity work.delay_895e998e80
    port map (
      ce => ce_1_sg_x651,
      clk => clk_1_sg_x651,
      clr => '0',
      d => reinterpret3_output_port_net_x0,
      q => del2_q_net_x0
    );

  del3: entity work.delay_895e998e80
    port map (
      ce => ce_1_sg_x651,
      clk => clk_1_sg_x651,
      clr => '0',
      d => reinterpret2_output_port_net_x0,
      q => del3_q_net_x0
    );

  del4: entity work.delay_895e998e80
    port map (
      ce => ce_1_sg_x651,
      clk => clk_1_sg_x651,
      clr => '0',
      d => reinterpret1_output_port_net_x0,
      q => del4_q_net_x0
    );

  din_expand_83f04249a9: entity work.expand0_entity_faedf3e73c
    port map (
      bus_in => din2_q_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  dout_compress_9678c43ed3: entity work.d_bussify_entity_9462440c59
    port map (
      in1 => del1_q_net_x0,
      in2 => del2_q_net_x0,
      in3 => del3_q_net_x0,
      in4 => del4_q_net_x0,
      bus_out => concatenate_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_5/sync_delay"

entity sync_delay_entity_f08336f798 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_f08336f798;

architecture structural of sync_delay_entity_f08336f798 is
  signal ce_1_sg_x653: std_logic;
  signal clk_1_sg_x653: std_logic;
  signal constant1_op_net: std_logic_vector(5 downto 0);
  signal constant2_op_net: std_logic_vector(5 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(5 downto 0);
  signal counter_op_net: std_logic_vector(5 downto 0);
  signal dsync1_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x4: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x653 <= ce_1;
  clk_1_sg_x653 <= clk_1;
  dsync1_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x4;

  constant1: entity work.constant_7ea0f2fff7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_961b61f8a1
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_a267c870be
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.counter_9686286f74
    port map (
      ce => ce_1_sg_x653,
      clk => clk_1_sg_x653,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => dsync1_q_net_x0,
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x4
    );

  relational: entity work.relational_931d61fb72
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_fe487ce1c7
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_5"

entity fft_stage_5_entity_31119613de is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(143 downto 0); 
    in2: in std_logic_vector(143 downto 0); 
    of_in: in std_logic_vector(3 downto 0); 
    shift: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic_vector(3 downto 0); 
    out1: out std_logic_vector(143 downto 0); 
    out2: out std_logic_vector(143 downto 0); 
    sync_out: out std_logic
  );
end fft_stage_5_entity_31119613de;

architecture structural of fft_stage_5_entity_31119613de is
  signal ce_1_sg_x654: std_logic;
  signal clk_1_sg_x654: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x14: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x15: std_logic_vector(143 downto 0);
  signal constant2_op_net_x5: std_logic_vector(14 downto 0);
  signal counter_op_net: std_logic_vector(5 downto 0);
  signal delay0_q_net_x2: std_logic;
  signal delay0_q_net_x3: std_logic;
  signal din0_q_net: std_logic_vector(143 downto 0);
  signal din2_q_net_x1: std_logic_vector(143 downto 0);
  signal dmux0_q_net_x2: std_logic_vector(143 downto 0);
  signal dmux1_q_net_x1: std_logic_vector(143 downto 0);
  signal dsync0_q_net: std_logic;
  signal dsync1_q_net_x0: std_logic;
  signal logical1_y_net_x0: std_logic_vector(3 downto 0);
  signal logical1_y_net_x3: std_logic_vector(3 downto 0);
  signal mux0_y_net: std_logic_vector(143 downto 0);
  signal mux1_y_net: std_logic_vector(143 downto 0);
  signal mux_y_net_x4: std_logic;
  signal reinterpret1_output_port_net_x12: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x13: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(143 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice1_y_net: std_logic;

begin
  ce_1_sg_x654 <= ce_1;
  clk_1_sg_x654 <= clk_1;
  reinterpret2_output_port_net_x3 <= in1;
  reinterpret1_output_port_net_x12 <= in2;
  logical1_y_net_x3 <= of_in;
  constant2_op_net_x5 <= shift;
  delay0_q_net_x2 <= sync;
  of_x0 <= logical1_y_net_x0;
  out1 <= reinterpret2_output_port_net_x4;
  out2 <= reinterpret1_output_port_net_x13;
  sync_out <= delay0_q_net_x3;

  butterfly_direct_2899a2f8d0: entity work.butterfly_direct_entity_2899a2f8d0
    port map (
      a => concatenate_y_net_x15,
      b => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x654,
      clk_1 => clk_1_sg_x654,
      shift => slice0_y_net_x1,
      sync_in => mux_y_net_x4,
      a_bw => reinterpret1_output_port_net_x13,
      a_bw_x0 => reinterpret2_output_port_net_x4,
      of_x0 => concatenate_y_net_x14,
      sync_out => delay0_q_net_x3
    );

  counter: entity work.counter_a117680706
    port map (
      ce => ce_1_sg_x654,
      clk => clk_1_sg_x654,
      clr => '0',
      rst(0) => dsync0_q_net,
      op => counter_op_net
    );

  delay0_bcc213ce61: entity work.delay0_entity_bcc213ce61
    port map (
      ce_1 => ce_1_sg_x654,
      clk_1 => clk_1_sg_x654,
      din => din2_q_net_x1,
      dout => concatenate_y_net_x1
    );

  delay1_641588dfdd: entity work.delay0_entity_bcc213ce61
    port map (
      ce_1 => ce_1_sg_x654,
      clk_1 => clk_1_sg_x654,
      din => dmux1_q_net_x1,
      dout => concatenate_y_net_x15
    );

  din0: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reinterpret2_output_port_net_x3,
      q => din0_q_net
    );

  din2: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reinterpret1_output_port_net_x12,
      q => din2_q_net_x1
    );

  dmux0: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => mux0_y_net,
      q => dmux0_q_net_x2
    );

  dmux1: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => mux1_y_net,
      q => dmux1_q_net_x1
    );

  dsync0: entity work.delay_0341f7be44
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d(0) => delay0_q_net_x2,
      q(0) => dsync0_q_net
    );

  dsync1: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x654,
      clk => clk_1_sg_x654,
      clr => '0',
      d(0) => dsync0_q_net,
      q(0) => dsync1_q_net_x0
    );

  logical1: entity work.logical_8c69d6f164
    port map (
      ce => ce_1_sg_x654,
      clk => clk_1_sg_x654,
      clr => '0',
      d0 => concatenate_y_net_x14,
      d1 => logical1_y_net_x3,
      y => logical1_y_net_x0
    );

  mux0: entity work.mux_340b095e64
    port map (
      ce => ce_1_sg_x654,
      clk => clk_1_sg_x654,
      clr => '0',
      d0 => concatenate_y_net_x1,
      d1 => din0_q_net,
      sel(0) => slice1_y_net,
      y => mux0_y_net
    );

  mux1: entity work.mux_340b095e64
    port map (
      ce => ce_1_sg_x654,
      clk => clk_1_sg_x654,
      clr => '0',
      d0 => din0_q_net,
      d1 => concatenate_y_net_x1,
      sel(0) => slice1_y_net,
      y => mux1_y_net
    );

  slice0: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 4,
      x_width => 15,
      y_width => 1
    )
    port map (
      x => constant2_op_net_x5,
      y(0) => slice0_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 5,
      x_width => 6,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  sync_delay_f08336f798: entity work.sync_delay_entity_f08336f798
    port map (
      ce_1 => ce_1_sg_x654,
      clk_1 => clk_1_sg_x654,
      in_x0 => dsync1_q_net_x0,
      out_x0 => mux_y_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_6/butterfly_direct/twiddle/coeff_gen/bit_reverse"

entity bit_reverse_entity_77dd6dde84 is
  port (
    in_x0: in std_logic_vector(4 downto 0); 
    out_x0: out std_logic_vector(4 downto 0)
  );
end bit_reverse_entity_77dd6dde84;

architecture structural of bit_reverse_entity_77dd6dde84 is
  signal bit0_y_net: std_logic;
  signal bit1_y_net: std_logic;
  signal bit2_y_net: std_logic;
  signal bit3_y_net: std_logic;
  signal bit4_y_net: std_logic;
  signal concat_y_net_x0: std_logic_vector(4 downto 0);
  signal slice_y_net_x0: std_logic_vector(4 downto 0);

begin
  slice_y_net_x0 <= in_x0;
  out_x0 <= concat_y_net_x0;

  bit0: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 5,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit0_y_net
    );

  bit1: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 5,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit1_y_net
    );

  bit2: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 5,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit2_y_net
    );

  bit3: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 5,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit3_y_net
    );

  bit4: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 4,
      x_width => 5,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit4_y_net
    );

  concat: entity work.concat_2b3acb49f4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => bit0_y_net,
      in1(0) => bit1_y_net,
      in2(0) => bit2_y_net,
      in3(0) => bit3_y_net,
      in4(0) => bit4_y_net,
      y => concat_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_6/butterfly_direct/twiddle/coeff_gen/cosin/add_convert0"

entity add_convert0_entity_af2e95369d is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    theta: in std_logic_vector(4 downto 0); 
    add: out std_logic_vector(4 downto 0); 
    negate: out std_logic
  );
end add_convert0_entity_af2e95369d;

architecture structural of add_convert0_entity_af2e95369d is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x0: std_logic_vector(4 downto 0);
  signal ce_1_sg_x735: std_logic;
  signal clk_1_sg_x735: std_logic;
  signal concat_y_net: std_logic_vector(5 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(4 downto 0);
  signal delay13_q_net: std_logic_vector(4 downto 0);
  signal delay14_q_net: std_logic_vector(4 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(5 downto 0);
  signal invert_y_net: std_logic;
  signal lookup_y_net: std_logic_vector(3 downto 0);
  signal new_add_y_net: std_logic_vector(4 downto 0);
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x735 <= ce_1;
  clk_1_sg_x735 <= clk_1;
  assert_dout_net_x0 <= theta;
  add <= convert2_dout_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x735,
      clk => clk_1_sg_x735,
      clr => '0',
      en => "1",
      s => addsub5_s_net
    );

  concat: entity work.concat_ae3f02567e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => addsub5_s_net,
      in1 => lookup_y_net,
      y => concat_y_net
    );

  convert2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 5,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 5,
      latency => 3,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x735,
      clk => clk_1_sg_x735,
      clr => '0',
      din => delay13_q_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  delay13: entity work.delay_38f665f8aa
    port map (
      ce => ce_1_sg_x735,
      clk => clk_1_sg_x735,
      clr => '0',
      d => delay14_q_net,
      q => delay13_q_net
    );

  delay14: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 5
    )
    port map (
      ce => ce_1_sg_x735,
      clk => clk_1_sg_x735,
      d => new_add_y_net,
      en => '1',
      rst => '1',
      q => delay14_q_net
    );

  delay2: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x735,
      clk => clk_1_sg_x735,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_ac785d9b37
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x0,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  lookup: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 3,
      x_width => 6,
      y_width => 4
    )
    port map (
      x => fluff_y_net,
      y => lookup_y_net
    );

  new_add: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 4,
      x_width => 6,
      y_width => 5
    )
    port map (
      x => concat_y_net,
      y => new_add_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 5,
      x_width => 6,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_6/butterfly_direct/twiddle/coeff_gen/cosin/add_convert1"

entity add_convert1_entity_0e3483c85e is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    theta: in std_logic_vector(4 downto 0); 
    misco: out std_logic_vector(288 downto 0); 
    negate: out std_logic
  );
end add_convert1_entity_0e3483c85e;

architecture structural of add_convert1_entity_0e3483c85e is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x1: std_logic_vector(4 downto 0);
  signal ce_1_sg_x736: std_logic;
  signal clk_1_sg_x736: std_logic;
  signal concatenate_y_net_x3: std_logic_vector(288 downto 0);
  signal delay1_q_net_x0: std_logic_vector(288 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(5 downto 0);
  signal invert_y_net: std_logic;
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x736 <= ce_1;
  clk_1_sg_x736 <= clk_1;
  concatenate_y_net_x3 <= misci;
  assert_dout_net_x1 <= theta;
  misco <= delay1_q_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x736,
      clk => clk_1_sg_x736,
      clr => '0',
      en => "1",
      s => addsub5_s_net
    );

  delay1: entity work.delay_4583411594
    port map (
      ce => ce_1_sg_x736,
      clk => clk_1_sg_x736,
      clr => '0',
      d => concatenate_y_net_x3,
      q => delay1_q_net_x0
    );

  delay2: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x736,
      clk => clk_1_sg_x736,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_ac785d9b37
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x1,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 5,
      x_width => 6,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_6/butterfly_direct/twiddle/coeff_gen/cosin"

entity cosin_entity_e7c57a863a is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    theta: in std_logic_vector(4 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(288 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_e7c57a863a;

architecture structural of cosin_entity_e7c57a863a is
  signal assert_dout_net_x1: std_logic_vector(4 downto 0);
  signal ce_1_sg_x739: std_logic;
  signal clk_1_sg_x739: std_logic;
  signal concat_y_net_x1: std_logic_vector(4 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(288 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(4 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(288 downto 0);
  signal delay1_q_net_x2: std_logic_vector(288 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(288 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x739 <= ce_1;
  clk_1_sg_x739 <= clk_1;
  concatenate_y_net_x4 <= misci;
  concat_y_net_x1 <= theta;
  cos <= mux_y_net_x2;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x3;

  add_convert0_af2e95369d: entity work.add_convert0_entity_af2e95369d
    port map (
      ce_1 => ce_1_sg_x739,
      clk_1 => clk_1_sg_x739,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_0e3483c85e: entity work.add_convert1_entity_0e3483c85e
    port map (
      ce_1 => ce_1_sg_x739,
      clk_1 => clk_1_sg_x739,
      misci => concatenate_y_net_x4,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 5,
      dout_width => 5
    )
    port map (
      din => concat_y_net_x1,
      dout => assert_dout_net_x1
    );

  c_to_ri_94e81dfa32: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_80f3e767fa
    port map (
      ce => ce_1_sg_x739,
      clk => clk_1_sg_x739,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x739,
      clk => clk_1_sg_x739,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x739,
      clk => clk_1_sg_x739,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_82a88ebdc2: entity work.invert0_entity_6963cb9e38
    port map (
      ce_1 => ce_1_sg_x739,
      clk_1 => clk_1_sg_x739,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_5cc1e04bd6: entity work.invert1_entity_4148cefff8
    port map (
      ce_1 => ce_1_sg_x739,
      clk_1 => clk_1_sg_x739,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 5,
      c_width => 36,
      core_name0 => "bmg_72_a6d704d36eb848a5",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x739,
      clk => clk_1_sg_x739,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_6/butterfly_direct/twiddle/coeff_gen"

entity coeff_gen_entity_e2c2386bfb is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(288 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_e2c2386bfb;

architecture structural of coeff_gen_entity_e2c2386bfb is
  signal ce_1_sg_x740: std_logic;
  signal clk_1_sg_x740: std_logic;
  signal concat_y_net_x1: std_logic_vector(4 downto 0);
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(288 downto 0);
  signal counter_op_net: std_logic_vector(8 downto 0);
  signal delay1_q_net_x3: std_logic_vector(288 downto 0);
  signal mux_y_net_x1: std_logic;
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(4 downto 0);

begin
  ce_1_sg_x740 <= ce_1;
  clk_1_sg_x740 <= clk_1;
  concatenate_y_net_x5 <= misci;
  mux_y_net_x1 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x11;

  bit_reverse_77dd6dde84: entity work.bit_reverse_entity_77dd6dde84
    port map (
      in_x0 => slice_y_net_x0,
      out_x0 => concat_y_net_x1
    );

  cosin_e7c57a863a: entity work.cosin_entity_e7c57a863a
    port map (
      ce_1 => ce_1_sg_x740,
      clk_1 => clk_1_sg_x740,
      misci => concatenate_y_net_x5,
      theta => concat_y_net_x1,
      cos => mux_y_net_x4,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x5
    );

  counter: entity work.counter_d5d467f1b8
    port map (
      ce => ce_1_sg_x740,
      clk => clk_1_sg_x740,
      clr => '0',
      rst(0) => mux_y_net_x1,
      op => counter_op_net
    );

  ri_to_c_e316d9517a: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x11
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 8,
      x_width => 9,
      y_width => 5
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_6/butterfly_direct/twiddle"

entity twiddle_entity_152ac29526 is
  port (
    ai: in std_logic_vector(143 downto 0); 
    bi: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(143 downto 0); 
    bwo: out std_logic_vector(151 downto 0); 
    sync_out: out std_logic
  );
end twiddle_entity_152ac29526;

architecture structural of twiddle_entity_152ac29526 is
  signal ce_1_sg_x741: std_logic;
  signal clk_1_sg_x741: std_logic;
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(295 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(288 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(151 downto 0);
  signal delay1_q_net_x3: std_logic_vector(288 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(144 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(144 downto 0);
  signal dmux0_q_net_x1: std_logic_vector(143 downto 0);
  signal mux_y_net_x2: std_logic;
  signal reinterpret1_output_port_net_x5: std_logic_vector(144 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(143 downto 0);
  signal slice2_y_net_x1: std_logic;

begin
  concatenate_y_net_x2 <= ai;
  dmux0_q_net_x1 <= bi;
  ce_1_sg_x741 <= ce_1;
  clk_1_sg_x741 <= clk_1;
  mux_y_net_x2 <= sync_in;
  ao <= reinterpret1_output_port_net_x7;
  bwo <= concatenate_y_net_x7;
  sync_out <= slice2_y_net_x1;

  bus_convert_801f7db158: entity work.bus_convert_entity_fc9d20fae7
    port map (
      ce_1 => ce_1_sg_x741,
      clk_1 => clk_1_sg_x741,
      din => concatenate_y_net_x3,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x7,
      misco => dmisc_q_net_x3
    );

  bus_create_d0b63e7f16: entity work.bus_create_entity_3d2f105ae8
    port map (
      in1 => dmux0_q_net_x1,
      in2 => mux_y_net_x2,
      in3 => concatenate_y_net_x2,
      bus_out => concatenate_y_net_x5
    );

  bus_expand1_930c72922d: entity work.bus_expand1_entity_0d80282e07
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x7,
      msb_out2 => slice2_y_net_x1
    );

  bus_expand_527ec7d697: entity work.bus_expand_entity_1995b7ac80
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x5,
      msb_out2 => reinterpret2_output_port_net_x2
    );

  bus_mult_801b3f78a8: entity work.bus_mult_entity_cc3ac8248d
    port map (
      a => concat_y_net_x11,
      b => reinterpret2_output_port_net_x2,
      ce_1 => ce_1_sg_x741,
      clk_1 => clk_1_sg_x741,
      misci => reinterpret1_output_port_net_x5,
      a_b => concatenate_y_net_x3,
      misco => dmisc_q_net_x2
    );

  coeff_gen_e2c2386bfb: entity work.coeff_gen_entity_e2c2386bfb
    port map (
      ce_1 => ce_1_sg_x741,
      clk_1 => clk_1_sg_x741,
      misci => concatenate_y_net_x5,
      rst => mux_y_net_x2,
      misco => delay1_q_net_x3,
      w => concat_y_net_x11
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_6/butterfly_direct"

entity butterfly_direct_entity_237c537515 is
  port (
    a: in std_logic_vector(143 downto 0); 
    b: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(143 downto 0); 
    a_bw_x0: out std_logic_vector(143 downto 0); 
    of_x0: out std_logic_vector(3 downto 0); 
    sync_out: out std_logic
  );
end butterfly_direct_entity_237c537515;

architecture structural of butterfly_direct_entity_237c537515 is
  signal ce_1_sg_x742: std_logic;
  signal clk_1_sg_x742: std_logic;
  signal concat_y_net_x3: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(151 downto 0);
  signal concatenate_y_net_x13: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x14: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(159 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(287 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(159 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal dmux0_q_net_x2: std_logic_vector(143 downto 0);
  signal mux_y_net_x3: std_logic;
  signal reinterpret1_output_port_net_x7: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x8: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(15 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice2_y_net_x1: std_logic;

begin
  concatenate_y_net_x13 <= a;
  dmux0_q_net_x2 <= b;
  ce_1_sg_x742 <= ce_1;
  clk_1_sg_x742 <= clk_1;
  slice0_y_net_x1 <= shift;
  mux_y_net_x3 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x8;
  a_bw_x0 <= reinterpret2_output_port_net_x1;
  of_x0 <= concatenate_y_net_x14;
  sync_out <= delay0_q_net_x0;

  bus_add_4514629226: entity work.bus_add_entity_928fd44576
    port map (
      a => reinterpret1_output_port_net_x7,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x742,
      clk_1 => clk_1_sg_x742,
      dout => concatenate_y_net_x3
    );

  bus_convert_e0dc0cdbb6: entity work.bus_convert_entity_8625f90d6a
    port map (
      ce_1 => ce_1_sg_x742,
      clk_1 => clk_1_sg_x742,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_fe42d75a66: entity work.bus_expand_entity_2a52aaf3de
    port map (
      bus_in => concatenate_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x8,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  bus_norm0_a5fa721ccd: entity work.bus_norm0_entity_2065c27fbe
    port map (
      ce_1 => ce_1_sg_x742,
      clk_1 => clk_1_sg_x742,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_ee5461e343: entity work.bus_norm1_entity_ebb4710d83
    port map (
      ce_1 => ce_1_sg_x742,
      clk_1 => clk_1_sg_x742,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_eb2438d68d: entity work.bus_relational_entity_633fc73315
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      ce_1 => ce_1_sg_x742,
      clk_1 => clk_1_sg_x742,
      a_b => concatenate_y_net_x14
    );

  bus_scale_8d3e0c36b4: entity work.bus_scale_entity_0ad20b8fc9
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_941c4f8d25: entity work.bus_sub_entity_c471a0f176
    port map (
      a => reinterpret1_output_port_net_x7,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x742,
      clk_1 => clk_1_sg_x742,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_2a42ff61a3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x742,
      clk => clk_1_sg_x742,
      clr => '0',
      d(0) => slice2_y_net_x1,
      q(0) => delay0_q_net_x0
    );

  munge_34d8b4eae3: entity work.munge_entity_7ae6614fdf
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_30a384a321: entity work.mux_entity_bd9bbc285a
    port map (
      ce_1 => ce_1_sg_x742,
      clk_1 => clk_1_sg_x742,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_7d5117d8bb: entity work.shift_replicate_entity_9dcff94fe9
    port map (
      ce_1 => ce_1_sg_x742,
      clk_1 => clk_1_sg_x742,
      in_x0 => slice0_y_net_x1,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_152ac29526: entity work.twiddle_entity_152ac29526
    port map (
      ai => concatenate_y_net_x13,
      bi => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x742,
      clk_1 => clk_1_sg_x742,
      sync_in => mux_y_net_x3,
      ao => reinterpret1_output_port_net_x7,
      bwo => concatenate_y_net_x12,
      sync_out => slice2_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_6/delay0"

entity delay0_entity_4e05899003 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(143 downto 0); 
    dout: out std_logic_vector(143 downto 0)
  );
end delay0_entity_4e05899003;

architecture structural of delay0_entity_4e05899003 is
  signal ce_1_sg_x743: std_logic;
  signal clk_1_sg_x743: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(143 downto 0);
  signal del1_q_net_x0: std_logic_vector(35 downto 0);
  signal del2_q_net_x0: std_logic_vector(35 downto 0);
  signal del3_q_net_x0: std_logic_vector(35 downto 0);
  signal del4_q_net_x0: std_logic_vector(35 downto 0);
  signal din2_q_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x743 <= ce_1;
  clk_1_sg_x743 <= clk_1;
  din2_q_net_x1 <= din;
  dout <= concatenate_y_net_x1;

  del1: entity work.delay_3a3620b5a6
    port map (
      ce => ce_1_sg_x743,
      clk => clk_1_sg_x743,
      clr => '0',
      d => reinterpret4_output_port_net_x0,
      q => del1_q_net_x0
    );

  del2: entity work.delay_3a3620b5a6
    port map (
      ce => ce_1_sg_x743,
      clk => clk_1_sg_x743,
      clr => '0',
      d => reinterpret3_output_port_net_x0,
      q => del2_q_net_x0
    );

  del3: entity work.delay_3a3620b5a6
    port map (
      ce => ce_1_sg_x743,
      clk => clk_1_sg_x743,
      clr => '0',
      d => reinterpret2_output_port_net_x0,
      q => del3_q_net_x0
    );

  del4: entity work.delay_3a3620b5a6
    port map (
      ce => ce_1_sg_x743,
      clk => clk_1_sg_x743,
      clr => '0',
      d => reinterpret1_output_port_net_x0,
      q => del4_q_net_x0
    );

  din_expand_38f0720fca: entity work.expand0_entity_faedf3e73c
    port map (
      bus_in => din2_q_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  dout_compress_143c388947: entity work.d_bussify_entity_9462440c59
    port map (
      in1 => del1_q_net_x0,
      in2 => del2_q_net_x0,
      in3 => del3_q_net_x0,
      in4 => del4_q_net_x0,
      bus_out => concatenate_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_6/sync_delay"

entity sync_delay_entity_6ddae26489 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_6ddae26489;

architecture structural of sync_delay_entity_6ddae26489 is
  signal ce_1_sg_x745: std_logic;
  signal clk_1_sg_x745: std_logic;
  signal constant1_op_net: std_logic_vector(4 downto 0);
  signal constant2_op_net: std_logic_vector(4 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(4 downto 0);
  signal counter_op_net: std_logic_vector(4 downto 0);
  signal dsync1_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x4: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x745 <= ce_1;
  clk_1_sg_x745 <= clk_1;
  dsync1_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x4;

  constant1: entity work.constant_fe72737ca0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_ef0e2e5fc6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_582a3706dd
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.counter_9e5adb68be
    port map (
      ce => ce_1_sg_x745,
      clk => clk_1_sg_x745,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => dsync1_q_net_x0,
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x4
    );

  relational: entity work.relational_9ece3c8c4e
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_dc5bc996c9
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_6"

entity fft_stage_6_entity_8a929d084d is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(143 downto 0); 
    in2: in std_logic_vector(143 downto 0); 
    of_in: in std_logic_vector(3 downto 0); 
    shift: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic_vector(3 downto 0); 
    out1: out std_logic_vector(143 downto 0); 
    out2: out std_logic_vector(143 downto 0); 
    sync_out: out std_logic
  );
end fft_stage_6_entity_8a929d084d;

architecture structural of fft_stage_6_entity_8a929d084d is
  signal ce_1_sg_x746: std_logic;
  signal clk_1_sg_x746: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x14: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x15: std_logic_vector(143 downto 0);
  signal constant2_op_net_x6: std_logic_vector(14 downto 0);
  signal counter_op_net: std_logic_vector(4 downto 0);
  signal delay0_q_net_x4: std_logic;
  signal delay0_q_net_x5: std_logic;
  signal din0_q_net: std_logic_vector(143 downto 0);
  signal din2_q_net_x1: std_logic_vector(143 downto 0);
  signal dmux0_q_net_x2: std_logic_vector(143 downto 0);
  signal dmux1_q_net_x1: std_logic_vector(143 downto 0);
  signal dsync0_q_net: std_logic;
  signal dsync1_q_net_x0: std_logic;
  signal logical1_y_net_x1: std_logic_vector(3 downto 0);
  signal logical1_y_net_x2: std_logic_vector(3 downto 0);
  signal mux0_y_net: std_logic_vector(143 downto 0);
  signal mux1_y_net: std_logic_vector(143 downto 0);
  signal mux_y_net_x4: std_logic;
  signal reinterpret1_output_port_net_x14: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x5: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x6: std_logic_vector(143 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice1_y_net: std_logic;

begin
  ce_1_sg_x746 <= ce_1;
  clk_1_sg_x746 <= clk_1;
  reinterpret2_output_port_net_x5 <= in1;
  reinterpret1_output_port_net_x14 <= in2;
  logical1_y_net_x1 <= of_in;
  constant2_op_net_x6 <= shift;
  delay0_q_net_x4 <= sync;
  of_x0 <= logical1_y_net_x2;
  out1 <= reinterpret2_output_port_net_x6;
  out2 <= reinterpret1_output_port_net_x9;
  sync_out <= delay0_q_net_x5;

  butterfly_direct_237c537515: entity work.butterfly_direct_entity_237c537515
    port map (
      a => concatenate_y_net_x15,
      b => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x746,
      clk_1 => clk_1_sg_x746,
      shift => slice0_y_net_x1,
      sync_in => mux_y_net_x4,
      a_bw => reinterpret1_output_port_net_x9,
      a_bw_x0 => reinterpret2_output_port_net_x6,
      of_x0 => concatenate_y_net_x14,
      sync_out => delay0_q_net_x5
    );

  counter: entity work.counter_a2ece21d6a
    port map (
      ce => ce_1_sg_x746,
      clk => clk_1_sg_x746,
      clr => '0',
      rst(0) => dsync0_q_net,
      op => counter_op_net
    );

  delay0_4e05899003: entity work.delay0_entity_4e05899003
    port map (
      ce_1 => ce_1_sg_x746,
      clk_1 => clk_1_sg_x746,
      din => din2_q_net_x1,
      dout => concatenate_y_net_x1
    );

  delay1_4acc097cd7: entity work.delay0_entity_4e05899003
    port map (
      ce_1 => ce_1_sg_x746,
      clk_1 => clk_1_sg_x746,
      din => dmux1_q_net_x1,
      dout => concatenate_y_net_x15
    );

  din0: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reinterpret2_output_port_net_x5,
      q => din0_q_net
    );

  din2: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reinterpret1_output_port_net_x14,
      q => din2_q_net_x1
    );

  dmux0: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => mux0_y_net,
      q => dmux0_q_net_x2
    );

  dmux1: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => mux1_y_net,
      q => dmux1_q_net_x1
    );

  dsync0: entity work.delay_0341f7be44
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d(0) => delay0_q_net_x4,
      q(0) => dsync0_q_net
    );

  dsync1: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x746,
      clk => clk_1_sg_x746,
      clr => '0',
      d(0) => dsync0_q_net,
      q(0) => dsync1_q_net_x0
    );

  logical1: entity work.logical_8c69d6f164
    port map (
      ce => ce_1_sg_x746,
      clk => clk_1_sg_x746,
      clr => '0',
      d0 => concatenate_y_net_x14,
      d1 => logical1_y_net_x1,
      y => logical1_y_net_x2
    );

  mux0: entity work.mux_340b095e64
    port map (
      ce => ce_1_sg_x746,
      clk => clk_1_sg_x746,
      clr => '0',
      d0 => concatenate_y_net_x1,
      d1 => din0_q_net,
      sel(0) => slice1_y_net,
      y => mux0_y_net
    );

  mux1: entity work.mux_340b095e64
    port map (
      ce => ce_1_sg_x746,
      clk => clk_1_sg_x746,
      clr => '0',
      d0 => din0_q_net,
      d1 => concatenate_y_net_x1,
      sel(0) => slice1_y_net,
      y => mux1_y_net
    );

  slice0: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 5,
      x_width => 15,
      y_width => 1
    )
    port map (
      x => constant2_op_net_x6,
      y(0) => slice0_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 4,
      x_width => 5,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  sync_delay_6ddae26489: entity work.sync_delay_entity_6ddae26489
    port map (
      ce_1 => ce_1_sg_x746,
      clk_1 => clk_1_sg_x746,
      in_x0 => dsync1_q_net_x0,
      out_x0 => mux_y_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_7/butterfly_direct/twiddle/coeff_gen/bit_reverse"

entity bit_reverse_entity_4df827bd96 is
  port (
    in_x0: in std_logic_vector(5 downto 0); 
    out_x0: out std_logic_vector(5 downto 0)
  );
end bit_reverse_entity_4df827bd96;

architecture structural of bit_reverse_entity_4df827bd96 is
  signal bit0_y_net: std_logic;
  signal bit1_y_net: std_logic;
  signal bit2_y_net: std_logic;
  signal bit3_y_net: std_logic;
  signal bit4_y_net: std_logic;
  signal bit5_y_net: std_logic;
  signal concat_y_net_x0: std_logic_vector(5 downto 0);
  signal slice_y_net_x0: std_logic_vector(5 downto 0);

begin
  slice_y_net_x0 <= in_x0;
  out_x0 <= concat_y_net_x0;

  bit0: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 6,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit0_y_net
    );

  bit1: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 6,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit1_y_net
    );

  bit2: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 6,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit2_y_net
    );

  bit3: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 6,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit3_y_net
    );

  bit4: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 4,
      x_width => 6,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit4_y_net
    );

  bit5: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 5,
      x_width => 6,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit5_y_net
    );

  concat: entity work.concat_2dc093ca7a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => bit0_y_net,
      in1(0) => bit1_y_net,
      in2(0) => bit2_y_net,
      in3(0) => bit3_y_net,
      in4(0) => bit4_y_net,
      in5(0) => bit5_y_net,
      y => concat_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_7/butterfly_direct/twiddle/coeff_gen/cosin/add_convert0"

entity add_convert0_entity_296f7c4637 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    theta: in std_logic_vector(5 downto 0); 
    add: out std_logic_vector(5 downto 0); 
    negate: out std_logic
  );
end add_convert0_entity_296f7c4637;

architecture structural of add_convert0_entity_296f7c4637 is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x0: std_logic_vector(5 downto 0);
  signal ce_1_sg_x827: std_logic;
  signal clk_1_sg_x827: std_logic;
  signal concat_y_net: std_logic_vector(6 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(5 downto 0);
  signal delay13_q_net: std_logic_vector(5 downto 0);
  signal delay14_q_net: std_logic_vector(5 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(6 downto 0);
  signal invert_y_net: std_logic;
  signal lookup_y_net: std_logic_vector(4 downto 0);
  signal new_add_y_net: std_logic_vector(5 downto 0);
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x827 <= ce_1;
  clk_1_sg_x827 <= clk_1;
  assert_dout_net_x0 <= theta;
  add <= convert2_dout_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x827,
      clk => clk_1_sg_x827,
      clr => '0',
      en => "1",
      s => addsub5_s_net
    );

  concat: entity work.concat_75261c7c53
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => addsub5_s_net,
      in1 => lookup_y_net,
      y => concat_y_net
    );

  convert2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 6,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 6,
      latency => 3,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x827,
      clk => clk_1_sg_x827,
      clr => '0',
      din => delay13_q_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  delay13: entity work.delay_da3bb0b159
    port map (
      ce => ce_1_sg_x827,
      clk => clk_1_sg_x827,
      clr => '0',
      d => delay14_q_net,
      q => delay13_q_net
    );

  delay14: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 6
    )
    port map (
      ce => ce_1_sg_x827,
      clk => clk_1_sg_x827,
      d => new_add_y_net,
      en => '1',
      rst => '1',
      q => delay14_q_net
    );

  delay2: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x827,
      clk => clk_1_sg_x827,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_c6a9b6687e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x0,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  lookup: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 4,
      x_width => 7,
      y_width => 5
    )
    port map (
      x => fluff_y_net,
      y => lookup_y_net
    );

  new_add: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 5,
      x_width => 7,
      y_width => 6
    )
    port map (
      x => concat_y_net,
      y => new_add_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 6,
      x_width => 7,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_7/butterfly_direct/twiddle/coeff_gen/cosin/add_convert1"

entity add_convert1_entity_bcef29c271 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    theta: in std_logic_vector(5 downto 0); 
    misco: out std_logic_vector(288 downto 0); 
    negate: out std_logic
  );
end add_convert1_entity_bcef29c271;

architecture structural of add_convert1_entity_bcef29c271 is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x1: std_logic_vector(5 downto 0);
  signal ce_1_sg_x828: std_logic;
  signal clk_1_sg_x828: std_logic;
  signal concatenate_y_net_x3: std_logic_vector(288 downto 0);
  signal delay1_q_net_x0: std_logic_vector(288 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(6 downto 0);
  signal invert_y_net: std_logic;
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x828 <= ce_1;
  clk_1_sg_x828 <= clk_1;
  concatenate_y_net_x3 <= misci;
  assert_dout_net_x1 <= theta;
  misco <= delay1_q_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x828,
      clk => clk_1_sg_x828,
      clr => '0',
      en => "1",
      s => addsub5_s_net
    );

  delay1: entity work.delay_4583411594
    port map (
      ce => ce_1_sg_x828,
      clk => clk_1_sg_x828,
      clr => '0',
      d => concatenate_y_net_x3,
      q => delay1_q_net_x0
    );

  delay2: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x828,
      clk => clk_1_sg_x828,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_c6a9b6687e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x1,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 6,
      x_width => 7,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_7/butterfly_direct/twiddle/coeff_gen/cosin"

entity cosin_entity_be7c173604 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    theta: in std_logic_vector(5 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(288 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_be7c173604;

architecture structural of cosin_entity_be7c173604 is
  signal assert_dout_net_x1: std_logic_vector(5 downto 0);
  signal ce_1_sg_x831: std_logic;
  signal clk_1_sg_x831: std_logic;
  signal concat_y_net_x1: std_logic_vector(5 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(288 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(5 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(288 downto 0);
  signal delay1_q_net_x2: std_logic_vector(288 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(288 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x831 <= ce_1;
  clk_1_sg_x831 <= clk_1;
  concatenate_y_net_x4 <= misci;
  concat_y_net_x1 <= theta;
  cos <= mux_y_net_x2;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x3;

  add_convert0_296f7c4637: entity work.add_convert0_entity_296f7c4637
    port map (
      ce_1 => ce_1_sg_x831,
      clk_1 => clk_1_sg_x831,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_bcef29c271: entity work.add_convert1_entity_bcef29c271
    port map (
      ce_1 => ce_1_sg_x831,
      clk_1 => clk_1_sg_x831,
      misci => concatenate_y_net_x4,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 6,
      dout_width => 6
    )
    port map (
      din => concat_y_net_x1,
      dout => assert_dout_net_x1
    );

  c_to_ri_b48af84b57: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_80f3e767fa
    port map (
      ce => ce_1_sg_x831,
      clk => clk_1_sg_x831,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x831,
      clk => clk_1_sg_x831,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x831,
      clk => clk_1_sg_x831,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_48b250bf27: entity work.invert0_entity_6963cb9e38
    port map (
      ce_1 => ce_1_sg_x831,
      clk_1 => clk_1_sg_x831,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_c4cab931f5: entity work.invert1_entity_4148cefff8
    port map (
      ce_1 => ce_1_sg_x831,
      clk_1 => clk_1_sg_x831,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 6,
      c_width => 36,
      core_name0 => "bmg_72_b3a5d690118dc305",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x831,
      clk => clk_1_sg_x831,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_7/butterfly_direct/twiddle/coeff_gen"

entity coeff_gen_entity_0f8b041bfd is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(288 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_0f8b041bfd;

architecture structural of coeff_gen_entity_0f8b041bfd is
  signal ce_1_sg_x832: std_logic;
  signal clk_1_sg_x832: std_logic;
  signal concat_y_net_x1: std_logic_vector(5 downto 0);
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(288 downto 0);
  signal counter_op_net: std_logic_vector(8 downto 0);
  signal delay1_q_net_x3: std_logic_vector(288 downto 0);
  signal mux_y_net_x1: std_logic;
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(5 downto 0);

begin
  ce_1_sg_x832 <= ce_1;
  clk_1_sg_x832 <= clk_1;
  concatenate_y_net_x5 <= misci;
  mux_y_net_x1 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x11;

  bit_reverse_4df827bd96: entity work.bit_reverse_entity_4df827bd96
    port map (
      in_x0 => slice_y_net_x0,
      out_x0 => concat_y_net_x1
    );

  cosin_be7c173604: entity work.cosin_entity_be7c173604
    port map (
      ce_1 => ce_1_sg_x832,
      clk_1 => clk_1_sg_x832,
      misci => concatenate_y_net_x5,
      theta => concat_y_net_x1,
      cos => mux_y_net_x4,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x5
    );

  counter: entity work.counter_d5d467f1b8
    port map (
      ce => ce_1_sg_x832,
      clk => clk_1_sg_x832,
      clr => '0',
      rst(0) => mux_y_net_x1,
      op => counter_op_net
    );

  ri_to_c_ab5efa1bb5: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x11
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 8,
      x_width => 9,
      y_width => 6
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_7/butterfly_direct/twiddle"

entity twiddle_entity_72b012685b is
  port (
    ai: in std_logic_vector(143 downto 0); 
    bi: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(143 downto 0); 
    bwo: out std_logic_vector(151 downto 0); 
    sync_out: out std_logic
  );
end twiddle_entity_72b012685b;

architecture structural of twiddle_entity_72b012685b is
  signal ce_1_sg_x833: std_logic;
  signal clk_1_sg_x833: std_logic;
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(295 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(288 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(151 downto 0);
  signal delay1_q_net_x3: std_logic_vector(288 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(144 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(144 downto 0);
  signal dmux0_q_net_x1: std_logic_vector(143 downto 0);
  signal mux_y_net_x2: std_logic;
  signal reinterpret1_output_port_net_x5: std_logic_vector(144 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(143 downto 0);
  signal slice2_y_net_x1: std_logic;

begin
  concatenate_y_net_x2 <= ai;
  dmux0_q_net_x1 <= bi;
  ce_1_sg_x833 <= ce_1;
  clk_1_sg_x833 <= clk_1;
  mux_y_net_x2 <= sync_in;
  ao <= reinterpret1_output_port_net_x7;
  bwo <= concatenate_y_net_x7;
  sync_out <= slice2_y_net_x1;

  bus_convert_d5138cf6b8: entity work.bus_convert_entity_fc9d20fae7
    port map (
      ce_1 => ce_1_sg_x833,
      clk_1 => clk_1_sg_x833,
      din => concatenate_y_net_x3,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x7,
      misco => dmisc_q_net_x3
    );

  bus_create_7f87b6978f: entity work.bus_create_entity_3d2f105ae8
    port map (
      in1 => dmux0_q_net_x1,
      in2 => mux_y_net_x2,
      in3 => concatenate_y_net_x2,
      bus_out => concatenate_y_net_x5
    );

  bus_expand1_0b23a8ad02: entity work.bus_expand1_entity_0d80282e07
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x7,
      msb_out2 => slice2_y_net_x1
    );

  bus_expand_59016eaa91: entity work.bus_expand_entity_1995b7ac80
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x5,
      msb_out2 => reinterpret2_output_port_net_x2
    );

  bus_mult_138fb4d879: entity work.bus_mult_entity_cc3ac8248d
    port map (
      a => concat_y_net_x11,
      b => reinterpret2_output_port_net_x2,
      ce_1 => ce_1_sg_x833,
      clk_1 => clk_1_sg_x833,
      misci => reinterpret1_output_port_net_x5,
      a_b => concatenate_y_net_x3,
      misco => dmisc_q_net_x2
    );

  coeff_gen_0f8b041bfd: entity work.coeff_gen_entity_0f8b041bfd
    port map (
      ce_1 => ce_1_sg_x833,
      clk_1 => clk_1_sg_x833,
      misci => concatenate_y_net_x5,
      rst => mux_y_net_x2,
      misco => delay1_q_net_x3,
      w => concat_y_net_x11
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_7/butterfly_direct"

entity butterfly_direct_entity_b131fbf41f is
  port (
    a: in std_logic_vector(143 downto 0); 
    b: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(143 downto 0); 
    a_bw_x0: out std_logic_vector(143 downto 0); 
    of_x0: out std_logic_vector(3 downto 0); 
    sync_out: out std_logic
  );
end butterfly_direct_entity_b131fbf41f;

architecture structural of butterfly_direct_entity_b131fbf41f is
  signal ce_1_sg_x834: std_logic;
  signal clk_1_sg_x834: std_logic;
  signal concat_y_net_x3: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(151 downto 0);
  signal concatenate_y_net_x13: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x14: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(159 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(287 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(159 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal dmux0_q_net_x2: std_logic_vector(143 downto 0);
  signal mux_y_net_x3: std_logic;
  signal reinterpret1_output_port_net_x7: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x8: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(15 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice2_y_net_x1: std_logic;

begin
  concatenate_y_net_x13 <= a;
  dmux0_q_net_x2 <= b;
  ce_1_sg_x834 <= ce_1;
  clk_1_sg_x834 <= clk_1;
  slice0_y_net_x1 <= shift;
  mux_y_net_x3 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x8;
  a_bw_x0 <= reinterpret2_output_port_net_x1;
  of_x0 <= concatenate_y_net_x14;
  sync_out <= delay0_q_net_x0;

  bus_add_85f05dd3aa: entity work.bus_add_entity_928fd44576
    port map (
      a => reinterpret1_output_port_net_x7,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x834,
      clk_1 => clk_1_sg_x834,
      dout => concatenate_y_net_x3
    );

  bus_convert_e359694e7a: entity work.bus_convert_entity_8625f90d6a
    port map (
      ce_1 => ce_1_sg_x834,
      clk_1 => clk_1_sg_x834,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_480b2bb0ef: entity work.bus_expand_entity_2a52aaf3de
    port map (
      bus_in => concatenate_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x8,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  bus_norm0_4e25c8b676: entity work.bus_norm0_entity_2065c27fbe
    port map (
      ce_1 => ce_1_sg_x834,
      clk_1 => clk_1_sg_x834,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_7eb552640b: entity work.bus_norm1_entity_ebb4710d83
    port map (
      ce_1 => ce_1_sg_x834,
      clk_1 => clk_1_sg_x834,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_59386c0a04: entity work.bus_relational_entity_633fc73315
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      ce_1 => ce_1_sg_x834,
      clk_1 => clk_1_sg_x834,
      a_b => concatenate_y_net_x14
    );

  bus_scale_009d57074d: entity work.bus_scale_entity_0ad20b8fc9
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_0abbfafbe2: entity work.bus_sub_entity_c471a0f176
    port map (
      a => reinterpret1_output_port_net_x7,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x834,
      clk_1 => clk_1_sg_x834,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_2a42ff61a3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x834,
      clk => clk_1_sg_x834,
      clr => '0',
      d(0) => slice2_y_net_x1,
      q(0) => delay0_q_net_x0
    );

  munge_6ea997d5a8: entity work.munge_entity_7ae6614fdf
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_9365d17718: entity work.mux_entity_bd9bbc285a
    port map (
      ce_1 => ce_1_sg_x834,
      clk_1 => clk_1_sg_x834,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_58a29a2f33: entity work.shift_replicate_entity_9dcff94fe9
    port map (
      ce_1 => ce_1_sg_x834,
      clk_1 => clk_1_sg_x834,
      in_x0 => slice0_y_net_x1,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_72b012685b: entity work.twiddle_entity_72b012685b
    port map (
      ai => concatenate_y_net_x13,
      bi => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x834,
      clk_1 => clk_1_sg_x834,
      sync_in => mux_y_net_x3,
      ao => reinterpret1_output_port_net_x7,
      bwo => concatenate_y_net_x12,
      sync_out => slice2_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_7/delay0"

entity delay0_entity_d26b088072 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(143 downto 0); 
    dout: out std_logic_vector(143 downto 0)
  );
end delay0_entity_d26b088072;

architecture structural of delay0_entity_d26b088072 is
  signal ce_1_sg_x835: std_logic;
  signal clk_1_sg_x835: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(143 downto 0);
  signal del1_q_net_x0: std_logic_vector(35 downto 0);
  signal del2_q_net_x0: std_logic_vector(35 downto 0);
  signal del3_q_net_x0: std_logic_vector(35 downto 0);
  signal del4_q_net_x0: std_logic_vector(35 downto 0);
  signal din2_q_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x835 <= ce_1;
  clk_1_sg_x835 <= clk_1;
  din2_q_net_x1 <= din;
  dout <= concatenate_y_net_x1;

  del1: entity work.delay_faa52967c8
    port map (
      ce => ce_1_sg_x835,
      clk => clk_1_sg_x835,
      clr => '0',
      d => reinterpret4_output_port_net_x0,
      q => del1_q_net_x0
    );

  del2: entity work.delay_faa52967c8
    port map (
      ce => ce_1_sg_x835,
      clk => clk_1_sg_x835,
      clr => '0',
      d => reinterpret3_output_port_net_x0,
      q => del2_q_net_x0
    );

  del3: entity work.delay_faa52967c8
    port map (
      ce => ce_1_sg_x835,
      clk => clk_1_sg_x835,
      clr => '0',
      d => reinterpret2_output_port_net_x0,
      q => del3_q_net_x0
    );

  del4: entity work.delay_faa52967c8
    port map (
      ce => ce_1_sg_x835,
      clk => clk_1_sg_x835,
      clr => '0',
      d => reinterpret1_output_port_net_x0,
      q => del4_q_net_x0
    );

  din_expand_8323f385e0: entity work.expand0_entity_faedf3e73c
    port map (
      bus_in => din2_q_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  dout_compress_6d1a4c438f: entity work.d_bussify_entity_9462440c59
    port map (
      in1 => del1_q_net_x0,
      in2 => del2_q_net_x0,
      in3 => del3_q_net_x0,
      in4 => del4_q_net_x0,
      bus_out => concatenate_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_7/sync_delay"

entity sync_delay_entity_6d26845cac is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_6d26845cac;

architecture structural of sync_delay_entity_6d26845cac is
  signal ce_1_sg_x837: std_logic;
  signal clk_1_sg_x837: std_logic;
  signal constant1_op_net: std_logic_vector(3 downto 0);
  signal constant2_op_net: std_logic_vector(3 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(3 downto 0);
  signal counter_op_net: std_logic_vector(3 downto 0);
  signal dsync1_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x4: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x837 <= ce_1;
  clk_1_sg_x837 <= clk_1;
  dsync1_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x4;

  constant1: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_145086465d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_67ad97ca70
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.counter_230536be32
    port map (
      ce => ce_1_sg_x837,
      clk => clk_1_sg_x837,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => dsync1_q_net_x0,
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x4
    );

  relational: entity work.relational_4d3cfceaf4
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_d930162434
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_7"

entity fft_stage_7_entity_1c5e25ac05 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(143 downto 0); 
    in2: in std_logic_vector(143 downto 0); 
    of_in: in std_logic_vector(3 downto 0); 
    shift: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic_vector(3 downto 0); 
    out1: out std_logic_vector(143 downto 0); 
    out2: out std_logic_vector(143 downto 0); 
    sync_out: out std_logic
  );
end fft_stage_7_entity_1c5e25ac05;

architecture structural of fft_stage_7_entity_1c5e25ac05 is
  signal ce_1_sg_x838: std_logic;
  signal clk_1_sg_x838: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x14: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x15: std_logic_vector(143 downto 0);
  signal constant2_op_net_x7: std_logic_vector(14 downto 0);
  signal counter_op_net: std_logic_vector(3 downto 0);
  signal delay0_q_net_x1: std_logic;
  signal delay0_q_net_x6: std_logic;
  signal din0_q_net: std_logic_vector(143 downto 0);
  signal din2_q_net_x1: std_logic_vector(143 downto 0);
  signal dmux0_q_net_x2: std_logic_vector(143 downto 0);
  signal dmux1_q_net_x1: std_logic_vector(143 downto 0);
  signal dsync0_q_net: std_logic;
  signal dsync1_q_net_x0: std_logic;
  signal logical1_y_net_x0: std_logic_vector(3 downto 0);
  signal logical1_y_net_x3: std_logic_vector(3 downto 0);
  signal mux0_y_net: std_logic_vector(143 downto 0);
  signal mux1_y_net: std_logic_vector(143 downto 0);
  signal mux_y_net_x4: std_logic;
  signal reinterpret1_output_port_net_x10: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x7: std_logic_vector(143 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice1_y_net: std_logic;

begin
  ce_1_sg_x838 <= ce_1;
  clk_1_sg_x838 <= clk_1;
  reinterpret2_output_port_net_x7 <= in1;
  reinterpret1_output_port_net_x10 <= in2;
  logical1_y_net_x3 <= of_in;
  constant2_op_net_x7 <= shift;
  delay0_q_net_x6 <= sync;
  of_x0 <= logical1_y_net_x0;
  out1 <= reinterpret2_output_port_net_x2;
  out2 <= reinterpret1_output_port_net_x11;
  sync_out <= delay0_q_net_x1;

  butterfly_direct_b131fbf41f: entity work.butterfly_direct_entity_b131fbf41f
    port map (
      a => concatenate_y_net_x15,
      b => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x838,
      clk_1 => clk_1_sg_x838,
      shift => slice0_y_net_x1,
      sync_in => mux_y_net_x4,
      a_bw => reinterpret1_output_port_net_x11,
      a_bw_x0 => reinterpret2_output_port_net_x2,
      of_x0 => concatenate_y_net_x14,
      sync_out => delay0_q_net_x1
    );

  counter: entity work.counter_6068817c97
    port map (
      ce => ce_1_sg_x838,
      clk => clk_1_sg_x838,
      clr => '0',
      rst(0) => dsync0_q_net,
      op => counter_op_net
    );

  delay0_d26b088072: entity work.delay0_entity_d26b088072
    port map (
      ce_1 => ce_1_sg_x838,
      clk_1 => clk_1_sg_x838,
      din => din2_q_net_x1,
      dout => concatenate_y_net_x1
    );

  delay1_47cf5976fc: entity work.delay0_entity_d26b088072
    port map (
      ce_1 => ce_1_sg_x838,
      clk_1 => clk_1_sg_x838,
      din => dmux1_q_net_x1,
      dout => concatenate_y_net_x15
    );

  din0: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reinterpret2_output_port_net_x7,
      q => din0_q_net
    );

  din2: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reinterpret1_output_port_net_x10,
      q => din2_q_net_x1
    );

  dmux0: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => mux0_y_net,
      q => dmux0_q_net_x2
    );

  dmux1: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => mux1_y_net,
      q => dmux1_q_net_x1
    );

  dsync0: entity work.delay_0341f7be44
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d(0) => delay0_q_net_x6,
      q(0) => dsync0_q_net
    );

  dsync1: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x838,
      clk => clk_1_sg_x838,
      clr => '0',
      d(0) => dsync0_q_net,
      q(0) => dsync1_q_net_x0
    );

  logical1: entity work.logical_8c69d6f164
    port map (
      ce => ce_1_sg_x838,
      clk => clk_1_sg_x838,
      clr => '0',
      d0 => concatenate_y_net_x14,
      d1 => logical1_y_net_x3,
      y => logical1_y_net_x0
    );

  mux0: entity work.mux_340b095e64
    port map (
      ce => ce_1_sg_x838,
      clk => clk_1_sg_x838,
      clr => '0',
      d0 => concatenate_y_net_x1,
      d1 => din0_q_net,
      sel(0) => slice1_y_net,
      y => mux0_y_net
    );

  mux1: entity work.mux_340b095e64
    port map (
      ce => ce_1_sg_x838,
      clk => clk_1_sg_x838,
      clr => '0',
      d0 => din0_q_net,
      d1 => concatenate_y_net_x1,
      sel(0) => slice1_y_net,
      y => mux1_y_net
    );

  slice0: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 6,
      x_width => 15,
      y_width => 1
    )
    port map (
      x => constant2_op_net_x7,
      y(0) => slice0_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  sync_delay_6d26845cac: entity work.sync_delay_entity_6d26845cac
    port map (
      ce_1 => ce_1_sg_x838,
      clk_1 => clk_1_sg_x838,
      in_x0 => dsync1_q_net_x0,
      out_x0 => mux_y_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_8/butterfly_direct/twiddle/coeff_gen/bit_reverse"

entity bit_reverse_entity_b1e5626cb5 is
  port (
    in_x0: in std_logic_vector(6 downto 0); 
    out_x0: out std_logic_vector(6 downto 0)
  );
end bit_reverse_entity_b1e5626cb5;

architecture structural of bit_reverse_entity_b1e5626cb5 is
  signal bit0_y_net: std_logic;
  signal bit1_y_net: std_logic;
  signal bit2_y_net: std_logic;
  signal bit3_y_net: std_logic;
  signal bit4_y_net: std_logic;
  signal bit5_y_net: std_logic;
  signal bit6_y_net: std_logic;
  signal concat_y_net_x0: std_logic_vector(6 downto 0);
  signal slice_y_net_x0: std_logic_vector(6 downto 0);

begin
  slice_y_net_x0 <= in_x0;
  out_x0 <= concat_y_net_x0;

  bit0: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 7,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit0_y_net
    );

  bit1: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 7,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit1_y_net
    );

  bit2: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 7,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit2_y_net
    );

  bit3: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 7,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit3_y_net
    );

  bit4: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 4,
      x_width => 7,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit4_y_net
    );

  bit5: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 5,
      x_width => 7,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit5_y_net
    );

  bit6: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 6,
      x_width => 7,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit6_y_net
    );

  concat: entity work.concat_eb5f1ca7f9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => bit0_y_net,
      in1(0) => bit1_y_net,
      in2(0) => bit2_y_net,
      in3(0) => bit3_y_net,
      in4(0) => bit4_y_net,
      in5(0) => bit5_y_net,
      in6(0) => bit6_y_net,
      y => concat_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_8/butterfly_direct/twiddle/coeff_gen/cosin/add_convert0"

entity add_convert0_entity_98cb22d9e4 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    theta: in std_logic_vector(6 downto 0); 
    add: out std_logic_vector(6 downto 0); 
    negate: out std_logic
  );
end add_convert0_entity_98cb22d9e4;

architecture structural of add_convert0_entity_98cb22d9e4 is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x0: std_logic_vector(6 downto 0);
  signal ce_1_sg_x919: std_logic;
  signal clk_1_sg_x919: std_logic;
  signal concat_y_net: std_logic_vector(7 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(6 downto 0);
  signal delay13_q_net: std_logic_vector(6 downto 0);
  signal delay14_q_net: std_logic_vector(6 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(7 downto 0);
  signal invert_y_net: std_logic;
  signal lookup_y_net: std_logic_vector(5 downto 0);
  signal new_add_y_net: std_logic_vector(6 downto 0);
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x919 <= ce_1;
  clk_1_sg_x919 <= clk_1;
  assert_dout_net_x0 <= theta;
  add <= convert2_dout_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x919,
      clk => clk_1_sg_x919,
      clr => '0',
      en => "1",
      s => addsub5_s_net
    );

  concat: entity work.concat_dc245eb1d2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => addsub5_s_net,
      in1 => lookup_y_net,
      y => concat_y_net
    );

  convert2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 7,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 7,
      latency => 3,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x919,
      clk => clk_1_sg_x919,
      clr => '0',
      din => delay13_q_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  delay13: entity work.delay_8a9e828e57
    port map (
      ce => ce_1_sg_x919,
      clk => clk_1_sg_x919,
      clr => '0',
      d => delay14_q_net,
      q => delay13_q_net
    );

  delay14: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 7
    )
    port map (
      ce => ce_1_sg_x919,
      clk => clk_1_sg_x919,
      d => new_add_y_net,
      en => '1',
      rst => '1',
      q => delay14_q_net
    );

  delay2: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x919,
      clk => clk_1_sg_x919,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_83e473517e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x0,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  lookup: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 5,
      x_width => 8,
      y_width => 6
    )
    port map (
      x => fluff_y_net,
      y => lookup_y_net
    );

  new_add: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 6,
      x_width => 8,
      y_width => 7
    )
    port map (
      x => concat_y_net,
      y => new_add_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 7,
      x_width => 8,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_8/butterfly_direct/twiddle/coeff_gen/cosin/add_convert1"

entity add_convert1_entity_d3443e4f61 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    theta: in std_logic_vector(6 downto 0); 
    misco: out std_logic_vector(288 downto 0); 
    negate: out std_logic
  );
end add_convert1_entity_d3443e4f61;

architecture structural of add_convert1_entity_d3443e4f61 is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x1: std_logic_vector(6 downto 0);
  signal ce_1_sg_x920: std_logic;
  signal clk_1_sg_x920: std_logic;
  signal concatenate_y_net_x3: std_logic_vector(288 downto 0);
  signal delay1_q_net_x0: std_logic_vector(288 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(7 downto 0);
  signal invert_y_net: std_logic;
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x920 <= ce_1;
  clk_1_sg_x920 <= clk_1;
  concatenate_y_net_x3 <= misci;
  assert_dout_net_x1 <= theta;
  misco <= delay1_q_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x920,
      clk => clk_1_sg_x920,
      clr => '0',
      en => "1",
      s => addsub5_s_net
    );

  delay1: entity work.delay_4583411594
    port map (
      ce => ce_1_sg_x920,
      clk => clk_1_sg_x920,
      clr => '0',
      d => concatenate_y_net_x3,
      q => delay1_q_net_x0
    );

  delay2: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x920,
      clk => clk_1_sg_x920,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_83e473517e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x1,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 7,
      x_width => 8,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_8/butterfly_direct/twiddle/coeff_gen/cosin"

entity cosin_entity_17ad06d7fb is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    theta: in std_logic_vector(6 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(288 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_17ad06d7fb;

architecture structural of cosin_entity_17ad06d7fb is
  signal assert_dout_net_x1: std_logic_vector(6 downto 0);
  signal ce_1_sg_x923: std_logic;
  signal clk_1_sg_x923: std_logic;
  signal concat_y_net_x1: std_logic_vector(6 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(288 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(6 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(288 downto 0);
  signal delay1_q_net_x2: std_logic_vector(288 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(288 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x923 <= ce_1;
  clk_1_sg_x923 <= clk_1;
  concatenate_y_net_x4 <= misci;
  concat_y_net_x1 <= theta;
  cos <= mux_y_net_x2;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x3;

  add_convert0_98cb22d9e4: entity work.add_convert0_entity_98cb22d9e4
    port map (
      ce_1 => ce_1_sg_x923,
      clk_1 => clk_1_sg_x923,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_d3443e4f61: entity work.add_convert1_entity_d3443e4f61
    port map (
      ce_1 => ce_1_sg_x923,
      clk_1 => clk_1_sg_x923,
      misci => concatenate_y_net_x4,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 7,
      dout_width => 7
    )
    port map (
      din => concat_y_net_x1,
      dout => assert_dout_net_x1
    );

  c_to_ri_012b9f250f: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_80f3e767fa
    port map (
      ce => ce_1_sg_x923,
      clk => clk_1_sg_x923,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x923,
      clk => clk_1_sg_x923,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x923,
      clk => clk_1_sg_x923,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_87916e33f7: entity work.invert0_entity_6963cb9e38
    port map (
      ce_1 => ce_1_sg_x923,
      clk_1 => clk_1_sg_x923,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_e08b1d8bfd: entity work.invert1_entity_4148cefff8
    port map (
      ce_1 => ce_1_sg_x923,
      clk_1 => clk_1_sg_x923,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 7,
      c_width => 36,
      core_name0 => "bmg_72_8e2f9d152d14263e",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x923,
      clk => clk_1_sg_x923,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_8/butterfly_direct/twiddle/coeff_gen"

entity coeff_gen_entity_210dec4382 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(288 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_210dec4382;

architecture structural of coeff_gen_entity_210dec4382 is
  signal ce_1_sg_x924: std_logic;
  signal clk_1_sg_x924: std_logic;
  signal concat_y_net_x1: std_logic_vector(6 downto 0);
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(288 downto 0);
  signal counter_op_net: std_logic_vector(8 downto 0);
  signal delay1_q_net_x3: std_logic_vector(288 downto 0);
  signal mux_y_net_x1: std_logic;
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(6 downto 0);

begin
  ce_1_sg_x924 <= ce_1;
  clk_1_sg_x924 <= clk_1;
  concatenate_y_net_x5 <= misci;
  mux_y_net_x1 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x11;

  bit_reverse_b1e5626cb5: entity work.bit_reverse_entity_b1e5626cb5
    port map (
      in_x0 => slice_y_net_x0,
      out_x0 => concat_y_net_x1
    );

  cosin_17ad06d7fb: entity work.cosin_entity_17ad06d7fb
    port map (
      ce_1 => ce_1_sg_x924,
      clk_1 => clk_1_sg_x924,
      misci => concatenate_y_net_x5,
      theta => concat_y_net_x1,
      cos => mux_y_net_x4,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x5
    );

  counter: entity work.counter_d5d467f1b8
    port map (
      ce => ce_1_sg_x924,
      clk => clk_1_sg_x924,
      clr => '0',
      rst(0) => mux_y_net_x1,
      op => counter_op_net
    );

  ri_to_c_1685547f50: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x11
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 8,
      x_width => 9,
      y_width => 7
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_8/butterfly_direct/twiddle"

entity twiddle_entity_3d71c43d20 is
  port (
    ai: in std_logic_vector(143 downto 0); 
    bi: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(143 downto 0); 
    bwo: out std_logic_vector(151 downto 0); 
    sync_out: out std_logic
  );
end twiddle_entity_3d71c43d20;

architecture structural of twiddle_entity_3d71c43d20 is
  signal ce_1_sg_x925: std_logic;
  signal clk_1_sg_x925: std_logic;
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(295 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(288 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(151 downto 0);
  signal delay1_q_net_x3: std_logic_vector(288 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(144 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(144 downto 0);
  signal dmux0_q_net_x1: std_logic_vector(143 downto 0);
  signal mux_y_net_x2: std_logic;
  signal reinterpret1_output_port_net_x5: std_logic_vector(144 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(143 downto 0);
  signal slice2_y_net_x1: std_logic;

begin
  concatenate_y_net_x2 <= ai;
  dmux0_q_net_x1 <= bi;
  ce_1_sg_x925 <= ce_1;
  clk_1_sg_x925 <= clk_1;
  mux_y_net_x2 <= sync_in;
  ao <= reinterpret1_output_port_net_x7;
  bwo <= concatenate_y_net_x7;
  sync_out <= slice2_y_net_x1;

  bus_convert_db971869a5: entity work.bus_convert_entity_fc9d20fae7
    port map (
      ce_1 => ce_1_sg_x925,
      clk_1 => clk_1_sg_x925,
      din => concatenate_y_net_x3,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x7,
      misco => dmisc_q_net_x3
    );

  bus_create_5be6c6b064: entity work.bus_create_entity_3d2f105ae8
    port map (
      in1 => dmux0_q_net_x1,
      in2 => mux_y_net_x2,
      in3 => concatenate_y_net_x2,
      bus_out => concatenate_y_net_x5
    );

  bus_expand1_9eaeb94edd: entity work.bus_expand1_entity_0d80282e07
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x7,
      msb_out2 => slice2_y_net_x1
    );

  bus_expand_e512a62a06: entity work.bus_expand_entity_1995b7ac80
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x5,
      msb_out2 => reinterpret2_output_port_net_x2
    );

  bus_mult_600e9c524d: entity work.bus_mult_entity_cc3ac8248d
    port map (
      a => concat_y_net_x11,
      b => reinterpret2_output_port_net_x2,
      ce_1 => ce_1_sg_x925,
      clk_1 => clk_1_sg_x925,
      misci => reinterpret1_output_port_net_x5,
      a_b => concatenate_y_net_x3,
      misco => dmisc_q_net_x2
    );

  coeff_gen_210dec4382: entity work.coeff_gen_entity_210dec4382
    port map (
      ce_1 => ce_1_sg_x925,
      clk_1 => clk_1_sg_x925,
      misci => concatenate_y_net_x5,
      rst => mux_y_net_x2,
      misco => delay1_q_net_x3,
      w => concat_y_net_x11
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_8/butterfly_direct"

entity butterfly_direct_entity_7f70047883 is
  port (
    a: in std_logic_vector(143 downto 0); 
    b: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(143 downto 0); 
    a_bw_x0: out std_logic_vector(143 downto 0); 
    of_x0: out std_logic_vector(3 downto 0); 
    sync_out: out std_logic
  );
end butterfly_direct_entity_7f70047883;

architecture structural of butterfly_direct_entity_7f70047883 is
  signal ce_1_sg_x926: std_logic;
  signal clk_1_sg_x926: std_logic;
  signal concat_y_net_x3: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(151 downto 0);
  signal concatenate_y_net_x13: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x14: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(159 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(287 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(159 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal dmux0_q_net_x2: std_logic_vector(143 downto 0);
  signal mux_y_net_x3: std_logic;
  signal reinterpret1_output_port_net_x7: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x8: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(15 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice2_y_net_x1: std_logic;

begin
  concatenate_y_net_x13 <= a;
  dmux0_q_net_x2 <= b;
  ce_1_sg_x926 <= ce_1;
  clk_1_sg_x926 <= clk_1;
  slice0_y_net_x1 <= shift;
  mux_y_net_x3 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x8;
  a_bw_x0 <= reinterpret2_output_port_net_x1;
  of_x0 <= concatenate_y_net_x14;
  sync_out <= delay0_q_net_x0;

  bus_add_f5646939d3: entity work.bus_add_entity_928fd44576
    port map (
      a => reinterpret1_output_port_net_x7,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x926,
      clk_1 => clk_1_sg_x926,
      dout => concatenate_y_net_x3
    );

  bus_convert_f349067bec: entity work.bus_convert_entity_8625f90d6a
    port map (
      ce_1 => ce_1_sg_x926,
      clk_1 => clk_1_sg_x926,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_de2a4f2710: entity work.bus_expand_entity_2a52aaf3de
    port map (
      bus_in => concatenate_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x8,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  bus_norm0_8c5f565fd3: entity work.bus_norm0_entity_2065c27fbe
    port map (
      ce_1 => ce_1_sg_x926,
      clk_1 => clk_1_sg_x926,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_c58f36c5cd: entity work.bus_norm1_entity_ebb4710d83
    port map (
      ce_1 => ce_1_sg_x926,
      clk_1 => clk_1_sg_x926,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_65d047bb2a: entity work.bus_relational_entity_633fc73315
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      ce_1 => ce_1_sg_x926,
      clk_1 => clk_1_sg_x926,
      a_b => concatenate_y_net_x14
    );

  bus_scale_40c09d243d: entity work.bus_scale_entity_0ad20b8fc9
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_5755fd12ea: entity work.bus_sub_entity_c471a0f176
    port map (
      a => reinterpret1_output_port_net_x7,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x926,
      clk_1 => clk_1_sg_x926,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_2a42ff61a3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x926,
      clk => clk_1_sg_x926,
      clr => '0',
      d(0) => slice2_y_net_x1,
      q(0) => delay0_q_net_x0
    );

  munge_5c4882585a: entity work.munge_entity_7ae6614fdf
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_7b2e1ce8fa: entity work.mux_entity_bd9bbc285a
    port map (
      ce_1 => ce_1_sg_x926,
      clk_1 => clk_1_sg_x926,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_ff61416925: entity work.shift_replicate_entity_9dcff94fe9
    port map (
      ce_1 => ce_1_sg_x926,
      clk_1 => clk_1_sg_x926,
      in_x0 => slice0_y_net_x1,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_3d71c43d20: entity work.twiddle_entity_3d71c43d20
    port map (
      ai => concatenate_y_net_x13,
      bi => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x926,
      clk_1 => clk_1_sg_x926,
      sync_in => mux_y_net_x3,
      ao => reinterpret1_output_port_net_x7,
      bwo => concatenate_y_net_x12,
      sync_out => slice2_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_8/delay0"

entity delay0_entity_0a90963eba is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(143 downto 0); 
    dout: out std_logic_vector(143 downto 0)
  );
end delay0_entity_0a90963eba;

architecture structural of delay0_entity_0a90963eba is
  signal ce_1_sg_x927: std_logic;
  signal clk_1_sg_x927: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(143 downto 0);
  signal del1_q_net_x0: std_logic_vector(35 downto 0);
  signal del2_q_net_x0: std_logic_vector(35 downto 0);
  signal del3_q_net_x0: std_logic_vector(35 downto 0);
  signal del4_q_net_x0: std_logic_vector(35 downto 0);
  signal din2_q_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x927 <= ce_1;
  clk_1_sg_x927 <= clk_1;
  din2_q_net_x1 <= din;
  dout <= concatenate_y_net_x1;

  del1: entity work.delay_bdaf6c9e55
    port map (
      ce => ce_1_sg_x927,
      clk => clk_1_sg_x927,
      clr => '0',
      d => reinterpret4_output_port_net_x0,
      q => del1_q_net_x0
    );

  del2: entity work.delay_bdaf6c9e55
    port map (
      ce => ce_1_sg_x927,
      clk => clk_1_sg_x927,
      clr => '0',
      d => reinterpret3_output_port_net_x0,
      q => del2_q_net_x0
    );

  del3: entity work.delay_bdaf6c9e55
    port map (
      ce => ce_1_sg_x927,
      clk => clk_1_sg_x927,
      clr => '0',
      d => reinterpret2_output_port_net_x0,
      q => del3_q_net_x0
    );

  del4: entity work.delay_bdaf6c9e55
    port map (
      ce => ce_1_sg_x927,
      clk => clk_1_sg_x927,
      clr => '0',
      d => reinterpret1_output_port_net_x0,
      q => del4_q_net_x0
    );

  din_expand_0f1ede0675: entity work.expand0_entity_faedf3e73c
    port map (
      bus_in => din2_q_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  dout_compress_5d9c2f7305: entity work.d_bussify_entity_9462440c59
    port map (
      in1 => del1_q_net_x0,
      in2 => del2_q_net_x0,
      in3 => del3_q_net_x0,
      in4 => del4_q_net_x0,
      bus_out => concatenate_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_8/sync_delay"

entity sync_delay_entity_49ae970709 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_49ae970709;

architecture structural of sync_delay_entity_49ae970709 is
  signal ce_1_sg_x929: std_logic;
  signal clk_1_sg_x929: std_logic;
  signal constant1_op_net: std_logic_vector(2 downto 0);
  signal constant2_op_net: std_logic_vector(2 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(2 downto 0);
  signal counter_op_net: std_logic_vector(2 downto 0);
  signal dsync1_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x4: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x929 <= ce_1;
  clk_1_sg_x929 <= clk_1;
  dsync1_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x4;

  constant1: entity work.constant_822933f89b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_469094441c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_a1c496ea88
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.counter_ed7367cb5c
    port map (
      ce => ce_1_sg_x929,
      clk => clk_1_sg_x929,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => dsync1_q_net_x0,
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x4
    );

  relational: entity work.relational_8fc7f5539b
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_47b317dab6
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_8"

entity fft_stage_8_entity_167b65dc79 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(143 downto 0); 
    in2: in std_logic_vector(143 downto 0); 
    of_in: in std_logic_vector(3 downto 0); 
    shift: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic_vector(3 downto 0); 
    out1: out std_logic_vector(143 downto 0); 
    out2: out std_logic_vector(143 downto 0); 
    sync_out: out std_logic
  );
end fft_stage_8_entity_167b65dc79;

architecture structural of fft_stage_8_entity_167b65dc79 is
  signal ce_1_sg_x930: std_logic;
  signal clk_1_sg_x930: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x14: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x15: std_logic_vector(143 downto 0);
  signal constant2_op_net_x8: std_logic_vector(14 downto 0);
  signal counter_op_net: std_logic_vector(2 downto 0);
  signal delay0_q_net_x2: std_logic;
  signal delay0_q_net_x3: std_logic;
  signal din0_q_net: std_logic_vector(143 downto 0);
  signal din2_q_net_x1: std_logic_vector(143 downto 0);
  signal dmux0_q_net_x2: std_logic_vector(143 downto 0);
  signal dmux1_q_net_x1: std_logic_vector(143 downto 0);
  signal dsync0_q_net: std_logic;
  signal dsync1_q_net_x0: std_logic;
  signal logical1_y_net_x1: std_logic_vector(3 downto 0);
  signal logical1_y_net_x2: std_logic_vector(3 downto 0);
  signal mux0_y_net: std_logic_vector(143 downto 0);
  signal mux1_y_net: std_logic_vector(143 downto 0);
  signal mux_y_net_x4: std_logic;
  signal reinterpret1_output_port_net_x12: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x13: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(143 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice1_y_net: std_logic;

begin
  ce_1_sg_x930 <= ce_1;
  clk_1_sg_x930 <= clk_1;
  reinterpret2_output_port_net_x3 <= in1;
  reinterpret1_output_port_net_x12 <= in2;
  logical1_y_net_x1 <= of_in;
  constant2_op_net_x8 <= shift;
  delay0_q_net_x2 <= sync;
  of_x0 <= logical1_y_net_x2;
  out1 <= reinterpret2_output_port_net_x4;
  out2 <= reinterpret1_output_port_net_x13;
  sync_out <= delay0_q_net_x3;

  butterfly_direct_7f70047883: entity work.butterfly_direct_entity_7f70047883
    port map (
      a => concatenate_y_net_x15,
      b => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x930,
      clk_1 => clk_1_sg_x930,
      shift => slice0_y_net_x1,
      sync_in => mux_y_net_x4,
      a_bw => reinterpret1_output_port_net_x13,
      a_bw_x0 => reinterpret2_output_port_net_x4,
      of_x0 => concatenate_y_net_x14,
      sync_out => delay0_q_net_x3
    );

  counter: entity work.counter_290f1e76bd
    port map (
      ce => ce_1_sg_x930,
      clk => clk_1_sg_x930,
      clr => '0',
      rst(0) => dsync0_q_net,
      op => counter_op_net
    );

  delay0_0a90963eba: entity work.delay0_entity_0a90963eba
    port map (
      ce_1 => ce_1_sg_x930,
      clk_1 => clk_1_sg_x930,
      din => din2_q_net_x1,
      dout => concatenate_y_net_x1
    );

  delay1_c55ec150a7: entity work.delay0_entity_0a90963eba
    port map (
      ce_1 => ce_1_sg_x930,
      clk_1 => clk_1_sg_x930,
      din => dmux1_q_net_x1,
      dout => concatenate_y_net_x15
    );

  din0: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reinterpret2_output_port_net_x3,
      q => din0_q_net
    );

  din2: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reinterpret1_output_port_net_x12,
      q => din2_q_net_x1
    );

  dmux0: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => mux0_y_net,
      q => dmux0_q_net_x2
    );

  dmux1: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => mux1_y_net,
      q => dmux1_q_net_x1
    );

  dsync0: entity work.delay_0341f7be44
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d(0) => delay0_q_net_x2,
      q(0) => dsync0_q_net
    );

  dsync1: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x930,
      clk => clk_1_sg_x930,
      clr => '0',
      d(0) => dsync0_q_net,
      q(0) => dsync1_q_net_x0
    );

  logical1: entity work.logical_8c69d6f164
    port map (
      ce => ce_1_sg_x930,
      clk => clk_1_sg_x930,
      clr => '0',
      d0 => concatenate_y_net_x14,
      d1 => logical1_y_net_x1,
      y => logical1_y_net_x2
    );

  mux0: entity work.mux_340b095e64
    port map (
      ce => ce_1_sg_x930,
      clk => clk_1_sg_x930,
      clr => '0',
      d0 => concatenate_y_net_x1,
      d1 => din0_q_net,
      sel(0) => slice1_y_net,
      y => mux0_y_net
    );

  mux1: entity work.mux_340b095e64
    port map (
      ce => ce_1_sg_x930,
      clk => clk_1_sg_x930,
      clr => '0',
      d0 => din0_q_net,
      d1 => concatenate_y_net_x1,
      sel(0) => slice1_y_net,
      y => mux1_y_net
    );

  slice0: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 7,
      x_width => 15,
      y_width => 1
    )
    port map (
      x => constant2_op_net_x8,
      y(0) => slice0_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 3,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  sync_delay_49ae970709: entity work.sync_delay_entity_49ae970709
    port map (
      ce_1 => ce_1_sg_x930,
      clk_1 => clk_1_sg_x930,
      in_x0 => dsync1_q_net_x0,
      out_x0 => mux_y_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_9/butterfly_direct/twiddle/coeff_gen/bit_reverse"

entity bit_reverse_entity_4d4a8aaa37 is
  port (
    in_x0: in std_logic_vector(7 downto 0); 
    out_x0: out std_logic_vector(7 downto 0)
  );
end bit_reverse_entity_4d4a8aaa37;

architecture structural of bit_reverse_entity_4d4a8aaa37 is
  signal bit0_y_net: std_logic;
  signal bit1_y_net: std_logic;
  signal bit2_y_net: std_logic;
  signal bit3_y_net: std_logic;
  signal bit4_y_net: std_logic;
  signal bit5_y_net: std_logic;
  signal bit6_y_net: std_logic;
  signal bit7_y_net: std_logic;
  signal concat_y_net_x0: std_logic_vector(7 downto 0);
  signal slice_y_net_x0: std_logic_vector(7 downto 0);

begin
  slice_y_net_x0 <= in_x0;
  out_x0 <= concat_y_net_x0;

  bit0: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit0_y_net
    );

  bit1: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit1_y_net
    );

  bit2: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit2_y_net
    );

  bit3: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit3_y_net
    );

  bit4: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 4,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit4_y_net
    );

  bit5: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 5,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit5_y_net
    );

  bit6: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 6,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit6_y_net
    );

  bit7: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 7,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => bit7_y_net
    );

  concat: entity work.concat_7673b9b993
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => bit0_y_net,
      in1(0) => bit1_y_net,
      in2(0) => bit2_y_net,
      in3(0) => bit3_y_net,
      in4(0) => bit4_y_net,
      in5(0) => bit5_y_net,
      in6(0) => bit6_y_net,
      in7(0) => bit7_y_net,
      y => concat_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_9/butterfly_direct/twiddle/coeff_gen/cosin/add_convert0"

entity add_convert0_entity_5a387863d4 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    theta: in std_logic_vector(7 downto 0); 
    add: out std_logic_vector(7 downto 0); 
    negate: out std_logic
  );
end add_convert0_entity_5a387863d4;

architecture structural of add_convert0_entity_5a387863d4 is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x0: std_logic_vector(7 downto 0);
  signal ce_1_sg_x1011: std_logic;
  signal clk_1_sg_x1011: std_logic;
  signal concat_y_net: std_logic_vector(8 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(7 downto 0);
  signal delay13_q_net: std_logic_vector(7 downto 0);
  signal delay14_q_net: std_logic_vector(7 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(8 downto 0);
  signal invert_y_net: std_logic;
  signal lookup_y_net: std_logic_vector(6 downto 0);
  signal new_add_y_net: std_logic_vector(7 downto 0);
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x1011 <= ce_1;
  clk_1_sg_x1011 <= clk_1;
  assert_dout_net_x0 <= theta;
  add <= convert2_dout_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x1011,
      clk => clk_1_sg_x1011,
      clr => '0',
      en => "1",
      s => addsub5_s_net
    );

  concat: entity work.concat_f62149b02a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => addsub5_s_net,
      in1 => lookup_y_net,
      y => concat_y_net
    );

  convert2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 8,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 8,
      latency => 3,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1011,
      clk => clk_1_sg_x1011,
      clr => '0',
      din => delay13_q_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  delay13: entity work.delay_23f848c85b
    port map (
      ce => ce_1_sg_x1011,
      clk => clk_1_sg_x1011,
      clr => '0',
      d => delay14_q_net,
      q => delay13_q_net
    );

  delay14: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 8
    )
    port map (
      ce => ce_1_sg_x1011,
      clk => clk_1_sg_x1011,
      d => new_add_y_net,
      en => '1',
      rst => '1',
      q => delay14_q_net
    );

  delay2: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x1011,
      clk => clk_1_sg_x1011,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_1ece14600f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x0,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  lookup: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 6,
      x_width => 9,
      y_width => 7
    )
    port map (
      x => fluff_y_net,
      y => lookup_y_net
    );

  new_add: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 7,
      x_width => 9,
      y_width => 8
    )
    port map (
      x => concat_y_net,
      y => new_add_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 8,
      x_width => 9,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_9/butterfly_direct/twiddle/coeff_gen/cosin/add_convert1"

entity add_convert1_entity_301e7a7ff3 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    theta: in std_logic_vector(7 downto 0); 
    misco: out std_logic_vector(288 downto 0); 
    negate: out std_logic
  );
end add_convert1_entity_301e7a7ff3;

architecture structural of add_convert1_entity_301e7a7ff3 is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x1: std_logic_vector(7 downto 0);
  signal ce_1_sg_x1012: std_logic;
  signal clk_1_sg_x1012: std_logic;
  signal concatenate_y_net_x3: std_logic_vector(288 downto 0);
  signal delay1_q_net_x0: std_logic_vector(288 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(8 downto 0);
  signal invert_y_net: std_logic;
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x1012 <= ce_1;
  clk_1_sg_x1012 <= clk_1;
  concatenate_y_net_x3 <= misci;
  assert_dout_net_x1 <= theta;
  misco <= delay1_q_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x1012,
      clk => clk_1_sg_x1012,
      clr => '0',
      en => "1",
      s => addsub5_s_net
    );

  delay1: entity work.delay_4583411594
    port map (
      ce => ce_1_sg_x1012,
      clk => clk_1_sg_x1012,
      clr => '0',
      d => concatenate_y_net_x3,
      q => delay1_q_net_x0
    );

  delay2: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x1012,
      clk => clk_1_sg_x1012,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_1ece14600f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x1,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 8,
      x_width => 9,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_9/butterfly_direct/twiddle/coeff_gen/cosin"

entity cosin_entity_88e3b5ac62 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    theta: in std_logic_vector(7 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(288 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_88e3b5ac62;

architecture structural of cosin_entity_88e3b5ac62 is
  signal assert_dout_net_x1: std_logic_vector(7 downto 0);
  signal ce_1_sg_x1015: std_logic;
  signal clk_1_sg_x1015: std_logic;
  signal concat_y_net_x1: std_logic_vector(7 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(288 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(7 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(288 downto 0);
  signal delay1_q_net_x2: std_logic_vector(288 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(288 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x1015 <= ce_1;
  clk_1_sg_x1015 <= clk_1;
  concatenate_y_net_x4 <= misci;
  concat_y_net_x1 <= theta;
  cos <= mux_y_net_x2;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x3;

  add_convert0_5a387863d4: entity work.add_convert0_entity_5a387863d4
    port map (
      ce_1 => ce_1_sg_x1015,
      clk_1 => clk_1_sg_x1015,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_301e7a7ff3: entity work.add_convert1_entity_301e7a7ff3
    port map (
      ce_1 => ce_1_sg_x1015,
      clk_1 => clk_1_sg_x1015,
      misci => concatenate_y_net_x4,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 8,
      dout_width => 8
    )
    port map (
      din => concat_y_net_x1,
      dout => assert_dout_net_x1
    );

  c_to_ri_c1f2100546: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_80f3e767fa
    port map (
      ce => ce_1_sg_x1015,
      clk => clk_1_sg_x1015,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1015,
      clk => clk_1_sg_x1015,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1015,
      clk => clk_1_sg_x1015,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_98fcd6ba7f: entity work.invert0_entity_0a6af8c8da
    port map (
      ce_1 => ce_1_sg_x1015,
      clk_1 => clk_1_sg_x1015,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_4a9d3a91b3: entity work.invert1_entity_b107bd9d55
    port map (
      ce_1 => ce_1_sg_x1015,
      clk_1 => clk_1_sg_x1015,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 8,
      c_width => 36,
      core_name0 => "bmg_72_3f3c61289e7ba7ea",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x1015,
      clk => clk_1_sg_x1015,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_9/butterfly_direct/twiddle/coeff_gen"

entity coeff_gen_entity_79f28e7593 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(288 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_79f28e7593;

architecture structural of coeff_gen_entity_79f28e7593 is
  signal ce_1_sg_x1016: std_logic;
  signal clk_1_sg_x1016: std_logic;
  signal concat_y_net_x1: std_logic_vector(7 downto 0);
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(288 downto 0);
  signal counter_op_net: std_logic_vector(8 downto 0);
  signal delay1_q_net_x3: std_logic_vector(288 downto 0);
  signal mux_y_net_x1: std_logic;
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x1016 <= ce_1;
  clk_1_sg_x1016 <= clk_1;
  concatenate_y_net_x5 <= misci;
  mux_y_net_x1 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x11;

  bit_reverse_4d4a8aaa37: entity work.bit_reverse_entity_4d4a8aaa37
    port map (
      in_x0 => slice_y_net_x0,
      out_x0 => concat_y_net_x1
    );

  cosin_88e3b5ac62: entity work.cosin_entity_88e3b5ac62
    port map (
      ce_1 => ce_1_sg_x1016,
      clk_1 => clk_1_sg_x1016,
      misci => concatenate_y_net_x5,
      theta => concat_y_net_x1,
      cos => mux_y_net_x4,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x5
    );

  counter: entity work.counter_d5d467f1b8
    port map (
      ce => ce_1_sg_x1016,
      clk => clk_1_sg_x1016,
      clr => '0',
      rst(0) => mux_y_net_x1,
      op => counter_op_net
    );

  ri_to_c_4bc2b6a5e8: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x11
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 8,
      x_width => 9,
      y_width => 8
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_9/butterfly_direct/twiddle"

entity twiddle_entity_f2e3847684 is
  port (
    ai: in std_logic_vector(143 downto 0); 
    bi: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(143 downto 0); 
    bwo: out std_logic_vector(151 downto 0); 
    sync_out: out std_logic
  );
end twiddle_entity_f2e3847684;

architecture structural of twiddle_entity_f2e3847684 is
  signal ce_1_sg_x1017: std_logic;
  signal clk_1_sg_x1017: std_logic;
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(295 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(288 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(151 downto 0);
  signal delay1_q_net_x3: std_logic_vector(288 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(144 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(144 downto 0);
  signal dmux0_q_net_x1: std_logic_vector(143 downto 0);
  signal mux_y_net_x2: std_logic;
  signal reinterpret1_output_port_net_x5: std_logic_vector(144 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(143 downto 0);
  signal slice2_y_net_x1: std_logic;

begin
  concatenate_y_net_x2 <= ai;
  dmux0_q_net_x1 <= bi;
  ce_1_sg_x1017 <= ce_1;
  clk_1_sg_x1017 <= clk_1;
  mux_y_net_x2 <= sync_in;
  ao <= reinterpret1_output_port_net_x7;
  bwo <= concatenate_y_net_x7;
  sync_out <= slice2_y_net_x1;

  bus_convert_b6b4d7f958: entity work.bus_convert_entity_fc9d20fae7
    port map (
      ce_1 => ce_1_sg_x1017,
      clk_1 => clk_1_sg_x1017,
      din => concatenate_y_net_x3,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x7,
      misco => dmisc_q_net_x3
    );

  bus_create_35a32b33cd: entity work.bus_create_entity_3d2f105ae8
    port map (
      in1 => dmux0_q_net_x1,
      in2 => mux_y_net_x2,
      in3 => concatenate_y_net_x2,
      bus_out => concatenate_y_net_x5
    );

  bus_expand1_0bb71a6e32: entity work.bus_expand1_entity_0d80282e07
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x7,
      msb_out2 => slice2_y_net_x1
    );

  bus_expand_6713db1c4d: entity work.bus_expand_entity_1995b7ac80
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x5,
      msb_out2 => reinterpret2_output_port_net_x2
    );

  bus_mult_594f8acda2: entity work.bus_mult_entity_cc3ac8248d
    port map (
      a => concat_y_net_x11,
      b => reinterpret2_output_port_net_x2,
      ce_1 => ce_1_sg_x1017,
      clk_1 => clk_1_sg_x1017,
      misci => reinterpret1_output_port_net_x5,
      a_b => concatenate_y_net_x3,
      misco => dmisc_q_net_x2
    );

  coeff_gen_79f28e7593: entity work.coeff_gen_entity_79f28e7593
    port map (
      ce_1 => ce_1_sg_x1017,
      clk_1 => clk_1_sg_x1017,
      misci => concatenate_y_net_x5,
      rst => mux_y_net_x2,
      misco => delay1_q_net_x3,
      w => concat_y_net_x11
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_9/butterfly_direct"

entity butterfly_direct_entity_50b87ce3a5 is
  port (
    a: in std_logic_vector(143 downto 0); 
    b: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(143 downto 0); 
    a_bw_x0: out std_logic_vector(143 downto 0); 
    of_x0: out std_logic_vector(3 downto 0); 
    sync_out: out std_logic
  );
end butterfly_direct_entity_50b87ce3a5;

architecture structural of butterfly_direct_entity_50b87ce3a5 is
  signal ce_1_sg_x1018: std_logic;
  signal clk_1_sg_x1018: std_logic;
  signal concat_y_net_x3: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(151 downto 0);
  signal concatenate_y_net_x13: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x14: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(159 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(287 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(159 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x1: std_logic;
  signal dmux0_q_net_x2: std_logic_vector(143 downto 0);
  signal mux_y_net_x3: std_logic;
  signal reinterpret1_output_port_net_x2: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(15 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice2_y_net_x1: std_logic;

begin
  concatenate_y_net_x13 <= a;
  dmux0_q_net_x2 <= b;
  ce_1_sg_x1018 <= ce_1;
  clk_1_sg_x1018 <= clk_1;
  slice0_y_net_x1 <= shift;
  mux_y_net_x3 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x2;
  a_bw_x0 <= reinterpret2_output_port_net_x2;
  of_x0 <= concatenate_y_net_x14;
  sync_out <= delay0_q_net_x1;

  bus_add_cbe3373ab8: entity work.bus_add_entity_928fd44576
    port map (
      a => reinterpret1_output_port_net_x7,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1018,
      clk_1 => clk_1_sg_x1018,
      dout => concatenate_y_net_x3
    );

  bus_convert_80e573e27e: entity work.bus_convert_entity_dda507beeb
    port map (
      ce_1 => ce_1_sg_x1018,
      clk_1 => clk_1_sg_x1018,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_7720b53575: entity work.bus_expand_entity_2a52aaf3de
    port map (
      bus_in => concatenate_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out2 => reinterpret2_output_port_net_x2
    );

  bus_norm0_27925c25c2: entity work.bus_norm0_entity_2065c27fbe
    port map (
      ce_1 => ce_1_sg_x1018,
      clk_1 => clk_1_sg_x1018,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_39c2f89ba1: entity work.bus_norm1_entity_ebb4710d83
    port map (
      ce_1 => ce_1_sg_x1018,
      clk_1 => clk_1_sg_x1018,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_a9281b69fe: entity work.bus_relational_entity_633fc73315
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      ce_1 => ce_1_sg_x1018,
      clk_1 => clk_1_sg_x1018,
      a_b => concatenate_y_net_x14
    );

  bus_scale_bcb30145f0: entity work.bus_scale_entity_0ad20b8fc9
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_634b892b2a: entity work.bus_sub_entity_c471a0f176
    port map (
      a => reinterpret1_output_port_net_x7,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1018,
      clk_1 => clk_1_sg_x1018,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_2a42ff61a3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x1018,
      clk => clk_1_sg_x1018,
      clr => '0',
      d(0) => slice2_y_net_x1,
      q(0) => delay0_q_net_x1
    );

  munge_ba693e9b1a: entity work.munge_entity_7ae6614fdf
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_b8e92e203f: entity work.mux_entity_bd9bbc285a
    port map (
      ce_1 => ce_1_sg_x1018,
      clk_1 => clk_1_sg_x1018,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_eb5df3166a: entity work.shift_replicate_entity_9dcff94fe9
    port map (
      ce_1 => ce_1_sg_x1018,
      clk_1 => clk_1_sg_x1018,
      in_x0 => slice0_y_net_x1,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_f2e3847684: entity work.twiddle_entity_f2e3847684
    port map (
      ai => concatenate_y_net_x13,
      bi => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x1018,
      clk_1 => clk_1_sg_x1018,
      sync_in => mux_y_net_x3,
      ao => reinterpret1_output_port_net_x7,
      bwo => concatenate_y_net_x12,
      sync_out => slice2_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_9/delay0"

entity delay0_entity_6a5c12ada2 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(143 downto 0); 
    dout: out std_logic_vector(143 downto 0)
  );
end delay0_entity_6a5c12ada2;

architecture structural of delay0_entity_6a5c12ada2 is
  signal ce_1_sg_x1019: std_logic;
  signal clk_1_sg_x1019: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(143 downto 0);
  signal del1_q_net_x0: std_logic_vector(35 downto 0);
  signal del2_q_net_x0: std_logic_vector(35 downto 0);
  signal del3_q_net_x0: std_logic_vector(35 downto 0);
  signal del4_q_net_x0: std_logic_vector(35 downto 0);
  signal din2_q_net_x1: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x1019 <= ce_1;
  clk_1_sg_x1019 <= clk_1;
  din2_q_net_x1 <= din;
  dout <= concatenate_y_net_x1;

  del1: entity work.delay_38898c80c0
    port map (
      ce => ce_1_sg_x1019,
      clk => clk_1_sg_x1019,
      clr => '0',
      d => reinterpret4_output_port_net_x0,
      q => del1_q_net_x0
    );

  del2: entity work.delay_38898c80c0
    port map (
      ce => ce_1_sg_x1019,
      clk => clk_1_sg_x1019,
      clr => '0',
      d => reinterpret3_output_port_net_x0,
      q => del2_q_net_x0
    );

  del3: entity work.delay_38898c80c0
    port map (
      ce => ce_1_sg_x1019,
      clk => clk_1_sg_x1019,
      clr => '0',
      d => reinterpret2_output_port_net_x0,
      q => del3_q_net_x0
    );

  del4: entity work.delay_38898c80c0
    port map (
      ce => ce_1_sg_x1019,
      clk => clk_1_sg_x1019,
      clr => '0',
      d => reinterpret1_output_port_net_x0,
      q => del4_q_net_x0
    );

  din_expand_d4ebcd487a: entity work.expand0_entity_faedf3e73c
    port map (
      bus_in => din2_q_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  dout_compress_24c6bbeedc: entity work.d_bussify_entity_9462440c59
    port map (
      in1 => del1_q_net_x0,
      in2 => del2_q_net_x0,
      in3 => del3_q_net_x0,
      in4 => del4_q_net_x0,
      bus_out => concatenate_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_9/sync_delay"

entity sync_delay_entity_6df0c31006 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_6df0c31006;

architecture structural of sync_delay_entity_6df0c31006 is
  signal ce_1_sg_x1021: std_logic;
  signal clk_1_sg_x1021: std_logic;
  signal constant1_op_net: std_logic_vector(1 downto 0);
  signal constant2_op_net: std_logic_vector(1 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(1 downto 0);
  signal counter_op_net: std_logic_vector(1 downto 0);
  signal dsync1_q_net_x0: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x4: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x1021 <= ce_1;
  clk_1_sg_x1021 <= clk_1;
  dsync1_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x4;

  constant1: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_e8ddc079e9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_a7e2bb9e12
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.counter_e095645f0c
    port map (
      ce => ce_1_sg_x1021,
      clk => clk_1_sg_x1021,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => dsync1_q_net_x0,
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => dsync1_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x4
    );

  relational: entity work.relational_5f1eb17108
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_f9928864ea
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core/fft_stage_9"

entity fft_stage_9_entity_f37660527d is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(143 downto 0); 
    in2: in std_logic_vector(143 downto 0); 
    of_in: in std_logic_vector(3 downto 0); 
    shift: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic_vector(3 downto 0); 
    out1: out std_logic_vector(143 downto 0); 
    out2: out std_logic_vector(143 downto 0); 
    sync_out: out std_logic
  );
end fft_stage_9_entity_f37660527d;

architecture structural of fft_stage_9_entity_f37660527d is
  signal ce_1_sg_x1022: std_logic;
  signal clk_1_sg_x1022: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x14: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x15: std_logic_vector(143 downto 0);
  signal constant2_op_net_x9: std_logic_vector(14 downto 0);
  signal counter_op_net: std_logic_vector(1 downto 0);
  signal delay0_q_net_x4: std_logic;
  signal delay0_q_net_x5: std_logic;
  signal din0_q_net: std_logic_vector(143 downto 0);
  signal din2_q_net_x1: std_logic_vector(143 downto 0);
  signal dmux0_q_net_x2: std_logic_vector(143 downto 0);
  signal dmux1_q_net_x1: std_logic_vector(143 downto 0);
  signal dsync0_q_net: std_logic;
  signal dsync1_q_net_x0: std_logic;
  signal logical1_y_net_x3: std_logic_vector(3 downto 0);
  signal logical1_y_net_x4: std_logic_vector(3 downto 0);
  signal mux0_y_net: std_logic_vector(143 downto 0);
  signal mux1_y_net: std_logic_vector(143 downto 0);
  signal mux_y_net_x4: std_logic;
  signal reinterpret1_output_port_net_x14: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x5: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x6: std_logic_vector(143 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice1_y_net: std_logic;

begin
  ce_1_sg_x1022 <= ce_1;
  clk_1_sg_x1022 <= clk_1;
  reinterpret2_output_port_net_x5 <= in1;
  reinterpret1_output_port_net_x14 <= in2;
  logical1_y_net_x3 <= of_in;
  constant2_op_net_x9 <= shift;
  delay0_q_net_x4 <= sync;
  of_x0 <= logical1_y_net_x4;
  out1 <= reinterpret2_output_port_net_x6;
  out2 <= reinterpret1_output_port_net_x3;
  sync_out <= delay0_q_net_x5;

  butterfly_direct_50b87ce3a5: entity work.butterfly_direct_entity_50b87ce3a5
    port map (
      a => concatenate_y_net_x15,
      b => dmux0_q_net_x2,
      ce_1 => ce_1_sg_x1022,
      clk_1 => clk_1_sg_x1022,
      shift => slice0_y_net_x1,
      sync_in => mux_y_net_x4,
      a_bw => reinterpret1_output_port_net_x3,
      a_bw_x0 => reinterpret2_output_port_net_x6,
      of_x0 => concatenate_y_net_x14,
      sync_out => delay0_q_net_x5
    );

  counter: entity work.counter_107ada62c3
    port map (
      ce => ce_1_sg_x1022,
      clk => clk_1_sg_x1022,
      clr => '0',
      rst(0) => dsync0_q_net,
      op => counter_op_net
    );

  delay0_6a5c12ada2: entity work.delay0_entity_6a5c12ada2
    port map (
      ce_1 => ce_1_sg_x1022,
      clk_1 => clk_1_sg_x1022,
      din => din2_q_net_x1,
      dout => concatenate_y_net_x1
    );

  delay1_48983db98f: entity work.delay0_entity_6a5c12ada2
    port map (
      ce_1 => ce_1_sg_x1022,
      clk_1 => clk_1_sg_x1022,
      din => dmux1_q_net_x1,
      dout => concatenate_y_net_x15
    );

  din0: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reinterpret2_output_port_net_x5,
      q => din0_q_net
    );

  din2: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reinterpret1_output_port_net_x14,
      q => din2_q_net_x1
    );

  dmux0: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => mux0_y_net,
      q => dmux0_q_net_x2
    );

  dmux1: entity work.delay_e7ebd6b9c6
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => mux1_y_net,
      q => dmux1_q_net_x1
    );

  dsync0: entity work.delay_0341f7be44
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d(0) => delay0_q_net_x4,
      q(0) => dsync0_q_net
    );

  dsync1: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x1022,
      clk => clk_1_sg_x1022,
      clr => '0',
      d(0) => dsync0_q_net,
      q(0) => dsync1_q_net_x0
    );

  logical1: entity work.logical_8c69d6f164
    port map (
      ce => ce_1_sg_x1022,
      clk => clk_1_sg_x1022,
      clr => '0',
      d0 => concatenate_y_net_x14,
      d1 => logical1_y_net_x3,
      y => logical1_y_net_x4
    );

  mux0: entity work.mux_340b095e64
    port map (
      ce => ce_1_sg_x1022,
      clk => clk_1_sg_x1022,
      clr => '0',
      d0 => concatenate_y_net_x1,
      d1 => din0_q_net,
      sel(0) => slice1_y_net,
      y => mux0_y_net
    );

  mux1: entity work.mux_340b095e64
    port map (
      ce => ce_1_sg_x1022,
      clk => clk_1_sg_x1022,
      clr => '0',
      d0 => din0_q_net,
      d1 => concatenate_y_net_x1,
      sel(0) => slice1_y_net,
      y => mux1_y_net
    );

  slice0: entity work.xlslice
    generic map (
      new_lsb => 8,
      new_msb => 8,
      x_width => 15,
      y_width => 1
    )
    port map (
      x => constant2_op_net_x9,
      y(0) => slice0_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => slice1_y_net
    );

  sync_delay_6df0c31006: entity work.sync_delay_entity_6df0c31006
    port map (
      ce_1 => ce_1_sg_x1022,
      clk_1 => clk_1_sg_x1022,
      in_x0 => dsync1_q_net_x0,
      out_x0 => mux_y_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x/biplex_core"

entity biplex_core_entity_ac16b64235 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    pol1: in std_logic_vector(143 downto 0); 
    pol2: in std_logic_vector(143 downto 0); 
    shift: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic_vector(3 downto 0); 
    out1: out std_logic_vector(143 downto 0); 
    out2: out std_logic_vector(143 downto 0); 
    sync_out: out std_logic
  );
end biplex_core_entity_ac16b64235;

architecture structural of biplex_core_entity_ac16b64235 is
  signal ce_1_sg_x1023: std_logic;
  signal clk_1_sg_x1023: std_logic;
  signal concatenate_y_net_x4: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(143 downto 0);
  signal constant2_op_net_x10: std_logic_vector(14 downto 0);
  signal constant_op_net_x0: std_logic_vector(3 downto 0);
  signal delay0_q_net_x10: std_logic;
  signal delay0_q_net_x11: std_logic;
  signal delay0_q_net_x12: std_logic;
  signal delay0_q_net_x13: std_logic;
  signal delay0_q_net_x2: std_logic;
  signal delay0_q_net_x5: std_logic;
  signal delay0_q_net_x6: std_logic;
  signal delay0_q_net_x7: std_logic;
  signal delay0_q_net_x8: std_logic;
  signal delay0_q_net_x9: std_logic;
  signal logical1_y_net_x1: std_logic_vector(3 downto 0);
  signal logical1_y_net_x10: std_logic_vector(3 downto 0);
  signal logical1_y_net_x11: std_logic_vector(3 downto 0);
  signal logical1_y_net_x3: std_logic_vector(3 downto 0);
  signal logical1_y_net_x4: std_logic_vector(3 downto 0);
  signal logical1_y_net_x5: std_logic_vector(3 downto 0);
  signal logical1_y_net_x6: std_logic_vector(3 downto 0);
  signal logical1_y_net_x7: std_logic_vector(3 downto 0);
  signal logical1_y_net_x8: std_logic_vector(3 downto 0);
  signal logical1_y_net_x9: std_logic_vector(3 downto 0);
  signal register0_q_net_x1: std_logic;
  signal reinterpret1_output_port_net_x10: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x12: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x13: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x14: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x15: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x16: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x17: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x10: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x11: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x12: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x13: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x5: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x6: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x7: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x8: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x9: std_logic_vector(143 downto 0);

begin
  ce_1_sg_x1023 <= ce_1;
  clk_1_sg_x1023 <= clk_1;
  concatenate_y_net_x4 <= pol1;
  concatenate_y_net_x5 <= pol2;
  constant2_op_net_x10 <= shift;
  register0_q_net_x1 <= sync;
  of_x0 <= logical1_y_net_x11;
  out1 <= reinterpret2_output_port_net_x13;
  out2 <= reinterpret1_output_port_net_x17;
  sync_out <= delay0_q_net_x13;

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x0
    );

  fft_stage_10_430236410e: entity work.fft_stage_10_entity_430236410e
    port map (
      ce_1 => ce_1_sg_x1023,
      clk_1 => clk_1_sg_x1023,
      in1 => reinterpret2_output_port_net_x12,
      in2 => reinterpret1_output_port_net_x16,
      of_in => logical1_y_net_x10,
      shift => constant2_op_net_x10,
      sync => delay0_q_net_x12,
      of_x0 => logical1_y_net_x11,
      out1 => reinterpret2_output_port_net_x13,
      out2 => reinterpret1_output_port_net_x17,
      sync_out => delay0_q_net_x13
    );

  fft_stage_1_befb2533cd: entity work.fft_stage_1_entity_befb2533cd
    port map (
      ce_1 => ce_1_sg_x1023,
      clk_1 => clk_1_sg_x1023,
      in1 => concatenate_y_net_x4,
      in2 => concatenate_y_net_x5,
      of_in => constant_op_net_x0,
      shift => constant2_op_net_x10,
      sync => register0_q_net_x1,
      of_x0 => logical1_y_net_x1,
      out1 => reinterpret2_output_port_net_x3,
      out2 => reinterpret1_output_port_net_x3,
      sync_out => delay0_q_net_x2
    );

  fft_stage_2_880b7654c5: entity work.fft_stage_2_entity_880b7654c5
    port map (
      ce_1 => ce_1_sg_x1023,
      clk_1 => clk_1_sg_x1023,
      in1 => reinterpret2_output_port_net_x3,
      in2 => reinterpret1_output_port_net_x3,
      of_in => logical1_y_net_x1,
      shift => constant2_op_net_x10,
      sync => delay0_q_net_x2,
      of_x0 => logical1_y_net_x3,
      out1 => reinterpret2_output_port_net_x5,
      out2 => reinterpret1_output_port_net_x5,
      sync_out => delay0_q_net_x5
    );

  fft_stage_3_b4d19d4e15: entity work.fft_stage_3_entity_b4d19d4e15
    port map (
      ce_1 => ce_1_sg_x1023,
      clk_1 => clk_1_sg_x1023,
      in1 => reinterpret2_output_port_net_x5,
      in2 => reinterpret1_output_port_net_x5,
      of_in => logical1_y_net_x3,
      shift => constant2_op_net_x10,
      sync => delay0_q_net_x5,
      of_x0 => logical1_y_net_x4,
      out1 => reinterpret2_output_port_net_x7,
      out2 => reinterpret1_output_port_net_x10,
      sync_out => delay0_q_net_x6
    );

  fft_stage_4_c1be74421c: entity work.fft_stage_4_entity_c1be74421c
    port map (
      ce_1 => ce_1_sg_x1023,
      clk_1 => clk_1_sg_x1023,
      in1 => reinterpret2_output_port_net_x7,
      in2 => reinterpret1_output_port_net_x10,
      of_in => logical1_y_net_x4,
      shift => constant2_op_net_x10,
      sync => delay0_q_net_x6,
      of_x0 => logical1_y_net_x5,
      out1 => reinterpret2_output_port_net_x6,
      out2 => reinterpret1_output_port_net_x12,
      sync_out => delay0_q_net_x7
    );

  fft_stage_5_31119613de: entity work.fft_stage_5_entity_31119613de
    port map (
      ce_1 => ce_1_sg_x1023,
      clk_1 => clk_1_sg_x1023,
      in1 => reinterpret2_output_port_net_x6,
      in2 => reinterpret1_output_port_net_x12,
      of_in => logical1_y_net_x5,
      shift => constant2_op_net_x10,
      sync => delay0_q_net_x7,
      of_x0 => logical1_y_net_x6,
      out1 => reinterpret2_output_port_net_x8,
      out2 => reinterpret1_output_port_net_x14,
      sync_out => delay0_q_net_x8
    );

  fft_stage_6_8a929d084d: entity work.fft_stage_6_entity_8a929d084d
    port map (
      ce_1 => ce_1_sg_x1023,
      clk_1 => clk_1_sg_x1023,
      in1 => reinterpret2_output_port_net_x8,
      in2 => reinterpret1_output_port_net_x14,
      of_in => logical1_y_net_x6,
      shift => constant2_op_net_x10,
      sync => delay0_q_net_x8,
      of_x0 => logical1_y_net_x7,
      out1 => reinterpret2_output_port_net_x9,
      out2 => reinterpret1_output_port_net_x11,
      sync_out => delay0_q_net_x9
    );

  fft_stage_7_1c5e25ac05: entity work.fft_stage_7_entity_1c5e25ac05
    port map (
      ce_1 => ce_1_sg_x1023,
      clk_1 => clk_1_sg_x1023,
      in1 => reinterpret2_output_port_net_x9,
      in2 => reinterpret1_output_port_net_x11,
      of_in => logical1_y_net_x7,
      shift => constant2_op_net_x10,
      sync => delay0_q_net_x9,
      of_x0 => logical1_y_net_x8,
      out1 => reinterpret2_output_port_net_x10,
      out2 => reinterpret1_output_port_net_x13,
      sync_out => delay0_q_net_x10
    );

  fft_stage_8_167b65dc79: entity work.fft_stage_8_entity_167b65dc79
    port map (
      ce_1 => ce_1_sg_x1023,
      clk_1 => clk_1_sg_x1023,
      in1 => reinterpret2_output_port_net_x10,
      in2 => reinterpret1_output_port_net_x13,
      of_in => logical1_y_net_x8,
      shift => constant2_op_net_x10,
      sync => delay0_q_net_x10,
      of_x0 => logical1_y_net_x9,
      out1 => reinterpret2_output_port_net_x11,
      out2 => reinterpret1_output_port_net_x15,
      sync_out => delay0_q_net_x11
    );

  fft_stage_9_f37660527d: entity work.fft_stage_9_entity_f37660527d
    port map (
      ce_1 => ce_1_sg_x1023,
      clk_1 => clk_1_sg_x1023,
      in1 => reinterpret2_output_port_net_x11,
      in2 => reinterpret1_output_port_net_x15,
      of_in => logical1_y_net_x9,
      shift => constant2_op_net_x10,
      sync => delay0_q_net_x11,
      of_x0 => logical1_y_net_x10,
      out1 => reinterpret2_output_port_net_x12,
      out2 => reinterpret1_output_port_net_x16,
      sync_out => delay0_q_net_x12
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_biplex_real_4x"

entity fft_biplex_real_4x_entity_1c14223929 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    pol0_in: in std_logic_vector(17 downto 0); 
    pol10_in: in std_logic_vector(17 downto 0); 
    pol11_in: in std_logic_vector(17 downto 0); 
    pol12_in: in std_logic_vector(17 downto 0); 
    pol13_in: in std_logic_vector(17 downto 0); 
    pol14_in: in std_logic_vector(17 downto 0); 
    pol15_in: in std_logic_vector(17 downto 0); 
    pol1_in: in std_logic_vector(17 downto 0); 
    pol2_in: in std_logic_vector(17 downto 0); 
    pol3_in: in std_logic_vector(17 downto 0); 
    pol4_in: in std_logic_vector(17 downto 0); 
    pol5_in: in std_logic_vector(17 downto 0); 
    pol6_in: in std_logic_vector(17 downto 0); 
    pol7_in: in std_logic_vector(17 downto 0); 
    pol8_in: in std_logic_vector(17 downto 0); 
    pol9_in: in std_logic_vector(17 downto 0); 
    shift: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic_vector(3 downto 0); 
    pol0_out: out std_logic_vector(35 downto 0); 
    pol10_out: out std_logic_vector(35 downto 0); 
    pol11_out: out std_logic_vector(35 downto 0); 
    pol12_out: out std_logic_vector(35 downto 0); 
    pol13_out: out std_logic_vector(35 downto 0); 
    pol14_out: out std_logic_vector(35 downto 0); 
    pol15_out: out std_logic_vector(35 downto 0); 
    pol1_out: out std_logic_vector(35 downto 0); 
    pol2_out: out std_logic_vector(35 downto 0); 
    pol3_out: out std_logic_vector(35 downto 0); 
    pol4_out: out std_logic_vector(35 downto 0); 
    pol5_out: out std_logic_vector(35 downto 0); 
    pol6_out: out std_logic_vector(35 downto 0); 
    pol7_out: out std_logic_vector(35 downto 0); 
    pol8_out: out std_logic_vector(35 downto 0); 
    pol9_out: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_biplex_real_4x_entity_1c14223929;

architecture structural of fft_biplex_real_4x_entity_1c14223929 is
  signal ce_1_sg_x1024: std_logic;
  signal clk_1_sg_x1024: std_logic;
  signal concat_y_net_x10: std_logic_vector(35 downto 0);
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concat_y_net_x4: std_logic_vector(35 downto 0);
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concat_y_net_x6: std_logic_vector(35 downto 0);
  signal concat_y_net_x7: std_logic_vector(35 downto 0);
  signal concat_y_net_x8: std_logic_vector(35 downto 0);
  signal concat_y_net_x9: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x19: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x20: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x21: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x22: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(143 downto 0);
  signal constant2_op_net_x11: std_logic_vector(14 downto 0);
  signal delay0_q_net_x13: std_logic;
  signal logical1_y_net_x12: std_logic_vector(3 downto 0);
  signal register0_q_net_x18: std_logic_vector(17 downto 0);
  signal register0_q_net_x19: std_logic_vector(17 downto 0);
  signal register0_q_net_x20: std_logic_vector(17 downto 0);
  signal register0_q_net_x21: std_logic_vector(17 downto 0);
  signal register0_q_net_x22: std_logic_vector(17 downto 0);
  signal register0_q_net_x23: std_logic_vector(17 downto 0);
  signal register0_q_net_x24: std_logic_vector(17 downto 0);
  signal register0_q_net_x25: std_logic_vector(17 downto 0);
  signal register0_q_net_x26: std_logic_vector(17 downto 0);
  signal register0_q_net_x27: std_logic_vector(17 downto 0);
  signal register0_q_net_x28: std_logic_vector(17 downto 0);
  signal register0_q_net_x29: std_logic_vector(17 downto 0);
  signal register0_q_net_x30: std_logic_vector(17 downto 0);
  signal register0_q_net_x31: std_logic_vector(17 downto 0);
  signal register0_q_net_x32: std_logic_vector(17 downto 0);
  signal register0_q_net_x33: std_logic_vector(17 downto 0);
  signal register0_q_net_x34: std_logic;
  signal reinterpret1_output_port_net_x17: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x18: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x19: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x20: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x13: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x6: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x7: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x8: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net_x6: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net_x7: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net_x8: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net_x6: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net_x7: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net_x8: std_logic_vector(35 downto 0);
  signal sync_delay1_q_net_x3: std_logic;

begin
  ce_1_sg_x1024 <= ce_1;
  clk_1_sg_x1024 <= clk_1;
  register0_q_net_x18 <= pol0_in;
  register0_q_net_x20 <= pol10_in;
  register0_q_net_x21 <= pol11_in;
  register0_q_net_x22 <= pol12_in;
  register0_q_net_x23 <= pol13_in;
  register0_q_net_x24 <= pol14_in;
  register0_q_net_x25 <= pol15_in;
  register0_q_net_x19 <= pol1_in;
  register0_q_net_x26 <= pol2_in;
  register0_q_net_x27 <= pol3_in;
  register0_q_net_x28 <= pol4_in;
  register0_q_net_x29 <= pol5_in;
  register0_q_net_x30 <= pol6_in;
  register0_q_net_x31 <= pol7_in;
  register0_q_net_x32 <= pol8_in;
  register0_q_net_x33 <= pol9_in;
  constant2_op_net_x11 <= shift;
  register0_q_net_x34 <= sync;
  of_x0 <= logical1_y_net_x12;
  pol0_out <= reinterpret4_output_port_net_x5;
  pol10_out <= reinterpret2_output_port_net_x7;
  pol11_out <= reinterpret2_output_port_net_x8;
  pol12_out <= reinterpret1_output_port_net_x5;
  pol13_out <= reinterpret1_output_port_net_x18;
  pol14_out <= reinterpret1_output_port_net_x19;
  pol15_out <= reinterpret1_output_port_net_x20;
  pol1_out <= reinterpret4_output_port_net_x6;
  pol2_out <= reinterpret4_output_port_net_x7;
  pol3_out <= reinterpret4_output_port_net_x8;
  pol4_out <= reinterpret3_output_port_net_x5;
  pol5_out <= reinterpret3_output_port_net_x6;
  pol6_out <= reinterpret3_output_port_net_x7;
  pol7_out <= reinterpret3_output_port_net_x8;
  pol8_out <= reinterpret2_output_port_net_x5;
  pol9_out <= reinterpret2_output_port_net_x6;
  sync_out <= sync_delay1_q_net_x3;

  bi_real_unscr_4x_2d4efcbeb1: entity work.bi_real_unscr_4x_entity_2d4efcbeb1
    port map (
      ce_1 => ce_1_sg_x1024,
      clk_1 => clk_1_sg_x1024,
      even => reinterpret2_output_port_net_x13,
      odd => reinterpret1_output_port_net_x17,
      sync => delay0_q_net_x13,
      pol1_out => concatenate_y_net_x19,
      pol2_out => concatenate_y_net_x20,
      pol3_out => concatenate_y_net_x21,
      pol4_out => concatenate_y_net_x22,
      sync_out => sync_delay1_q_net_x3
    );

  biplex_core_ac16b64235: entity work.biplex_core_entity_ac16b64235
    port map (
      ce_1 => ce_1_sg_x1024,
      clk_1 => clk_1_sg_x1024,
      pol1 => concatenate_y_net_x5,
      pol2 => concatenate_y_net_x6,
      shift => constant2_op_net_x11,
      sync => register0_q_net_x34,
      of_x0 => logical1_y_net_x12,
      out1 => reinterpret2_output_port_net_x13,
      out2 => reinterpret1_output_port_net_x17,
      sync_out => delay0_q_net_x13
    );

  even_bussify_51616129c8: entity work.d_bussify_entity_9462440c59
    port map (
      in1 => concat_y_net_x4,
      in2 => concat_y_net_x6,
      in3 => concat_y_net_x8,
      in4 => concat_y_net_x10,
      bus_out => concatenate_y_net_x5
    );

  odd_bussify_5d1d735ff9: entity work.d_bussify_entity_9462440c59
    port map (
      in1 => concat_y_net_x5,
      in2 => concat_y_net_x7,
      in3 => concat_y_net_x9,
      in4 => concat_y_net_x11,
      bus_out => concatenate_y_net_x6
    );

  pol0_debus_d828ab344d: entity work.expand0_entity_faedf3e73c
    port map (
      bus_in => concatenate_y_net_x19,
      lsb_out1 => reinterpret1_output_port_net_x5,
      msb_out4 => reinterpret4_output_port_net_x5,
      out2 => reinterpret2_output_port_net_x5,
      out3 => reinterpret3_output_port_net_x5
    );

  pol1_debus_705a0dca95: entity work.expand0_entity_faedf3e73c
    port map (
      bus_in => concatenate_y_net_x20,
      lsb_out1 => reinterpret1_output_port_net_x18,
      msb_out4 => reinterpret4_output_port_net_x6,
      out2 => reinterpret2_output_port_net_x6,
      out3 => reinterpret3_output_port_net_x6
    );

  pol2_debus_8577c7851a: entity work.expand0_entity_faedf3e73c
    port map (
      bus_in => concatenate_y_net_x21,
      lsb_out1 => reinterpret1_output_port_net_x19,
      msb_out4 => reinterpret4_output_port_net_x7,
      out2 => reinterpret2_output_port_net_x7,
      out3 => reinterpret3_output_port_net_x7
    );

  pol3_debus_306dbbd940: entity work.expand0_entity_faedf3e73c
    port map (
      bus_in => concatenate_y_net_x22,
      lsb_out1 => reinterpret1_output_port_net_x20,
      msb_out4 => reinterpret4_output_port_net_x8,
      out2 => reinterpret2_output_port_net_x8,
      out3 => reinterpret3_output_port_net_x8
    );

  ri_to_c0_341239c3dd: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => register0_q_net_x19,
      re => register0_q_net_x18,
      c => concat_y_net_x4
    );

  ri_to_c1_a462e873ff: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => register0_q_net_x27,
      re => register0_q_net_x26,
      c => concat_y_net_x5
    );

  ri_to_c2_2966d0eae0: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => register0_q_net_x29,
      re => register0_q_net_x28,
      c => concat_y_net_x6
    );

  ri_to_c3_7b9fc26ea4: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => register0_q_net_x31,
      re => register0_q_net_x30,
      c => concat_y_net_x7
    );

  ri_to_c4_1b2a76c41d: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => register0_q_net_x33,
      re => register0_q_net_x32,
      c => concat_y_net_x8
    );

  ri_to_c5_c43995dc24: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => register0_q_net_x21,
      re => register0_q_net_x20,
      c => concat_y_net_x9
    );

  ri_to_c6_36fd2beb4e: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => register0_q_net_x23,
      re => register0_q_net_x22,
      c => concat_y_net_x10
    );

  ri_to_c7_3efdf8e67a: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => register0_q_net_x25,
      re => register0_q_net_x24,
      c => concat_y_net_x11
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/abus"

entity abus_entity_4e0b43e236 is
  port (
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    in3: in std_logic_vector(35 downto 0); 
    in4: in std_logic_vector(35 downto 0); 
    in5: in std_logic_vector(35 downto 0); 
    in6: in std_logic_vector(35 downto 0); 
    in7: in std_logic_vector(35 downto 0); 
    in8: in std_logic_vector(35 downto 0); 
    bus_out: out std_logic_vector(287 downto 0)
  );
end abus_entity_4e0b43e236;

architecture structural of abus_entity_4e0b43e236 is
  signal concatenate_y_net_x0: std_logic_vector(287 downto 0);
  signal register0_q_net_x10: std_logic_vector(35 downto 0);
  signal register0_q_net_x11: std_logic_vector(35 downto 0);
  signal register0_q_net_x12: std_logic_vector(35 downto 0);
  signal register0_q_net_x13: std_logic_vector(35 downto 0);
  signal register0_q_net_x14: std_logic_vector(35 downto 0);
  signal register0_q_net_x15: std_logic_vector(35 downto 0);
  signal register0_q_net_x8: std_logic_vector(35 downto 0);
  signal register0_q_net_x9: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(35 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(35 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(35 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(35 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(35 downto 0);

begin
  register0_q_net_x8 <= in1;
  register0_q_net_x9 <= in2;
  register0_q_net_x10 <= in3;
  register0_q_net_x11 <= in4;
  register0_q_net_x12 <= in5;
  register0_q_net_x13 <= in6;
  register0_q_net_x14 <= in7;
  register0_q_net_x15 <= in8;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_45fe083dcb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => register0_q_net_x8,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => register0_q_net_x9,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => register0_q_net_x10,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => register0_q_net_x11,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => register0_q_net_x12,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => register0_q_net_x13,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => register0_q_net_x14,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => register0_q_net_x15,
      output_port => reinterpret8_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/adebus2_0"

entity adebus2_0_entity_24ecc6e9de is
  port (
    bus_in: in std_logic_vector(71 downto 0); 
    lsb_out1: out std_logic_vector(35 downto 0); 
    msb_out2: out std_logic_vector(35 downto 0)
  );
end adebus2_0_entity_24ecc6e9de;

architecture structural of adebus2_0_entity_24ecc6e9de is
  signal reinterpret1_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(35 downto 0);
  signal slice1_y_net: std_logic_vector(35 downto 0);
  signal slice2_y_net: std_logic_vector(35 downto 0);

begin
  reinterpret2_output_port_net_x1 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out2 <= reinterpret2_output_port_net_x2;

  reinterpret1: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 35,
      x_width => 72,
      y_width => 36
    )
    port map (
      x => reinterpret2_output_port_net_x1,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 36,
      new_msb => 71,
      x_width => 72,
      y_width => 36
    )
    port map (
      x => reinterpret2_output_port_net_x1,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/bus_add/a_debus"

entity a_debus_entity_49512ad2c7 is
  port (
    bus_in: in std_logic_vector(287 downto 0); 
    lsb_out1: out std_logic_vector(17 downto 0); 
    msb_out16: out std_logic_vector(17 downto 0); 
    out10: out std_logic_vector(17 downto 0); 
    out11: out std_logic_vector(17 downto 0); 
    out12: out std_logic_vector(17 downto 0); 
    out13: out std_logic_vector(17 downto 0); 
    out14: out std_logic_vector(17 downto 0); 
    out15: out std_logic_vector(17 downto 0); 
    out2: out std_logic_vector(17 downto 0); 
    out3: out std_logic_vector(17 downto 0); 
    out4: out std_logic_vector(17 downto 0); 
    out5: out std_logic_vector(17 downto 0); 
    out6: out std_logic_vector(17 downto 0); 
    out7: out std_logic_vector(17 downto 0); 
    out8: out std_logic_vector(17 downto 0); 
    out9: out std_logic_vector(17 downto 0)
  );
end a_debus_entity_49512ad2c7;

architecture structural of a_debus_entity_49512ad2c7 is
  signal reinterpret10_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret11_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret12_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret13_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret14_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret15_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret16_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(287 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret9_output_port_net_x0: std_logic_vector(17 downto 0);
  signal slice10_y_net: std_logic_vector(17 downto 0);
  signal slice11_y_net: std_logic_vector(17 downto 0);
  signal slice12_y_net: std_logic_vector(17 downto 0);
  signal slice13_y_net: std_logic_vector(17 downto 0);
  signal slice14_y_net: std_logic_vector(17 downto 0);
  signal slice15_y_net: std_logic_vector(17 downto 0);
  signal slice16_y_net: std_logic_vector(17 downto 0);
  signal slice1_y_net: std_logic_vector(17 downto 0);
  signal slice2_y_net: std_logic_vector(17 downto 0);
  signal slice3_y_net: std_logic_vector(17 downto 0);
  signal slice4_y_net: std_logic_vector(17 downto 0);
  signal slice5_y_net: std_logic_vector(17 downto 0);
  signal slice6_y_net: std_logic_vector(17 downto 0);
  signal slice7_y_net: std_logic_vector(17 downto 0);
  signal slice8_y_net: std_logic_vector(17 downto 0);
  signal slice9_y_net: std_logic_vector(17 downto 0);

begin
  reinterpret1_output_port_net_x1 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x2;
  msb_out16 <= reinterpret16_output_port_net_x0;
  out10 <= reinterpret10_output_port_net_x0;
  out11 <= reinterpret11_output_port_net_x0;
  out12 <= reinterpret12_output_port_net_x0;
  out13 <= reinterpret13_output_port_net_x0;
  out14 <= reinterpret14_output_port_net_x0;
  out15 <= reinterpret15_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;
  out4 <= reinterpret4_output_port_net_x0;
  out5 <= reinterpret5_output_port_net_x0;
  out6 <= reinterpret6_output_port_net_x0;
  out7 <= reinterpret7_output_port_net_x0;
  out8 <= reinterpret8_output_port_net_x0;
  out9 <= reinterpret9_output_port_net_x0;

  reinterpret1: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  reinterpret10: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice10_y_net,
      output_port => reinterpret10_output_port_net_x0
    );

  reinterpret11: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice11_y_net,
      output_port => reinterpret11_output_port_net_x0
    );

  reinterpret12: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice12_y_net,
      output_port => reinterpret12_output_port_net_x0
    );

  reinterpret13: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice13_y_net,
      output_port => reinterpret13_output_port_net_x0
    );

  reinterpret14: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice14_y_net,
      output_port => reinterpret14_output_port_net_x0
    );

  reinterpret15: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice15_y_net,
      output_port => reinterpret15_output_port_net_x0
    );

  reinterpret16: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice16_y_net,
      output_port => reinterpret16_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  reinterpret5: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_y_net,
      output_port => reinterpret5_output_port_net_x0
    );

  reinterpret6: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret6_output_port_net_x0
    );

  reinterpret7: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret7_output_port_net_x0
    );

  reinterpret8: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret8_output_port_net_x0
    );

  reinterpret9: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice9_y_net,
      output_port => reinterpret9_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 288,
      y_width => 18
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice1_y_net
    );

  slice10: entity work.xlslice
    generic map (
      new_lsb => 162,
      new_msb => 179,
      x_width => 288,
      y_width => 18
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice10_y_net
    );

  slice11: entity work.xlslice
    generic map (
      new_lsb => 180,
      new_msb => 197,
      x_width => 288,
      y_width => 18
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice11_y_net
    );

  slice12: entity work.xlslice
    generic map (
      new_lsb => 198,
      new_msb => 215,
      x_width => 288,
      y_width => 18
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice12_y_net
    );

  slice13: entity work.xlslice
    generic map (
      new_lsb => 216,
      new_msb => 233,
      x_width => 288,
      y_width => 18
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice13_y_net
    );

  slice14: entity work.xlslice
    generic map (
      new_lsb => 234,
      new_msb => 251,
      x_width => 288,
      y_width => 18
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice14_y_net
    );

  slice15: entity work.xlslice
    generic map (
      new_lsb => 252,
      new_msb => 269,
      x_width => 288,
      y_width => 18
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice15_y_net
    );

  slice16: entity work.xlslice
    generic map (
      new_lsb => 270,
      new_msb => 287,
      x_width => 288,
      y_width => 18
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice16_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 35,
      x_width => 288,
      y_width => 18
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 36,
      new_msb => 53,
      x_width => 288,
      y_width => 18
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 54,
      new_msb => 71,
      x_width => 288,
      y_width => 18
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 72,
      new_msb => 89,
      x_width => 288,
      y_width => 18
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 90,
      new_msb => 107,
      x_width => 288,
      y_width => 18
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 108,
      new_msb => 125,
      x_width => 288,
      y_width => 18
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 126,
      new_msb => 143,
      x_width => 288,
      y_width => 18
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice8_y_net
    );

  slice9: entity work.xlslice
    generic map (
      new_lsb => 144,
      new_msb => 161,
      x_width => 288,
      y_width => 18
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice9_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/bus_add/op_bussify"

entity op_bussify_entity_a5157300a7 is
  port (
    in1: in std_logic_vector(19 downto 0); 
    in10: in std_logic_vector(19 downto 0); 
    in11: in std_logic_vector(19 downto 0); 
    in12: in std_logic_vector(19 downto 0); 
    in13: in std_logic_vector(19 downto 0); 
    in14: in std_logic_vector(19 downto 0); 
    in15: in std_logic_vector(19 downto 0); 
    in16: in std_logic_vector(19 downto 0); 
    in2: in std_logic_vector(19 downto 0); 
    in3: in std_logic_vector(19 downto 0); 
    in4: in std_logic_vector(19 downto 0); 
    in5: in std_logic_vector(19 downto 0); 
    in6: in std_logic_vector(19 downto 0); 
    in7: in std_logic_vector(19 downto 0); 
    in8: in std_logic_vector(19 downto 0); 
    in9: in std_logic_vector(19 downto 0); 
    bus_out: out std_logic_vector(319 downto 0)
  );
end op_bussify_entity_a5157300a7;

architecture structural of op_bussify_entity_a5157300a7 is
  signal addsub10_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub11_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub12_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub13_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub14_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub15_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub16_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub1_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub2_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub3_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub4_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub5_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub6_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub7_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub8_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub9_s_net_x0: std_logic_vector(19 downto 0);
  signal concatenate_y_net_x0: std_logic_vector(319 downto 0);
  signal reinterpret10_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret11_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret12_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret13_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret14_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret15_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret16_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret9_output_port_net: std_logic_vector(19 downto 0);

begin
  addsub1_s_net_x0 <= in1;
  addsub10_s_net_x0 <= in10;
  addsub11_s_net_x0 <= in11;
  addsub12_s_net_x0 <= in12;
  addsub13_s_net_x0 <= in13;
  addsub14_s_net_x0 <= in14;
  addsub15_s_net_x0 <= in15;
  addsub16_s_net_x0 <= in16;
  addsub2_s_net_x0 <= in2;
  addsub3_s_net_x0 <= in3;
  addsub4_s_net_x0 <= in4;
  addsub5_s_net_x0 <= in5;
  addsub6_s_net_x0 <= in6;
  addsub7_s_net_x0 <= in7;
  addsub8_s_net_x0 <= in8;
  addsub9_s_net_x0 <= in9;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_ac56edb97a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in10 => reinterpret11_output_port_net,
      in11 => reinterpret12_output_port_net,
      in12 => reinterpret13_output_port_net,
      in13 => reinterpret14_output_port_net,
      in14 => reinterpret15_output_port_net,
      in15 => reinterpret16_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      in8 => reinterpret9_output_port_net,
      in9 => reinterpret10_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub1_s_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret10: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub10_s_net_x0,
      output_port => reinterpret10_output_port_net
    );

  reinterpret11: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub11_s_net_x0,
      output_port => reinterpret11_output_port_net
    );

  reinterpret12: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub12_s_net_x0,
      output_port => reinterpret12_output_port_net
    );

  reinterpret13: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub13_s_net_x0,
      output_port => reinterpret13_output_port_net
    );

  reinterpret14: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub14_s_net_x0,
      output_port => reinterpret14_output_port_net
    );

  reinterpret15: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub15_s_net_x0,
      output_port => reinterpret15_output_port_net
    );

  reinterpret16: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub16_s_net_x0,
      output_port => reinterpret16_output_port_net
    );

  reinterpret2: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub2_s_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub3_s_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub4_s_net_x0,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub5_s_net_x0,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub6_s_net_x0,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub7_s_net_x0,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub8_s_net_x0,
      output_port => reinterpret8_output_port_net
    );

  reinterpret9: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub9_s_net_x0,
      output_port => reinterpret9_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/bus_add"

entity bus_add_entity_f396eec95c is
  port (
    a: in std_logic_vector(287 downto 0); 
    b: in std_logic_vector(303 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    dout: out std_logic_vector(319 downto 0)
  );
end bus_add_entity_f396eec95c;

architecture structural of bus_add_entity_f396eec95c is
  signal addsub10_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub11_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub12_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub13_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub14_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub15_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub16_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub1_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub2_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub3_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub4_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub5_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub6_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub7_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub8_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub9_s_net_x0: std_logic_vector(19 downto 0);
  signal ce_1_sg_x1025: std_logic;
  signal clk_1_sg_x1025: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(303 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(319 downto 0);
  signal reinterpret10_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret10_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret11_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret11_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret12_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret12_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret13_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret13_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret14_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret14_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret15_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret15_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret16_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret16_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(287 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret5_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret6_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret7_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret8_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret9_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret9_output_port_net_x1: std_logic_vector(18 downto 0);

begin
  reinterpret1_output_port_net_x3 <= a;
  concatenate_y_net_x2 <= b;
  ce_1_sg_x1025 <= ce_1;
  clk_1_sg_x1025 <= clk_1;
  dout <= concatenate_y_net_x3;

  a_debus_49512ad2c7: entity work.a_debus_entity_49512ad2c7
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out16 => reinterpret16_output_port_net_x0,
      out10 => reinterpret10_output_port_net_x0,
      out11 => reinterpret11_output_port_net_x0,
      out12 => reinterpret12_output_port_net_x0,
      out13 => reinterpret13_output_port_net_x0,
      out14 => reinterpret14_output_port_net_x0,
      out15 => reinterpret15_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0,
      out4 => reinterpret4_output_port_net_x0,
      out5 => reinterpret5_output_port_net_x0,
      out6 => reinterpret6_output_port_net_x0,
      out7 => reinterpret7_output_port_net_x0,
      out8 => reinterpret8_output_port_net_x0,
      out9 => reinterpret9_output_port_net_x0
    );

  addsub1: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret16_output_port_net_x0,
      b => reinterpret16_output_port_net_x1,
      ce => ce_1_sg_x1025,
      clk => clk_1_sg_x1025,
      clr => '0',
      s => addsub1_s_net_x0
    );

  addsub10: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret7_output_port_net_x0,
      b => reinterpret7_output_port_net_x1,
      ce => ce_1_sg_x1025,
      clk => clk_1_sg_x1025,
      clr => '0',
      s => addsub10_s_net_x0
    );

  addsub11: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret6_output_port_net_x0,
      b => reinterpret6_output_port_net_x1,
      ce => ce_1_sg_x1025,
      clk => clk_1_sg_x1025,
      clr => '0',
      s => addsub11_s_net_x0
    );

  addsub12: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret5_output_port_net_x0,
      b => reinterpret5_output_port_net_x1,
      ce => ce_1_sg_x1025,
      clk => clk_1_sg_x1025,
      clr => '0',
      s => addsub12_s_net_x0
    );

  addsub13: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret4_output_port_net_x0,
      b => reinterpret4_output_port_net_x1,
      ce => ce_1_sg_x1025,
      clk => clk_1_sg_x1025,
      clr => '0',
      s => addsub13_s_net_x0
    );

  addsub14: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret3_output_port_net_x0,
      b => reinterpret3_output_port_net_x1,
      ce => ce_1_sg_x1025,
      clk => clk_1_sg_x1025,
      clr => '0',
      s => addsub14_s_net_x0
    );

  addsub15: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret2_output_port_net_x0,
      b => reinterpret2_output_port_net_x1,
      ce => ce_1_sg_x1025,
      clk => clk_1_sg_x1025,
      clr => '0',
      s => addsub15_s_net_x0
    );

  addsub16: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret1_output_port_net_x2,
      b => reinterpret1_output_port_net_x0,
      ce => ce_1_sg_x1025,
      clk => clk_1_sg_x1025,
      clr => '0',
      s => addsub16_s_net_x0
    );

  addsub2: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret15_output_port_net_x0,
      b => reinterpret15_output_port_net_x1,
      ce => ce_1_sg_x1025,
      clk => clk_1_sg_x1025,
      clr => '0',
      s => addsub2_s_net_x0
    );

  addsub3: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret14_output_port_net_x0,
      b => reinterpret14_output_port_net_x1,
      ce => ce_1_sg_x1025,
      clk => clk_1_sg_x1025,
      clr => '0',
      s => addsub3_s_net_x0
    );

  addsub4: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret13_output_port_net_x0,
      b => reinterpret13_output_port_net_x1,
      ce => ce_1_sg_x1025,
      clk => clk_1_sg_x1025,
      clr => '0',
      s => addsub4_s_net_x0
    );

  addsub5: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret12_output_port_net_x0,
      b => reinterpret12_output_port_net_x1,
      ce => ce_1_sg_x1025,
      clk => clk_1_sg_x1025,
      clr => '0',
      s => addsub5_s_net_x0
    );

  addsub6: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret11_output_port_net_x0,
      b => reinterpret11_output_port_net_x1,
      ce => ce_1_sg_x1025,
      clk => clk_1_sg_x1025,
      clr => '0',
      s => addsub6_s_net_x0
    );

  addsub7: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret10_output_port_net_x0,
      b => reinterpret10_output_port_net_x1,
      ce => ce_1_sg_x1025,
      clk => clk_1_sg_x1025,
      clr => '0',
      s => addsub7_s_net_x0
    );

  addsub8: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret9_output_port_net_x0,
      b => reinterpret9_output_port_net_x1,
      ce => ce_1_sg_x1025,
      clk => clk_1_sg_x1025,
      clr => '0',
      s => addsub8_s_net_x0
    );

  addsub9: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret8_output_port_net_x0,
      b => reinterpret8_output_port_net_x1,
      ce => ce_1_sg_x1025,
      clk => clk_1_sg_x1025,
      clr => '0',
      s => addsub9_s_net_x0
    );

  b_debus_27d55bc0a4: entity work.debus_entity_746e40ae9b
    port map (
      bus_in => concatenate_y_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out16 => reinterpret16_output_port_net_x1,
      out10 => reinterpret10_output_port_net_x1,
      out11 => reinterpret11_output_port_net_x1,
      out12 => reinterpret12_output_port_net_x1,
      out13 => reinterpret13_output_port_net_x1,
      out14 => reinterpret14_output_port_net_x1,
      out15 => reinterpret15_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1,
      out4 => reinterpret4_output_port_net_x1,
      out5 => reinterpret5_output_port_net_x1,
      out6 => reinterpret6_output_port_net_x1,
      out7 => reinterpret7_output_port_net_x1,
      out8 => reinterpret8_output_port_net_x1,
      out9 => reinterpret9_output_port_net_x1
    );

  op_bussify_a5157300a7: entity work.op_bussify_entity_a5157300a7
    port map (
      in1 => addsub1_s_net_x0,
      in10 => addsub10_s_net_x0,
      in11 => addsub11_s_net_x0,
      in12 => addsub12_s_net_x0,
      in13 => addsub13_s_net_x0,
      in14 => addsub14_s_net_x0,
      in15 => addsub15_s_net_x0,
      in16 => addsub16_s_net_x0,
      in2 => addsub2_s_net_x0,
      in3 => addsub3_s_net_x0,
      in4 => addsub4_s_net_x0,
      in5 => addsub5_s_net_x0,
      in6 => addsub6_s_net_x0,
      in7 => addsub7_s_net_x0,
      in8 => addsub8_s_net_x0,
      in9 => addsub9_s_net_x0,
      bus_out => concatenate_y_net_x3
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/bus_convert/bussify"

entity bussify_entity_38abc2832f is
  port (
    in1: in std_logic_vector(17 downto 0); 
    in10: in std_logic_vector(17 downto 0); 
    in11: in std_logic_vector(17 downto 0); 
    in12: in std_logic_vector(17 downto 0); 
    in13: in std_logic_vector(17 downto 0); 
    in14: in std_logic_vector(17 downto 0); 
    in15: in std_logic_vector(17 downto 0); 
    in16: in std_logic_vector(17 downto 0); 
    in17: in std_logic_vector(17 downto 0); 
    in18: in std_logic_vector(17 downto 0); 
    in19: in std_logic_vector(17 downto 0); 
    in2: in std_logic_vector(17 downto 0); 
    in20: in std_logic_vector(17 downto 0); 
    in21: in std_logic_vector(17 downto 0); 
    in22: in std_logic_vector(17 downto 0); 
    in23: in std_logic_vector(17 downto 0); 
    in24: in std_logic_vector(17 downto 0); 
    in25: in std_logic_vector(17 downto 0); 
    in26: in std_logic_vector(17 downto 0); 
    in27: in std_logic_vector(17 downto 0); 
    in28: in std_logic_vector(17 downto 0); 
    in29: in std_logic_vector(17 downto 0); 
    in3: in std_logic_vector(17 downto 0); 
    in30: in std_logic_vector(17 downto 0); 
    in31: in std_logic_vector(17 downto 0); 
    in32: in std_logic_vector(17 downto 0); 
    in4: in std_logic_vector(17 downto 0); 
    in5: in std_logic_vector(17 downto 0); 
    in6: in std_logic_vector(17 downto 0); 
    in7: in std_logic_vector(17 downto 0); 
    in8: in std_logic_vector(17 downto 0); 
    in9: in std_logic_vector(17 downto 0); 
    bus_out: out std_logic_vector(575 downto 0)
  );
end bussify_entity_38abc2832f;

architecture structural of bussify_entity_38abc2832f is
  signal adder_s_net_x31: std_logic_vector(17 downto 0);
  signal adder_s_net_x32: std_logic_vector(17 downto 0);
  signal adder_s_net_x33: std_logic_vector(17 downto 0);
  signal adder_s_net_x34: std_logic_vector(17 downto 0);
  signal adder_s_net_x35: std_logic_vector(17 downto 0);
  signal adder_s_net_x36: std_logic_vector(17 downto 0);
  signal adder_s_net_x37: std_logic_vector(17 downto 0);
  signal adder_s_net_x38: std_logic_vector(17 downto 0);
  signal adder_s_net_x39: std_logic_vector(17 downto 0);
  signal adder_s_net_x40: std_logic_vector(17 downto 0);
  signal adder_s_net_x41: std_logic_vector(17 downto 0);
  signal adder_s_net_x42: std_logic_vector(17 downto 0);
  signal adder_s_net_x43: std_logic_vector(17 downto 0);
  signal adder_s_net_x44: std_logic_vector(17 downto 0);
  signal adder_s_net_x45: std_logic_vector(17 downto 0);
  signal adder_s_net_x46: std_logic_vector(17 downto 0);
  signal adder_s_net_x47: std_logic_vector(17 downto 0);
  signal adder_s_net_x48: std_logic_vector(17 downto 0);
  signal adder_s_net_x49: std_logic_vector(17 downto 0);
  signal adder_s_net_x50: std_logic_vector(17 downto 0);
  signal adder_s_net_x51: std_logic_vector(17 downto 0);
  signal adder_s_net_x52: std_logic_vector(17 downto 0);
  signal adder_s_net_x53: std_logic_vector(17 downto 0);
  signal adder_s_net_x54: std_logic_vector(17 downto 0);
  signal adder_s_net_x55: std_logic_vector(17 downto 0);
  signal adder_s_net_x56: std_logic_vector(17 downto 0);
  signal adder_s_net_x57: std_logic_vector(17 downto 0);
  signal adder_s_net_x58: std_logic_vector(17 downto 0);
  signal adder_s_net_x59: std_logic_vector(17 downto 0);
  signal adder_s_net_x60: std_logic_vector(17 downto 0);
  signal adder_s_net_x61: std_logic_vector(17 downto 0);
  signal adder_s_net_x62: std_logic_vector(17 downto 0);
  signal concatenate_y_net_x0: std_logic_vector(575 downto 0);
  signal reinterpret10_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret11_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret12_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret13_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret14_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret15_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret16_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret17_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret18_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret19_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret20_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret21_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret22_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret23_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret24_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret25_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret26_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret27_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret28_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret29_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret30_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret31_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret32_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret9_output_port_net: std_logic_vector(17 downto 0);

begin
  adder_s_net_x31 <= in1;
  adder_s_net_x32 <= in10;
  adder_s_net_x33 <= in11;
  adder_s_net_x34 <= in12;
  adder_s_net_x35 <= in13;
  adder_s_net_x36 <= in14;
  adder_s_net_x37 <= in15;
  adder_s_net_x38 <= in16;
  adder_s_net_x39 <= in17;
  adder_s_net_x40 <= in18;
  adder_s_net_x41 <= in19;
  adder_s_net_x42 <= in2;
  adder_s_net_x43 <= in20;
  adder_s_net_x44 <= in21;
  adder_s_net_x45 <= in22;
  adder_s_net_x46 <= in23;
  adder_s_net_x47 <= in24;
  adder_s_net_x48 <= in25;
  adder_s_net_x49 <= in26;
  adder_s_net_x50 <= in27;
  adder_s_net_x51 <= in28;
  adder_s_net_x52 <= in29;
  adder_s_net_x53 <= in3;
  adder_s_net_x54 <= in30;
  adder_s_net_x55 <= in31;
  adder_s_net_x56 <= in32;
  adder_s_net_x57 <= in4;
  adder_s_net_x58 <= in5;
  adder_s_net_x59 <= in6;
  adder_s_net_x60 <= in7;
  adder_s_net_x61 <= in8;
  adder_s_net_x62 <= in9;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_926d9060d2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in10 => reinterpret11_output_port_net,
      in11 => reinterpret12_output_port_net,
      in12 => reinterpret13_output_port_net,
      in13 => reinterpret14_output_port_net,
      in14 => reinterpret15_output_port_net,
      in15 => reinterpret16_output_port_net,
      in16 => reinterpret17_output_port_net,
      in17 => reinterpret18_output_port_net,
      in18 => reinterpret19_output_port_net,
      in19 => reinterpret20_output_port_net,
      in2 => reinterpret3_output_port_net,
      in20 => reinterpret21_output_port_net,
      in21 => reinterpret22_output_port_net,
      in22 => reinterpret23_output_port_net,
      in23 => reinterpret24_output_port_net,
      in24 => reinterpret25_output_port_net,
      in25 => reinterpret26_output_port_net,
      in26 => reinterpret27_output_port_net,
      in27 => reinterpret28_output_port_net,
      in28 => reinterpret29_output_port_net,
      in29 => reinterpret30_output_port_net,
      in3 => reinterpret4_output_port_net,
      in30 => reinterpret31_output_port_net,
      in31 => reinterpret32_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      in8 => reinterpret9_output_port_net,
      in9 => reinterpret10_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x31,
      output_port => reinterpret1_output_port_net
    );

  reinterpret10: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x32,
      output_port => reinterpret10_output_port_net
    );

  reinterpret11: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x33,
      output_port => reinterpret11_output_port_net
    );

  reinterpret12: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x34,
      output_port => reinterpret12_output_port_net
    );

  reinterpret13: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x35,
      output_port => reinterpret13_output_port_net
    );

  reinterpret14: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x36,
      output_port => reinterpret14_output_port_net
    );

  reinterpret15: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x37,
      output_port => reinterpret15_output_port_net
    );

  reinterpret16: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x38,
      output_port => reinterpret16_output_port_net
    );

  reinterpret17: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x39,
      output_port => reinterpret17_output_port_net
    );

  reinterpret18: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x40,
      output_port => reinterpret18_output_port_net
    );

  reinterpret19: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x41,
      output_port => reinterpret19_output_port_net
    );

  reinterpret2: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x42,
      output_port => reinterpret2_output_port_net
    );

  reinterpret20: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x43,
      output_port => reinterpret20_output_port_net
    );

  reinterpret21: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x44,
      output_port => reinterpret21_output_port_net
    );

  reinterpret22: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x45,
      output_port => reinterpret22_output_port_net
    );

  reinterpret23: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x46,
      output_port => reinterpret23_output_port_net
    );

  reinterpret24: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x47,
      output_port => reinterpret24_output_port_net
    );

  reinterpret25: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x48,
      output_port => reinterpret25_output_port_net
    );

  reinterpret26: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x49,
      output_port => reinterpret26_output_port_net
    );

  reinterpret27: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x50,
      output_port => reinterpret27_output_port_net
    );

  reinterpret28: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x51,
      output_port => reinterpret28_output_port_net
    );

  reinterpret29: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x52,
      output_port => reinterpret29_output_port_net
    );

  reinterpret3: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x53,
      output_port => reinterpret3_output_port_net
    );

  reinterpret30: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x54,
      output_port => reinterpret30_output_port_net
    );

  reinterpret31: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x55,
      output_port => reinterpret31_output_port_net
    );

  reinterpret32: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x56,
      output_port => reinterpret32_output_port_net
    );

  reinterpret4: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x57,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x58,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x59,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x60,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x61,
      output_port => reinterpret8_output_port_net
    );

  reinterpret9: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x62,
      output_port => reinterpret9_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/bus_convert/debus"

entity debus_entity_eef6c83460 is
  port (
    bus_in: in std_logic_vector(671 downto 0); 
    lsb_out1: out std_logic_vector(20 downto 0); 
    msb_out32: out std_logic_vector(20 downto 0); 
    out10: out std_logic_vector(20 downto 0); 
    out11: out std_logic_vector(20 downto 0); 
    out12: out std_logic_vector(20 downto 0); 
    out13: out std_logic_vector(20 downto 0); 
    out14: out std_logic_vector(20 downto 0); 
    out15: out std_logic_vector(20 downto 0); 
    out16: out std_logic_vector(20 downto 0); 
    out17: out std_logic_vector(20 downto 0); 
    out18: out std_logic_vector(20 downto 0); 
    out19: out std_logic_vector(20 downto 0); 
    out2: out std_logic_vector(20 downto 0); 
    out20: out std_logic_vector(20 downto 0); 
    out21: out std_logic_vector(20 downto 0); 
    out22: out std_logic_vector(20 downto 0); 
    out23: out std_logic_vector(20 downto 0); 
    out24: out std_logic_vector(20 downto 0); 
    out25: out std_logic_vector(20 downto 0); 
    out26: out std_logic_vector(20 downto 0); 
    out27: out std_logic_vector(20 downto 0); 
    out28: out std_logic_vector(20 downto 0); 
    out29: out std_logic_vector(20 downto 0); 
    out3: out std_logic_vector(20 downto 0); 
    out30: out std_logic_vector(20 downto 0); 
    out31: out std_logic_vector(20 downto 0); 
    out4: out std_logic_vector(20 downto 0); 
    out5: out std_logic_vector(20 downto 0); 
    out6: out std_logic_vector(20 downto 0); 
    out7: out std_logic_vector(20 downto 0); 
    out8: out std_logic_vector(20 downto 0); 
    out9: out std_logic_vector(20 downto 0)
  );
end debus_entity_eef6c83460;

architecture structural of debus_entity_eef6c83460 is
  signal concatenate_y_net_x0: std_logic_vector(671 downto 0);
  signal reinterpret10_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret11_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret12_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret13_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret14_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret15_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret16_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret17_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret18_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret19_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret20_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret21_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret22_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret23_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret24_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret25_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret26_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret27_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret28_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret29_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret30_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret31_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret32_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret5_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret6_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret7_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret8_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret9_output_port_net_x2: std_logic_vector(20 downto 0);
  signal slice10_y_net: std_logic_vector(20 downto 0);
  signal slice11_y_net: std_logic_vector(20 downto 0);
  signal slice12_y_net: std_logic_vector(20 downto 0);
  signal slice13_y_net: std_logic_vector(20 downto 0);
  signal slice14_y_net: std_logic_vector(20 downto 0);
  signal slice15_y_net: std_logic_vector(20 downto 0);
  signal slice16_y_net: std_logic_vector(20 downto 0);
  signal slice17_y_net: std_logic_vector(20 downto 0);
  signal slice18_y_net: std_logic_vector(20 downto 0);
  signal slice19_y_net: std_logic_vector(20 downto 0);
  signal slice1_y_net: std_logic_vector(20 downto 0);
  signal slice20_y_net: std_logic_vector(20 downto 0);
  signal slice21_y_net: std_logic_vector(20 downto 0);
  signal slice22_y_net: std_logic_vector(20 downto 0);
  signal slice23_y_net: std_logic_vector(20 downto 0);
  signal slice24_y_net: std_logic_vector(20 downto 0);
  signal slice25_y_net: std_logic_vector(20 downto 0);
  signal slice26_y_net: std_logic_vector(20 downto 0);
  signal slice27_y_net: std_logic_vector(20 downto 0);
  signal slice28_y_net: std_logic_vector(20 downto 0);
  signal slice29_y_net: std_logic_vector(20 downto 0);
  signal slice2_y_net: std_logic_vector(20 downto 0);
  signal slice30_y_net: std_logic_vector(20 downto 0);
  signal slice31_y_net: std_logic_vector(20 downto 0);
  signal slice32_y_net: std_logic_vector(20 downto 0);
  signal slice3_y_net: std_logic_vector(20 downto 0);
  signal slice4_y_net: std_logic_vector(20 downto 0);
  signal slice5_y_net: std_logic_vector(20 downto 0);
  signal slice6_y_net: std_logic_vector(20 downto 0);
  signal slice7_y_net: std_logic_vector(20 downto 0);
  signal slice8_y_net: std_logic_vector(20 downto 0);
  signal slice9_y_net: std_logic_vector(20 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x2;
  msb_out32 <= reinterpret32_output_port_net_x2;
  out10 <= reinterpret10_output_port_net_x2;
  out11 <= reinterpret11_output_port_net_x2;
  out12 <= reinterpret12_output_port_net_x2;
  out13 <= reinterpret13_output_port_net_x2;
  out14 <= reinterpret14_output_port_net_x2;
  out15 <= reinterpret15_output_port_net_x2;
  out16 <= reinterpret16_output_port_net_x2;
  out17 <= reinterpret17_output_port_net_x2;
  out18 <= reinterpret18_output_port_net_x2;
  out19 <= reinterpret19_output_port_net_x2;
  out2 <= reinterpret2_output_port_net_x2;
  out20 <= reinterpret20_output_port_net_x2;
  out21 <= reinterpret21_output_port_net_x2;
  out22 <= reinterpret22_output_port_net_x2;
  out23 <= reinterpret23_output_port_net_x2;
  out24 <= reinterpret24_output_port_net_x2;
  out25 <= reinterpret25_output_port_net_x2;
  out26 <= reinterpret26_output_port_net_x2;
  out27 <= reinterpret27_output_port_net_x2;
  out28 <= reinterpret28_output_port_net_x2;
  out29 <= reinterpret29_output_port_net_x2;
  out3 <= reinterpret3_output_port_net_x2;
  out30 <= reinterpret30_output_port_net_x2;
  out31 <= reinterpret31_output_port_net_x2;
  out4 <= reinterpret4_output_port_net_x2;
  out5 <= reinterpret5_output_port_net_x2;
  out6 <= reinterpret6_output_port_net_x2;
  out7 <= reinterpret7_output_port_net_x2;
  out8 <= reinterpret8_output_port_net_x2;
  out9 <= reinterpret9_output_port_net_x2;

  reinterpret1: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  reinterpret10: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice10_y_net,
      output_port => reinterpret10_output_port_net_x2
    );

  reinterpret11: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice11_y_net,
      output_port => reinterpret11_output_port_net_x2
    );

  reinterpret12: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice12_y_net,
      output_port => reinterpret12_output_port_net_x2
    );

  reinterpret13: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice13_y_net,
      output_port => reinterpret13_output_port_net_x2
    );

  reinterpret14: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice14_y_net,
      output_port => reinterpret14_output_port_net_x2
    );

  reinterpret15: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice15_y_net,
      output_port => reinterpret15_output_port_net_x2
    );

  reinterpret16: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice16_y_net,
      output_port => reinterpret16_output_port_net_x2
    );

  reinterpret17: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice17_y_net,
      output_port => reinterpret17_output_port_net_x2
    );

  reinterpret18: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice18_y_net,
      output_port => reinterpret18_output_port_net_x2
    );

  reinterpret19: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice19_y_net,
      output_port => reinterpret19_output_port_net_x2
    );

  reinterpret2: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x2
    );

  reinterpret20: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice20_y_net,
      output_port => reinterpret20_output_port_net_x2
    );

  reinterpret21: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice21_y_net,
      output_port => reinterpret21_output_port_net_x2
    );

  reinterpret22: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice22_y_net,
      output_port => reinterpret22_output_port_net_x2
    );

  reinterpret23: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice23_y_net,
      output_port => reinterpret23_output_port_net_x2
    );

  reinterpret24: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice24_y_net,
      output_port => reinterpret24_output_port_net_x2
    );

  reinterpret25: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice25_y_net,
      output_port => reinterpret25_output_port_net_x2
    );

  reinterpret26: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice26_y_net,
      output_port => reinterpret26_output_port_net_x2
    );

  reinterpret27: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice27_y_net,
      output_port => reinterpret27_output_port_net_x2
    );

  reinterpret28: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice28_y_net,
      output_port => reinterpret28_output_port_net_x2
    );

  reinterpret29: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice29_y_net,
      output_port => reinterpret29_output_port_net_x2
    );

  reinterpret3: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x2
    );

  reinterpret30: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice30_y_net,
      output_port => reinterpret30_output_port_net_x2
    );

  reinterpret31: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice31_y_net,
      output_port => reinterpret31_output_port_net_x2
    );

  reinterpret32: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice32_y_net,
      output_port => reinterpret32_output_port_net_x2
    );

  reinterpret4: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x2
    );

  reinterpret5: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_y_net,
      output_port => reinterpret5_output_port_net_x2
    );

  reinterpret6: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret6_output_port_net_x2
    );

  reinterpret7: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret7_output_port_net_x2
    );

  reinterpret8: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret8_output_port_net_x2
    );

  reinterpret9: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice9_y_net,
      output_port => reinterpret9_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 20,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice10: entity work.xlslice
    generic map (
      new_lsb => 189,
      new_msb => 209,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice10_y_net
    );

  slice11: entity work.xlslice
    generic map (
      new_lsb => 210,
      new_msb => 230,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice11_y_net
    );

  slice12: entity work.xlslice
    generic map (
      new_lsb => 231,
      new_msb => 251,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice12_y_net
    );

  slice13: entity work.xlslice
    generic map (
      new_lsb => 252,
      new_msb => 272,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice13_y_net
    );

  slice14: entity work.xlslice
    generic map (
      new_lsb => 273,
      new_msb => 293,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice14_y_net
    );

  slice15: entity work.xlslice
    generic map (
      new_lsb => 294,
      new_msb => 314,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice15_y_net
    );

  slice16: entity work.xlslice
    generic map (
      new_lsb => 315,
      new_msb => 335,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice16_y_net
    );

  slice17: entity work.xlslice
    generic map (
      new_lsb => 336,
      new_msb => 356,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice17_y_net
    );

  slice18: entity work.xlslice
    generic map (
      new_lsb => 357,
      new_msb => 377,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice18_y_net
    );

  slice19: entity work.xlslice
    generic map (
      new_lsb => 378,
      new_msb => 398,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice19_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 21,
      new_msb => 41,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

  slice20: entity work.xlslice
    generic map (
      new_lsb => 399,
      new_msb => 419,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice20_y_net
    );

  slice21: entity work.xlslice
    generic map (
      new_lsb => 420,
      new_msb => 440,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice21_y_net
    );

  slice22: entity work.xlslice
    generic map (
      new_lsb => 441,
      new_msb => 461,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice22_y_net
    );

  slice23: entity work.xlslice
    generic map (
      new_lsb => 462,
      new_msb => 482,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice23_y_net
    );

  slice24: entity work.xlslice
    generic map (
      new_lsb => 483,
      new_msb => 503,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice24_y_net
    );

  slice25: entity work.xlslice
    generic map (
      new_lsb => 504,
      new_msb => 524,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice25_y_net
    );

  slice26: entity work.xlslice
    generic map (
      new_lsb => 525,
      new_msb => 545,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice26_y_net
    );

  slice27: entity work.xlslice
    generic map (
      new_lsb => 546,
      new_msb => 566,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice27_y_net
    );

  slice28: entity work.xlslice
    generic map (
      new_lsb => 567,
      new_msb => 587,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice28_y_net
    );

  slice29: entity work.xlslice
    generic map (
      new_lsb => 588,
      new_msb => 608,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice29_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 42,
      new_msb => 62,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice3_y_net
    );

  slice30: entity work.xlslice
    generic map (
      new_lsb => 609,
      new_msb => 629,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice30_y_net
    );

  slice31: entity work.xlslice
    generic map (
      new_lsb => 630,
      new_msb => 650,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice31_y_net
    );

  slice32: entity work.xlslice
    generic map (
      new_lsb => 651,
      new_msb => 671,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice32_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 63,
      new_msb => 83,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 84,
      new_msb => 104,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 105,
      new_msb => 125,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 126,
      new_msb => 146,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 147,
      new_msb => 167,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice8_y_net
    );

  slice9: entity work.xlslice
    generic map (
      new_lsb => 168,
      new_msb => 188,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice9_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/bus_convert/of_bussify"

entity of_bussify_entity_7614a67812 is
  port (
    in1: in std_logic; 
    in10: in std_logic; 
    in11: in std_logic; 
    in12: in std_logic; 
    in13: in std_logic; 
    in14: in std_logic; 
    in15: in std_logic; 
    in16: in std_logic; 
    in17: in std_logic; 
    in18: in std_logic; 
    in19: in std_logic; 
    in2: in std_logic; 
    in20: in std_logic; 
    in21: in std_logic; 
    in22: in std_logic; 
    in23: in std_logic; 
    in24: in std_logic; 
    in25: in std_logic; 
    in26: in std_logic; 
    in27: in std_logic; 
    in28: in std_logic; 
    in29: in std_logic; 
    in3: in std_logic; 
    in30: in std_logic; 
    in31: in std_logic; 
    in32: in std_logic; 
    in4: in std_logic; 
    in5: in std_logic; 
    in6: in std_logic; 
    in7: in std_logic; 
    in8: in std_logic; 
    in9: in std_logic; 
    bus_out: out std_logic_vector(31 downto 0)
  );
end of_bussify_entity_7614a67812;

architecture structural of of_bussify_entity_7614a67812 is
  signal and_y_net_x32: std_logic;
  signal and_y_net_x33: std_logic;
  signal and_y_net_x34: std_logic;
  signal and_y_net_x35: std_logic;
  signal and_y_net_x36: std_logic;
  signal and_y_net_x37: std_logic;
  signal and_y_net_x38: std_logic;
  signal and_y_net_x39: std_logic;
  signal and_y_net_x40: std_logic;
  signal and_y_net_x41: std_logic;
  signal and_y_net_x42: std_logic;
  signal and_y_net_x43: std_logic;
  signal and_y_net_x44: std_logic;
  signal and_y_net_x45: std_logic;
  signal and_y_net_x46: std_logic;
  signal and_y_net_x47: std_logic;
  signal and_y_net_x48: std_logic;
  signal and_y_net_x49: std_logic;
  signal and_y_net_x50: std_logic;
  signal and_y_net_x51: std_logic;
  signal and_y_net_x52: std_logic;
  signal and_y_net_x53: std_logic;
  signal and_y_net_x54: std_logic;
  signal and_y_net_x55: std_logic;
  signal and_y_net_x56: std_logic;
  signal and_y_net_x57: std_logic;
  signal and_y_net_x58: std_logic;
  signal and_y_net_x59: std_logic;
  signal and_y_net_x60: std_logic;
  signal and_y_net_x61: std_logic;
  signal and_y_net_x62: std_logic;
  signal and_y_net_x63: std_logic;
  signal concatenate_y_net_x0: std_logic_vector(31 downto 0);
  signal reinterpret10_output_port_net: std_logic;
  signal reinterpret11_output_port_net: std_logic;
  signal reinterpret12_output_port_net: std_logic;
  signal reinterpret13_output_port_net: std_logic;
  signal reinterpret14_output_port_net: std_logic;
  signal reinterpret15_output_port_net: std_logic;
  signal reinterpret16_output_port_net: std_logic;
  signal reinterpret17_output_port_net: std_logic;
  signal reinterpret18_output_port_net: std_logic;
  signal reinterpret19_output_port_net: std_logic;
  signal reinterpret1_output_port_net: std_logic;
  signal reinterpret20_output_port_net: std_logic;
  signal reinterpret21_output_port_net: std_logic;
  signal reinterpret22_output_port_net: std_logic;
  signal reinterpret23_output_port_net: std_logic;
  signal reinterpret24_output_port_net: std_logic;
  signal reinterpret25_output_port_net: std_logic;
  signal reinterpret26_output_port_net: std_logic;
  signal reinterpret27_output_port_net: std_logic;
  signal reinterpret28_output_port_net: std_logic;
  signal reinterpret29_output_port_net: std_logic;
  signal reinterpret2_output_port_net: std_logic;
  signal reinterpret30_output_port_net: std_logic;
  signal reinterpret31_output_port_net: std_logic;
  signal reinterpret32_output_port_net: std_logic;
  signal reinterpret3_output_port_net: std_logic;
  signal reinterpret4_output_port_net: std_logic;
  signal reinterpret5_output_port_net: std_logic;
  signal reinterpret6_output_port_net: std_logic;
  signal reinterpret7_output_port_net: std_logic;
  signal reinterpret8_output_port_net: std_logic;
  signal reinterpret9_output_port_net: std_logic;

begin
  and_y_net_x32 <= in1;
  and_y_net_x33 <= in10;
  and_y_net_x34 <= in11;
  and_y_net_x35 <= in12;
  and_y_net_x36 <= in13;
  and_y_net_x37 <= in14;
  and_y_net_x38 <= in15;
  and_y_net_x39 <= in16;
  and_y_net_x40 <= in17;
  and_y_net_x41 <= in18;
  and_y_net_x42 <= in19;
  and_y_net_x43 <= in2;
  and_y_net_x44 <= in20;
  and_y_net_x45 <= in21;
  and_y_net_x46 <= in22;
  and_y_net_x47 <= in23;
  and_y_net_x48 <= in24;
  and_y_net_x49 <= in25;
  and_y_net_x50 <= in26;
  and_y_net_x51 <= in27;
  and_y_net_x52 <= in28;
  and_y_net_x53 <= in29;
  and_y_net_x54 <= in3;
  and_y_net_x55 <= in30;
  and_y_net_x56 <= in31;
  and_y_net_x57 <= in32;
  and_y_net_x58 <= in4;
  and_y_net_x59 <= in5;
  and_y_net_x60 <= in6;
  and_y_net_x61 <= in7;
  and_y_net_x62 <= in8;
  and_y_net_x63 <= in9;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_9ac2145b44
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => reinterpret1_output_port_net,
      in1(0) => reinterpret2_output_port_net,
      in10(0) => reinterpret11_output_port_net,
      in11(0) => reinterpret12_output_port_net,
      in12(0) => reinterpret13_output_port_net,
      in13(0) => reinterpret14_output_port_net,
      in14(0) => reinterpret15_output_port_net,
      in15(0) => reinterpret16_output_port_net,
      in16(0) => reinterpret17_output_port_net,
      in17(0) => reinterpret18_output_port_net,
      in18(0) => reinterpret19_output_port_net,
      in19(0) => reinterpret20_output_port_net,
      in2(0) => reinterpret3_output_port_net,
      in20(0) => reinterpret21_output_port_net,
      in21(0) => reinterpret22_output_port_net,
      in22(0) => reinterpret23_output_port_net,
      in23(0) => reinterpret24_output_port_net,
      in24(0) => reinterpret25_output_port_net,
      in25(0) => reinterpret26_output_port_net,
      in26(0) => reinterpret27_output_port_net,
      in27(0) => reinterpret28_output_port_net,
      in28(0) => reinterpret29_output_port_net,
      in29(0) => reinterpret30_output_port_net,
      in3(0) => reinterpret4_output_port_net,
      in30(0) => reinterpret31_output_port_net,
      in31(0) => reinterpret32_output_port_net,
      in4(0) => reinterpret5_output_port_net,
      in5(0) => reinterpret6_output_port_net,
      in6(0) => reinterpret7_output_port_net,
      in7(0) => reinterpret8_output_port_net,
      in8(0) => reinterpret9_output_port_net,
      in9(0) => reinterpret10_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x32,
      output_port(0) => reinterpret1_output_port_net
    );

  reinterpret10: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x33,
      output_port(0) => reinterpret10_output_port_net
    );

  reinterpret11: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x34,
      output_port(0) => reinterpret11_output_port_net
    );

  reinterpret12: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x35,
      output_port(0) => reinterpret12_output_port_net
    );

  reinterpret13: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x36,
      output_port(0) => reinterpret13_output_port_net
    );

  reinterpret14: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x37,
      output_port(0) => reinterpret14_output_port_net
    );

  reinterpret15: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x38,
      output_port(0) => reinterpret15_output_port_net
    );

  reinterpret16: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x39,
      output_port(0) => reinterpret16_output_port_net
    );

  reinterpret17: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x40,
      output_port(0) => reinterpret17_output_port_net
    );

  reinterpret18: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x41,
      output_port(0) => reinterpret18_output_port_net
    );

  reinterpret19: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x42,
      output_port(0) => reinterpret19_output_port_net
    );

  reinterpret2: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x43,
      output_port(0) => reinterpret2_output_port_net
    );

  reinterpret20: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x44,
      output_port(0) => reinterpret20_output_port_net
    );

  reinterpret21: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x45,
      output_port(0) => reinterpret21_output_port_net
    );

  reinterpret22: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x46,
      output_port(0) => reinterpret22_output_port_net
    );

  reinterpret23: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x47,
      output_port(0) => reinterpret23_output_port_net
    );

  reinterpret24: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x48,
      output_port(0) => reinterpret24_output_port_net
    );

  reinterpret25: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x49,
      output_port(0) => reinterpret25_output_port_net
    );

  reinterpret26: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x50,
      output_port(0) => reinterpret26_output_port_net
    );

  reinterpret27: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x51,
      output_port(0) => reinterpret27_output_port_net
    );

  reinterpret28: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x52,
      output_port(0) => reinterpret28_output_port_net
    );

  reinterpret29: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x53,
      output_port(0) => reinterpret29_output_port_net
    );

  reinterpret3: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x54,
      output_port(0) => reinterpret3_output_port_net
    );

  reinterpret30: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x55,
      output_port(0) => reinterpret30_output_port_net
    );

  reinterpret31: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x56,
      output_port(0) => reinterpret31_output_port_net
    );

  reinterpret32: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x57,
      output_port(0) => reinterpret32_output_port_net
    );

  reinterpret4: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x58,
      output_port(0) => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x59,
      output_port(0) => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x60,
      output_port(0) => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x61,
      output_port(0) => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x62,
      output_port(0) => reinterpret8_output_port_net
    );

  reinterpret9: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => and_y_net_x63,
      output_port(0) => reinterpret9_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/bus_convert"

entity bus_convert_entity_1e575c5270 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(671 downto 0); 
    dout: out std_logic_vector(575 downto 0); 
    overflow: out std_logic_vector(31 downto 0)
  );
end bus_convert_entity_1e575c5270;

architecture structural of bus_convert_entity_1e575c5270 is
  signal adder_s_net_x33: std_logic_vector(17 downto 0);
  signal adder_s_net_x34: std_logic_vector(17 downto 0);
  signal adder_s_net_x35: std_logic_vector(17 downto 0);
  signal adder_s_net_x36: std_logic_vector(17 downto 0);
  signal adder_s_net_x37: std_logic_vector(17 downto 0);
  signal adder_s_net_x38: std_logic_vector(17 downto 0);
  signal adder_s_net_x39: std_logic_vector(17 downto 0);
  signal adder_s_net_x40: std_logic_vector(17 downto 0);
  signal adder_s_net_x41: std_logic_vector(17 downto 0);
  signal adder_s_net_x42: std_logic_vector(17 downto 0);
  signal adder_s_net_x43: std_logic_vector(17 downto 0);
  signal adder_s_net_x44: std_logic_vector(17 downto 0);
  signal adder_s_net_x45: std_logic_vector(17 downto 0);
  signal adder_s_net_x46: std_logic_vector(17 downto 0);
  signal adder_s_net_x47: std_logic_vector(17 downto 0);
  signal adder_s_net_x48: std_logic_vector(17 downto 0);
  signal adder_s_net_x49: std_logic_vector(17 downto 0);
  signal adder_s_net_x50: std_logic_vector(17 downto 0);
  signal adder_s_net_x51: std_logic_vector(17 downto 0);
  signal adder_s_net_x52: std_logic_vector(17 downto 0);
  signal adder_s_net_x53: std_logic_vector(17 downto 0);
  signal adder_s_net_x54: std_logic_vector(17 downto 0);
  signal adder_s_net_x55: std_logic_vector(17 downto 0);
  signal adder_s_net_x56: std_logic_vector(17 downto 0);
  signal adder_s_net_x57: std_logic_vector(17 downto 0);
  signal adder_s_net_x58: std_logic_vector(17 downto 0);
  signal adder_s_net_x59: std_logic_vector(17 downto 0);
  signal adder_s_net_x60: std_logic_vector(17 downto 0);
  signal adder_s_net_x61: std_logic_vector(17 downto 0);
  signal adder_s_net_x62: std_logic_vector(17 downto 0);
  signal adder_s_net_x63: std_logic_vector(17 downto 0);
  signal adder_s_net_x64: std_logic_vector(17 downto 0);
  signal and_y_net_x32: std_logic;
  signal and_y_net_x33: std_logic;
  signal and_y_net_x34: std_logic;
  signal and_y_net_x35: std_logic;
  signal and_y_net_x36: std_logic;
  signal and_y_net_x37: std_logic;
  signal and_y_net_x38: std_logic;
  signal and_y_net_x39: std_logic;
  signal and_y_net_x40: std_logic;
  signal and_y_net_x41: std_logic;
  signal and_y_net_x42: std_logic;
  signal and_y_net_x43: std_logic;
  signal and_y_net_x44: std_logic;
  signal and_y_net_x45: std_logic;
  signal and_y_net_x46: std_logic;
  signal and_y_net_x47: std_logic;
  signal and_y_net_x48: std_logic;
  signal and_y_net_x49: std_logic;
  signal and_y_net_x50: std_logic;
  signal and_y_net_x51: std_logic;
  signal and_y_net_x52: std_logic;
  signal and_y_net_x53: std_logic;
  signal and_y_net_x54: std_logic;
  signal and_y_net_x55: std_logic;
  signal and_y_net_x56: std_logic;
  signal and_y_net_x57: std_logic;
  signal and_y_net_x58: std_logic;
  signal and_y_net_x59: std_logic;
  signal and_y_net_x60: std_logic;
  signal and_y_net_x61: std_logic;
  signal and_y_net_x62: std_logic;
  signal and_y_net_x63: std_logic;
  signal ce_1_sg_x1090: std_logic;
  signal clk_1_sg_x1090: std_logic;
  signal concatenate_y_net_x3: std_logic_vector(671 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(575 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(31 downto 0);
  signal reinterpret10_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret11_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret12_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret13_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret14_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret15_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret16_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret17_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret18_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret19_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret20_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret21_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret22_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret23_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret24_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret25_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret26_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret27_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret28_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret29_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret30_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret31_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret32_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret5_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret6_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret7_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret8_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret9_output_port_net_x2: std_logic_vector(20 downto 0);

begin
  ce_1_sg_x1090 <= ce_1;
  clk_1_sg_x1090 <= clk_1;
  concatenate_y_net_x3 <= din;
  dout <= concatenate_y_net_x4;
  overflow <= concatenate_y_net_x5;

  bussify_38abc2832f: entity work.bussify_entity_38abc2832f
    port map (
      in1 => adder_s_net_x33,
      in10 => adder_s_net_x34,
      in11 => adder_s_net_x35,
      in12 => adder_s_net_x36,
      in13 => adder_s_net_x37,
      in14 => adder_s_net_x38,
      in15 => adder_s_net_x39,
      in16 => adder_s_net_x40,
      in17 => adder_s_net_x41,
      in18 => adder_s_net_x42,
      in19 => adder_s_net_x43,
      in2 => adder_s_net_x44,
      in20 => adder_s_net_x45,
      in21 => adder_s_net_x46,
      in22 => adder_s_net_x47,
      in23 => adder_s_net_x48,
      in24 => adder_s_net_x49,
      in25 => adder_s_net_x50,
      in26 => adder_s_net_x51,
      in27 => adder_s_net_x52,
      in28 => adder_s_net_x53,
      in29 => adder_s_net_x54,
      in3 => adder_s_net_x55,
      in30 => adder_s_net_x56,
      in31 => adder_s_net_x57,
      in32 => adder_s_net_x58,
      in4 => adder_s_net_x59,
      in5 => adder_s_net_x60,
      in6 => adder_s_net_x61,
      in7 => adder_s_net_x62,
      in8 => adder_s_net_x63,
      in9 => adder_s_net_x64,
      bus_out => concatenate_y_net_x4
    );

  conv10_2c65109493: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret23_output_port_net_x2,
      dout => adder_s_net_x34,
      of_x0 => and_y_net_x33
    );

  conv11_68add50806: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret22_output_port_net_x2,
      dout => adder_s_net_x35,
      of_x0 => and_y_net_x34
    );

  conv12_80e8eaa608: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret21_output_port_net_x2,
      dout => adder_s_net_x36,
      of_x0 => and_y_net_x35
    );

  conv13_c255a1cd2e: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret20_output_port_net_x2,
      dout => adder_s_net_x37,
      of_x0 => and_y_net_x36
    );

  conv14_94ecdd3daf: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret19_output_port_net_x2,
      dout => adder_s_net_x38,
      of_x0 => and_y_net_x37
    );

  conv15_b487748cd6: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret18_output_port_net_x2,
      dout => adder_s_net_x39,
      of_x0 => and_y_net_x38
    );

  conv16_13fcce70b9: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret17_output_port_net_x2,
      dout => adder_s_net_x40,
      of_x0 => and_y_net_x39
    );

  conv17_da6de09b72: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret16_output_port_net_x2,
      dout => adder_s_net_x41,
      of_x0 => and_y_net_x40
    );

  conv18_ed432b3ac4: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret15_output_port_net_x2,
      dout => adder_s_net_x42,
      of_x0 => and_y_net_x41
    );

  conv19_6364dfc768: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret14_output_port_net_x2,
      dout => adder_s_net_x43,
      of_x0 => and_y_net_x42
    );

  conv1_4f85aee5bf: entity work.conv1_entity_9b1f51cacb
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret32_output_port_net_x2,
      dout => adder_s_net_x33,
      of_x0 => and_y_net_x32
    );

  conv20_895c844f42: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret13_output_port_net_x2,
      dout => adder_s_net_x45,
      of_x0 => and_y_net_x44
    );

  conv21_c4f80e9830: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret12_output_port_net_x2,
      dout => adder_s_net_x46,
      of_x0 => and_y_net_x45
    );

  conv22_f3000b017a: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret11_output_port_net_x2,
      dout => adder_s_net_x47,
      of_x0 => and_y_net_x46
    );

  conv23_a9c4a9f1c9: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret10_output_port_net_x2,
      dout => adder_s_net_x48,
      of_x0 => and_y_net_x47
    );

  conv24_565ed86468: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret9_output_port_net_x2,
      dout => adder_s_net_x49,
      of_x0 => and_y_net_x48
    );

  conv25_9299d6f6ad: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret8_output_port_net_x2,
      dout => adder_s_net_x50,
      of_x0 => and_y_net_x49
    );

  conv26_c5def28388: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret7_output_port_net_x2,
      dout => adder_s_net_x51,
      of_x0 => and_y_net_x50
    );

  conv27_cb885a04b9: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret6_output_port_net_x2,
      dout => adder_s_net_x52,
      of_x0 => and_y_net_x51
    );

  conv28_be23ca32aa: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret5_output_port_net_x2,
      dout => adder_s_net_x53,
      of_x0 => and_y_net_x52
    );

  conv29_18188d86a5: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret4_output_port_net_x2,
      dout => adder_s_net_x54,
      of_x0 => and_y_net_x53
    );

  conv2_f8d0d3417b: entity work.conv1_entity_9b1f51cacb
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret31_output_port_net_x2,
      dout => adder_s_net_x44,
      of_x0 => and_y_net_x43
    );

  conv30_2bc6170386: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret3_output_port_net_x2,
      dout => adder_s_net_x56,
      of_x0 => and_y_net_x55
    );

  conv31_6349e5e7a0: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret2_output_port_net_x2,
      dout => adder_s_net_x57,
      of_x0 => and_y_net_x56
    );

  conv32_b12059ee8b: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret1_output_port_net_x2,
      dout => adder_s_net_x58,
      of_x0 => and_y_net_x57
    );

  conv3_c18a720248: entity work.conv1_entity_9b1f51cacb
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret30_output_port_net_x2,
      dout => adder_s_net_x55,
      of_x0 => and_y_net_x54
    );

  conv4_ecfc05299c: entity work.conv1_entity_9b1f51cacb
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret29_output_port_net_x2,
      dout => adder_s_net_x59,
      of_x0 => and_y_net_x58
    );

  conv5_681a21e5db: entity work.conv1_entity_9b1f51cacb
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret28_output_port_net_x2,
      dout => adder_s_net_x60,
      of_x0 => and_y_net_x59
    );

  conv6_4ad46f60df: entity work.conv1_entity_9b1f51cacb
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret27_output_port_net_x2,
      dout => adder_s_net_x61,
      of_x0 => and_y_net_x60
    );

  conv7_50352c22c4: entity work.conv1_entity_9b1f51cacb
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret26_output_port_net_x2,
      dout => adder_s_net_x62,
      of_x0 => and_y_net_x61
    );

  conv8_98902c667e: entity work.conv1_entity_9b1f51cacb
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret25_output_port_net_x2,
      dout => adder_s_net_x63,
      of_x0 => and_y_net_x62
    );

  conv9_b26add836c: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1090,
      clk_1 => clk_1_sg_x1090,
      din => reinterpret24_output_port_net_x2,
      dout => adder_s_net_x64,
      of_x0 => and_y_net_x63
    );

  debus_eef6c83460: entity work.debus_entity_eef6c83460
    port map (
      bus_in => concatenate_y_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out32 => reinterpret32_output_port_net_x2,
      out10 => reinterpret10_output_port_net_x2,
      out11 => reinterpret11_output_port_net_x2,
      out12 => reinterpret12_output_port_net_x2,
      out13 => reinterpret13_output_port_net_x2,
      out14 => reinterpret14_output_port_net_x2,
      out15 => reinterpret15_output_port_net_x2,
      out16 => reinterpret16_output_port_net_x2,
      out17 => reinterpret17_output_port_net_x2,
      out18 => reinterpret18_output_port_net_x2,
      out19 => reinterpret19_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x2,
      out20 => reinterpret20_output_port_net_x2,
      out21 => reinterpret21_output_port_net_x2,
      out22 => reinterpret22_output_port_net_x2,
      out23 => reinterpret23_output_port_net_x2,
      out24 => reinterpret24_output_port_net_x2,
      out25 => reinterpret25_output_port_net_x2,
      out26 => reinterpret26_output_port_net_x2,
      out27 => reinterpret27_output_port_net_x2,
      out28 => reinterpret28_output_port_net_x2,
      out29 => reinterpret29_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x2,
      out30 => reinterpret30_output_port_net_x2,
      out31 => reinterpret31_output_port_net_x2,
      out4 => reinterpret4_output_port_net_x2,
      out5 => reinterpret5_output_port_net_x2,
      out6 => reinterpret6_output_port_net_x2,
      out7 => reinterpret7_output_port_net_x2,
      out8 => reinterpret8_output_port_net_x2,
      out9 => reinterpret9_output_port_net_x2
    );

  of_bussify_7614a67812: entity work.of_bussify_entity_7614a67812
    port map (
      in1 => and_y_net_x32,
      in10 => and_y_net_x33,
      in11 => and_y_net_x34,
      in12 => and_y_net_x35,
      in13 => and_y_net_x36,
      in14 => and_y_net_x37,
      in15 => and_y_net_x38,
      in16 => and_y_net_x39,
      in17 => and_y_net_x40,
      in18 => and_y_net_x41,
      in19 => and_y_net_x42,
      in2 => and_y_net_x43,
      in20 => and_y_net_x44,
      in21 => and_y_net_x45,
      in22 => and_y_net_x46,
      in23 => and_y_net_x47,
      in24 => and_y_net_x48,
      in25 => and_y_net_x49,
      in26 => and_y_net_x50,
      in27 => and_y_net_x51,
      in28 => and_y_net_x52,
      in29 => and_y_net_x53,
      in3 => and_y_net_x54,
      in30 => and_y_net_x55,
      in31 => and_y_net_x56,
      in32 => and_y_net_x57,
      in4 => and_y_net_x58,
      in5 => and_y_net_x59,
      in6 => and_y_net_x60,
      in7 => and_y_net_x61,
      in8 => and_y_net_x62,
      in9 => and_y_net_x63,
      bus_out => concatenate_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/bus_expand"

entity bus_expand_entity_c929d7e2d9 is
  port (
    bus_in: in std_logic_vector(575 downto 0); 
    lsb_out1: out std_logic_vector(287 downto 0); 
    msb_out2: out std_logic_vector(287 downto 0)
  );
end bus_expand_entity_c929d7e2d9;

architecture structural of bus_expand_entity_c929d7e2d9 is
  signal concatenate_y_net_x5: std_logic_vector(575 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(287 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(287 downto 0);
  signal slice1_y_net: std_logic_vector(287 downto 0);
  signal slice2_y_net: std_logic_vector(287 downto 0);

begin
  concatenate_y_net_x5 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x2;
  msb_out2 <= reinterpret2_output_port_net_x2;

  reinterpret1: entity work.reinterpret_a6651f657f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  reinterpret2: entity work.reinterpret_a6651f657f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 287,
      x_width => 576,
      y_width => 288
    )
    port map (
      x => concatenate_y_net_x5,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 288,
      new_msb => 575,
      x_width => 576,
      y_width => 288
    )
    port map (
      x => concatenate_y_net_x5,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/bus_norm0/bussify"

entity bussify_entity_0530fc7e9d is
  port (
    in1: in std_logic_vector(20 downto 0); 
    in10: in std_logic_vector(20 downto 0); 
    in11: in std_logic_vector(20 downto 0); 
    in12: in std_logic_vector(20 downto 0); 
    in13: in std_logic_vector(20 downto 0); 
    in14: in std_logic_vector(20 downto 0); 
    in15: in std_logic_vector(20 downto 0); 
    in16: in std_logic_vector(20 downto 0); 
    in17: in std_logic_vector(20 downto 0); 
    in18: in std_logic_vector(20 downto 0); 
    in19: in std_logic_vector(20 downto 0); 
    in2: in std_logic_vector(20 downto 0); 
    in20: in std_logic_vector(20 downto 0); 
    in21: in std_logic_vector(20 downto 0); 
    in22: in std_logic_vector(20 downto 0); 
    in23: in std_logic_vector(20 downto 0); 
    in24: in std_logic_vector(20 downto 0); 
    in25: in std_logic_vector(20 downto 0); 
    in26: in std_logic_vector(20 downto 0); 
    in27: in std_logic_vector(20 downto 0); 
    in28: in std_logic_vector(20 downto 0); 
    in29: in std_logic_vector(20 downto 0); 
    in3: in std_logic_vector(20 downto 0); 
    in30: in std_logic_vector(20 downto 0); 
    in31: in std_logic_vector(20 downto 0); 
    in32: in std_logic_vector(20 downto 0); 
    in4: in std_logic_vector(20 downto 0); 
    in5: in std_logic_vector(20 downto 0); 
    in6: in std_logic_vector(20 downto 0); 
    in7: in std_logic_vector(20 downto 0); 
    in8: in std_logic_vector(20 downto 0); 
    in9: in std_logic_vector(20 downto 0); 
    bus_out: out std_logic_vector(671 downto 0)
  );
end bussify_entity_0530fc7e9d;

architecture structural of bussify_entity_0530fc7e9d is
  signal concatenate_y_net_x0: std_logic_vector(671 downto 0);
  signal conv10_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv11_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv12_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv13_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv14_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv15_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv16_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv17_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv18_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv19_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv1_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv20_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv21_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv22_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv23_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv24_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv25_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv26_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv27_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv28_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv29_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv2_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv30_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv31_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv32_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv3_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv4_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv5_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv6_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv7_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv8_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv9_dout_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret10_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret11_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret12_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret13_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret14_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret15_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret16_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret17_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret18_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret19_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret20_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret21_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret22_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret23_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret24_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret25_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret26_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret27_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret28_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret29_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret30_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret31_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret32_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret9_output_port_net: std_logic_vector(20 downto 0);

begin
  conv1_dout_net_x0 <= in1;
  conv10_dout_net_x0 <= in10;
  conv11_dout_net_x0 <= in11;
  conv12_dout_net_x0 <= in12;
  conv13_dout_net_x0 <= in13;
  conv14_dout_net_x0 <= in14;
  conv15_dout_net_x0 <= in15;
  conv16_dout_net_x0 <= in16;
  conv17_dout_net_x0 <= in17;
  conv18_dout_net_x0 <= in18;
  conv19_dout_net_x0 <= in19;
  conv2_dout_net_x0 <= in2;
  conv20_dout_net_x0 <= in20;
  conv21_dout_net_x0 <= in21;
  conv22_dout_net_x0 <= in22;
  conv23_dout_net_x0 <= in23;
  conv24_dout_net_x0 <= in24;
  conv25_dout_net_x0 <= in25;
  conv26_dout_net_x0 <= in26;
  conv27_dout_net_x0 <= in27;
  conv28_dout_net_x0 <= in28;
  conv29_dout_net_x0 <= in29;
  conv3_dout_net_x0 <= in3;
  conv30_dout_net_x0 <= in30;
  conv31_dout_net_x0 <= in31;
  conv32_dout_net_x0 <= in32;
  conv4_dout_net_x0 <= in4;
  conv5_dout_net_x0 <= in5;
  conv6_dout_net_x0 <= in6;
  conv7_dout_net_x0 <= in7;
  conv8_dout_net_x0 <= in8;
  conv9_dout_net_x0 <= in9;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_2710aa5601
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in10 => reinterpret11_output_port_net,
      in11 => reinterpret12_output_port_net,
      in12 => reinterpret13_output_port_net,
      in13 => reinterpret14_output_port_net,
      in14 => reinterpret15_output_port_net,
      in15 => reinterpret16_output_port_net,
      in16 => reinterpret17_output_port_net,
      in17 => reinterpret18_output_port_net,
      in18 => reinterpret19_output_port_net,
      in19 => reinterpret20_output_port_net,
      in2 => reinterpret3_output_port_net,
      in20 => reinterpret21_output_port_net,
      in21 => reinterpret22_output_port_net,
      in22 => reinterpret23_output_port_net,
      in23 => reinterpret24_output_port_net,
      in24 => reinterpret25_output_port_net,
      in25 => reinterpret26_output_port_net,
      in26 => reinterpret27_output_port_net,
      in27 => reinterpret28_output_port_net,
      in28 => reinterpret29_output_port_net,
      in29 => reinterpret30_output_port_net,
      in3 => reinterpret4_output_port_net,
      in30 => reinterpret31_output_port_net,
      in31 => reinterpret32_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      in8 => reinterpret9_output_port_net,
      in9 => reinterpret10_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv1_dout_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret10: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv10_dout_net_x0,
      output_port => reinterpret10_output_port_net
    );

  reinterpret11: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv11_dout_net_x0,
      output_port => reinterpret11_output_port_net
    );

  reinterpret12: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv12_dout_net_x0,
      output_port => reinterpret12_output_port_net
    );

  reinterpret13: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv13_dout_net_x0,
      output_port => reinterpret13_output_port_net
    );

  reinterpret14: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv14_dout_net_x0,
      output_port => reinterpret14_output_port_net
    );

  reinterpret15: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv15_dout_net_x0,
      output_port => reinterpret15_output_port_net
    );

  reinterpret16: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv16_dout_net_x0,
      output_port => reinterpret16_output_port_net
    );

  reinterpret17: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv17_dout_net_x0,
      output_port => reinterpret17_output_port_net
    );

  reinterpret18: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv18_dout_net_x0,
      output_port => reinterpret18_output_port_net
    );

  reinterpret19: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv19_dout_net_x0,
      output_port => reinterpret19_output_port_net
    );

  reinterpret2: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv2_dout_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret20: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv20_dout_net_x0,
      output_port => reinterpret20_output_port_net
    );

  reinterpret21: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv21_dout_net_x0,
      output_port => reinterpret21_output_port_net
    );

  reinterpret22: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv22_dout_net_x0,
      output_port => reinterpret22_output_port_net
    );

  reinterpret23: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv23_dout_net_x0,
      output_port => reinterpret23_output_port_net
    );

  reinterpret24: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv24_dout_net_x0,
      output_port => reinterpret24_output_port_net
    );

  reinterpret25: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv25_dout_net_x0,
      output_port => reinterpret25_output_port_net
    );

  reinterpret26: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv26_dout_net_x0,
      output_port => reinterpret26_output_port_net
    );

  reinterpret27: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv27_dout_net_x0,
      output_port => reinterpret27_output_port_net
    );

  reinterpret28: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv28_dout_net_x0,
      output_port => reinterpret28_output_port_net
    );

  reinterpret29: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv29_dout_net_x0,
      output_port => reinterpret29_output_port_net
    );

  reinterpret3: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv3_dout_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret30: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv30_dout_net_x0,
      output_port => reinterpret30_output_port_net
    );

  reinterpret31: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv31_dout_net_x0,
      output_port => reinterpret31_output_port_net
    );

  reinterpret32: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv32_dout_net_x0,
      output_port => reinterpret32_output_port_net
    );

  reinterpret4: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv4_dout_net_x0,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv5_dout_net_x0,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv6_dout_net_x0,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv7_dout_net_x0,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv8_dout_net_x0,
      output_port => reinterpret8_output_port_net
    );

  reinterpret9: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv9_dout_net_x0,
      output_port => reinterpret9_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/bus_norm0/debus"

entity debus_entity_f695188bbc is
  port (
    bus_in: in std_logic_vector(639 downto 0); 
    lsb_out1: out std_logic_vector(19 downto 0); 
    msb_out32: out std_logic_vector(19 downto 0); 
    out10: out std_logic_vector(19 downto 0); 
    out11: out std_logic_vector(19 downto 0); 
    out12: out std_logic_vector(19 downto 0); 
    out13: out std_logic_vector(19 downto 0); 
    out14: out std_logic_vector(19 downto 0); 
    out15: out std_logic_vector(19 downto 0); 
    out16: out std_logic_vector(19 downto 0); 
    out17: out std_logic_vector(19 downto 0); 
    out18: out std_logic_vector(19 downto 0); 
    out19: out std_logic_vector(19 downto 0); 
    out2: out std_logic_vector(19 downto 0); 
    out20: out std_logic_vector(19 downto 0); 
    out21: out std_logic_vector(19 downto 0); 
    out22: out std_logic_vector(19 downto 0); 
    out23: out std_logic_vector(19 downto 0); 
    out24: out std_logic_vector(19 downto 0); 
    out25: out std_logic_vector(19 downto 0); 
    out26: out std_logic_vector(19 downto 0); 
    out27: out std_logic_vector(19 downto 0); 
    out28: out std_logic_vector(19 downto 0); 
    out29: out std_logic_vector(19 downto 0); 
    out3: out std_logic_vector(19 downto 0); 
    out30: out std_logic_vector(19 downto 0); 
    out31: out std_logic_vector(19 downto 0); 
    out4: out std_logic_vector(19 downto 0); 
    out5: out std_logic_vector(19 downto 0); 
    out6: out std_logic_vector(19 downto 0); 
    out7: out std_logic_vector(19 downto 0); 
    out8: out std_logic_vector(19 downto 0); 
    out9: out std_logic_vector(19 downto 0)
  );
end debus_entity_f695188bbc;

architecture structural of debus_entity_f695188bbc is
  signal concat_y_net_x0: std_logic_vector(639 downto 0);
  signal reinterpret10_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret11_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret12_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret13_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret14_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret15_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret16_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret17_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret18_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret19_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret20_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret21_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret22_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret23_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret24_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret25_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret26_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret27_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret28_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret29_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret30_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret31_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret32_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret9_output_port_net_x0: std_logic_vector(19 downto 0);
  signal slice10_y_net: std_logic_vector(19 downto 0);
  signal slice11_y_net: std_logic_vector(19 downto 0);
  signal slice12_y_net: std_logic_vector(19 downto 0);
  signal slice13_y_net: std_logic_vector(19 downto 0);
  signal slice14_y_net: std_logic_vector(19 downto 0);
  signal slice15_y_net: std_logic_vector(19 downto 0);
  signal slice16_y_net: std_logic_vector(19 downto 0);
  signal slice17_y_net: std_logic_vector(19 downto 0);
  signal slice18_y_net: std_logic_vector(19 downto 0);
  signal slice19_y_net: std_logic_vector(19 downto 0);
  signal slice1_y_net: std_logic_vector(19 downto 0);
  signal slice20_y_net: std_logic_vector(19 downto 0);
  signal slice21_y_net: std_logic_vector(19 downto 0);
  signal slice22_y_net: std_logic_vector(19 downto 0);
  signal slice23_y_net: std_logic_vector(19 downto 0);
  signal slice24_y_net: std_logic_vector(19 downto 0);
  signal slice25_y_net: std_logic_vector(19 downto 0);
  signal slice26_y_net: std_logic_vector(19 downto 0);
  signal slice27_y_net: std_logic_vector(19 downto 0);
  signal slice28_y_net: std_logic_vector(19 downto 0);
  signal slice29_y_net: std_logic_vector(19 downto 0);
  signal slice2_y_net: std_logic_vector(19 downto 0);
  signal slice30_y_net: std_logic_vector(19 downto 0);
  signal slice31_y_net: std_logic_vector(19 downto 0);
  signal slice32_y_net: std_logic_vector(19 downto 0);
  signal slice3_y_net: std_logic_vector(19 downto 0);
  signal slice4_y_net: std_logic_vector(19 downto 0);
  signal slice5_y_net: std_logic_vector(19 downto 0);
  signal slice6_y_net: std_logic_vector(19 downto 0);
  signal slice7_y_net: std_logic_vector(19 downto 0);
  signal slice8_y_net: std_logic_vector(19 downto 0);
  signal slice9_y_net: std_logic_vector(19 downto 0);

begin
  concat_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out32 <= reinterpret32_output_port_net_x0;
  out10 <= reinterpret10_output_port_net_x0;
  out11 <= reinterpret11_output_port_net_x0;
  out12 <= reinterpret12_output_port_net_x0;
  out13 <= reinterpret13_output_port_net_x0;
  out14 <= reinterpret14_output_port_net_x0;
  out15 <= reinterpret15_output_port_net_x0;
  out16 <= reinterpret16_output_port_net_x0;
  out17 <= reinterpret17_output_port_net_x0;
  out18 <= reinterpret18_output_port_net_x0;
  out19 <= reinterpret19_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out20 <= reinterpret20_output_port_net_x0;
  out21 <= reinterpret21_output_port_net_x0;
  out22 <= reinterpret22_output_port_net_x0;
  out23 <= reinterpret23_output_port_net_x0;
  out24 <= reinterpret24_output_port_net_x0;
  out25 <= reinterpret25_output_port_net_x0;
  out26 <= reinterpret26_output_port_net_x0;
  out27 <= reinterpret27_output_port_net_x0;
  out28 <= reinterpret28_output_port_net_x0;
  out29 <= reinterpret29_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;
  out30 <= reinterpret30_output_port_net_x0;
  out31 <= reinterpret31_output_port_net_x0;
  out4 <= reinterpret4_output_port_net_x0;
  out5 <= reinterpret5_output_port_net_x0;
  out6 <= reinterpret6_output_port_net_x0;
  out7 <= reinterpret7_output_port_net_x0;
  out8 <= reinterpret8_output_port_net_x0;
  out9 <= reinterpret9_output_port_net_x0;

  reinterpret1: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret10: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice10_y_net,
      output_port => reinterpret10_output_port_net_x0
    );

  reinterpret11: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice11_y_net,
      output_port => reinterpret11_output_port_net_x0
    );

  reinterpret12: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice12_y_net,
      output_port => reinterpret12_output_port_net_x0
    );

  reinterpret13: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice13_y_net,
      output_port => reinterpret13_output_port_net_x0
    );

  reinterpret14: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice14_y_net,
      output_port => reinterpret14_output_port_net_x0
    );

  reinterpret15: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice15_y_net,
      output_port => reinterpret15_output_port_net_x0
    );

  reinterpret16: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice16_y_net,
      output_port => reinterpret16_output_port_net_x0
    );

  reinterpret17: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice17_y_net,
      output_port => reinterpret17_output_port_net_x0
    );

  reinterpret18: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice18_y_net,
      output_port => reinterpret18_output_port_net_x0
    );

  reinterpret19: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice19_y_net,
      output_port => reinterpret19_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret20: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice20_y_net,
      output_port => reinterpret20_output_port_net_x0
    );

  reinterpret21: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice21_y_net,
      output_port => reinterpret21_output_port_net_x0
    );

  reinterpret22: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice22_y_net,
      output_port => reinterpret22_output_port_net_x0
    );

  reinterpret23: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice23_y_net,
      output_port => reinterpret23_output_port_net_x0
    );

  reinterpret24: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice24_y_net,
      output_port => reinterpret24_output_port_net_x0
    );

  reinterpret25: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice25_y_net,
      output_port => reinterpret25_output_port_net_x0
    );

  reinterpret26: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice26_y_net,
      output_port => reinterpret26_output_port_net_x0
    );

  reinterpret27: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice27_y_net,
      output_port => reinterpret27_output_port_net_x0
    );

  reinterpret28: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice28_y_net,
      output_port => reinterpret28_output_port_net_x0
    );

  reinterpret29: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice29_y_net,
      output_port => reinterpret29_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret30: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice30_y_net,
      output_port => reinterpret30_output_port_net_x0
    );

  reinterpret31: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice31_y_net,
      output_port => reinterpret31_output_port_net_x0
    );

  reinterpret32: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice32_y_net,
      output_port => reinterpret32_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  reinterpret5: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_y_net,
      output_port => reinterpret5_output_port_net_x0
    );

  reinterpret6: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret6_output_port_net_x0
    );

  reinterpret7: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret7_output_port_net_x0
    );

  reinterpret8: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret8_output_port_net_x0
    );

  reinterpret9: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice9_y_net,
      output_port => reinterpret9_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 19,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice1_y_net
    );

  slice10: entity work.xlslice
    generic map (
      new_lsb => 180,
      new_msb => 199,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice10_y_net
    );

  slice11: entity work.xlslice
    generic map (
      new_lsb => 200,
      new_msb => 219,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice11_y_net
    );

  slice12: entity work.xlslice
    generic map (
      new_lsb => 220,
      new_msb => 239,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice12_y_net
    );

  slice13: entity work.xlslice
    generic map (
      new_lsb => 240,
      new_msb => 259,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice13_y_net
    );

  slice14: entity work.xlslice
    generic map (
      new_lsb => 260,
      new_msb => 279,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice14_y_net
    );

  slice15: entity work.xlslice
    generic map (
      new_lsb => 280,
      new_msb => 299,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice15_y_net
    );

  slice16: entity work.xlslice
    generic map (
      new_lsb => 300,
      new_msb => 319,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice16_y_net
    );

  slice17: entity work.xlslice
    generic map (
      new_lsb => 320,
      new_msb => 339,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice17_y_net
    );

  slice18: entity work.xlslice
    generic map (
      new_lsb => 340,
      new_msb => 359,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice18_y_net
    );

  slice19: entity work.xlslice
    generic map (
      new_lsb => 360,
      new_msb => 379,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice19_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 20,
      new_msb => 39,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice2_y_net
    );

  slice20: entity work.xlslice
    generic map (
      new_lsb => 380,
      new_msb => 399,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice20_y_net
    );

  slice21: entity work.xlslice
    generic map (
      new_lsb => 400,
      new_msb => 419,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice21_y_net
    );

  slice22: entity work.xlslice
    generic map (
      new_lsb => 420,
      new_msb => 439,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice22_y_net
    );

  slice23: entity work.xlslice
    generic map (
      new_lsb => 440,
      new_msb => 459,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice23_y_net
    );

  slice24: entity work.xlslice
    generic map (
      new_lsb => 460,
      new_msb => 479,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice24_y_net
    );

  slice25: entity work.xlslice
    generic map (
      new_lsb => 480,
      new_msb => 499,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice25_y_net
    );

  slice26: entity work.xlslice
    generic map (
      new_lsb => 500,
      new_msb => 519,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice26_y_net
    );

  slice27: entity work.xlslice
    generic map (
      new_lsb => 520,
      new_msb => 539,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice27_y_net
    );

  slice28: entity work.xlslice
    generic map (
      new_lsb => 540,
      new_msb => 559,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice28_y_net
    );

  slice29: entity work.xlslice
    generic map (
      new_lsb => 560,
      new_msb => 579,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice29_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 40,
      new_msb => 59,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice3_y_net
    );

  slice30: entity work.xlslice
    generic map (
      new_lsb => 580,
      new_msb => 599,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice30_y_net
    );

  slice31: entity work.xlslice
    generic map (
      new_lsb => 600,
      new_msb => 619,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice31_y_net
    );

  slice32: entity work.xlslice
    generic map (
      new_lsb => 620,
      new_msb => 639,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice32_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 60,
      new_msb => 79,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 80,
      new_msb => 99,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 100,
      new_msb => 119,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 120,
      new_msb => 139,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 140,
      new_msb => 159,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice8_y_net
    );

  slice9: entity work.xlslice
    generic map (
      new_lsb => 160,
      new_msb => 179,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice9_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/bus_norm0"

entity bus_norm0_entity_d9e815a0ed is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(639 downto 0); 
    dout: out std_logic_vector(671 downto 0)
  );
end bus_norm0_entity_d9e815a0ed;

architecture structural of bus_norm0_entity_d9e815a0ed is
  signal ce_1_sg_x1091: std_logic;
  signal clk_1_sg_x1091: std_logic;
  signal concat_y_net_x1: std_logic_vector(639 downto 0);
  signal concatenate_y_net_x1: std_logic_vector(671 downto 0);
  signal conv10_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv11_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv12_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv13_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv14_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv15_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv16_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv17_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv18_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv19_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv1_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv20_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv21_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv22_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv23_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv24_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv25_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv26_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv27_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv28_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv29_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv2_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv30_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv31_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv32_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv3_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv4_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv5_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv6_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv7_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv8_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv9_dout_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret10_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret11_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret12_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret13_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret14_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret15_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret16_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret17_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret18_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret19_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret20_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret21_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret22_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret23_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret24_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret25_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret26_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret27_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret28_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret29_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret30_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret31_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret32_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret9_output_port_net_x0: std_logic_vector(19 downto 0);

begin
  ce_1_sg_x1091 <= ce_1;
  clk_1_sg_x1091 <= clk_1;
  concat_y_net_x1 <= din;
  dout <= concatenate_y_net_x1;

  bussify_0530fc7e9d: entity work.bussify_entity_0530fc7e9d
    port map (
      in1 => conv1_dout_net_x0,
      in10 => conv10_dout_net_x0,
      in11 => conv11_dout_net_x0,
      in12 => conv12_dout_net_x0,
      in13 => conv13_dout_net_x0,
      in14 => conv14_dout_net_x0,
      in15 => conv15_dout_net_x0,
      in16 => conv16_dout_net_x0,
      in17 => conv17_dout_net_x0,
      in18 => conv18_dout_net_x0,
      in19 => conv19_dout_net_x0,
      in2 => conv2_dout_net_x0,
      in20 => conv20_dout_net_x0,
      in21 => conv21_dout_net_x0,
      in22 => conv22_dout_net_x0,
      in23 => conv23_dout_net_x0,
      in24 => conv24_dout_net_x0,
      in25 => conv25_dout_net_x0,
      in26 => conv26_dout_net_x0,
      in27 => conv27_dout_net_x0,
      in28 => conv28_dout_net_x0,
      in29 => conv29_dout_net_x0,
      in3 => conv3_dout_net_x0,
      in30 => conv30_dout_net_x0,
      in31 => conv31_dout_net_x0,
      in32 => conv32_dout_net_x0,
      in4 => conv4_dout_net_x0,
      in5 => conv5_dout_net_x0,
      in6 => conv6_dout_net_x0,
      in7 => conv7_dout_net_x0,
      in8 => conv8_dout_net_x0,
      in9 => conv9_dout_net_x0,
      bus_out => concatenate_y_net_x1
    );

  conv1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret32_output_port_net_x0,
      en => "1",
      dout => conv1_dout_net_x0
    );

  conv10: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret23_output_port_net_x0,
      en => "1",
      dout => conv10_dout_net_x0
    );

  conv11: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret22_output_port_net_x0,
      en => "1",
      dout => conv11_dout_net_x0
    );

  conv12: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret21_output_port_net_x0,
      en => "1",
      dout => conv12_dout_net_x0
    );

  conv13: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret20_output_port_net_x0,
      en => "1",
      dout => conv13_dout_net_x0
    );

  conv14: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret19_output_port_net_x0,
      en => "1",
      dout => conv14_dout_net_x0
    );

  conv15: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret18_output_port_net_x0,
      en => "1",
      dout => conv15_dout_net_x0
    );

  conv16: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret17_output_port_net_x0,
      en => "1",
      dout => conv16_dout_net_x0
    );

  conv17: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret16_output_port_net_x0,
      en => "1",
      dout => conv17_dout_net_x0
    );

  conv18: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret15_output_port_net_x0,
      en => "1",
      dout => conv18_dout_net_x0
    );

  conv19: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret14_output_port_net_x0,
      en => "1",
      dout => conv19_dout_net_x0
    );

  conv2: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret31_output_port_net_x0,
      en => "1",
      dout => conv2_dout_net_x0
    );

  conv20: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret13_output_port_net_x0,
      en => "1",
      dout => conv20_dout_net_x0
    );

  conv21: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret12_output_port_net_x0,
      en => "1",
      dout => conv21_dout_net_x0
    );

  conv22: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret11_output_port_net_x0,
      en => "1",
      dout => conv22_dout_net_x0
    );

  conv23: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret10_output_port_net_x0,
      en => "1",
      dout => conv23_dout_net_x0
    );

  conv24: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret9_output_port_net_x0,
      en => "1",
      dout => conv24_dout_net_x0
    );

  conv25: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret8_output_port_net_x0,
      en => "1",
      dout => conv25_dout_net_x0
    );

  conv26: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret7_output_port_net_x0,
      en => "1",
      dout => conv26_dout_net_x0
    );

  conv27: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret6_output_port_net_x0,
      en => "1",
      dout => conv27_dout_net_x0
    );

  conv28: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret5_output_port_net_x0,
      en => "1",
      dout => conv28_dout_net_x0
    );

  conv29: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret4_output_port_net_x0,
      en => "1",
      dout => conv29_dout_net_x0
    );

  conv3: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret30_output_port_net_x0,
      en => "1",
      dout => conv3_dout_net_x0
    );

  conv30: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret3_output_port_net_x0,
      en => "1",
      dout => conv30_dout_net_x0
    );

  conv31: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret2_output_port_net_x0,
      en => "1",
      dout => conv31_dout_net_x0
    );

  conv32: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret1_output_port_net_x0,
      en => "1",
      dout => conv32_dout_net_x0
    );

  conv4: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret29_output_port_net_x0,
      en => "1",
      dout => conv4_dout_net_x0
    );

  conv5: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret28_output_port_net_x0,
      en => "1",
      dout => conv5_dout_net_x0
    );

  conv6: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret27_output_port_net_x0,
      en => "1",
      dout => conv6_dout_net_x0
    );

  conv7: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret26_output_port_net_x0,
      en => "1",
      dout => conv7_dout_net_x0
    );

  conv8: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret25_output_port_net_x0,
      en => "1",
      dout => conv8_dout_net_x0
    );

  conv9: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1091,
      clk => clk_1_sg_x1091,
      clr => '0',
      din => reinterpret24_output_port_net_x0,
      en => "1",
      dout => conv9_dout_net_x0
    );

  debus_f695188bbc: entity work.debus_entity_f695188bbc
    port map (
      bus_in => concat_y_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out32 => reinterpret32_output_port_net_x0,
      out10 => reinterpret10_output_port_net_x0,
      out11 => reinterpret11_output_port_net_x0,
      out12 => reinterpret12_output_port_net_x0,
      out13 => reinterpret13_output_port_net_x0,
      out14 => reinterpret14_output_port_net_x0,
      out15 => reinterpret15_output_port_net_x0,
      out16 => reinterpret16_output_port_net_x0,
      out17 => reinterpret17_output_port_net_x0,
      out18 => reinterpret18_output_port_net_x0,
      out19 => reinterpret19_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out20 => reinterpret20_output_port_net_x0,
      out21 => reinterpret21_output_port_net_x0,
      out22 => reinterpret22_output_port_net_x0,
      out23 => reinterpret23_output_port_net_x0,
      out24 => reinterpret24_output_port_net_x0,
      out25 => reinterpret25_output_port_net_x0,
      out26 => reinterpret26_output_port_net_x0,
      out27 => reinterpret27_output_port_net_x0,
      out28 => reinterpret28_output_port_net_x0,
      out29 => reinterpret29_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0,
      out30 => reinterpret30_output_port_net_x0,
      out31 => reinterpret31_output_port_net_x0,
      out4 => reinterpret4_output_port_net_x0,
      out5 => reinterpret5_output_port_net_x0,
      out6 => reinterpret6_output_port_net_x0,
      out7 => reinterpret7_output_port_net_x0,
      out8 => reinterpret8_output_port_net_x0,
      out9 => reinterpret9_output_port_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/bus_norm1/debus"

entity debus_entity_d29078a1ae is
  port (
    bus_in: in std_logic_vector(639 downto 0); 
    lsb_out1: out std_logic_vector(19 downto 0); 
    msb_out32: out std_logic_vector(19 downto 0); 
    out10: out std_logic_vector(19 downto 0); 
    out11: out std_logic_vector(19 downto 0); 
    out12: out std_logic_vector(19 downto 0); 
    out13: out std_logic_vector(19 downto 0); 
    out14: out std_logic_vector(19 downto 0); 
    out15: out std_logic_vector(19 downto 0); 
    out16: out std_logic_vector(19 downto 0); 
    out17: out std_logic_vector(19 downto 0); 
    out18: out std_logic_vector(19 downto 0); 
    out19: out std_logic_vector(19 downto 0); 
    out2: out std_logic_vector(19 downto 0); 
    out20: out std_logic_vector(19 downto 0); 
    out21: out std_logic_vector(19 downto 0); 
    out22: out std_logic_vector(19 downto 0); 
    out23: out std_logic_vector(19 downto 0); 
    out24: out std_logic_vector(19 downto 0); 
    out25: out std_logic_vector(19 downto 0); 
    out26: out std_logic_vector(19 downto 0); 
    out27: out std_logic_vector(19 downto 0); 
    out28: out std_logic_vector(19 downto 0); 
    out29: out std_logic_vector(19 downto 0); 
    out3: out std_logic_vector(19 downto 0); 
    out30: out std_logic_vector(19 downto 0); 
    out31: out std_logic_vector(19 downto 0); 
    out4: out std_logic_vector(19 downto 0); 
    out5: out std_logic_vector(19 downto 0); 
    out6: out std_logic_vector(19 downto 0); 
    out7: out std_logic_vector(19 downto 0); 
    out8: out std_logic_vector(19 downto 0); 
    out9: out std_logic_vector(19 downto 0)
  );
end debus_entity_d29078a1ae;

architecture structural of debus_entity_d29078a1ae is
  signal concatenate_y_net_x0: std_logic_vector(639 downto 0);
  signal reinterpret10_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret11_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret12_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret13_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret14_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret15_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret16_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret17_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret18_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret19_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret20_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret21_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret22_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret23_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret24_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret25_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret26_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret27_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret28_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret29_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret30_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret31_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret32_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret5_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret6_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret7_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret8_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret9_output_port_net_x1: std_logic_vector(19 downto 0);
  signal slice10_y_net: std_logic_vector(19 downto 0);
  signal slice11_y_net: std_logic_vector(19 downto 0);
  signal slice12_y_net: std_logic_vector(19 downto 0);
  signal slice13_y_net: std_logic_vector(19 downto 0);
  signal slice14_y_net: std_logic_vector(19 downto 0);
  signal slice15_y_net: std_logic_vector(19 downto 0);
  signal slice16_y_net: std_logic_vector(19 downto 0);
  signal slice17_y_net: std_logic_vector(19 downto 0);
  signal slice18_y_net: std_logic_vector(19 downto 0);
  signal slice19_y_net: std_logic_vector(19 downto 0);
  signal slice1_y_net: std_logic_vector(19 downto 0);
  signal slice20_y_net: std_logic_vector(19 downto 0);
  signal slice21_y_net: std_logic_vector(19 downto 0);
  signal slice22_y_net: std_logic_vector(19 downto 0);
  signal slice23_y_net: std_logic_vector(19 downto 0);
  signal slice24_y_net: std_logic_vector(19 downto 0);
  signal slice25_y_net: std_logic_vector(19 downto 0);
  signal slice26_y_net: std_logic_vector(19 downto 0);
  signal slice27_y_net: std_logic_vector(19 downto 0);
  signal slice28_y_net: std_logic_vector(19 downto 0);
  signal slice29_y_net: std_logic_vector(19 downto 0);
  signal slice2_y_net: std_logic_vector(19 downto 0);
  signal slice30_y_net: std_logic_vector(19 downto 0);
  signal slice31_y_net: std_logic_vector(19 downto 0);
  signal slice32_y_net: std_logic_vector(19 downto 0);
  signal slice3_y_net: std_logic_vector(19 downto 0);
  signal slice4_y_net: std_logic_vector(19 downto 0);
  signal slice5_y_net: std_logic_vector(19 downto 0);
  signal slice6_y_net: std_logic_vector(19 downto 0);
  signal slice7_y_net: std_logic_vector(19 downto 0);
  signal slice8_y_net: std_logic_vector(19 downto 0);
  signal slice9_y_net: std_logic_vector(19 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x1;
  msb_out32 <= reinterpret32_output_port_net_x1;
  out10 <= reinterpret10_output_port_net_x1;
  out11 <= reinterpret11_output_port_net_x1;
  out12 <= reinterpret12_output_port_net_x1;
  out13 <= reinterpret13_output_port_net_x1;
  out14 <= reinterpret14_output_port_net_x1;
  out15 <= reinterpret15_output_port_net_x1;
  out16 <= reinterpret16_output_port_net_x1;
  out17 <= reinterpret17_output_port_net_x1;
  out18 <= reinterpret18_output_port_net_x1;
  out19 <= reinterpret19_output_port_net_x1;
  out2 <= reinterpret2_output_port_net_x1;
  out20 <= reinterpret20_output_port_net_x1;
  out21 <= reinterpret21_output_port_net_x1;
  out22 <= reinterpret22_output_port_net_x1;
  out23 <= reinterpret23_output_port_net_x1;
  out24 <= reinterpret24_output_port_net_x1;
  out25 <= reinterpret25_output_port_net_x1;
  out26 <= reinterpret26_output_port_net_x1;
  out27 <= reinterpret27_output_port_net_x1;
  out28 <= reinterpret28_output_port_net_x1;
  out29 <= reinterpret29_output_port_net_x1;
  out3 <= reinterpret3_output_port_net_x1;
  out30 <= reinterpret30_output_port_net_x1;
  out31 <= reinterpret31_output_port_net_x1;
  out4 <= reinterpret4_output_port_net_x1;
  out5 <= reinterpret5_output_port_net_x1;
  out6 <= reinterpret6_output_port_net_x1;
  out7 <= reinterpret7_output_port_net_x1;
  out8 <= reinterpret8_output_port_net_x1;
  out9 <= reinterpret9_output_port_net_x1;

  reinterpret1: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x1
    );

  reinterpret10: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice10_y_net,
      output_port => reinterpret10_output_port_net_x1
    );

  reinterpret11: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice11_y_net,
      output_port => reinterpret11_output_port_net_x1
    );

  reinterpret12: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice12_y_net,
      output_port => reinterpret12_output_port_net_x1
    );

  reinterpret13: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice13_y_net,
      output_port => reinterpret13_output_port_net_x1
    );

  reinterpret14: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice14_y_net,
      output_port => reinterpret14_output_port_net_x1
    );

  reinterpret15: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice15_y_net,
      output_port => reinterpret15_output_port_net_x1
    );

  reinterpret16: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice16_y_net,
      output_port => reinterpret16_output_port_net_x1
    );

  reinterpret17: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice17_y_net,
      output_port => reinterpret17_output_port_net_x1
    );

  reinterpret18: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice18_y_net,
      output_port => reinterpret18_output_port_net_x1
    );

  reinterpret19: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice19_y_net,
      output_port => reinterpret19_output_port_net_x1
    );

  reinterpret2: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x1
    );

  reinterpret20: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice20_y_net,
      output_port => reinterpret20_output_port_net_x1
    );

  reinterpret21: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice21_y_net,
      output_port => reinterpret21_output_port_net_x1
    );

  reinterpret22: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice22_y_net,
      output_port => reinterpret22_output_port_net_x1
    );

  reinterpret23: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice23_y_net,
      output_port => reinterpret23_output_port_net_x1
    );

  reinterpret24: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice24_y_net,
      output_port => reinterpret24_output_port_net_x1
    );

  reinterpret25: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice25_y_net,
      output_port => reinterpret25_output_port_net_x1
    );

  reinterpret26: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice26_y_net,
      output_port => reinterpret26_output_port_net_x1
    );

  reinterpret27: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice27_y_net,
      output_port => reinterpret27_output_port_net_x1
    );

  reinterpret28: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice28_y_net,
      output_port => reinterpret28_output_port_net_x1
    );

  reinterpret29: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice29_y_net,
      output_port => reinterpret29_output_port_net_x1
    );

  reinterpret3: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x1
    );

  reinterpret30: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice30_y_net,
      output_port => reinterpret30_output_port_net_x1
    );

  reinterpret31: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice31_y_net,
      output_port => reinterpret31_output_port_net_x1
    );

  reinterpret32: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice32_y_net,
      output_port => reinterpret32_output_port_net_x1
    );

  reinterpret4: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x1
    );

  reinterpret5: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_y_net,
      output_port => reinterpret5_output_port_net_x1
    );

  reinterpret6: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret6_output_port_net_x1
    );

  reinterpret7: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret7_output_port_net_x1
    );

  reinterpret8: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret8_output_port_net_x1
    );

  reinterpret9: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice9_y_net,
      output_port => reinterpret9_output_port_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 19,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice10: entity work.xlslice
    generic map (
      new_lsb => 180,
      new_msb => 199,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice10_y_net
    );

  slice11: entity work.xlslice
    generic map (
      new_lsb => 200,
      new_msb => 219,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice11_y_net
    );

  slice12: entity work.xlslice
    generic map (
      new_lsb => 220,
      new_msb => 239,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice12_y_net
    );

  slice13: entity work.xlslice
    generic map (
      new_lsb => 240,
      new_msb => 259,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice13_y_net
    );

  slice14: entity work.xlslice
    generic map (
      new_lsb => 260,
      new_msb => 279,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice14_y_net
    );

  slice15: entity work.xlslice
    generic map (
      new_lsb => 280,
      new_msb => 299,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice15_y_net
    );

  slice16: entity work.xlslice
    generic map (
      new_lsb => 300,
      new_msb => 319,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice16_y_net
    );

  slice17: entity work.xlslice
    generic map (
      new_lsb => 320,
      new_msb => 339,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice17_y_net
    );

  slice18: entity work.xlslice
    generic map (
      new_lsb => 340,
      new_msb => 359,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice18_y_net
    );

  slice19: entity work.xlslice
    generic map (
      new_lsb => 360,
      new_msb => 379,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice19_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 20,
      new_msb => 39,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

  slice20: entity work.xlslice
    generic map (
      new_lsb => 380,
      new_msb => 399,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice20_y_net
    );

  slice21: entity work.xlslice
    generic map (
      new_lsb => 400,
      new_msb => 419,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice21_y_net
    );

  slice22: entity work.xlslice
    generic map (
      new_lsb => 420,
      new_msb => 439,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice22_y_net
    );

  slice23: entity work.xlslice
    generic map (
      new_lsb => 440,
      new_msb => 459,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice23_y_net
    );

  slice24: entity work.xlslice
    generic map (
      new_lsb => 460,
      new_msb => 479,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice24_y_net
    );

  slice25: entity work.xlslice
    generic map (
      new_lsb => 480,
      new_msb => 499,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice25_y_net
    );

  slice26: entity work.xlslice
    generic map (
      new_lsb => 500,
      new_msb => 519,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice26_y_net
    );

  slice27: entity work.xlslice
    generic map (
      new_lsb => 520,
      new_msb => 539,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice27_y_net
    );

  slice28: entity work.xlslice
    generic map (
      new_lsb => 540,
      new_msb => 559,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice28_y_net
    );

  slice29: entity work.xlslice
    generic map (
      new_lsb => 560,
      new_msb => 579,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice29_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 40,
      new_msb => 59,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice3_y_net
    );

  slice30: entity work.xlslice
    generic map (
      new_lsb => 580,
      new_msb => 599,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice30_y_net
    );

  slice31: entity work.xlslice
    generic map (
      new_lsb => 600,
      new_msb => 619,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice31_y_net
    );

  slice32: entity work.xlslice
    generic map (
      new_lsb => 620,
      new_msb => 639,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice32_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 60,
      new_msb => 79,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 80,
      new_msb => 99,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 100,
      new_msb => 119,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 120,
      new_msb => 139,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 140,
      new_msb => 159,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice8_y_net
    );

  slice9: entity work.xlslice
    generic map (
      new_lsb => 160,
      new_msb => 179,
      x_width => 640,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice9_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/bus_norm1"

entity bus_norm1_entity_0dee5d1bb6 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(639 downto 0); 
    dout: out std_logic_vector(671 downto 0)
  );
end bus_norm1_entity_0dee5d1bb6;

architecture structural of bus_norm1_entity_0dee5d1bb6 is
  signal adder_s_net_x32: std_logic_vector(20 downto 0);
  signal adder_s_net_x33: std_logic_vector(20 downto 0);
  signal adder_s_net_x34: std_logic_vector(20 downto 0);
  signal adder_s_net_x35: std_logic_vector(20 downto 0);
  signal adder_s_net_x36: std_logic_vector(20 downto 0);
  signal adder_s_net_x37: std_logic_vector(20 downto 0);
  signal adder_s_net_x38: std_logic_vector(20 downto 0);
  signal adder_s_net_x39: std_logic_vector(20 downto 0);
  signal adder_s_net_x40: std_logic_vector(20 downto 0);
  signal adder_s_net_x41: std_logic_vector(20 downto 0);
  signal adder_s_net_x42: std_logic_vector(20 downto 0);
  signal adder_s_net_x43: std_logic_vector(20 downto 0);
  signal adder_s_net_x44: std_logic_vector(20 downto 0);
  signal adder_s_net_x45: std_logic_vector(20 downto 0);
  signal adder_s_net_x46: std_logic_vector(20 downto 0);
  signal adder_s_net_x47: std_logic_vector(20 downto 0);
  signal adder_s_net_x48: std_logic_vector(20 downto 0);
  signal adder_s_net_x49: std_logic_vector(20 downto 0);
  signal adder_s_net_x50: std_logic_vector(20 downto 0);
  signal adder_s_net_x51: std_logic_vector(20 downto 0);
  signal adder_s_net_x52: std_logic_vector(20 downto 0);
  signal adder_s_net_x53: std_logic_vector(20 downto 0);
  signal adder_s_net_x54: std_logic_vector(20 downto 0);
  signal adder_s_net_x55: std_logic_vector(20 downto 0);
  signal adder_s_net_x56: std_logic_vector(20 downto 0);
  signal adder_s_net_x57: std_logic_vector(20 downto 0);
  signal adder_s_net_x58: std_logic_vector(20 downto 0);
  signal adder_s_net_x59: std_logic_vector(20 downto 0);
  signal adder_s_net_x60: std_logic_vector(20 downto 0);
  signal adder_s_net_x61: std_logic_vector(20 downto 0);
  signal adder_s_net_x62: std_logic_vector(20 downto 0);
  signal adder_s_net_x63: std_logic_vector(20 downto 0);
  signal ce_1_sg_x1124: std_logic;
  signal clk_1_sg_x1124: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(639 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(671 downto 0);
  signal reinterpret10_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret11_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret12_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret13_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret14_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret15_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret16_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret17_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret18_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret19_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret20_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret21_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret22_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret23_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret24_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret25_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret26_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret27_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret28_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret29_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret30_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret31_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret32_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret5_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret6_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret7_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret8_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret9_output_port_net_x1: std_logic_vector(19 downto 0);

begin
  ce_1_sg_x1124 <= ce_1;
  clk_1_sg_x1124 <= clk_1;
  concatenate_y_net_x2 <= din;
  dout <= concatenate_y_net_x3;

  bussify_99cc8f62a8: entity work.bussify_entity_0530fc7e9d
    port map (
      in1 => adder_s_net_x32,
      in10 => adder_s_net_x33,
      in11 => adder_s_net_x34,
      in12 => adder_s_net_x35,
      in13 => adder_s_net_x36,
      in14 => adder_s_net_x37,
      in15 => adder_s_net_x38,
      in16 => adder_s_net_x39,
      in17 => adder_s_net_x40,
      in18 => adder_s_net_x41,
      in19 => adder_s_net_x42,
      in2 => adder_s_net_x43,
      in20 => adder_s_net_x44,
      in21 => adder_s_net_x45,
      in22 => adder_s_net_x46,
      in23 => adder_s_net_x47,
      in24 => adder_s_net_x48,
      in25 => adder_s_net_x49,
      in26 => adder_s_net_x50,
      in27 => adder_s_net_x51,
      in28 => adder_s_net_x52,
      in29 => adder_s_net_x53,
      in3 => adder_s_net_x54,
      in30 => adder_s_net_x55,
      in31 => adder_s_net_x56,
      in32 => adder_s_net_x57,
      in4 => adder_s_net_x58,
      in5 => adder_s_net_x59,
      in6 => adder_s_net_x60,
      in7 => adder_s_net_x61,
      in8 => adder_s_net_x62,
      in9 => adder_s_net_x63,
      bus_out => concatenate_y_net_x3
    );

  conv10_f5e5327d7c: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret23_output_port_net_x1,
      out_x0 => adder_s_net_x33
    );

  conv11_ad53a78104: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret22_output_port_net_x1,
      out_x0 => adder_s_net_x34
    );

  conv12_26be7b2f6a: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret21_output_port_net_x1,
      out_x0 => adder_s_net_x35
    );

  conv13_c4ffd050b2: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret20_output_port_net_x1,
      out_x0 => adder_s_net_x36
    );

  conv14_ce1fc9ae1e: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret19_output_port_net_x1,
      out_x0 => adder_s_net_x37
    );

  conv15_c17f3691d9: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret18_output_port_net_x1,
      out_x0 => adder_s_net_x38
    );

  conv16_08b8fe0c99: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret17_output_port_net_x1,
      out_x0 => adder_s_net_x39
    );

  conv17_e6cea4fc64: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret16_output_port_net_x1,
      out_x0 => adder_s_net_x40
    );

  conv18_0c2a01a098: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret15_output_port_net_x1,
      out_x0 => adder_s_net_x41
    );

  conv19_9efe05f7bc: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret14_output_port_net_x1,
      out_x0 => adder_s_net_x42
    );

  conv1_4145e3db46: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret32_output_port_net_x1,
      out_x0 => adder_s_net_x32
    );

  conv20_f30f59a18a: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret13_output_port_net_x1,
      out_x0 => adder_s_net_x44
    );

  conv21_2fec53af3c: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret12_output_port_net_x1,
      out_x0 => adder_s_net_x45
    );

  conv22_b2d8266d20: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret11_output_port_net_x1,
      out_x0 => adder_s_net_x46
    );

  conv23_22014ad03d: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret10_output_port_net_x1,
      out_x0 => adder_s_net_x47
    );

  conv24_f70a306fb1: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret9_output_port_net_x1,
      out_x0 => adder_s_net_x48
    );

  conv25_36680c7459: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret8_output_port_net_x1,
      out_x0 => adder_s_net_x49
    );

  conv26_75ec847b0a: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret7_output_port_net_x1,
      out_x0 => adder_s_net_x50
    );

  conv27_38208ca2d1: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret6_output_port_net_x1,
      out_x0 => adder_s_net_x51
    );

  conv28_ab118c94ec: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret5_output_port_net_x1,
      out_x0 => adder_s_net_x52
    );

  conv29_c41b206ff6: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret4_output_port_net_x1,
      out_x0 => adder_s_net_x53
    );

  conv2_6f95c8d068: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret31_output_port_net_x1,
      out_x0 => adder_s_net_x43
    );

  conv30_82910a0272: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret3_output_port_net_x1,
      out_x0 => adder_s_net_x55
    );

  conv31_6714935fb5: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret2_output_port_net_x1,
      out_x0 => adder_s_net_x56
    );

  conv32_faf43aa72c: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret1_output_port_net_x1,
      out_x0 => adder_s_net_x57
    );

  conv3_fd2f91effd: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret30_output_port_net_x1,
      out_x0 => adder_s_net_x54
    );

  conv4_6a9f7bb171: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret29_output_port_net_x1,
      out_x0 => adder_s_net_x58
    );

  conv5_2f316484cd: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret28_output_port_net_x1,
      out_x0 => adder_s_net_x59
    );

  conv6_48a1a6f41b: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret27_output_port_net_x1,
      out_x0 => adder_s_net_x60
    );

  conv7_93e6eda8cd: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret26_output_port_net_x1,
      out_x0 => adder_s_net_x61
    );

  conv8_5c10bb2205: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret25_output_port_net_x1,
      out_x0 => adder_s_net_x62
    );

  conv9_a90644a423: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1124,
      clk_1 => clk_1_sg_x1124,
      in_x0 => reinterpret24_output_port_net_x1,
      out_x0 => adder_s_net_x63
    );

  debus_d29078a1ae: entity work.debus_entity_d29078a1ae
    port map (
      bus_in => concatenate_y_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out32 => reinterpret32_output_port_net_x1,
      out10 => reinterpret10_output_port_net_x1,
      out11 => reinterpret11_output_port_net_x1,
      out12 => reinterpret12_output_port_net_x1,
      out13 => reinterpret13_output_port_net_x1,
      out14 => reinterpret14_output_port_net_x1,
      out15 => reinterpret15_output_port_net_x1,
      out16 => reinterpret16_output_port_net_x1,
      out17 => reinterpret17_output_port_net_x1,
      out18 => reinterpret18_output_port_net_x1,
      out19 => reinterpret19_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out20 => reinterpret20_output_port_net_x1,
      out21 => reinterpret21_output_port_net_x1,
      out22 => reinterpret22_output_port_net_x1,
      out23 => reinterpret23_output_port_net_x1,
      out24 => reinterpret24_output_port_net_x1,
      out25 => reinterpret25_output_port_net_x1,
      out26 => reinterpret26_output_port_net_x1,
      out27 => reinterpret27_output_port_net_x1,
      out28 => reinterpret28_output_port_net_x1,
      out29 => reinterpret29_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1,
      out30 => reinterpret30_output_port_net_x1,
      out31 => reinterpret31_output_port_net_x1,
      out4 => reinterpret4_output_port_net_x1,
      out5 => reinterpret5_output_port_net_x1,
      out6 => reinterpret6_output_port_net_x1,
      out7 => reinterpret7_output_port_net_x1,
      out8 => reinterpret8_output_port_net_x1,
      out9 => reinterpret9_output_port_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/bus_relational/b_debus"

entity b_debus_entity_499e8421d4 is
  port (
    bus_in: in std_logic_vector(31 downto 0); 
    lsb_out1: out std_logic_vector(3 downto 0); 
    msb_out8: out std_logic_vector(3 downto 0); 
    out2: out std_logic_vector(3 downto 0); 
    out3: out std_logic_vector(3 downto 0); 
    out4: out std_logic_vector(3 downto 0); 
    out5: out std_logic_vector(3 downto 0); 
    out6: out std_logic_vector(3 downto 0); 
    out7: out std_logic_vector(3 downto 0)
  );
end b_debus_entity_499e8421d4;

architecture structural of b_debus_entity_499e8421d4 is
  signal reinterpret1_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret_out_output_port_net_x0: std_logic_vector(31 downto 0);
  signal slice1_y_net: std_logic_vector(3 downto 0);
  signal slice2_y_net: std_logic_vector(3 downto 0);
  signal slice3_y_net: std_logic_vector(3 downto 0);
  signal slice4_y_net: std_logic_vector(3 downto 0);
  signal slice5_y_net: std_logic_vector(3 downto 0);
  signal slice6_y_net: std_logic_vector(3 downto 0);
  signal slice7_y_net: std_logic_vector(3 downto 0);
  signal slice8_y_net: std_logic_vector(3 downto 0);

begin
  reinterpret_out_output_port_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out8 <= reinterpret8_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;
  out4 <= reinterpret4_output_port_net_x0;
  out5 <= reinterpret5_output_port_net_x0;
  out6 <= reinterpret6_output_port_net_x0;
  out7 <= reinterpret7_output_port_net_x0;

  reinterpret1: entity work.reinterpret_d610556e85
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_d610556e85
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_d610556e85
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_d610556e85
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  reinterpret5: entity work.reinterpret_d610556e85
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_y_net,
      output_port => reinterpret5_output_port_net_x0
    );

  reinterpret6: entity work.reinterpret_d610556e85
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret6_output_port_net_x0
    );

  reinterpret7: entity work.reinterpret_d610556e85
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret7_output_port_net_x0
    );

  reinterpret8: entity work.reinterpret_d610556e85
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret8_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 3,
      x_width => 32,
      y_width => 4
    )
    port map (
      x => reinterpret_out_output_port_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 7,
      x_width => 32,
      y_width => 4
    )
    port map (
      x => reinterpret_out_output_port_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 8,
      new_msb => 11,
      x_width => 32,
      y_width => 4
    )
    port map (
      x => reinterpret_out_output_port_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 12,
      new_msb => 15,
      x_width => 32,
      y_width => 4
    )
    port map (
      x => reinterpret_out_output_port_net_x0,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 16,
      new_msb => 19,
      x_width => 32,
      y_width => 4
    )
    port map (
      x => reinterpret_out_output_port_net_x0,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 20,
      new_msb => 23,
      x_width => 32,
      y_width => 4
    )
    port map (
      x => reinterpret_out_output_port_net_x0,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 24,
      new_msb => 27,
      x_width => 32,
      y_width => 4
    )
    port map (
      x => reinterpret_out_output_port_net_x0,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 28,
      new_msb => 31,
      x_width => 32,
      y_width => 4
    )
    port map (
      x => reinterpret_out_output_port_net_x0,
      y => slice8_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/bus_relational/bussify"

entity bussify_entity_cf86712567 is
  port (
    in1: in std_logic; 
    in2: in std_logic; 
    in3: in std_logic; 
    in4: in std_logic; 
    in5: in std_logic; 
    in6: in std_logic; 
    in7: in std_logic; 
    in8: in std_logic; 
    bus_out: out std_logic_vector(7 downto 0)
  );
end bussify_entity_cf86712567;

architecture structural of bussify_entity_cf86712567 is
  signal concatenate_y_net_x0: std_logic_vector(7 downto 0);
  signal reinterpret1_output_port_net: std_logic;
  signal reinterpret2_output_port_net: std_logic;
  signal reinterpret3_output_port_net: std_logic;
  signal reinterpret4_output_port_net: std_logic;
  signal reinterpret5_output_port_net: std_logic;
  signal reinterpret6_output_port_net: std_logic;
  signal reinterpret7_output_port_net: std_logic;
  signal reinterpret8_output_port_net: std_logic;
  signal relational1_op_net_x0: std_logic;
  signal relational2_op_net_x0: std_logic;
  signal relational3_op_net_x0: std_logic;
  signal relational4_op_net_x0: std_logic;
  signal relational5_op_net_x0: std_logic;
  signal relational6_op_net_x0: std_logic;
  signal relational7_op_net_x0: std_logic;
  signal relational8_op_net_x0: std_logic;

begin
  relational1_op_net_x0 <= in1;
  relational2_op_net_x0 <= in2;
  relational3_op_net_x0 <= in3;
  relational4_op_net_x0 <= in4;
  relational5_op_net_x0 <= in5;
  relational6_op_net_x0 <= in6;
  relational7_op_net_x0 <= in7;
  relational8_op_net_x0 <= in8;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_7673b9b993
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => reinterpret1_output_port_net,
      in1(0) => reinterpret2_output_port_net,
      in2(0) => reinterpret3_output_port_net,
      in3(0) => reinterpret4_output_port_net,
      in4(0) => reinterpret5_output_port_net,
      in5(0) => reinterpret6_output_port_net,
      in6(0) => reinterpret7_output_port_net,
      in7(0) => reinterpret8_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => relational1_op_net_x0,
      output_port(0) => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => relational2_op_net_x0,
      output_port(0) => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => relational3_op_net_x0,
      output_port(0) => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => relational4_op_net_x0,
      output_port(0) => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => relational5_op_net_x0,
      output_port(0) => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => relational6_op_net_x0,
      output_port(0) => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => relational7_op_net_x0,
      output_port(0) => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => relational8_op_net_x0,
      output_port(0) => reinterpret8_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/bus_relational"

entity bus_relational_entity_1e17d15490 is
  port (
    a: in std_logic_vector(3 downto 0); 
    b: in std_logic_vector(31 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    a_b: out std_logic_vector(7 downto 0)
  );
end bus_relational_entity_1e17d15490;

architecture structural of bus_relational_entity_1e17d15490 is
  signal ce_1_sg_x1125: std_logic;
  signal clk_1_sg_x1125: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(7 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(3 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret_out_output_port_net_x1: std_logic_vector(31 downto 0);
  signal relational1_op_net_x0: std_logic;
  signal relational2_op_net_x0: std_logic;
  signal relational3_op_net_x0: std_logic;
  signal relational4_op_net_x0: std_logic;
  signal relational5_op_net_x0: std_logic;
  signal relational6_op_net_x0: std_logic;
  signal relational7_op_net_x0: std_logic;
  signal relational8_op_net_x0: std_logic;

begin
  constant_op_net_x1 <= a;
  reinterpret_out_output_port_net_x1 <= b;
  ce_1_sg_x1125 <= ce_1;
  clk_1_sg_x1125 <= clk_1;
  a_b <= concatenate_y_net_x1;

  a_debus_9704efafb3: entity work.a_debus_entity_778d2a5625
    port map (
      bus_in => constant_op_net_x1,
      msb_lsb_out1 => reinterpret1_output_port_net_x0
    );

  b_debus_499e8421d4: entity work.b_debus_entity_499e8421d4
    port map (
      bus_in => reinterpret_out_output_port_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out8 => reinterpret8_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0,
      out4 => reinterpret4_output_port_net_x0,
      out5 => reinterpret5_output_port_net_x0,
      out6 => reinterpret6_output_port_net_x0,
      out7 => reinterpret7_output_port_net_x0
    );

  bussify_cf86712567: entity work.bussify_entity_cf86712567
    port map (
      in1 => relational1_op_net_x0,
      in2 => relational2_op_net_x0,
      in3 => relational3_op_net_x0,
      in4 => relational4_op_net_x0,
      in5 => relational5_op_net_x0,
      in6 => relational6_op_net_x0,
      in7 => relational7_op_net_x0,
      in8 => relational8_op_net_x0,
      bus_out => concatenate_y_net_x1
    );

  relational1: entity work.relational_01718d4f17
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret8_output_port_net_x0,
      ce => ce_1_sg_x1125,
      clk => clk_1_sg_x1125,
      clr => '0',
      op(0) => relational1_op_net_x0
    );

  relational2: entity work.relational_01718d4f17
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret7_output_port_net_x0,
      ce => ce_1_sg_x1125,
      clk => clk_1_sg_x1125,
      clr => '0',
      op(0) => relational2_op_net_x0
    );

  relational3: entity work.relational_01718d4f17
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret6_output_port_net_x0,
      ce => ce_1_sg_x1125,
      clk => clk_1_sg_x1125,
      clr => '0',
      op(0) => relational3_op_net_x0
    );

  relational4: entity work.relational_01718d4f17
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret5_output_port_net_x0,
      ce => ce_1_sg_x1125,
      clk => clk_1_sg_x1125,
      clr => '0',
      op(0) => relational4_op_net_x0
    );

  relational5: entity work.relational_01718d4f17
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret4_output_port_net_x0,
      ce => ce_1_sg_x1125,
      clk => clk_1_sg_x1125,
      clr => '0',
      op(0) => relational5_op_net_x0
    );

  relational6: entity work.relational_01718d4f17
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret3_output_port_net_x0,
      ce => ce_1_sg_x1125,
      clk => clk_1_sg_x1125,
      clr => '0',
      op(0) => relational6_op_net_x0
    );

  relational7: entity work.relational_01718d4f17
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret2_output_port_net_x0,
      ce => ce_1_sg_x1125,
      clk => clk_1_sg_x1125,
      clr => '0',
      op(0) => relational7_op_net_x0
    );

  relational8: entity work.relational_01718d4f17
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret1_output_port_net_x1,
      ce => ce_1_sg_x1125,
      clk => clk_1_sg_x1125,
      clr => '0',
      op(0) => relational8_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/bus_scale/bussify"

entity bussify_entity_16c7c0fc3c is
  port (
    in1: in std_logic_vector(19 downto 0); 
    in10: in std_logic_vector(19 downto 0); 
    in11: in std_logic_vector(19 downto 0); 
    in12: in std_logic_vector(19 downto 0); 
    in13: in std_logic_vector(19 downto 0); 
    in14: in std_logic_vector(19 downto 0); 
    in15: in std_logic_vector(19 downto 0); 
    in16: in std_logic_vector(19 downto 0); 
    in17: in std_logic_vector(19 downto 0); 
    in18: in std_logic_vector(19 downto 0); 
    in19: in std_logic_vector(19 downto 0); 
    in2: in std_logic_vector(19 downto 0); 
    in20: in std_logic_vector(19 downto 0); 
    in21: in std_logic_vector(19 downto 0); 
    in22: in std_logic_vector(19 downto 0); 
    in23: in std_logic_vector(19 downto 0); 
    in24: in std_logic_vector(19 downto 0); 
    in25: in std_logic_vector(19 downto 0); 
    in26: in std_logic_vector(19 downto 0); 
    in27: in std_logic_vector(19 downto 0); 
    in28: in std_logic_vector(19 downto 0); 
    in29: in std_logic_vector(19 downto 0); 
    in3: in std_logic_vector(19 downto 0); 
    in30: in std_logic_vector(19 downto 0); 
    in31: in std_logic_vector(19 downto 0); 
    in32: in std_logic_vector(19 downto 0); 
    in4: in std_logic_vector(19 downto 0); 
    in5: in std_logic_vector(19 downto 0); 
    in6: in std_logic_vector(19 downto 0); 
    in7: in std_logic_vector(19 downto 0); 
    in8: in std_logic_vector(19 downto 0); 
    in9: in std_logic_vector(19 downto 0); 
    bus_out: out std_logic_vector(639 downto 0)
  );
end bussify_entity_16c7c0fc3c;

architecture structural of bussify_entity_16c7c0fc3c is
  signal concatenate_y_net_x3: std_logic_vector(639 downto 0);
  signal reinterpret10_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret11_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret12_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret13_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret14_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret15_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret16_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret17_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret18_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret19_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret20_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret21_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret22_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret23_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret24_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret25_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret26_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret27_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret28_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret29_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret30_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret31_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret32_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret9_output_port_net: std_logic_vector(19 downto 0);
  signal scale10_op_net_x0: std_logic_vector(19 downto 0);
  signal scale11_op_net_x0: std_logic_vector(19 downto 0);
  signal scale12_op_net_x0: std_logic_vector(19 downto 0);
  signal scale13_op_net_x0: std_logic_vector(19 downto 0);
  signal scale14_op_net_x0: std_logic_vector(19 downto 0);
  signal scale15_op_net_x0: std_logic_vector(19 downto 0);
  signal scale16_op_net_x0: std_logic_vector(19 downto 0);
  signal scale17_op_net_x0: std_logic_vector(19 downto 0);
  signal scale18_op_net_x0: std_logic_vector(19 downto 0);
  signal scale19_op_net_x0: std_logic_vector(19 downto 0);
  signal scale1_op_net_x0: std_logic_vector(19 downto 0);
  signal scale20_op_net_x0: std_logic_vector(19 downto 0);
  signal scale21_op_net_x0: std_logic_vector(19 downto 0);
  signal scale22_op_net_x0: std_logic_vector(19 downto 0);
  signal scale23_op_net_x0: std_logic_vector(19 downto 0);
  signal scale24_op_net_x0: std_logic_vector(19 downto 0);
  signal scale25_op_net_x0: std_logic_vector(19 downto 0);
  signal scale26_op_net_x0: std_logic_vector(19 downto 0);
  signal scale27_op_net_x0: std_logic_vector(19 downto 0);
  signal scale28_op_net_x0: std_logic_vector(19 downto 0);
  signal scale29_op_net_x0: std_logic_vector(19 downto 0);
  signal scale2_op_net_x0: std_logic_vector(19 downto 0);
  signal scale30_op_net_x0: std_logic_vector(19 downto 0);
  signal scale31_op_net_x0: std_logic_vector(19 downto 0);
  signal scale32_op_net_x0: std_logic_vector(19 downto 0);
  signal scale3_op_net_x0: std_logic_vector(19 downto 0);
  signal scale4_op_net_x0: std_logic_vector(19 downto 0);
  signal scale5_op_net_x0: std_logic_vector(19 downto 0);
  signal scale6_op_net_x0: std_logic_vector(19 downto 0);
  signal scale7_op_net_x0: std_logic_vector(19 downto 0);
  signal scale8_op_net_x0: std_logic_vector(19 downto 0);
  signal scale9_op_net_x0: std_logic_vector(19 downto 0);

begin
  scale1_op_net_x0 <= in1;
  scale10_op_net_x0 <= in10;
  scale11_op_net_x0 <= in11;
  scale12_op_net_x0 <= in12;
  scale13_op_net_x0 <= in13;
  scale14_op_net_x0 <= in14;
  scale15_op_net_x0 <= in15;
  scale16_op_net_x0 <= in16;
  scale17_op_net_x0 <= in17;
  scale18_op_net_x0 <= in18;
  scale19_op_net_x0 <= in19;
  scale2_op_net_x0 <= in2;
  scale20_op_net_x0 <= in20;
  scale21_op_net_x0 <= in21;
  scale22_op_net_x0 <= in22;
  scale23_op_net_x0 <= in23;
  scale24_op_net_x0 <= in24;
  scale25_op_net_x0 <= in25;
  scale26_op_net_x0 <= in26;
  scale27_op_net_x0 <= in27;
  scale28_op_net_x0 <= in28;
  scale29_op_net_x0 <= in29;
  scale3_op_net_x0 <= in3;
  scale30_op_net_x0 <= in30;
  scale31_op_net_x0 <= in31;
  scale32_op_net_x0 <= in32;
  scale4_op_net_x0 <= in4;
  scale5_op_net_x0 <= in5;
  scale6_op_net_x0 <= in6;
  scale7_op_net_x0 <= in7;
  scale8_op_net_x0 <= in8;
  scale9_op_net_x0 <= in9;
  bus_out <= concatenate_y_net_x3;

  concatenate: entity work.concat_55e429ab82
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in10 => reinterpret11_output_port_net,
      in11 => reinterpret12_output_port_net,
      in12 => reinterpret13_output_port_net,
      in13 => reinterpret14_output_port_net,
      in14 => reinterpret15_output_port_net,
      in15 => reinterpret16_output_port_net,
      in16 => reinterpret17_output_port_net,
      in17 => reinterpret18_output_port_net,
      in18 => reinterpret19_output_port_net,
      in19 => reinterpret20_output_port_net,
      in2 => reinterpret3_output_port_net,
      in20 => reinterpret21_output_port_net,
      in21 => reinterpret22_output_port_net,
      in22 => reinterpret23_output_port_net,
      in23 => reinterpret24_output_port_net,
      in24 => reinterpret25_output_port_net,
      in25 => reinterpret26_output_port_net,
      in26 => reinterpret27_output_port_net,
      in27 => reinterpret28_output_port_net,
      in28 => reinterpret29_output_port_net,
      in29 => reinterpret30_output_port_net,
      in3 => reinterpret4_output_port_net,
      in30 => reinterpret31_output_port_net,
      in31 => reinterpret32_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      in8 => reinterpret9_output_port_net,
      in9 => reinterpret10_output_port_net,
      y => concatenate_y_net_x3
    );

  reinterpret1: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale1_op_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret10: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale10_op_net_x0,
      output_port => reinterpret10_output_port_net
    );

  reinterpret11: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale11_op_net_x0,
      output_port => reinterpret11_output_port_net
    );

  reinterpret12: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale12_op_net_x0,
      output_port => reinterpret12_output_port_net
    );

  reinterpret13: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale13_op_net_x0,
      output_port => reinterpret13_output_port_net
    );

  reinterpret14: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale14_op_net_x0,
      output_port => reinterpret14_output_port_net
    );

  reinterpret15: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale15_op_net_x0,
      output_port => reinterpret15_output_port_net
    );

  reinterpret16: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale16_op_net_x0,
      output_port => reinterpret16_output_port_net
    );

  reinterpret17: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale17_op_net_x0,
      output_port => reinterpret17_output_port_net
    );

  reinterpret18: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale18_op_net_x0,
      output_port => reinterpret18_output_port_net
    );

  reinterpret19: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale19_op_net_x0,
      output_port => reinterpret19_output_port_net
    );

  reinterpret2: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale2_op_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret20: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale20_op_net_x0,
      output_port => reinterpret20_output_port_net
    );

  reinterpret21: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale21_op_net_x0,
      output_port => reinterpret21_output_port_net
    );

  reinterpret22: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale22_op_net_x0,
      output_port => reinterpret22_output_port_net
    );

  reinterpret23: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale23_op_net_x0,
      output_port => reinterpret23_output_port_net
    );

  reinterpret24: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale24_op_net_x0,
      output_port => reinterpret24_output_port_net
    );

  reinterpret25: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale25_op_net_x0,
      output_port => reinterpret25_output_port_net
    );

  reinterpret26: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale26_op_net_x0,
      output_port => reinterpret26_output_port_net
    );

  reinterpret27: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale27_op_net_x0,
      output_port => reinterpret27_output_port_net
    );

  reinterpret28: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale28_op_net_x0,
      output_port => reinterpret28_output_port_net
    );

  reinterpret29: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale29_op_net_x0,
      output_port => reinterpret29_output_port_net
    );

  reinterpret3: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale3_op_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret30: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale30_op_net_x0,
      output_port => reinterpret30_output_port_net
    );

  reinterpret31: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale31_op_net_x0,
      output_port => reinterpret31_output_port_net
    );

  reinterpret32: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale32_op_net_x0,
      output_port => reinterpret32_output_port_net
    );

  reinterpret4: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale4_op_net_x0,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale5_op_net_x0,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale6_op_net_x0,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale7_op_net_x0,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale8_op_net_x0,
      output_port => reinterpret8_output_port_net
    );

  reinterpret9: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale9_op_net_x0,
      output_port => reinterpret9_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/bus_scale"

entity bus_scale_entity_cd744f068b is
  port (
    din: in std_logic_vector(639 downto 0); 
    dout: out std_logic_vector(639 downto 0)
  );
end bus_scale_entity_cd744f068b;

architecture structural of bus_scale_entity_cd744f068b is
  signal concat_y_net_x3: std_logic_vector(639 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(639 downto 0);
  signal reinterpret10_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret11_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret12_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret13_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret14_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret15_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret16_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret17_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret18_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret19_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret20_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret21_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret22_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret23_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret24_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret25_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret26_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret27_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret28_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret29_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret30_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret31_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret32_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret9_output_port_net_x0: std_logic_vector(19 downto 0);
  signal scale10_op_net_x0: std_logic_vector(19 downto 0);
  signal scale11_op_net_x0: std_logic_vector(19 downto 0);
  signal scale12_op_net_x0: std_logic_vector(19 downto 0);
  signal scale13_op_net_x0: std_logic_vector(19 downto 0);
  signal scale14_op_net_x0: std_logic_vector(19 downto 0);
  signal scale15_op_net_x0: std_logic_vector(19 downto 0);
  signal scale16_op_net_x0: std_logic_vector(19 downto 0);
  signal scale17_op_net_x0: std_logic_vector(19 downto 0);
  signal scale18_op_net_x0: std_logic_vector(19 downto 0);
  signal scale19_op_net_x0: std_logic_vector(19 downto 0);
  signal scale1_op_net_x0: std_logic_vector(19 downto 0);
  signal scale20_op_net_x0: std_logic_vector(19 downto 0);
  signal scale21_op_net_x0: std_logic_vector(19 downto 0);
  signal scale22_op_net_x0: std_logic_vector(19 downto 0);
  signal scale23_op_net_x0: std_logic_vector(19 downto 0);
  signal scale24_op_net_x0: std_logic_vector(19 downto 0);
  signal scale25_op_net_x0: std_logic_vector(19 downto 0);
  signal scale26_op_net_x0: std_logic_vector(19 downto 0);
  signal scale27_op_net_x0: std_logic_vector(19 downto 0);
  signal scale28_op_net_x0: std_logic_vector(19 downto 0);
  signal scale29_op_net_x0: std_logic_vector(19 downto 0);
  signal scale2_op_net_x0: std_logic_vector(19 downto 0);
  signal scale30_op_net_x0: std_logic_vector(19 downto 0);
  signal scale31_op_net_x0: std_logic_vector(19 downto 0);
  signal scale32_op_net_x0: std_logic_vector(19 downto 0);
  signal scale3_op_net_x0: std_logic_vector(19 downto 0);
  signal scale4_op_net_x0: std_logic_vector(19 downto 0);
  signal scale5_op_net_x0: std_logic_vector(19 downto 0);
  signal scale6_op_net_x0: std_logic_vector(19 downto 0);
  signal scale7_op_net_x0: std_logic_vector(19 downto 0);
  signal scale8_op_net_x0: std_logic_vector(19 downto 0);
  signal scale9_op_net_x0: std_logic_vector(19 downto 0);

begin
  concat_y_net_x3 <= din;
  dout <= concatenate_y_net_x4;

  bussify_16c7c0fc3c: entity work.bussify_entity_16c7c0fc3c
    port map (
      in1 => scale1_op_net_x0,
      in10 => scale10_op_net_x0,
      in11 => scale11_op_net_x0,
      in12 => scale12_op_net_x0,
      in13 => scale13_op_net_x0,
      in14 => scale14_op_net_x0,
      in15 => scale15_op_net_x0,
      in16 => scale16_op_net_x0,
      in17 => scale17_op_net_x0,
      in18 => scale18_op_net_x0,
      in19 => scale19_op_net_x0,
      in2 => scale2_op_net_x0,
      in20 => scale20_op_net_x0,
      in21 => scale21_op_net_x0,
      in22 => scale22_op_net_x0,
      in23 => scale23_op_net_x0,
      in24 => scale24_op_net_x0,
      in25 => scale25_op_net_x0,
      in26 => scale26_op_net_x0,
      in27 => scale27_op_net_x0,
      in28 => scale28_op_net_x0,
      in29 => scale29_op_net_x0,
      in3 => scale3_op_net_x0,
      in30 => scale30_op_net_x0,
      in31 => scale31_op_net_x0,
      in32 => scale32_op_net_x0,
      in4 => scale4_op_net_x0,
      in5 => scale5_op_net_x0,
      in6 => scale6_op_net_x0,
      in7 => scale7_op_net_x0,
      in8 => scale8_op_net_x0,
      in9 => scale9_op_net_x0,
      bus_out => concatenate_y_net_x4
    );

  debus_79d83345a0: entity work.debus_entity_f695188bbc
    port map (
      bus_in => concat_y_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out32 => reinterpret32_output_port_net_x0,
      out10 => reinterpret10_output_port_net_x0,
      out11 => reinterpret11_output_port_net_x0,
      out12 => reinterpret12_output_port_net_x0,
      out13 => reinterpret13_output_port_net_x0,
      out14 => reinterpret14_output_port_net_x0,
      out15 => reinterpret15_output_port_net_x0,
      out16 => reinterpret16_output_port_net_x0,
      out17 => reinterpret17_output_port_net_x0,
      out18 => reinterpret18_output_port_net_x0,
      out19 => reinterpret19_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out20 => reinterpret20_output_port_net_x0,
      out21 => reinterpret21_output_port_net_x0,
      out22 => reinterpret22_output_port_net_x0,
      out23 => reinterpret23_output_port_net_x0,
      out24 => reinterpret24_output_port_net_x0,
      out25 => reinterpret25_output_port_net_x0,
      out26 => reinterpret26_output_port_net_x0,
      out27 => reinterpret27_output_port_net_x0,
      out28 => reinterpret28_output_port_net_x0,
      out29 => reinterpret29_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0,
      out30 => reinterpret30_output_port_net_x0,
      out31 => reinterpret31_output_port_net_x0,
      out4 => reinterpret4_output_port_net_x0,
      out5 => reinterpret5_output_port_net_x0,
      out6 => reinterpret6_output_port_net_x0,
      out7 => reinterpret7_output_port_net_x0,
      out8 => reinterpret8_output_port_net_x0,
      out9 => reinterpret9_output_port_net_x0
    );

  scale1: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret32_output_port_net_x0,
      op => scale1_op_net_x0
    );

  scale10: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret23_output_port_net_x0,
      op => scale10_op_net_x0
    );

  scale11: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret22_output_port_net_x0,
      op => scale11_op_net_x0
    );

  scale12: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret21_output_port_net_x0,
      op => scale12_op_net_x0
    );

  scale13: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret20_output_port_net_x0,
      op => scale13_op_net_x0
    );

  scale14: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret19_output_port_net_x0,
      op => scale14_op_net_x0
    );

  scale15: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret18_output_port_net_x0,
      op => scale15_op_net_x0
    );

  scale16: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret17_output_port_net_x0,
      op => scale16_op_net_x0
    );

  scale17: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret16_output_port_net_x0,
      op => scale17_op_net_x0
    );

  scale18: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret15_output_port_net_x0,
      op => scale18_op_net_x0
    );

  scale19: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret14_output_port_net_x0,
      op => scale19_op_net_x0
    );

  scale2: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret31_output_port_net_x0,
      op => scale2_op_net_x0
    );

  scale20: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret13_output_port_net_x0,
      op => scale20_op_net_x0
    );

  scale21: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret12_output_port_net_x0,
      op => scale21_op_net_x0
    );

  scale22: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret11_output_port_net_x0,
      op => scale22_op_net_x0
    );

  scale23: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret10_output_port_net_x0,
      op => scale23_op_net_x0
    );

  scale24: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret9_output_port_net_x0,
      op => scale24_op_net_x0
    );

  scale25: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret8_output_port_net_x0,
      op => scale25_op_net_x0
    );

  scale26: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret7_output_port_net_x0,
      op => scale26_op_net_x0
    );

  scale27: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret6_output_port_net_x0,
      op => scale27_op_net_x0
    );

  scale28: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret5_output_port_net_x0,
      op => scale28_op_net_x0
    );

  scale29: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret4_output_port_net_x0,
      op => scale29_op_net_x0
    );

  scale3: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret30_output_port_net_x0,
      op => scale3_op_net_x0
    );

  scale30: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret3_output_port_net_x0,
      op => scale30_op_net_x0
    );

  scale31: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret2_output_port_net_x0,
      op => scale31_op_net_x0
    );

  scale32: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret1_output_port_net_x0,
      op => scale32_op_net_x0
    );

  scale4: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret29_output_port_net_x0,
      op => scale4_op_net_x0
    );

  scale5: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret28_output_port_net_x0,
      op => scale5_op_net_x0
    );

  scale6: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret27_output_port_net_x0,
      op => scale6_op_net_x0
    );

  scale7: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret26_output_port_net_x0,
      op => scale7_op_net_x0
    );

  scale8: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret25_output_port_net_x0,
      op => scale8_op_net_x0
    );

  scale9: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret24_output_port_net_x0,
      op => scale9_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/bus_sub"

entity bus_sub_entity_4c6bda2888 is
  port (
    a: in std_logic_vector(287 downto 0); 
    b: in std_logic_vector(303 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    dout: out std_logic_vector(319 downto 0)
  );
end bus_sub_entity_4c6bda2888;

architecture structural of bus_sub_entity_4c6bda2888 is
  signal addsub10_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub11_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub12_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub13_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub14_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub15_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub16_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub1_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub2_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub3_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub4_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub5_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub6_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub7_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub8_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub9_s_net_x0: std_logic_vector(19 downto 0);
  signal ce_1_sg_x1126: std_logic;
  signal clk_1_sg_x1126: std_logic;
  signal concatenate_y_net_x4: std_logic_vector(303 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(319 downto 0);
  signal reinterpret10_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret10_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret11_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret11_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret12_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret12_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret13_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret13_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret14_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret14_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret15_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret15_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret16_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret16_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(287 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret5_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret6_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret7_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret8_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret9_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret9_output_port_net_x1: std_logic_vector(18 downto 0);

begin
  reinterpret1_output_port_net_x5 <= a;
  concatenate_y_net_x4 <= b;
  ce_1_sg_x1126 <= ce_1;
  clk_1_sg_x1126 <= clk_1;
  dout <= concatenate_y_net_x5;

  a_debus_db9d46821f: entity work.a_debus_entity_49512ad2c7
    port map (
      bus_in => reinterpret1_output_port_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out16 => reinterpret16_output_port_net_x0,
      out10 => reinterpret10_output_port_net_x0,
      out11 => reinterpret11_output_port_net_x0,
      out12 => reinterpret12_output_port_net_x0,
      out13 => reinterpret13_output_port_net_x0,
      out14 => reinterpret14_output_port_net_x0,
      out15 => reinterpret15_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0,
      out4 => reinterpret4_output_port_net_x0,
      out5 => reinterpret5_output_port_net_x0,
      out6 => reinterpret6_output_port_net_x0,
      out7 => reinterpret7_output_port_net_x0,
      out8 => reinterpret8_output_port_net_x0,
      out9 => reinterpret9_output_port_net_x0
    );

  addsub1: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret16_output_port_net_x0,
      b => reinterpret16_output_port_net_x1,
      ce => ce_1_sg_x1126,
      clk => clk_1_sg_x1126,
      clr => '0',
      s => addsub1_s_net_x0
    );

  addsub10: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret7_output_port_net_x0,
      b => reinterpret7_output_port_net_x1,
      ce => ce_1_sg_x1126,
      clk => clk_1_sg_x1126,
      clr => '0',
      s => addsub10_s_net_x0
    );

  addsub11: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret6_output_port_net_x0,
      b => reinterpret6_output_port_net_x1,
      ce => ce_1_sg_x1126,
      clk => clk_1_sg_x1126,
      clr => '0',
      s => addsub11_s_net_x0
    );

  addsub12: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret5_output_port_net_x0,
      b => reinterpret5_output_port_net_x1,
      ce => ce_1_sg_x1126,
      clk => clk_1_sg_x1126,
      clr => '0',
      s => addsub12_s_net_x0
    );

  addsub13: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret4_output_port_net_x0,
      b => reinterpret4_output_port_net_x1,
      ce => ce_1_sg_x1126,
      clk => clk_1_sg_x1126,
      clr => '0',
      s => addsub13_s_net_x0
    );

  addsub14: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret3_output_port_net_x0,
      b => reinterpret3_output_port_net_x1,
      ce => ce_1_sg_x1126,
      clk => clk_1_sg_x1126,
      clr => '0',
      s => addsub14_s_net_x0
    );

  addsub15: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret2_output_port_net_x0,
      b => reinterpret2_output_port_net_x1,
      ce => ce_1_sg_x1126,
      clk => clk_1_sg_x1126,
      clr => '0',
      s => addsub15_s_net_x0
    );

  addsub16: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret1_output_port_net_x1,
      ce => ce_1_sg_x1126,
      clk => clk_1_sg_x1126,
      clr => '0',
      s => addsub16_s_net_x0
    );

  addsub2: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret15_output_port_net_x0,
      b => reinterpret15_output_port_net_x1,
      ce => ce_1_sg_x1126,
      clk => clk_1_sg_x1126,
      clr => '0',
      s => addsub2_s_net_x0
    );

  addsub3: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret14_output_port_net_x0,
      b => reinterpret14_output_port_net_x1,
      ce => ce_1_sg_x1126,
      clk => clk_1_sg_x1126,
      clr => '0',
      s => addsub3_s_net_x0
    );

  addsub4: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret13_output_port_net_x0,
      b => reinterpret13_output_port_net_x1,
      ce => ce_1_sg_x1126,
      clk => clk_1_sg_x1126,
      clr => '0',
      s => addsub4_s_net_x0
    );

  addsub5: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret12_output_port_net_x0,
      b => reinterpret12_output_port_net_x1,
      ce => ce_1_sg_x1126,
      clk => clk_1_sg_x1126,
      clr => '0',
      s => addsub5_s_net_x0
    );

  addsub6: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret11_output_port_net_x0,
      b => reinterpret11_output_port_net_x1,
      ce => ce_1_sg_x1126,
      clk => clk_1_sg_x1126,
      clr => '0',
      s => addsub6_s_net_x0
    );

  addsub7: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret10_output_port_net_x0,
      b => reinterpret10_output_port_net_x1,
      ce => ce_1_sg_x1126,
      clk => clk_1_sg_x1126,
      clr => '0',
      s => addsub7_s_net_x0
    );

  addsub8: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret9_output_port_net_x0,
      b => reinterpret9_output_port_net_x1,
      ce => ce_1_sg_x1126,
      clk => clk_1_sg_x1126,
      clr => '0',
      s => addsub8_s_net_x0
    );

  addsub9: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret8_output_port_net_x0,
      b => reinterpret8_output_port_net_x1,
      ce => ce_1_sg_x1126,
      clk => clk_1_sg_x1126,
      clr => '0',
      s => addsub9_s_net_x0
    );

  b_debus_b1bc1cbe5c: entity work.debus_entity_746e40ae9b
    port map (
      bus_in => concatenate_y_net_x4,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out16 => reinterpret16_output_port_net_x1,
      out10 => reinterpret10_output_port_net_x1,
      out11 => reinterpret11_output_port_net_x1,
      out12 => reinterpret12_output_port_net_x1,
      out13 => reinterpret13_output_port_net_x1,
      out14 => reinterpret14_output_port_net_x1,
      out15 => reinterpret15_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1,
      out4 => reinterpret4_output_port_net_x1,
      out5 => reinterpret5_output_port_net_x1,
      out6 => reinterpret6_output_port_net_x1,
      out7 => reinterpret7_output_port_net_x1,
      out8 => reinterpret8_output_port_net_x1,
      out9 => reinterpret9_output_port_net_x1
    );

  op_bussify_eb2baa43c0: entity work.op_bussify_entity_a5157300a7
    port map (
      in1 => addsub1_s_net_x0,
      in10 => addsub10_s_net_x0,
      in11 => addsub11_s_net_x0,
      in12 => addsub12_s_net_x0,
      in13 => addsub13_s_net_x0,
      in14 => addsub14_s_net_x0,
      in15 => addsub15_s_net_x0,
      in16 => addsub16_s_net_x0,
      in2 => addsub2_s_net_x0,
      in3 => addsub3_s_net_x0,
      in4 => addsub4_s_net_x0,
      in5 => addsub5_s_net_x0,
      in6 => addsub6_s_net_x0,
      in7 => addsub7_s_net_x0,
      in8 => addsub8_s_net_x0,
      in9 => addsub9_s_net_x0,
      bus_out => concatenate_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/munge/join"

entity join_entity_90a9f5a563 is
  port (
    in1: in std_logic_vector(1 downto 0); 
    in10: in std_logic_vector(1 downto 0); 
    in11: in std_logic_vector(1 downto 0); 
    in12: in std_logic_vector(1 downto 0); 
    in13: in std_logic_vector(1 downto 0); 
    in14: in std_logic_vector(1 downto 0); 
    in15: in std_logic_vector(1 downto 0); 
    in16: in std_logic_vector(1 downto 0); 
    in2: in std_logic_vector(1 downto 0); 
    in3: in std_logic_vector(1 downto 0); 
    in4: in std_logic_vector(1 downto 0); 
    in5: in std_logic_vector(1 downto 0); 
    in6: in std_logic_vector(1 downto 0); 
    in7: in std_logic_vector(1 downto 0); 
    in8: in std_logic_vector(1 downto 0); 
    in9: in std_logic_vector(1 downto 0); 
    bus_out: out std_logic_vector(31 downto 0)
  );
end join_entity_90a9f5a563;

architecture structural of join_entity_90a9f5a563 is
  signal concatenate_y_net_x0: std_logic_vector(31 downto 0);
  signal reinterpret10_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret10_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret11_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret11_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret12_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret12_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret13_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret13_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret14_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret14_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret15_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret15_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret16_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret16_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret5_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret6_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret7_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret8_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret9_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret9_output_port_net_x1: std_logic_vector(1 downto 0);

begin
  reinterpret16_output_port_net_x1 <= in1;
  reinterpret4_output_port_net_x1 <= in10;
  reinterpret11_output_port_net_x1 <= in11;
  reinterpret3_output_port_net_x1 <= in12;
  reinterpret10_output_port_net_x1 <= in13;
  reinterpret2_output_port_net_x1 <= in14;
  reinterpret9_output_port_net_x1 <= in15;
  reinterpret1_output_port_net_x1 <= in16;
  reinterpret8_output_port_net_x1 <= in2;
  reinterpret15_output_port_net_x1 <= in3;
  reinterpret7_output_port_net_x1 <= in4;
  reinterpret14_output_port_net_x1 <= in5;
  reinterpret6_output_port_net_x1 <= in6;
  reinterpret13_output_port_net_x1 <= in7;
  reinterpret5_output_port_net_x1 <= in8;
  reinterpret12_output_port_net_x1 <= in9;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_45806cd13a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in10 => reinterpret11_output_port_net,
      in11 => reinterpret12_output_port_net,
      in12 => reinterpret13_output_port_net,
      in13 => reinterpret14_output_port_net,
      in14 => reinterpret15_output_port_net,
      in15 => reinterpret16_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      in8 => reinterpret9_output_port_net,
      in9 => reinterpret10_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret16_output_port_net_x1,
      output_port => reinterpret1_output_port_net
    );

  reinterpret10: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret4_output_port_net_x1,
      output_port => reinterpret10_output_port_net
    );

  reinterpret11: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret11_output_port_net_x1,
      output_port => reinterpret11_output_port_net
    );

  reinterpret12: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret3_output_port_net_x1,
      output_port => reinterpret12_output_port_net
    );

  reinterpret13: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret10_output_port_net_x1,
      output_port => reinterpret13_output_port_net
    );

  reinterpret14: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret2_output_port_net_x1,
      output_port => reinterpret14_output_port_net
    );

  reinterpret15: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret9_output_port_net_x1,
      output_port => reinterpret15_output_port_net
    );

  reinterpret16: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret1_output_port_net_x1,
      output_port => reinterpret16_output_port_net
    );

  reinterpret2: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret8_output_port_net_x1,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret15_output_port_net_x1,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret7_output_port_net_x1,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret14_output_port_net_x1,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret6_output_port_net_x1,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret13_output_port_net_x1,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret5_output_port_net_x1,
      output_port => reinterpret8_output_port_net
    );

  reinterpret9: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret12_output_port_net_x1,
      output_port => reinterpret9_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/munge/split"

entity split_entity_406933bd3e is
  port (
    bus_in: in std_logic_vector(31 downto 0); 
    lsb_out1: out std_logic_vector(1 downto 0); 
    msb_out16: out std_logic_vector(1 downto 0); 
    out10: out std_logic_vector(1 downto 0); 
    out11: out std_logic_vector(1 downto 0); 
    out12: out std_logic_vector(1 downto 0); 
    out13: out std_logic_vector(1 downto 0); 
    out14: out std_logic_vector(1 downto 0); 
    out15: out std_logic_vector(1 downto 0); 
    out2: out std_logic_vector(1 downto 0); 
    out3: out std_logic_vector(1 downto 0); 
    out4: out std_logic_vector(1 downto 0); 
    out5: out std_logic_vector(1 downto 0); 
    out6: out std_logic_vector(1 downto 0); 
    out7: out std_logic_vector(1 downto 0); 
    out8: out std_logic_vector(1 downto 0); 
    out9: out std_logic_vector(1 downto 0)
  );
end split_entity_406933bd3e;

architecture structural of split_entity_406933bd3e is
  signal reinterpret10_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret11_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret12_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret13_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret14_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret15_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret16_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret5_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret6_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret7_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret8_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret9_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret_output_port_net_x0: std_logic_vector(31 downto 0);
  signal slice10_y_net: std_logic_vector(1 downto 0);
  signal slice11_y_net: std_logic_vector(1 downto 0);
  signal slice12_y_net: std_logic_vector(1 downto 0);
  signal slice13_y_net: std_logic_vector(1 downto 0);
  signal slice14_y_net: std_logic_vector(1 downto 0);
  signal slice15_y_net: std_logic_vector(1 downto 0);
  signal slice16_y_net: std_logic_vector(1 downto 0);
  signal slice1_y_net: std_logic_vector(1 downto 0);
  signal slice2_y_net: std_logic_vector(1 downto 0);
  signal slice3_y_net: std_logic_vector(1 downto 0);
  signal slice4_y_net: std_logic_vector(1 downto 0);
  signal slice5_y_net: std_logic_vector(1 downto 0);
  signal slice6_y_net: std_logic_vector(1 downto 0);
  signal slice7_y_net: std_logic_vector(1 downto 0);
  signal slice8_y_net: std_logic_vector(1 downto 0);
  signal slice9_y_net: std_logic_vector(1 downto 0);

begin
  reinterpret_output_port_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x2;
  msb_out16 <= reinterpret16_output_port_net_x2;
  out10 <= reinterpret10_output_port_net_x2;
  out11 <= reinterpret11_output_port_net_x2;
  out12 <= reinterpret12_output_port_net_x2;
  out13 <= reinterpret13_output_port_net_x2;
  out14 <= reinterpret14_output_port_net_x2;
  out15 <= reinterpret15_output_port_net_x2;
  out2 <= reinterpret2_output_port_net_x2;
  out3 <= reinterpret3_output_port_net_x2;
  out4 <= reinterpret4_output_port_net_x2;
  out5 <= reinterpret5_output_port_net_x2;
  out6 <= reinterpret6_output_port_net_x2;
  out7 <= reinterpret7_output_port_net_x2;
  out8 <= reinterpret8_output_port_net_x2;
  out9 <= reinterpret9_output_port_net_x2;

  reinterpret1: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  reinterpret10: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice10_y_net,
      output_port => reinterpret10_output_port_net_x2
    );

  reinterpret11: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice11_y_net,
      output_port => reinterpret11_output_port_net_x2
    );

  reinterpret12: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice12_y_net,
      output_port => reinterpret12_output_port_net_x2
    );

  reinterpret13: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice13_y_net,
      output_port => reinterpret13_output_port_net_x2
    );

  reinterpret14: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice14_y_net,
      output_port => reinterpret14_output_port_net_x2
    );

  reinterpret15: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice15_y_net,
      output_port => reinterpret15_output_port_net_x2
    );

  reinterpret16: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice16_y_net,
      output_port => reinterpret16_output_port_net_x2
    );

  reinterpret2: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x2
    );

  reinterpret3: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x2
    );

  reinterpret4: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x2
    );

  reinterpret5: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_y_net,
      output_port => reinterpret5_output_port_net_x2
    );

  reinterpret6: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret6_output_port_net_x2
    );

  reinterpret7: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret7_output_port_net_x2
    );

  reinterpret8: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret8_output_port_net_x2
    );

  reinterpret9: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice9_y_net,
      output_port => reinterpret9_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 1,
      x_width => 32,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice1_y_net
    );

  slice10: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 19,
      x_width => 32,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice10_y_net
    );

  slice11: entity work.xlslice
    generic map (
      new_lsb => 20,
      new_msb => 21,
      x_width => 32,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice11_y_net
    );

  slice12: entity work.xlslice
    generic map (
      new_lsb => 22,
      new_msb => 23,
      x_width => 32,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice12_y_net
    );

  slice13: entity work.xlslice
    generic map (
      new_lsb => 24,
      new_msb => 25,
      x_width => 32,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice13_y_net
    );

  slice14: entity work.xlslice
    generic map (
      new_lsb => 26,
      new_msb => 27,
      x_width => 32,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice14_y_net
    );

  slice15: entity work.xlslice
    generic map (
      new_lsb => 28,
      new_msb => 29,
      x_width => 32,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice15_y_net
    );

  slice16: entity work.xlslice
    generic map (
      new_lsb => 30,
      new_msb => 31,
      x_width => 32,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice16_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 3,
      x_width => 32,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 5,
      x_width => 32,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 7,
      x_width => 32,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 8,
      new_msb => 9,
      x_width => 32,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 10,
      new_msb => 11,
      x_width => 32,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 12,
      new_msb => 13,
      x_width => 32,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 14,
      new_msb => 15,
      x_width => 32,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice8_y_net
    );

  slice9: entity work.xlslice
    generic map (
      new_lsb => 16,
      new_msb => 17,
      x_width => 32,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice9_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/munge"

entity munge_entity_a681f9c5f9 is
  port (
    din: in std_logic_vector(31 downto 0); 
    dout: out std_logic_vector(31 downto 0)
  );
end munge_entity_a681f9c5f9;

architecture structural of munge_entity_a681f9c5f9 is
  signal concatenate_y_net_x0: std_logic_vector(31 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(31 downto 0);
  signal reinterpret10_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret11_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret12_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret13_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret14_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret15_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret16_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret5_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret6_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret7_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret8_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret9_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reinterpret_output_port_net_x0: std_logic_vector(31 downto 0);

begin
  concatenate_y_net_x6 <= din;
  dout <= reinterpret_out_output_port_net_x2;

  join_90a9f5a563: entity work.join_entity_90a9f5a563
    port map (
      in1 => reinterpret16_output_port_net_x2,
      in10 => reinterpret4_output_port_net_x2,
      in11 => reinterpret11_output_port_net_x2,
      in12 => reinterpret3_output_port_net_x2,
      in13 => reinterpret10_output_port_net_x2,
      in14 => reinterpret2_output_port_net_x2,
      in15 => reinterpret9_output_port_net_x2,
      in16 => reinterpret1_output_port_net_x2,
      in2 => reinterpret8_output_port_net_x2,
      in3 => reinterpret15_output_port_net_x2,
      in4 => reinterpret7_output_port_net_x2,
      in5 => reinterpret14_output_port_net_x2,
      in6 => reinterpret6_output_port_net_x2,
      in7 => reinterpret13_output_port_net_x2,
      in8 => reinterpret5_output_port_net_x2,
      in9 => reinterpret12_output_port_net_x2,
      bus_out => concatenate_y_net_x0
    );

  reinterpret: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concatenate_y_net_x6,
      output_port => reinterpret_output_port_net_x0
    );

  reinterpret_out: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concatenate_y_net_x0,
      output_port => reinterpret_out_output_port_net_x2
    );

  split_406933bd3e: entity work.split_entity_406933bd3e
    port map (
      bus_in => reinterpret_output_port_net_x0,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out16 => reinterpret16_output_port_net_x2,
      out10 => reinterpret10_output_port_net_x2,
      out11 => reinterpret11_output_port_net_x2,
      out12 => reinterpret12_output_port_net_x2,
      out13 => reinterpret13_output_port_net_x2,
      out14 => reinterpret14_output_port_net_x2,
      out15 => reinterpret15_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x2,
      out4 => reinterpret4_output_port_net_x2,
      out5 => reinterpret5_output_port_net_x2,
      out6 => reinterpret6_output_port_net_x2,
      out7 => reinterpret7_output_port_net_x2,
      out8 => reinterpret8_output_port_net_x2,
      out9 => reinterpret9_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/mux/d_bussify"

entity d_bussify_entity_591acf9731 is
  port (
    in1: in std_logic_vector(20 downto 0); 
    in10: in std_logic_vector(20 downto 0); 
    in11: in std_logic_vector(20 downto 0); 
    in12: in std_logic_vector(20 downto 0); 
    in13: in std_logic_vector(20 downto 0); 
    in14: in std_logic_vector(20 downto 0); 
    in15: in std_logic_vector(20 downto 0); 
    in16: in std_logic_vector(20 downto 0); 
    in17: in std_logic_vector(20 downto 0); 
    in18: in std_logic_vector(20 downto 0); 
    in19: in std_logic_vector(20 downto 0); 
    in2: in std_logic_vector(20 downto 0); 
    in20: in std_logic_vector(20 downto 0); 
    in21: in std_logic_vector(20 downto 0); 
    in22: in std_logic_vector(20 downto 0); 
    in23: in std_logic_vector(20 downto 0); 
    in24: in std_logic_vector(20 downto 0); 
    in25: in std_logic_vector(20 downto 0); 
    in26: in std_logic_vector(20 downto 0); 
    in27: in std_logic_vector(20 downto 0); 
    in28: in std_logic_vector(20 downto 0); 
    in29: in std_logic_vector(20 downto 0); 
    in3: in std_logic_vector(20 downto 0); 
    in30: in std_logic_vector(20 downto 0); 
    in31: in std_logic_vector(20 downto 0); 
    in32: in std_logic_vector(20 downto 0); 
    in4: in std_logic_vector(20 downto 0); 
    in5: in std_logic_vector(20 downto 0); 
    in6: in std_logic_vector(20 downto 0); 
    in7: in std_logic_vector(20 downto 0); 
    in8: in std_logic_vector(20 downto 0); 
    in9: in std_logic_vector(20 downto 0); 
    bus_out: out std_logic_vector(671 downto 0)
  );
end d_bussify_entity_591acf9731;

architecture structural of d_bussify_entity_591acf9731 is
  signal concatenate_y_net_x4: std_logic_vector(671 downto 0);
  signal mux0_y_net_x0: std_logic_vector(20 downto 0);
  signal mux10_y_net_x0: std_logic_vector(20 downto 0);
  signal mux11_y_net_x0: std_logic_vector(20 downto 0);
  signal mux12_y_net_x0: std_logic_vector(20 downto 0);
  signal mux13_y_net_x0: std_logic_vector(20 downto 0);
  signal mux14_y_net_x0: std_logic_vector(20 downto 0);
  signal mux15_y_net_x0: std_logic_vector(20 downto 0);
  signal mux16_y_net_x0: std_logic_vector(20 downto 0);
  signal mux17_y_net_x0: std_logic_vector(20 downto 0);
  signal mux18_y_net_x0: std_logic_vector(20 downto 0);
  signal mux19_y_net_x0: std_logic_vector(20 downto 0);
  signal mux1_y_net_x0: std_logic_vector(20 downto 0);
  signal mux20_y_net_x0: std_logic_vector(20 downto 0);
  signal mux21_y_net_x0: std_logic_vector(20 downto 0);
  signal mux22_y_net_x0: std_logic_vector(20 downto 0);
  signal mux23_y_net_x0: std_logic_vector(20 downto 0);
  signal mux24_y_net_x0: std_logic_vector(20 downto 0);
  signal mux25_y_net_x0: std_logic_vector(20 downto 0);
  signal mux26_y_net_x0: std_logic_vector(20 downto 0);
  signal mux27_y_net_x0: std_logic_vector(20 downto 0);
  signal mux28_y_net_x0: std_logic_vector(20 downto 0);
  signal mux29_y_net_x0: std_logic_vector(20 downto 0);
  signal mux2_y_net_x0: std_logic_vector(20 downto 0);
  signal mux30_y_net_x0: std_logic_vector(20 downto 0);
  signal mux31_y_net_x0: std_logic_vector(20 downto 0);
  signal mux3_y_net_x0: std_logic_vector(20 downto 0);
  signal mux4_y_net_x0: std_logic_vector(20 downto 0);
  signal mux5_y_net_x0: std_logic_vector(20 downto 0);
  signal mux6_y_net_x0: std_logic_vector(20 downto 0);
  signal mux7_y_net_x0: std_logic_vector(20 downto 0);
  signal mux8_y_net_x0: std_logic_vector(20 downto 0);
  signal mux9_y_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret10_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret11_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret12_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret13_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret14_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret15_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret16_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret17_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret18_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret19_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret20_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret21_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret22_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret23_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret24_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret25_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret26_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret27_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret28_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret29_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret30_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret31_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret32_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret9_output_port_net: std_logic_vector(20 downto 0);

begin
  mux0_y_net_x0 <= in1;
  mux9_y_net_x0 <= in10;
  mux10_y_net_x0 <= in11;
  mux11_y_net_x0 <= in12;
  mux12_y_net_x0 <= in13;
  mux13_y_net_x0 <= in14;
  mux14_y_net_x0 <= in15;
  mux15_y_net_x0 <= in16;
  mux16_y_net_x0 <= in17;
  mux17_y_net_x0 <= in18;
  mux18_y_net_x0 <= in19;
  mux1_y_net_x0 <= in2;
  mux19_y_net_x0 <= in20;
  mux20_y_net_x0 <= in21;
  mux21_y_net_x0 <= in22;
  mux22_y_net_x0 <= in23;
  mux23_y_net_x0 <= in24;
  mux24_y_net_x0 <= in25;
  mux25_y_net_x0 <= in26;
  mux26_y_net_x0 <= in27;
  mux27_y_net_x0 <= in28;
  mux28_y_net_x0 <= in29;
  mux2_y_net_x0 <= in3;
  mux29_y_net_x0 <= in30;
  mux30_y_net_x0 <= in31;
  mux31_y_net_x0 <= in32;
  mux3_y_net_x0 <= in4;
  mux4_y_net_x0 <= in5;
  mux5_y_net_x0 <= in6;
  mux6_y_net_x0 <= in7;
  mux7_y_net_x0 <= in8;
  mux8_y_net_x0 <= in9;
  bus_out <= concatenate_y_net_x4;

  concatenate: entity work.concat_2710aa5601
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in10 => reinterpret11_output_port_net,
      in11 => reinterpret12_output_port_net,
      in12 => reinterpret13_output_port_net,
      in13 => reinterpret14_output_port_net,
      in14 => reinterpret15_output_port_net,
      in15 => reinterpret16_output_port_net,
      in16 => reinterpret17_output_port_net,
      in17 => reinterpret18_output_port_net,
      in18 => reinterpret19_output_port_net,
      in19 => reinterpret20_output_port_net,
      in2 => reinterpret3_output_port_net,
      in20 => reinterpret21_output_port_net,
      in21 => reinterpret22_output_port_net,
      in22 => reinterpret23_output_port_net,
      in23 => reinterpret24_output_port_net,
      in24 => reinterpret25_output_port_net,
      in25 => reinterpret26_output_port_net,
      in26 => reinterpret27_output_port_net,
      in27 => reinterpret28_output_port_net,
      in28 => reinterpret29_output_port_net,
      in29 => reinterpret30_output_port_net,
      in3 => reinterpret4_output_port_net,
      in30 => reinterpret31_output_port_net,
      in31 => reinterpret32_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      in8 => reinterpret9_output_port_net,
      in9 => reinterpret10_output_port_net,
      y => concatenate_y_net_x4
    );

  reinterpret1: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux0_y_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret10: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux9_y_net_x0,
      output_port => reinterpret10_output_port_net
    );

  reinterpret11: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux10_y_net_x0,
      output_port => reinterpret11_output_port_net
    );

  reinterpret12: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux11_y_net_x0,
      output_port => reinterpret12_output_port_net
    );

  reinterpret13: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux12_y_net_x0,
      output_port => reinterpret13_output_port_net
    );

  reinterpret14: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux13_y_net_x0,
      output_port => reinterpret14_output_port_net
    );

  reinterpret15: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux14_y_net_x0,
      output_port => reinterpret15_output_port_net
    );

  reinterpret16: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux15_y_net_x0,
      output_port => reinterpret16_output_port_net
    );

  reinterpret17: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux16_y_net_x0,
      output_port => reinterpret17_output_port_net
    );

  reinterpret18: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux17_y_net_x0,
      output_port => reinterpret18_output_port_net
    );

  reinterpret19: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux18_y_net_x0,
      output_port => reinterpret19_output_port_net
    );

  reinterpret2: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux1_y_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret20: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux19_y_net_x0,
      output_port => reinterpret20_output_port_net
    );

  reinterpret21: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux20_y_net_x0,
      output_port => reinterpret21_output_port_net
    );

  reinterpret22: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux21_y_net_x0,
      output_port => reinterpret22_output_port_net
    );

  reinterpret23: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux22_y_net_x0,
      output_port => reinterpret23_output_port_net
    );

  reinterpret24: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux23_y_net_x0,
      output_port => reinterpret24_output_port_net
    );

  reinterpret25: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux24_y_net_x0,
      output_port => reinterpret25_output_port_net
    );

  reinterpret26: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux25_y_net_x0,
      output_port => reinterpret26_output_port_net
    );

  reinterpret27: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux26_y_net_x0,
      output_port => reinterpret27_output_port_net
    );

  reinterpret28: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux27_y_net_x0,
      output_port => reinterpret28_output_port_net
    );

  reinterpret29: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux28_y_net_x0,
      output_port => reinterpret29_output_port_net
    );

  reinterpret3: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux2_y_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret30: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux29_y_net_x0,
      output_port => reinterpret30_output_port_net
    );

  reinterpret31: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux30_y_net_x0,
      output_port => reinterpret31_output_port_net
    );

  reinterpret32: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux31_y_net_x0,
      output_port => reinterpret32_output_port_net
    );

  reinterpret4: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux3_y_net_x0,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux4_y_net_x0,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux5_y_net_x0,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux6_y_net_x0,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux7_y_net_x0,
      output_port => reinterpret8_output_port_net
    );

  reinterpret9: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux8_y_net_x0,
      output_port => reinterpret9_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/mux/expand0"

entity expand0_entity_5447893a27 is
  port (
    bus_in: in std_logic_vector(671 downto 0); 
    lsb_out1: out std_logic_vector(20 downto 0); 
    msb_out32: out std_logic_vector(20 downto 0); 
    out10: out std_logic_vector(20 downto 0); 
    out11: out std_logic_vector(20 downto 0); 
    out12: out std_logic_vector(20 downto 0); 
    out13: out std_logic_vector(20 downto 0); 
    out14: out std_logic_vector(20 downto 0); 
    out15: out std_logic_vector(20 downto 0); 
    out16: out std_logic_vector(20 downto 0); 
    out17: out std_logic_vector(20 downto 0); 
    out18: out std_logic_vector(20 downto 0); 
    out19: out std_logic_vector(20 downto 0); 
    out2: out std_logic_vector(20 downto 0); 
    out20: out std_logic_vector(20 downto 0); 
    out21: out std_logic_vector(20 downto 0); 
    out22: out std_logic_vector(20 downto 0); 
    out23: out std_logic_vector(20 downto 0); 
    out24: out std_logic_vector(20 downto 0); 
    out25: out std_logic_vector(20 downto 0); 
    out26: out std_logic_vector(20 downto 0); 
    out27: out std_logic_vector(20 downto 0); 
    out28: out std_logic_vector(20 downto 0); 
    out29: out std_logic_vector(20 downto 0); 
    out3: out std_logic_vector(20 downto 0); 
    out30: out std_logic_vector(20 downto 0); 
    out31: out std_logic_vector(20 downto 0); 
    out4: out std_logic_vector(20 downto 0); 
    out5: out std_logic_vector(20 downto 0); 
    out6: out std_logic_vector(20 downto 0); 
    out7: out std_logic_vector(20 downto 0); 
    out8: out std_logic_vector(20 downto 0); 
    out9: out std_logic_vector(20 downto 0)
  );
end expand0_entity_5447893a27;

architecture structural of expand0_entity_5447893a27 is
  signal concatenate_y_net_x2: std_logic_vector(671 downto 0);
  signal reinterpret10_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret11_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret12_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret13_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret14_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret15_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret16_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret17_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret18_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret19_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret20_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret21_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret22_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret23_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret24_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret25_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret26_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret27_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret28_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret29_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret30_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret31_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret32_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret9_output_port_net_x0: std_logic_vector(20 downto 0);
  signal slice10_y_net: std_logic_vector(20 downto 0);
  signal slice11_y_net: std_logic_vector(20 downto 0);
  signal slice12_y_net: std_logic_vector(20 downto 0);
  signal slice13_y_net: std_logic_vector(20 downto 0);
  signal slice14_y_net: std_logic_vector(20 downto 0);
  signal slice15_y_net: std_logic_vector(20 downto 0);
  signal slice16_y_net: std_logic_vector(20 downto 0);
  signal slice17_y_net: std_logic_vector(20 downto 0);
  signal slice18_y_net: std_logic_vector(20 downto 0);
  signal slice19_y_net: std_logic_vector(20 downto 0);
  signal slice1_y_net: std_logic_vector(20 downto 0);
  signal slice20_y_net: std_logic_vector(20 downto 0);
  signal slice21_y_net: std_logic_vector(20 downto 0);
  signal slice22_y_net: std_logic_vector(20 downto 0);
  signal slice23_y_net: std_logic_vector(20 downto 0);
  signal slice24_y_net: std_logic_vector(20 downto 0);
  signal slice25_y_net: std_logic_vector(20 downto 0);
  signal slice26_y_net: std_logic_vector(20 downto 0);
  signal slice27_y_net: std_logic_vector(20 downto 0);
  signal slice28_y_net: std_logic_vector(20 downto 0);
  signal slice29_y_net: std_logic_vector(20 downto 0);
  signal slice2_y_net: std_logic_vector(20 downto 0);
  signal slice30_y_net: std_logic_vector(20 downto 0);
  signal slice31_y_net: std_logic_vector(20 downto 0);
  signal slice32_y_net: std_logic_vector(20 downto 0);
  signal slice3_y_net: std_logic_vector(20 downto 0);
  signal slice4_y_net: std_logic_vector(20 downto 0);
  signal slice5_y_net: std_logic_vector(20 downto 0);
  signal slice6_y_net: std_logic_vector(20 downto 0);
  signal slice7_y_net: std_logic_vector(20 downto 0);
  signal slice8_y_net: std_logic_vector(20 downto 0);
  signal slice9_y_net: std_logic_vector(20 downto 0);

begin
  concatenate_y_net_x2 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out32 <= reinterpret32_output_port_net_x0;
  out10 <= reinterpret10_output_port_net_x0;
  out11 <= reinterpret11_output_port_net_x0;
  out12 <= reinterpret12_output_port_net_x0;
  out13 <= reinterpret13_output_port_net_x0;
  out14 <= reinterpret14_output_port_net_x0;
  out15 <= reinterpret15_output_port_net_x0;
  out16 <= reinterpret16_output_port_net_x0;
  out17 <= reinterpret17_output_port_net_x0;
  out18 <= reinterpret18_output_port_net_x0;
  out19 <= reinterpret19_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out20 <= reinterpret20_output_port_net_x0;
  out21 <= reinterpret21_output_port_net_x0;
  out22 <= reinterpret22_output_port_net_x0;
  out23 <= reinterpret23_output_port_net_x0;
  out24 <= reinterpret24_output_port_net_x0;
  out25 <= reinterpret25_output_port_net_x0;
  out26 <= reinterpret26_output_port_net_x0;
  out27 <= reinterpret27_output_port_net_x0;
  out28 <= reinterpret28_output_port_net_x0;
  out29 <= reinterpret29_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;
  out30 <= reinterpret30_output_port_net_x0;
  out31 <= reinterpret31_output_port_net_x0;
  out4 <= reinterpret4_output_port_net_x0;
  out5 <= reinterpret5_output_port_net_x0;
  out6 <= reinterpret6_output_port_net_x0;
  out7 <= reinterpret7_output_port_net_x0;
  out8 <= reinterpret8_output_port_net_x0;
  out9 <= reinterpret9_output_port_net_x0;

  reinterpret1: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret10: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice10_y_net,
      output_port => reinterpret10_output_port_net_x0
    );

  reinterpret11: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice11_y_net,
      output_port => reinterpret11_output_port_net_x0
    );

  reinterpret12: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice12_y_net,
      output_port => reinterpret12_output_port_net_x0
    );

  reinterpret13: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice13_y_net,
      output_port => reinterpret13_output_port_net_x0
    );

  reinterpret14: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice14_y_net,
      output_port => reinterpret14_output_port_net_x0
    );

  reinterpret15: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice15_y_net,
      output_port => reinterpret15_output_port_net_x0
    );

  reinterpret16: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice16_y_net,
      output_port => reinterpret16_output_port_net_x0
    );

  reinterpret17: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice17_y_net,
      output_port => reinterpret17_output_port_net_x0
    );

  reinterpret18: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice18_y_net,
      output_port => reinterpret18_output_port_net_x0
    );

  reinterpret19: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice19_y_net,
      output_port => reinterpret19_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret20: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice20_y_net,
      output_port => reinterpret20_output_port_net_x0
    );

  reinterpret21: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice21_y_net,
      output_port => reinterpret21_output_port_net_x0
    );

  reinterpret22: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice22_y_net,
      output_port => reinterpret22_output_port_net_x0
    );

  reinterpret23: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice23_y_net,
      output_port => reinterpret23_output_port_net_x0
    );

  reinterpret24: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice24_y_net,
      output_port => reinterpret24_output_port_net_x0
    );

  reinterpret25: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice25_y_net,
      output_port => reinterpret25_output_port_net_x0
    );

  reinterpret26: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice26_y_net,
      output_port => reinterpret26_output_port_net_x0
    );

  reinterpret27: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice27_y_net,
      output_port => reinterpret27_output_port_net_x0
    );

  reinterpret28: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice28_y_net,
      output_port => reinterpret28_output_port_net_x0
    );

  reinterpret29: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice29_y_net,
      output_port => reinterpret29_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret30: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice30_y_net,
      output_port => reinterpret30_output_port_net_x0
    );

  reinterpret31: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice31_y_net,
      output_port => reinterpret31_output_port_net_x0
    );

  reinterpret32: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice32_y_net,
      output_port => reinterpret32_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  reinterpret5: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_y_net,
      output_port => reinterpret5_output_port_net_x0
    );

  reinterpret6: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret6_output_port_net_x0
    );

  reinterpret7: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret7_output_port_net_x0
    );

  reinterpret8: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret8_output_port_net_x0
    );

  reinterpret9: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice9_y_net,
      output_port => reinterpret9_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 20,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice1_y_net
    );

  slice10: entity work.xlslice
    generic map (
      new_lsb => 189,
      new_msb => 209,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice10_y_net
    );

  slice11: entity work.xlslice
    generic map (
      new_lsb => 210,
      new_msb => 230,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice11_y_net
    );

  slice12: entity work.xlslice
    generic map (
      new_lsb => 231,
      new_msb => 251,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice12_y_net
    );

  slice13: entity work.xlslice
    generic map (
      new_lsb => 252,
      new_msb => 272,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice13_y_net
    );

  slice14: entity work.xlslice
    generic map (
      new_lsb => 273,
      new_msb => 293,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice14_y_net
    );

  slice15: entity work.xlslice
    generic map (
      new_lsb => 294,
      new_msb => 314,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice15_y_net
    );

  slice16: entity work.xlslice
    generic map (
      new_lsb => 315,
      new_msb => 335,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice16_y_net
    );

  slice17: entity work.xlslice
    generic map (
      new_lsb => 336,
      new_msb => 356,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice17_y_net
    );

  slice18: entity work.xlslice
    generic map (
      new_lsb => 357,
      new_msb => 377,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice18_y_net
    );

  slice19: entity work.xlslice
    generic map (
      new_lsb => 378,
      new_msb => 398,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice19_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 21,
      new_msb => 41,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice2_y_net
    );

  slice20: entity work.xlslice
    generic map (
      new_lsb => 399,
      new_msb => 419,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice20_y_net
    );

  slice21: entity work.xlslice
    generic map (
      new_lsb => 420,
      new_msb => 440,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice21_y_net
    );

  slice22: entity work.xlslice
    generic map (
      new_lsb => 441,
      new_msb => 461,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice22_y_net
    );

  slice23: entity work.xlslice
    generic map (
      new_lsb => 462,
      new_msb => 482,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice23_y_net
    );

  slice24: entity work.xlslice
    generic map (
      new_lsb => 483,
      new_msb => 503,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice24_y_net
    );

  slice25: entity work.xlslice
    generic map (
      new_lsb => 504,
      new_msb => 524,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice25_y_net
    );

  slice26: entity work.xlslice
    generic map (
      new_lsb => 525,
      new_msb => 545,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice26_y_net
    );

  slice27: entity work.xlslice
    generic map (
      new_lsb => 546,
      new_msb => 566,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice27_y_net
    );

  slice28: entity work.xlslice
    generic map (
      new_lsb => 567,
      new_msb => 587,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice28_y_net
    );

  slice29: entity work.xlslice
    generic map (
      new_lsb => 588,
      new_msb => 608,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice29_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 42,
      new_msb => 62,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice3_y_net
    );

  slice30: entity work.xlslice
    generic map (
      new_lsb => 609,
      new_msb => 629,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice30_y_net
    );

  slice31: entity work.xlslice
    generic map (
      new_lsb => 630,
      new_msb => 650,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice31_y_net
    );

  slice32: entity work.xlslice
    generic map (
      new_lsb => 651,
      new_msb => 671,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice32_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 63,
      new_msb => 83,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 84,
      new_msb => 104,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 105,
      new_msb => 125,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 126,
      new_msb => 146,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 147,
      new_msb => 167,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice8_y_net
    );

  slice9: entity work.xlslice
    generic map (
      new_lsb => 168,
      new_msb => 188,
      x_width => 672,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice9_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/mux/sel_expand"

entity sel_expand_entity_ed4e6d740e is
  port (
    bus_in: in std_logic_vector(31 downto 0); 
    lsb_out1: out std_logic; 
    msb_out32: out std_logic; 
    out10: out std_logic; 
    out11: out std_logic; 
    out12: out std_logic; 
    out13: out std_logic; 
    out14: out std_logic; 
    out15: out std_logic; 
    out16: out std_logic; 
    out17: out std_logic; 
    out18: out std_logic; 
    out19: out std_logic; 
    out2: out std_logic; 
    out20: out std_logic; 
    out21: out std_logic; 
    out22: out std_logic; 
    out23: out std_logic; 
    out24: out std_logic; 
    out25: out std_logic; 
    out26: out std_logic; 
    out27: out std_logic; 
    out28: out std_logic; 
    out29: out std_logic; 
    out3: out std_logic; 
    out30: out std_logic; 
    out31: out std_logic; 
    out4: out std_logic; 
    out5: out std_logic; 
    out6: out std_logic; 
    out7: out std_logic; 
    out8: out std_logic; 
    out9: out std_logic
  );
end sel_expand_entity_ed4e6d740e;

architecture structural of sel_expand_entity_ed4e6d740e is
  signal concatenate_y_net_x0: std_logic_vector(31 downto 0);
  signal reinterpret10_output_port_net_x0: std_logic;
  signal reinterpret11_output_port_net_x0: std_logic;
  signal reinterpret12_output_port_net_x0: std_logic;
  signal reinterpret13_output_port_net_x0: std_logic;
  signal reinterpret14_output_port_net_x0: std_logic;
  signal reinterpret15_output_port_net_x0: std_logic;
  signal reinterpret16_output_port_net_x0: std_logic;
  signal reinterpret17_output_port_net_x0: std_logic;
  signal reinterpret18_output_port_net_x0: std_logic;
  signal reinterpret19_output_port_net_x0: std_logic;
  signal reinterpret1_output_port_net_x0: std_logic;
  signal reinterpret20_output_port_net_x0: std_logic;
  signal reinterpret21_output_port_net_x0: std_logic;
  signal reinterpret22_output_port_net_x0: std_logic;
  signal reinterpret23_output_port_net_x0: std_logic;
  signal reinterpret24_output_port_net_x0: std_logic;
  signal reinterpret25_output_port_net_x0: std_logic;
  signal reinterpret26_output_port_net_x0: std_logic;
  signal reinterpret27_output_port_net_x0: std_logic;
  signal reinterpret28_output_port_net_x0: std_logic;
  signal reinterpret29_output_port_net_x0: std_logic;
  signal reinterpret2_output_port_net_x0: std_logic;
  signal reinterpret30_output_port_net_x0: std_logic;
  signal reinterpret31_output_port_net_x0: std_logic;
  signal reinterpret32_output_port_net_x0: std_logic;
  signal reinterpret3_output_port_net_x0: std_logic;
  signal reinterpret4_output_port_net_x0: std_logic;
  signal reinterpret5_output_port_net_x0: std_logic;
  signal reinterpret6_output_port_net_x0: std_logic;
  signal reinterpret7_output_port_net_x0: std_logic;
  signal reinterpret8_output_port_net_x0: std_logic;
  signal reinterpret9_output_port_net_x0: std_logic;
  signal slice10_y_net: std_logic;
  signal slice11_y_net: std_logic;
  signal slice12_y_net: std_logic;
  signal slice13_y_net: std_logic;
  signal slice14_y_net: std_logic;
  signal slice15_y_net: std_logic;
  signal slice16_y_net: std_logic;
  signal slice17_y_net: std_logic;
  signal slice18_y_net: std_logic;
  signal slice19_y_net: std_logic;
  signal slice1_y_net: std_logic;
  signal slice20_y_net: std_logic;
  signal slice21_y_net: std_logic;
  signal slice22_y_net: std_logic;
  signal slice23_y_net: std_logic;
  signal slice24_y_net: std_logic;
  signal slice25_y_net: std_logic;
  signal slice26_y_net: std_logic;
  signal slice27_y_net: std_logic;
  signal slice28_y_net: std_logic;
  signal slice29_y_net: std_logic;
  signal slice2_y_net: std_logic;
  signal slice30_y_net: std_logic;
  signal slice31_y_net: std_logic;
  signal slice32_y_net: std_logic;
  signal slice3_y_net: std_logic;
  signal slice4_y_net: std_logic;
  signal slice5_y_net: std_logic;
  signal slice6_y_net: std_logic;
  signal slice7_y_net: std_logic;
  signal slice8_y_net: std_logic;
  signal slice9_y_net: std_logic;

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out32 <= reinterpret32_output_port_net_x0;
  out10 <= reinterpret10_output_port_net_x0;
  out11 <= reinterpret11_output_port_net_x0;
  out12 <= reinterpret12_output_port_net_x0;
  out13 <= reinterpret13_output_port_net_x0;
  out14 <= reinterpret14_output_port_net_x0;
  out15 <= reinterpret15_output_port_net_x0;
  out16 <= reinterpret16_output_port_net_x0;
  out17 <= reinterpret17_output_port_net_x0;
  out18 <= reinterpret18_output_port_net_x0;
  out19 <= reinterpret19_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out20 <= reinterpret20_output_port_net_x0;
  out21 <= reinterpret21_output_port_net_x0;
  out22 <= reinterpret22_output_port_net_x0;
  out23 <= reinterpret23_output_port_net_x0;
  out24 <= reinterpret24_output_port_net_x0;
  out25 <= reinterpret25_output_port_net_x0;
  out26 <= reinterpret26_output_port_net_x0;
  out27 <= reinterpret27_output_port_net_x0;
  out28 <= reinterpret28_output_port_net_x0;
  out29 <= reinterpret29_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;
  out30 <= reinterpret30_output_port_net_x0;
  out31 <= reinterpret31_output_port_net_x0;
  out4 <= reinterpret4_output_port_net_x0;
  out5 <= reinterpret5_output_port_net_x0;
  out6 <= reinterpret6_output_port_net_x0;
  out7 <= reinterpret7_output_port_net_x0;
  out8 <= reinterpret8_output_port_net_x0;
  out9 <= reinterpret9_output_port_net_x0;

  reinterpret1: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice1_y_net,
      output_port(0) => reinterpret1_output_port_net_x0
    );

  reinterpret10: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice10_y_net,
      output_port(0) => reinterpret10_output_port_net_x0
    );

  reinterpret11: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice11_y_net,
      output_port(0) => reinterpret11_output_port_net_x0
    );

  reinterpret12: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice12_y_net,
      output_port(0) => reinterpret12_output_port_net_x0
    );

  reinterpret13: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice13_y_net,
      output_port(0) => reinterpret13_output_port_net_x0
    );

  reinterpret14: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice14_y_net,
      output_port(0) => reinterpret14_output_port_net_x0
    );

  reinterpret15: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice15_y_net,
      output_port(0) => reinterpret15_output_port_net_x0
    );

  reinterpret16: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice16_y_net,
      output_port(0) => reinterpret16_output_port_net_x0
    );

  reinterpret17: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice17_y_net,
      output_port(0) => reinterpret17_output_port_net_x0
    );

  reinterpret18: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice18_y_net,
      output_port(0) => reinterpret18_output_port_net_x0
    );

  reinterpret19: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice19_y_net,
      output_port(0) => reinterpret19_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice2_y_net,
      output_port(0) => reinterpret2_output_port_net_x0
    );

  reinterpret20: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice20_y_net,
      output_port(0) => reinterpret20_output_port_net_x0
    );

  reinterpret21: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice21_y_net,
      output_port(0) => reinterpret21_output_port_net_x0
    );

  reinterpret22: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice22_y_net,
      output_port(0) => reinterpret22_output_port_net_x0
    );

  reinterpret23: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice23_y_net,
      output_port(0) => reinterpret23_output_port_net_x0
    );

  reinterpret24: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice24_y_net,
      output_port(0) => reinterpret24_output_port_net_x0
    );

  reinterpret25: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice25_y_net,
      output_port(0) => reinterpret25_output_port_net_x0
    );

  reinterpret26: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice26_y_net,
      output_port(0) => reinterpret26_output_port_net_x0
    );

  reinterpret27: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice27_y_net,
      output_port(0) => reinterpret27_output_port_net_x0
    );

  reinterpret28: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice28_y_net,
      output_port(0) => reinterpret28_output_port_net_x0
    );

  reinterpret29: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice29_y_net,
      output_port(0) => reinterpret29_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice3_y_net,
      output_port(0) => reinterpret3_output_port_net_x0
    );

  reinterpret30: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice30_y_net,
      output_port(0) => reinterpret30_output_port_net_x0
    );

  reinterpret31: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice31_y_net,
      output_port(0) => reinterpret31_output_port_net_x0
    );

  reinterpret32: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice32_y_net,
      output_port(0) => reinterpret32_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice4_y_net,
      output_port(0) => reinterpret4_output_port_net_x0
    );

  reinterpret5: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice5_y_net,
      output_port(0) => reinterpret5_output_port_net_x0
    );

  reinterpret6: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice6_y_net,
      output_port(0) => reinterpret6_output_port_net_x0
    );

  reinterpret7: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice7_y_net,
      output_port(0) => reinterpret7_output_port_net_x0
    );

  reinterpret8: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice8_y_net,
      output_port(0) => reinterpret8_output_port_net_x0
    );

  reinterpret9: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice9_y_net,
      output_port(0) => reinterpret9_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice1_y_net
    );

  slice10: entity work.xlslice
    generic map (
      new_lsb => 9,
      new_msb => 9,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice10_y_net
    );

  slice11: entity work.xlslice
    generic map (
      new_lsb => 10,
      new_msb => 10,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice11_y_net
    );

  slice12: entity work.xlslice
    generic map (
      new_lsb => 11,
      new_msb => 11,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice12_y_net
    );

  slice13: entity work.xlslice
    generic map (
      new_lsb => 12,
      new_msb => 12,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice13_y_net
    );

  slice14: entity work.xlslice
    generic map (
      new_lsb => 13,
      new_msb => 13,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice14_y_net
    );

  slice15: entity work.xlslice
    generic map (
      new_lsb => 14,
      new_msb => 14,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice15_y_net
    );

  slice16: entity work.xlslice
    generic map (
      new_lsb => 15,
      new_msb => 15,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice16_y_net
    );

  slice17: entity work.xlslice
    generic map (
      new_lsb => 16,
      new_msb => 16,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice17_y_net
    );

  slice18: entity work.xlslice
    generic map (
      new_lsb => 17,
      new_msb => 17,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice18_y_net
    );

  slice19: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 18,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice19_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice2_y_net
    );

  slice20: entity work.xlslice
    generic map (
      new_lsb => 19,
      new_msb => 19,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice20_y_net
    );

  slice21: entity work.xlslice
    generic map (
      new_lsb => 20,
      new_msb => 20,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice21_y_net
    );

  slice22: entity work.xlslice
    generic map (
      new_lsb => 21,
      new_msb => 21,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice22_y_net
    );

  slice23: entity work.xlslice
    generic map (
      new_lsb => 22,
      new_msb => 22,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice23_y_net
    );

  slice24: entity work.xlslice
    generic map (
      new_lsb => 23,
      new_msb => 23,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice24_y_net
    );

  slice25: entity work.xlslice
    generic map (
      new_lsb => 24,
      new_msb => 24,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice25_y_net
    );

  slice26: entity work.xlslice
    generic map (
      new_lsb => 25,
      new_msb => 25,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice26_y_net
    );

  slice27: entity work.xlslice
    generic map (
      new_lsb => 26,
      new_msb => 26,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice27_y_net
    );

  slice28: entity work.xlslice
    generic map (
      new_lsb => 27,
      new_msb => 27,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice28_y_net
    );

  slice29: entity work.xlslice
    generic map (
      new_lsb => 28,
      new_msb => 28,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice29_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice3_y_net
    );

  slice30: entity work.xlslice
    generic map (
      new_lsb => 29,
      new_msb => 29,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice30_y_net
    );

  slice31: entity work.xlslice
    generic map (
      new_lsb => 30,
      new_msb => 30,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice31_y_net
    );

  slice32: entity work.xlslice
    generic map (
      new_lsb => 31,
      new_msb => 31,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice32_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 4,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 5,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 6,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 7,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice8_y_net
    );

  slice9: entity work.xlslice
    generic map (
      new_lsb => 8,
      new_msb => 8,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice9_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/mux"

entity mux_entity_25965ac8ad is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d0: in std_logic_vector(671 downto 0); 
    d1: in std_logic_vector(671 downto 0); 
    sel: in std_logic_vector(31 downto 0); 
    out_x0: out std_logic_vector(671 downto 0)
  );
end mux_entity_25965ac8ad;

architecture structural of mux_entity_25965ac8ad is
  signal ce_1_sg_x1127: std_logic;
  signal clk_1_sg_x1127: std_logic;
  signal concatenate_y_net_x6: std_logic_vector(671 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(671 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(31 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(671 downto 0);
  signal mux0_y_net_x0: std_logic_vector(20 downto 0);
  signal mux10_y_net_x0: std_logic_vector(20 downto 0);
  signal mux11_y_net_x0: std_logic_vector(20 downto 0);
  signal mux12_y_net_x0: std_logic_vector(20 downto 0);
  signal mux13_y_net_x0: std_logic_vector(20 downto 0);
  signal mux14_y_net_x0: std_logic_vector(20 downto 0);
  signal mux15_y_net_x0: std_logic_vector(20 downto 0);
  signal mux16_y_net_x0: std_logic_vector(20 downto 0);
  signal mux17_y_net_x0: std_logic_vector(20 downto 0);
  signal mux18_y_net_x0: std_logic_vector(20 downto 0);
  signal mux19_y_net_x0: std_logic_vector(20 downto 0);
  signal mux1_y_net_x0: std_logic_vector(20 downto 0);
  signal mux20_y_net_x0: std_logic_vector(20 downto 0);
  signal mux21_y_net_x0: std_logic_vector(20 downto 0);
  signal mux22_y_net_x0: std_logic_vector(20 downto 0);
  signal mux23_y_net_x0: std_logic_vector(20 downto 0);
  signal mux24_y_net_x0: std_logic_vector(20 downto 0);
  signal mux25_y_net_x0: std_logic_vector(20 downto 0);
  signal mux26_y_net_x0: std_logic_vector(20 downto 0);
  signal mux27_y_net_x0: std_logic_vector(20 downto 0);
  signal mux28_y_net_x0: std_logic_vector(20 downto 0);
  signal mux29_y_net_x0: std_logic_vector(20 downto 0);
  signal mux2_y_net_x0: std_logic_vector(20 downto 0);
  signal mux30_y_net_x0: std_logic_vector(20 downto 0);
  signal mux31_y_net_x0: std_logic_vector(20 downto 0);
  signal mux3_y_net_x0: std_logic_vector(20 downto 0);
  signal mux4_y_net_x0: std_logic_vector(20 downto 0);
  signal mux5_y_net_x0: std_logic_vector(20 downto 0);
  signal mux6_y_net_x0: std_logic_vector(20 downto 0);
  signal mux7_y_net_x0: std_logic_vector(20 downto 0);
  signal mux8_y_net_x0: std_logic_vector(20 downto 0);
  signal mux9_y_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret10_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret10_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret10_output_port_net_x2: std_logic;
  signal reinterpret11_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret11_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret11_output_port_net_x2: std_logic;
  signal reinterpret12_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret12_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret12_output_port_net_x2: std_logic;
  signal reinterpret13_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret13_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret13_output_port_net_x2: std_logic;
  signal reinterpret14_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret14_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret14_output_port_net_x2: std_logic;
  signal reinterpret15_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret15_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret15_output_port_net_x2: std_logic;
  signal reinterpret16_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret16_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret16_output_port_net_x2: std_logic;
  signal reinterpret17_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret17_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret17_output_port_net_x2: std_logic;
  signal reinterpret18_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret18_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret18_output_port_net_x2: std_logic;
  signal reinterpret19_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret19_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret19_output_port_net_x2: std_logic;
  signal reinterpret1_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic;
  signal reinterpret20_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret20_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret20_output_port_net_x2: std_logic;
  signal reinterpret21_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret21_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret21_output_port_net_x2: std_logic;
  signal reinterpret22_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret22_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret22_output_port_net_x2: std_logic;
  signal reinterpret23_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret23_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret23_output_port_net_x2: std_logic;
  signal reinterpret24_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret24_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret24_output_port_net_x2: std_logic;
  signal reinterpret25_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret25_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret25_output_port_net_x2: std_logic;
  signal reinterpret26_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret26_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret26_output_port_net_x2: std_logic;
  signal reinterpret27_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret27_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret27_output_port_net_x2: std_logic;
  signal reinterpret28_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret28_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret28_output_port_net_x2: std_logic;
  signal reinterpret29_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret29_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret29_output_port_net_x2: std_logic;
  signal reinterpret2_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic;
  signal reinterpret30_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret30_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret30_output_port_net_x2: std_logic;
  signal reinterpret31_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret31_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret31_output_port_net_x2: std_logic;
  signal reinterpret32_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret32_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret32_output_port_net_x2: std_logic;
  signal reinterpret3_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic;
  signal reinterpret4_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic;
  signal reinterpret5_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret5_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret5_output_port_net_x2: std_logic;
  signal reinterpret6_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret6_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret6_output_port_net_x2: std_logic;
  signal reinterpret7_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret7_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret7_output_port_net_x2: std_logic;
  signal reinterpret8_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret8_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret8_output_port_net_x2: std_logic;
  signal reinterpret9_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret9_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret9_output_port_net_x2: std_logic;

begin
  ce_1_sg_x1127 <= ce_1;
  clk_1_sg_x1127 <= clk_1;
  concatenate_y_net_x6 <= d0;
  concatenate_y_net_x7 <= d1;
  concatenate_y_net_x8 <= sel;
  out_x0 <= concatenate_y_net_x9;

  d_bussify_591acf9731: entity work.d_bussify_entity_591acf9731
    port map (
      in1 => mux0_y_net_x0,
      in10 => mux9_y_net_x0,
      in11 => mux10_y_net_x0,
      in12 => mux11_y_net_x0,
      in13 => mux12_y_net_x0,
      in14 => mux13_y_net_x0,
      in15 => mux14_y_net_x0,
      in16 => mux15_y_net_x0,
      in17 => mux16_y_net_x0,
      in18 => mux17_y_net_x0,
      in19 => mux18_y_net_x0,
      in2 => mux1_y_net_x0,
      in20 => mux19_y_net_x0,
      in21 => mux20_y_net_x0,
      in22 => mux21_y_net_x0,
      in23 => mux22_y_net_x0,
      in24 => mux23_y_net_x0,
      in25 => mux24_y_net_x0,
      in26 => mux25_y_net_x0,
      in27 => mux26_y_net_x0,
      in28 => mux27_y_net_x0,
      in29 => mux28_y_net_x0,
      in3 => mux2_y_net_x0,
      in30 => mux29_y_net_x0,
      in31 => mux30_y_net_x0,
      in32 => mux31_y_net_x0,
      in4 => mux3_y_net_x0,
      in5 => mux4_y_net_x0,
      in6 => mux5_y_net_x0,
      in7 => mux6_y_net_x0,
      in8 => mux7_y_net_x0,
      in9 => mux8_y_net_x0,
      bus_out => concatenate_y_net_x9
    );

  expand0_5447893a27: entity work.expand0_entity_5447893a27
    port map (
      bus_in => concatenate_y_net_x6,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out32 => reinterpret32_output_port_net_x0,
      out10 => reinterpret10_output_port_net_x0,
      out11 => reinterpret11_output_port_net_x0,
      out12 => reinterpret12_output_port_net_x0,
      out13 => reinterpret13_output_port_net_x0,
      out14 => reinterpret14_output_port_net_x0,
      out15 => reinterpret15_output_port_net_x0,
      out16 => reinterpret16_output_port_net_x0,
      out17 => reinterpret17_output_port_net_x0,
      out18 => reinterpret18_output_port_net_x0,
      out19 => reinterpret19_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out20 => reinterpret20_output_port_net_x0,
      out21 => reinterpret21_output_port_net_x0,
      out22 => reinterpret22_output_port_net_x0,
      out23 => reinterpret23_output_port_net_x0,
      out24 => reinterpret24_output_port_net_x0,
      out25 => reinterpret25_output_port_net_x0,
      out26 => reinterpret26_output_port_net_x0,
      out27 => reinterpret27_output_port_net_x0,
      out28 => reinterpret28_output_port_net_x0,
      out29 => reinterpret29_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0,
      out30 => reinterpret30_output_port_net_x0,
      out31 => reinterpret31_output_port_net_x0,
      out4 => reinterpret4_output_port_net_x0,
      out5 => reinterpret5_output_port_net_x0,
      out6 => reinterpret6_output_port_net_x0,
      out7 => reinterpret7_output_port_net_x0,
      out8 => reinterpret8_output_port_net_x0,
      out9 => reinterpret9_output_port_net_x0
    );

  expand1_e117fb416d: entity work.expand0_entity_5447893a27
    port map (
      bus_in => concatenate_y_net_x7,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out32 => reinterpret32_output_port_net_x1,
      out10 => reinterpret10_output_port_net_x1,
      out11 => reinterpret11_output_port_net_x1,
      out12 => reinterpret12_output_port_net_x1,
      out13 => reinterpret13_output_port_net_x1,
      out14 => reinterpret14_output_port_net_x1,
      out15 => reinterpret15_output_port_net_x1,
      out16 => reinterpret16_output_port_net_x1,
      out17 => reinterpret17_output_port_net_x1,
      out18 => reinterpret18_output_port_net_x1,
      out19 => reinterpret19_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out20 => reinterpret20_output_port_net_x1,
      out21 => reinterpret21_output_port_net_x1,
      out22 => reinterpret22_output_port_net_x1,
      out23 => reinterpret23_output_port_net_x1,
      out24 => reinterpret24_output_port_net_x1,
      out25 => reinterpret25_output_port_net_x1,
      out26 => reinterpret26_output_port_net_x1,
      out27 => reinterpret27_output_port_net_x1,
      out28 => reinterpret28_output_port_net_x1,
      out29 => reinterpret29_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1,
      out30 => reinterpret30_output_port_net_x1,
      out31 => reinterpret31_output_port_net_x1,
      out4 => reinterpret4_output_port_net_x1,
      out5 => reinterpret5_output_port_net_x1,
      out6 => reinterpret6_output_port_net_x1,
      out7 => reinterpret7_output_port_net_x1,
      out8 => reinterpret8_output_port_net_x1,
      out9 => reinterpret9_output_port_net_x1
    );

  mux0: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret32_output_port_net_x0,
      d1 => reinterpret32_output_port_net_x1,
      sel(0) => reinterpret32_output_port_net_x2,
      y => mux0_y_net_x0
    );

  mux1: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret31_output_port_net_x0,
      d1 => reinterpret31_output_port_net_x1,
      sel(0) => reinterpret31_output_port_net_x2,
      y => mux1_y_net_x0
    );

  mux10: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret22_output_port_net_x0,
      d1 => reinterpret22_output_port_net_x1,
      sel(0) => reinterpret22_output_port_net_x2,
      y => mux10_y_net_x0
    );

  mux11: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret21_output_port_net_x0,
      d1 => reinterpret21_output_port_net_x1,
      sel(0) => reinterpret21_output_port_net_x2,
      y => mux11_y_net_x0
    );

  mux12: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret20_output_port_net_x0,
      d1 => reinterpret20_output_port_net_x1,
      sel(0) => reinterpret20_output_port_net_x2,
      y => mux12_y_net_x0
    );

  mux13: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret19_output_port_net_x0,
      d1 => reinterpret19_output_port_net_x1,
      sel(0) => reinterpret19_output_port_net_x2,
      y => mux13_y_net_x0
    );

  mux14: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret18_output_port_net_x0,
      d1 => reinterpret18_output_port_net_x1,
      sel(0) => reinterpret18_output_port_net_x2,
      y => mux14_y_net_x0
    );

  mux15: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret17_output_port_net_x0,
      d1 => reinterpret17_output_port_net_x1,
      sel(0) => reinterpret17_output_port_net_x2,
      y => mux15_y_net_x0
    );

  mux16: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret16_output_port_net_x0,
      d1 => reinterpret16_output_port_net_x1,
      sel(0) => reinterpret16_output_port_net_x2,
      y => mux16_y_net_x0
    );

  mux17: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret15_output_port_net_x0,
      d1 => reinterpret15_output_port_net_x1,
      sel(0) => reinterpret15_output_port_net_x2,
      y => mux17_y_net_x0
    );

  mux18: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret14_output_port_net_x0,
      d1 => reinterpret14_output_port_net_x1,
      sel(0) => reinterpret14_output_port_net_x2,
      y => mux18_y_net_x0
    );

  mux19: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret13_output_port_net_x0,
      d1 => reinterpret13_output_port_net_x1,
      sel(0) => reinterpret13_output_port_net_x2,
      y => mux19_y_net_x0
    );

  mux2: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret30_output_port_net_x0,
      d1 => reinterpret30_output_port_net_x1,
      sel(0) => reinterpret30_output_port_net_x2,
      y => mux2_y_net_x0
    );

  mux20: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret12_output_port_net_x0,
      d1 => reinterpret12_output_port_net_x1,
      sel(0) => reinterpret12_output_port_net_x2,
      y => mux20_y_net_x0
    );

  mux21: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret11_output_port_net_x0,
      d1 => reinterpret11_output_port_net_x1,
      sel(0) => reinterpret11_output_port_net_x2,
      y => mux21_y_net_x0
    );

  mux22: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret10_output_port_net_x0,
      d1 => reinterpret10_output_port_net_x1,
      sel(0) => reinterpret10_output_port_net_x2,
      y => mux22_y_net_x0
    );

  mux23: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret9_output_port_net_x0,
      d1 => reinterpret9_output_port_net_x1,
      sel(0) => reinterpret9_output_port_net_x2,
      y => mux23_y_net_x0
    );

  mux24: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret8_output_port_net_x0,
      d1 => reinterpret8_output_port_net_x1,
      sel(0) => reinterpret8_output_port_net_x2,
      y => mux24_y_net_x0
    );

  mux25: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret7_output_port_net_x0,
      d1 => reinterpret7_output_port_net_x1,
      sel(0) => reinterpret7_output_port_net_x2,
      y => mux25_y_net_x0
    );

  mux26: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret6_output_port_net_x0,
      d1 => reinterpret6_output_port_net_x1,
      sel(0) => reinterpret6_output_port_net_x2,
      y => mux26_y_net_x0
    );

  mux27: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret5_output_port_net_x0,
      d1 => reinterpret5_output_port_net_x1,
      sel(0) => reinterpret5_output_port_net_x2,
      y => mux27_y_net_x0
    );

  mux28: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret4_output_port_net_x0,
      d1 => reinterpret4_output_port_net_x1,
      sel(0) => reinterpret4_output_port_net_x2,
      y => mux28_y_net_x0
    );

  mux29: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret3_output_port_net_x0,
      d1 => reinterpret3_output_port_net_x1,
      sel(0) => reinterpret3_output_port_net_x2,
      y => mux29_y_net_x0
    );

  mux3: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret29_output_port_net_x0,
      d1 => reinterpret29_output_port_net_x1,
      sel(0) => reinterpret29_output_port_net_x2,
      y => mux3_y_net_x0
    );

  mux30: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret2_output_port_net_x0,
      d1 => reinterpret2_output_port_net_x1,
      sel(0) => reinterpret2_output_port_net_x2,
      y => mux30_y_net_x0
    );

  mux31: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret1_output_port_net_x0,
      d1 => reinterpret1_output_port_net_x1,
      sel(0) => reinterpret1_output_port_net_x2,
      y => mux31_y_net_x0
    );

  mux4: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret28_output_port_net_x0,
      d1 => reinterpret28_output_port_net_x1,
      sel(0) => reinterpret28_output_port_net_x2,
      y => mux4_y_net_x0
    );

  mux5: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret27_output_port_net_x0,
      d1 => reinterpret27_output_port_net_x1,
      sel(0) => reinterpret27_output_port_net_x2,
      y => mux5_y_net_x0
    );

  mux6: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret26_output_port_net_x0,
      d1 => reinterpret26_output_port_net_x1,
      sel(0) => reinterpret26_output_port_net_x2,
      y => mux6_y_net_x0
    );

  mux7: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret25_output_port_net_x0,
      d1 => reinterpret25_output_port_net_x1,
      sel(0) => reinterpret25_output_port_net_x2,
      y => mux7_y_net_x0
    );

  mux8: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret24_output_port_net_x0,
      d1 => reinterpret24_output_port_net_x1,
      sel(0) => reinterpret24_output_port_net_x2,
      y => mux8_y_net_x0
    );

  mux9: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1127,
      clk => clk_1_sg_x1127,
      clr => '0',
      d0 => reinterpret23_output_port_net_x0,
      d1 => reinterpret23_output_port_net_x1,
      sel(0) => reinterpret23_output_port_net_x2,
      y => mux9_y_net_x0
    );

  sel_expand_ed4e6d740e: entity work.sel_expand_entity_ed4e6d740e
    port map (
      bus_in => concatenate_y_net_x8,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out32 => reinterpret32_output_port_net_x2,
      out10 => reinterpret10_output_port_net_x2,
      out11 => reinterpret11_output_port_net_x2,
      out12 => reinterpret12_output_port_net_x2,
      out13 => reinterpret13_output_port_net_x2,
      out14 => reinterpret14_output_port_net_x2,
      out15 => reinterpret15_output_port_net_x2,
      out16 => reinterpret16_output_port_net_x2,
      out17 => reinterpret17_output_port_net_x2,
      out18 => reinterpret18_output_port_net_x2,
      out19 => reinterpret19_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x2,
      out20 => reinterpret20_output_port_net_x2,
      out21 => reinterpret21_output_port_net_x2,
      out22 => reinterpret22_output_port_net_x2,
      out23 => reinterpret23_output_port_net_x2,
      out24 => reinterpret24_output_port_net_x2,
      out25 => reinterpret25_output_port_net_x2,
      out26 => reinterpret26_output_port_net_x2,
      out27 => reinterpret27_output_port_net_x2,
      out28 => reinterpret28_output_port_net_x2,
      out29 => reinterpret29_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x2,
      out30 => reinterpret30_output_port_net_x2,
      out31 => reinterpret31_output_port_net_x2,
      out4 => reinterpret4_output_port_net_x2,
      out5 => reinterpret5_output_port_net_x2,
      out6 => reinterpret6_output_port_net_x2,
      out7 => reinterpret7_output_port_net_x2,
      out8 => reinterpret8_output_port_net_x2,
      out9 => reinterpret9_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/shift_replicate"

entity shift_replicate_entity_cf7b7a5934 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic_vector(31 downto 0)
  );
end shift_replicate_entity_cf7b7a5934;

architecture structural of shift_replicate_entity_cf7b7a5934 is
  signal ce_1_sg_x1128: std_logic;
  signal clk_1_sg_x1128: std_logic;
  signal concatenate_y_net_x10: std_logic_vector(31 downto 0);
  signal din0_0_q_net: std_logic;
  signal din0_1_q_net: std_logic;
  signal din0_2_q_net: std_logic;
  signal din1_0_q_net: std_logic;
  signal din1_10_q_net: std_logic;
  signal din1_11_q_net: std_logic;
  signal din1_1_q_net: std_logic;
  signal din1_2_q_net: std_logic;
  signal din1_3_q_net: std_logic;
  signal din1_4_q_net: std_logic;
  signal din1_5_q_net: std_logic;
  signal din1_6_q_net: std_logic;
  signal din1_7_q_net: std_logic;
  signal din1_8_q_net: std_logic;
  signal din1_9_q_net: std_logic;
  signal din2_0_q_net_x0: std_logic;
  signal din2_10_q_net_x0: std_logic;
  signal din2_11_q_net_x0: std_logic;
  signal din2_12_q_net_x0: std_logic;
  signal din2_13_q_net_x0: std_logic;
  signal din2_14_q_net_x0: std_logic;
  signal din2_15_q_net_x0: std_logic;
  signal din2_16_q_net_x0: std_logic;
  signal din2_17_q_net_x0: std_logic;
  signal din2_18_q_net_x0: std_logic;
  signal din2_19_q_net_x0: std_logic;
  signal din2_1_q_net_x0: std_logic;
  signal din2_20_q_net_x0: std_logic;
  signal din2_21_q_net_x0: std_logic;
  signal din2_22_q_net_x0: std_logic;
  signal din2_23_q_net_x0: std_logic;
  signal din2_24_q_net_x0: std_logic;
  signal din2_25_q_net_x0: std_logic;
  signal din2_26_q_net_x0: std_logic;
  signal din2_27_q_net_x0: std_logic;
  signal din2_28_q_net_x0: std_logic;
  signal din2_29_q_net_x0: std_logic;
  signal din2_2_q_net_x0: std_logic;
  signal din2_30_q_net_x0: std_logic;
  signal din2_31_q_net_x0: std_logic;
  signal din2_3_q_net_x0: std_logic;
  signal din2_4_q_net_x0: std_logic;
  signal din2_5_q_net_x0: std_logic;
  signal din2_6_q_net_x0: std_logic;
  signal din2_7_q_net_x0: std_logic;
  signal din2_8_q_net_x0: std_logic;
  signal din2_9_q_net_x0: std_logic;
  signal slice0_y_net_x0: std_logic;

begin
  ce_1_sg_x1128 <= ce_1;
  clk_1_sg_x1128 <= clk_1;
  slice0_y_net_x0 <= in_x0;
  out_x0 <= concatenate_y_net_x10;

  bussify_2ab9fa230f: entity work.of_bussify_entity_7614a67812
    port map (
      in1 => din2_0_q_net_x0,
      in10 => din2_9_q_net_x0,
      in11 => din2_10_q_net_x0,
      in12 => din2_11_q_net_x0,
      in13 => din2_12_q_net_x0,
      in14 => din2_13_q_net_x0,
      in15 => din2_14_q_net_x0,
      in16 => din2_15_q_net_x0,
      in17 => din2_16_q_net_x0,
      in18 => din2_17_q_net_x0,
      in19 => din2_18_q_net_x0,
      in2 => din2_1_q_net_x0,
      in20 => din2_19_q_net_x0,
      in21 => din2_20_q_net_x0,
      in22 => din2_21_q_net_x0,
      in23 => din2_22_q_net_x0,
      in24 => din2_23_q_net_x0,
      in25 => din2_24_q_net_x0,
      in26 => din2_25_q_net_x0,
      in27 => din2_26_q_net_x0,
      in28 => din2_27_q_net_x0,
      in29 => din2_28_q_net_x0,
      in3 => din2_2_q_net_x0,
      in30 => din2_29_q_net_x0,
      in31 => din2_30_q_net_x0,
      in32 => din2_31_q_net_x0,
      in4 => din2_3_q_net_x0,
      in5 => din2_4_q_net_x0,
      in6 => din2_5_q_net_x0,
      in7 => din2_6_q_net_x0,
      in8 => din2_7_q_net_x0,
      in9 => din2_8_q_net_x0,
      bus_out => concatenate_y_net_x10
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => slice0_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_0_q_net
    );

  din0_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => slice0_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_1_q_net
    );

  din0_2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => slice0_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_2_q_net
    );

  din1_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din0_0_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_0_q_net
    );

  din1_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din0_1_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_1_q_net
    );

  din1_10: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din0_1_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_10_q_net
    );

  din1_11: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din0_2_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_11_q_net
    );

  din1_2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din0_2_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_2_q_net
    );

  din1_3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din0_0_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_3_q_net
    );

  din1_4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din0_1_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_4_q_net
    );

  din1_5: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din0_2_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_5_q_net
    );

  din1_6: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din0_0_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_6_q_net
    );

  din1_7: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din0_1_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_7_q_net
    );

  din1_8: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din0_2_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_8_q_net
    );

  din1_9: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din0_0_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_9_q_net
    );

  din2_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_0_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_0_q_net_x0
    );

  din2_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_1_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_1_q_net_x0
    );

  din2_10: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_10_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_10_q_net_x0
    );

  din2_11: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_11_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_11_q_net_x0
    );

  din2_12: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_0_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_12_q_net_x0
    );

  din2_13: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_1_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_13_q_net_x0
    );

  din2_14: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_2_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_14_q_net_x0
    );

  din2_15: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_3_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_15_q_net_x0
    );

  din2_16: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_4_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_16_q_net_x0
    );

  din2_17: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_5_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_17_q_net_x0
    );

  din2_18: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_6_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_18_q_net_x0
    );

  din2_19: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_7_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_19_q_net_x0
    );

  din2_2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_2_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_2_q_net_x0
    );

  din2_20: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_8_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_20_q_net_x0
    );

  din2_21: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_9_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_21_q_net_x0
    );

  din2_22: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_10_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_22_q_net_x0
    );

  din2_23: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_11_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_23_q_net_x0
    );

  din2_24: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_0_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_24_q_net_x0
    );

  din2_25: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_1_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_25_q_net_x0
    );

  din2_26: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_2_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_26_q_net_x0
    );

  din2_27: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_3_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_27_q_net_x0
    );

  din2_28: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_4_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_28_q_net_x0
    );

  din2_29: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_5_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_29_q_net_x0
    );

  din2_3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_3_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_3_q_net_x0
    );

  din2_30: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_6_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_30_q_net_x0
    );

  din2_31: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_7_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_31_q_net_x0
    );

  din2_4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_4_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_4_q_net_x0
    );

  din2_5: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_5_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_5_q_net_x0
    );

  din2_6: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_6_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_6_q_net_x0
    );

  din2_7: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_7_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_7_q_net_x0
    );

  din2_8: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_8_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_8_q_net_x0
    );

  din2_9: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1128,
      clk => clk_1_sg_x1128,
      d(0) => din1_9_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_9_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/twiddle/bus_convert/bussify"

entity bussify_entity_e708351333 is
  port (
    in1: in std_logic_vector(18 downto 0); 
    in10: in std_logic_vector(18 downto 0); 
    in11: in std_logic_vector(18 downto 0); 
    in12: in std_logic_vector(18 downto 0); 
    in13: in std_logic_vector(18 downto 0); 
    in14: in std_logic_vector(18 downto 0); 
    in15: in std_logic_vector(18 downto 0); 
    in16: in std_logic_vector(18 downto 0); 
    in2: in std_logic_vector(18 downto 0); 
    in3: in std_logic_vector(18 downto 0); 
    in4: in std_logic_vector(18 downto 0); 
    in5: in std_logic_vector(18 downto 0); 
    in6: in std_logic_vector(18 downto 0); 
    in7: in std_logic_vector(18 downto 0); 
    in8: in std_logic_vector(18 downto 0); 
    in9: in std_logic_vector(18 downto 0); 
    bus_out: out std_logic_vector(303 downto 0)
  );
end bussify_entity_e708351333;

architecture structural of bussify_entity_e708351333 is
  signal adder_s_net_x15: std_logic_vector(18 downto 0);
  signal adder_s_net_x16: std_logic_vector(18 downto 0);
  signal adder_s_net_x17: std_logic_vector(18 downto 0);
  signal adder_s_net_x18: std_logic_vector(18 downto 0);
  signal adder_s_net_x19: std_logic_vector(18 downto 0);
  signal adder_s_net_x20: std_logic_vector(18 downto 0);
  signal adder_s_net_x21: std_logic_vector(18 downto 0);
  signal adder_s_net_x22: std_logic_vector(18 downto 0);
  signal adder_s_net_x23: std_logic_vector(18 downto 0);
  signal adder_s_net_x24: std_logic_vector(18 downto 0);
  signal adder_s_net_x25: std_logic_vector(18 downto 0);
  signal adder_s_net_x26: std_logic_vector(18 downto 0);
  signal adder_s_net_x27: std_logic_vector(18 downto 0);
  signal adder_s_net_x28: std_logic_vector(18 downto 0);
  signal adder_s_net_x29: std_logic_vector(18 downto 0);
  signal adder_s_net_x30: std_logic_vector(18 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(303 downto 0);
  signal reinterpret10_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret11_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret12_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret13_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret14_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret15_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret16_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret9_output_port_net: std_logic_vector(18 downto 0);

begin
  adder_s_net_x15 <= in1;
  adder_s_net_x16 <= in10;
  adder_s_net_x17 <= in11;
  adder_s_net_x18 <= in12;
  adder_s_net_x19 <= in13;
  adder_s_net_x20 <= in14;
  adder_s_net_x21 <= in15;
  adder_s_net_x22 <= in16;
  adder_s_net_x23 <= in2;
  adder_s_net_x24 <= in3;
  adder_s_net_x25 <= in4;
  adder_s_net_x26 <= in5;
  adder_s_net_x27 <= in6;
  adder_s_net_x28 <= in7;
  adder_s_net_x29 <= in8;
  adder_s_net_x30 <= in9;
  bus_out <= concatenate_y_net_x5;

  concatenate: entity work.concat_b117ea6d19
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in10 => reinterpret11_output_port_net,
      in11 => reinterpret12_output_port_net,
      in12 => reinterpret13_output_port_net,
      in13 => reinterpret14_output_port_net,
      in14 => reinterpret15_output_port_net,
      in15 => reinterpret16_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      in8 => reinterpret9_output_port_net,
      in9 => reinterpret10_output_port_net,
      y => concatenate_y_net_x5
    );

  reinterpret1: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x15,
      output_port => reinterpret1_output_port_net
    );

  reinterpret10: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x16,
      output_port => reinterpret10_output_port_net
    );

  reinterpret11: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x17,
      output_port => reinterpret11_output_port_net
    );

  reinterpret12: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x18,
      output_port => reinterpret12_output_port_net
    );

  reinterpret13: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x19,
      output_port => reinterpret13_output_port_net
    );

  reinterpret14: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x20,
      output_port => reinterpret14_output_port_net
    );

  reinterpret15: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x21,
      output_port => reinterpret15_output_port_net
    );

  reinterpret16: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x22,
      output_port => reinterpret16_output_port_net
    );

  reinterpret2: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x23,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x24,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x25,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x26,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x27,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x28,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x29,
      output_port => reinterpret8_output_port_net
    );

  reinterpret9: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x30,
      output_port => reinterpret9_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/twiddle/bus_convert/debus"

entity debus_entity_1e60a2ca24 is
  port (
    bus_in: in std_logic_vector(591 downto 0); 
    lsb_out1: out std_logic_vector(36 downto 0); 
    msb_out16: out std_logic_vector(36 downto 0); 
    out10: out std_logic_vector(36 downto 0); 
    out11: out std_logic_vector(36 downto 0); 
    out12: out std_logic_vector(36 downto 0); 
    out13: out std_logic_vector(36 downto 0); 
    out14: out std_logic_vector(36 downto 0); 
    out15: out std_logic_vector(36 downto 0); 
    out2: out std_logic_vector(36 downto 0); 
    out3: out std_logic_vector(36 downto 0); 
    out4: out std_logic_vector(36 downto 0); 
    out5: out std_logic_vector(36 downto 0); 
    out6: out std_logic_vector(36 downto 0); 
    out7: out std_logic_vector(36 downto 0); 
    out8: out std_logic_vector(36 downto 0); 
    out9: out std_logic_vector(36 downto 0)
  );
end debus_entity_1e60a2ca24;

architecture structural of debus_entity_1e60a2ca24 is
  signal concatenate_y_net_x0: std_logic_vector(591 downto 0);
  signal reinterpret10_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret11_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret12_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret13_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret14_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret15_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret16_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret5_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret6_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret7_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret8_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret9_output_port_net_x1: std_logic_vector(36 downto 0);
  signal slice10_y_net: std_logic_vector(36 downto 0);
  signal slice11_y_net: std_logic_vector(36 downto 0);
  signal slice12_y_net: std_logic_vector(36 downto 0);
  signal slice13_y_net: std_logic_vector(36 downto 0);
  signal slice14_y_net: std_logic_vector(36 downto 0);
  signal slice15_y_net: std_logic_vector(36 downto 0);
  signal slice16_y_net: std_logic_vector(36 downto 0);
  signal slice1_y_net: std_logic_vector(36 downto 0);
  signal slice2_y_net: std_logic_vector(36 downto 0);
  signal slice3_y_net: std_logic_vector(36 downto 0);
  signal slice4_y_net: std_logic_vector(36 downto 0);
  signal slice5_y_net: std_logic_vector(36 downto 0);
  signal slice6_y_net: std_logic_vector(36 downto 0);
  signal slice7_y_net: std_logic_vector(36 downto 0);
  signal slice8_y_net: std_logic_vector(36 downto 0);
  signal slice9_y_net: std_logic_vector(36 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x1;
  msb_out16 <= reinterpret16_output_port_net_x1;
  out10 <= reinterpret10_output_port_net_x1;
  out11 <= reinterpret11_output_port_net_x1;
  out12 <= reinterpret12_output_port_net_x1;
  out13 <= reinterpret13_output_port_net_x1;
  out14 <= reinterpret14_output_port_net_x1;
  out15 <= reinterpret15_output_port_net_x1;
  out2 <= reinterpret2_output_port_net_x1;
  out3 <= reinterpret3_output_port_net_x1;
  out4 <= reinterpret4_output_port_net_x1;
  out5 <= reinterpret5_output_port_net_x1;
  out6 <= reinterpret6_output_port_net_x1;
  out7 <= reinterpret7_output_port_net_x1;
  out8 <= reinterpret8_output_port_net_x1;
  out9 <= reinterpret9_output_port_net_x1;

  reinterpret1: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x1
    );

  reinterpret10: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice10_y_net,
      output_port => reinterpret10_output_port_net_x1
    );

  reinterpret11: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice11_y_net,
      output_port => reinterpret11_output_port_net_x1
    );

  reinterpret12: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice12_y_net,
      output_port => reinterpret12_output_port_net_x1
    );

  reinterpret13: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice13_y_net,
      output_port => reinterpret13_output_port_net_x1
    );

  reinterpret14: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice14_y_net,
      output_port => reinterpret14_output_port_net_x1
    );

  reinterpret15: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice15_y_net,
      output_port => reinterpret15_output_port_net_x1
    );

  reinterpret16: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice16_y_net,
      output_port => reinterpret16_output_port_net_x1
    );

  reinterpret2: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x1
    );

  reinterpret3: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x1
    );

  reinterpret4: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x1
    );

  reinterpret5: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_y_net,
      output_port => reinterpret5_output_port_net_x1
    );

  reinterpret6: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret6_output_port_net_x1
    );

  reinterpret7: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret7_output_port_net_x1
    );

  reinterpret8: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret8_output_port_net_x1
    );

  reinterpret9: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice9_y_net,
      output_port => reinterpret9_output_port_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 36,
      x_width => 592,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice10: entity work.xlslice
    generic map (
      new_lsb => 333,
      new_msb => 369,
      x_width => 592,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice10_y_net
    );

  slice11: entity work.xlslice
    generic map (
      new_lsb => 370,
      new_msb => 406,
      x_width => 592,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice11_y_net
    );

  slice12: entity work.xlslice
    generic map (
      new_lsb => 407,
      new_msb => 443,
      x_width => 592,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice12_y_net
    );

  slice13: entity work.xlslice
    generic map (
      new_lsb => 444,
      new_msb => 480,
      x_width => 592,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice13_y_net
    );

  slice14: entity work.xlslice
    generic map (
      new_lsb => 481,
      new_msb => 517,
      x_width => 592,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice14_y_net
    );

  slice15: entity work.xlslice
    generic map (
      new_lsb => 518,
      new_msb => 554,
      x_width => 592,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice15_y_net
    );

  slice16: entity work.xlslice
    generic map (
      new_lsb => 555,
      new_msb => 591,
      x_width => 592,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice16_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 37,
      new_msb => 73,
      x_width => 592,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 74,
      new_msb => 110,
      x_width => 592,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 111,
      new_msb => 147,
      x_width => 592,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 148,
      new_msb => 184,
      x_width => 592,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 185,
      new_msb => 221,
      x_width => 592,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 222,
      new_msb => 258,
      x_width => 592,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 259,
      new_msb => 295,
      x_width => 592,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice8_y_net
    );

  slice9: entity work.xlslice
    generic map (
      new_lsb => 296,
      new_msb => 332,
      x_width => 592,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice9_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/twiddle/bus_convert"

entity bus_convert_entity_7b21fae6af is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(591 downto 0); 
    misci: in std_logic_vector(288 downto 0); 
    dout: out std_logic_vector(303 downto 0); 
    misco: out std_logic_vector(288 downto 0)
  );
end bus_convert_entity_7b21fae6af;

architecture structural of bus_convert_entity_7b21fae6af is
  signal adder_s_net_x16: std_logic_vector(18 downto 0);
  signal adder_s_net_x17: std_logic_vector(18 downto 0);
  signal adder_s_net_x18: std_logic_vector(18 downto 0);
  signal adder_s_net_x19: std_logic_vector(18 downto 0);
  signal adder_s_net_x20: std_logic_vector(18 downto 0);
  signal adder_s_net_x21: std_logic_vector(18 downto 0);
  signal adder_s_net_x22: std_logic_vector(18 downto 0);
  signal adder_s_net_x23: std_logic_vector(18 downto 0);
  signal adder_s_net_x24: std_logic_vector(18 downto 0);
  signal adder_s_net_x25: std_logic_vector(18 downto 0);
  signal adder_s_net_x26: std_logic_vector(18 downto 0);
  signal adder_s_net_x27: std_logic_vector(18 downto 0);
  signal adder_s_net_x28: std_logic_vector(18 downto 0);
  signal adder_s_net_x29: std_logic_vector(18 downto 0);
  signal adder_s_net_x30: std_logic_vector(18 downto 0);
  signal adder_s_net_x31: std_logic_vector(18 downto 0);
  signal ce_1_sg_x1145: std_logic;
  signal clk_1_sg_x1145: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(591 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(303 downto 0);
  signal dmisc_q_net_x1: std_logic_vector(288 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(288 downto 0);
  signal reinterpret10_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret11_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret12_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret13_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret14_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret15_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret16_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret5_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret6_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret7_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret8_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret9_output_port_net_x1: std_logic_vector(36 downto 0);

begin
  ce_1_sg_x1145 <= ce_1;
  clk_1_sg_x1145 <= clk_1;
  concatenate_y_net_x1 <= din;
  dmisc_q_net_x1 <= misci;
  dout <= concatenate_y_net_x6;
  misco <= dmisc_q_net_x2;

  bussify_e708351333: entity work.bussify_entity_e708351333
    port map (
      in1 => adder_s_net_x16,
      in10 => adder_s_net_x17,
      in11 => adder_s_net_x18,
      in12 => adder_s_net_x19,
      in13 => adder_s_net_x20,
      in14 => adder_s_net_x21,
      in15 => adder_s_net_x22,
      in16 => adder_s_net_x23,
      in2 => adder_s_net_x24,
      in3 => adder_s_net_x25,
      in4 => adder_s_net_x26,
      in5 => adder_s_net_x27,
      in6 => adder_s_net_x28,
      in7 => adder_s_net_x29,
      in8 => adder_s_net_x30,
      in9 => adder_s_net_x31,
      bus_out => concatenate_y_net_x6
    );

  conv10_96ed2c861c: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x1145,
      clk_1 => clk_1_sg_x1145,
      in_x0 => reinterpret7_output_port_net_x1,
      out_x0 => adder_s_net_x17
    );

  conv11_92f17fe633: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x1145,
      clk_1 => clk_1_sg_x1145,
      in_x0 => reinterpret6_output_port_net_x1,
      out_x0 => adder_s_net_x18
    );

  conv12_3e54e99f3b: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x1145,
      clk_1 => clk_1_sg_x1145,
      in_x0 => reinterpret5_output_port_net_x1,
      out_x0 => adder_s_net_x19
    );

  conv13_e0a3a43711: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x1145,
      clk_1 => clk_1_sg_x1145,
      in_x0 => reinterpret4_output_port_net_x1,
      out_x0 => adder_s_net_x20
    );

  conv14_97cf6a3e3e: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x1145,
      clk_1 => clk_1_sg_x1145,
      in_x0 => reinterpret3_output_port_net_x1,
      out_x0 => adder_s_net_x21
    );

  conv15_73a1e7283c: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x1145,
      clk_1 => clk_1_sg_x1145,
      in_x0 => reinterpret2_output_port_net_x1,
      out_x0 => adder_s_net_x22
    );

  conv16_6979903dfa: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x1145,
      clk_1 => clk_1_sg_x1145,
      in_x0 => reinterpret1_output_port_net_x1,
      out_x0 => adder_s_net_x23
    );

  conv1_2521fd4b2d: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x1145,
      clk_1 => clk_1_sg_x1145,
      in_x0 => reinterpret16_output_port_net_x1,
      out_x0 => adder_s_net_x16
    );

  conv2_05223df75d: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x1145,
      clk_1 => clk_1_sg_x1145,
      in_x0 => reinterpret15_output_port_net_x1,
      out_x0 => adder_s_net_x24
    );

  conv3_94a0944622: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x1145,
      clk_1 => clk_1_sg_x1145,
      in_x0 => reinterpret14_output_port_net_x1,
      out_x0 => adder_s_net_x25
    );

  conv4_ccd695c882: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x1145,
      clk_1 => clk_1_sg_x1145,
      in_x0 => reinterpret13_output_port_net_x1,
      out_x0 => adder_s_net_x26
    );

  conv5_a5d80a56ae: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x1145,
      clk_1 => clk_1_sg_x1145,
      in_x0 => reinterpret12_output_port_net_x1,
      out_x0 => adder_s_net_x27
    );

  conv6_34deb38b8c: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x1145,
      clk_1 => clk_1_sg_x1145,
      in_x0 => reinterpret11_output_port_net_x1,
      out_x0 => adder_s_net_x28
    );

  conv7_65d1ef4798: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x1145,
      clk_1 => clk_1_sg_x1145,
      in_x0 => reinterpret10_output_port_net_x1,
      out_x0 => adder_s_net_x29
    );

  conv8_40314f0ae7: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x1145,
      clk_1 => clk_1_sg_x1145,
      in_x0 => reinterpret9_output_port_net_x1,
      out_x0 => adder_s_net_x30
    );

  conv9_c6cd816395: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x1145,
      clk_1 => clk_1_sg_x1145,
      in_x0 => reinterpret8_output_port_net_x1,
      out_x0 => adder_s_net_x31
    );

  debus_1e60a2ca24: entity work.debus_entity_1e60a2ca24
    port map (
      bus_in => concatenate_y_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out16 => reinterpret16_output_port_net_x1,
      out10 => reinterpret10_output_port_net_x1,
      out11 => reinterpret11_output_port_net_x1,
      out12 => reinterpret12_output_port_net_x1,
      out13 => reinterpret13_output_port_net_x1,
      out14 => reinterpret14_output_port_net_x1,
      out15 => reinterpret15_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1,
      out4 => reinterpret4_output_port_net_x1,
      out5 => reinterpret5_output_port_net_x1,
      out6 => reinterpret6_output_port_net_x1,
      out7 => reinterpret7_output_port_net_x1,
      out8 => reinterpret8_output_port_net_x1,
      out9 => reinterpret9_output_port_net_x1
    );

  dmisc: entity work.delay_80f3e767fa
    port map (
      ce => ce_1_sg_x1145,
      clk => clk_1_sg_x1145,
      clr => '0',
      d => dmisc_q_net_x1,
      q => dmisc_q_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/twiddle/bus_create"

entity bus_create_entity_1fcc6c7b2a is
  port (
    in1: in std_logic_vector(287 downto 0); 
    in2: in std_logic; 
    in3: in std_logic_vector(287 downto 0); 
    bus_out: out std_logic_vector(576 downto 0)
  );
end bus_create_entity_1fcc6c7b2a;

architecture structural of bus_create_entity_1fcc6c7b2a is
  signal concatenate_y_net_x2: std_logic_vector(287 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(287 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(576 downto 0);
  signal register0_q_net_x1: std_logic;
  signal reinterpret1_output_port_net: std_logic_vector(287 downto 0);
  signal reinterpret2_output_port_net: std_logic;
  signal reinterpret3_output_port_net: std_logic_vector(287 downto 0);

begin
  concatenate_y_net_x3 <= in1;
  register0_q_net_x1 <= in2;
  concatenate_y_net_x2 <= in3;
  bus_out <= concatenate_y_net_x4;

  concatenate: entity work.concat_5c078b6592
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1(0) => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      y => concatenate_y_net_x4
    );

  reinterpret1: entity work.reinterpret_a6651f657f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concatenate_y_net_x3,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => register0_q_net_x1,
      output_port(0) => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_a6651f657f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concatenate_y_net_x2,
      output_port => reinterpret3_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/twiddle/bus_expand"

entity bus_expand_entity_c5406eae1d is
  port (
    bus_in: in std_logic_vector(576 downto 0); 
    lsb_out1: out std_logic_vector(288 downto 0); 
    msb_out2: out std_logic_vector(287 downto 0)
  );
end bus_expand_entity_c5406eae1d;

architecture structural of bus_expand_entity_c5406eae1d is
  signal delay1_q_net_x0: std_logic_vector(576 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(288 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(287 downto 0);
  signal slice1_y_net: std_logic_vector(288 downto 0);
  signal slice2_y_net: std_logic_vector(287 downto 0);

begin
  delay1_q_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out2 <= reinterpret2_output_port_net_x0;

  reinterpret1: entity work.reinterpret_7239e29d34
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_a6651f657f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 288,
      x_width => 577,
      y_width => 289
    )
    port map (
      x => delay1_q_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 289,
      new_msb => 576,
      x_width => 577,
      y_width => 288
    )
    port map (
      x => delay1_q_net_x0,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/twiddle/bus_expand1"

entity bus_expand1_entity_f2c4420ee3 is
  port (
    bus_in: in std_logic_vector(288 downto 0); 
    lsb_out1: out std_logic_vector(287 downto 0); 
    msb_out2: out std_logic
  );
end bus_expand1_entity_f2c4420ee3;

architecture structural of bus_expand1_entity_f2c4420ee3 is
  signal dmisc_q_net_x3: std_logic_vector(288 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic_vector(287 downto 0);
  signal slice1_y_net: std_logic_vector(287 downto 0);
  signal slice2_y_net_x0: std_logic;

begin
  dmisc_q_net_x3 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x6;
  msb_out2 <= slice2_y_net_x0;

  reinterpret1: entity work.reinterpret_a6651f657f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x6
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 287,
      x_width => 289,
      y_width => 288
    )
    port map (
      x => dmisc_q_net_x3,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 288,
      new_msb => 288,
      x_width => 289,
      y_width => 1
    )
    port map (
      x => dmisc_q_net_x3,
      y(0) => slice2_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/twiddle/bus_mult/a*b_bussify"

entity a_b_bussify_entity_87349b7b15 is
  port (
    in1: in std_logic_vector(73 downto 0); 
    in2: in std_logic_vector(73 downto 0); 
    in3: in std_logic_vector(73 downto 0); 
    in4: in std_logic_vector(73 downto 0); 
    in5: in std_logic_vector(73 downto 0); 
    in6: in std_logic_vector(73 downto 0); 
    in7: in std_logic_vector(73 downto 0); 
    in8: in std_logic_vector(73 downto 0); 
    bus_out: out std_logic_vector(591 downto 0)
  );
end a_b_bussify_entity_87349b7b15;

architecture structural of a_b_bussify_entity_87349b7b15 is
  signal concat_y_net_x10: std_logic_vector(73 downto 0);
  signal concat_y_net_x11: std_logic_vector(73 downto 0);
  signal concat_y_net_x12: std_logic_vector(73 downto 0);
  signal concat_y_net_x13: std_logic_vector(73 downto 0);
  signal concat_y_net_x14: std_logic_vector(73 downto 0);
  signal concat_y_net_x7: std_logic_vector(73 downto 0);
  signal concat_y_net_x8: std_logic_vector(73 downto 0);
  signal concat_y_net_x9: std_logic_vector(73 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(591 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(73 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(73 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(73 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(73 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(73 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(73 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(73 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(73 downto 0);

begin
  concat_y_net_x7 <= in1;
  concat_y_net_x8 <= in2;
  concat_y_net_x9 <= in3;
  concat_y_net_x10 <= in4;
  concat_y_net_x11 <= in5;
  concat_y_net_x12 <= in6;
  concat_y_net_x13 <= in7;
  concat_y_net_x14 <= in8;
  bus_out <= concatenate_y_net_x2;

  concatenate: entity work.concat_27b3914525
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      y => concatenate_y_net_x2
    );

  reinterpret1: entity work.reinterpret_efdf1c3890
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net_x7,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_efdf1c3890
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net_x8,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_efdf1c3890
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net_x9,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_efdf1c3890
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net_x10,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_efdf1c3890
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net_x11,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_efdf1c3890
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net_x12,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_efdf1c3890
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net_x13,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_efdf1c3890
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net_x14,
      output_port => reinterpret8_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/twiddle/bus_mult/b_debus"

entity b_debus_entity_2a51756687 is
  port (
    bus_in: in std_logic_vector(287 downto 0); 
    lsb_out1: out std_logic_vector(35 downto 0); 
    msb_out8: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0); 
    out3: out std_logic_vector(35 downto 0); 
    out4: out std_logic_vector(35 downto 0); 
    out5: out std_logic_vector(35 downto 0); 
    out6: out std_logic_vector(35 downto 0); 
    out7: out std_logic_vector(35 downto 0)
  );
end b_debus_entity_2a51756687;

architecture structural of b_debus_entity_2a51756687 is
  signal reinterpret1_output_port_net_x1: std_logic_vector(287 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(35 downto 0);
  signal slice1_y_net: std_logic_vector(35 downto 0);
  signal slice2_y_net: std_logic_vector(35 downto 0);
  signal slice3_y_net: std_logic_vector(35 downto 0);
  signal slice4_y_net: std_logic_vector(35 downto 0);
  signal slice5_y_net: std_logic_vector(35 downto 0);
  signal slice6_y_net: std_logic_vector(35 downto 0);
  signal slice7_y_net: std_logic_vector(35 downto 0);
  signal slice8_y_net: std_logic_vector(35 downto 0);

begin
  reinterpret1_output_port_net_x1 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x2;
  msb_out8 <= reinterpret8_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;
  out4 <= reinterpret4_output_port_net_x0;
  out5 <= reinterpret5_output_port_net_x0;
  out6 <= reinterpret6_output_port_net_x0;
  out7 <= reinterpret7_output_port_net_x0;

  reinterpret1: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  reinterpret2: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  reinterpret5: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_y_net,
      output_port => reinterpret5_output_port_net_x0
    );

  reinterpret6: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret6_output_port_net_x0
    );

  reinterpret7: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret7_output_port_net_x0
    );

  reinterpret8: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret8_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 35,
      x_width => 288,
      y_width => 36
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 36,
      new_msb => 71,
      x_width => 288,
      y_width => 36
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 72,
      new_msb => 107,
      x_width => 288,
      y_width => 36
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 108,
      new_msb => 143,
      x_width => 288,
      y_width => 36
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 144,
      new_msb => 179,
      x_width => 288,
      y_width => 36
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 180,
      new_msb => 215,
      x_width => 288,
      y_width => 36
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 216,
      new_msb => 251,
      x_width => 288,
      y_width => 36
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 252,
      new_msb => 287,
      x_width => 288,
      y_width => 36
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice8_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/twiddle/bus_mult/repa"

entity repa_entity_6de0a9ceab is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(35 downto 0); 
    out_x0: out std_logic_vector(71 downto 0)
  );
end repa_entity_6de0a9ceab;

architecture structural of repa_entity_6de0a9ceab is
  signal ce_1_sg_x1170: std_logic;
  signal clk_1_sg_x1170: std_logic;
  signal concat_y_net_x0: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(71 downto 0);
  signal din0_0_q_net: std_logic_vector(35 downto 0);
  signal din1_0_q_net: std_logic_vector(35 downto 0);
  signal din1_1_q_net: std_logic_vector(35 downto 0);
  signal din2_0_q_net_x0: std_logic_vector(35 downto 0);
  signal din2_1_q_net_x0: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x1170 <= ce_1;
  clk_1_sg_x1170 <= clk_1;
  concat_y_net_x0 <= in_x0;
  out_x0 <= concatenate_y_net_x2;

  bussify_c2c0e7a568: entity work.bussify_entity_aad5f56754
    port map (
      in1 => din2_0_q_net_x0,
      in2 => din2_1_q_net_x0,
      bus_out => concatenate_y_net_x2
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x1170,
      clk => clk_1_sg_x1170,
      d => concat_y_net_x0,
      en => '1',
      rst => '1',
      q => din0_0_q_net
    );

  din1_0: entity work.delay_e4b9fcaf02
    port map (
      ce => ce_1_sg_x1170,
      clk => clk_1_sg_x1170,
      clr => '0',
      d => din0_0_q_net,
      q => din1_0_q_net
    );

  din1_1: entity work.delay_e4b9fcaf02
    port map (
      ce => ce_1_sg_x1170,
      clk => clk_1_sg_x1170,
      clr => '0',
      d => din0_0_q_net,
      q => din1_1_q_net
    );

  din2_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x1170,
      clk => clk_1_sg_x1170,
      d => din1_0_q_net,
      en => '1',
      rst => '1',
      q => din2_0_q_net_x0
    );

  din2_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x1170,
      clk => clk_1_sg_x1170,
      d => din1_1_q_net,
      en => '1',
      rst => '1',
      q => din2_1_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/twiddle/bus_mult/repb/bussify"

entity bussify_entity_96bb31a59a is
  port (
    in1: in std_logic_vector(287 downto 0); 
    bus_out: out std_logic_vector(287 downto 0)
  );
end bussify_entity_96bb31a59a;

architecture structural of bussify_entity_96bb31a59a is
  signal din2_0_q_net_x0: std_logic_vector(287 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(287 downto 0);

begin
  din2_0_q_net_x0 <= in1;
  bus_out <= reinterpret1_output_port_net_x2;

  reinterpret1: entity work.reinterpret_a6651f657f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din2_0_q_net_x0,
      output_port => reinterpret1_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/twiddle/bus_mult/repb"

entity repb_entity_d7e16ebb38 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(287 downto 0); 
    out_x0: out std_logic_vector(287 downto 0)
  );
end repb_entity_d7e16ebb38;

architecture structural of repb_entity_d7e16ebb38 is
  signal ce_1_sg_x1171: std_logic;
  signal clk_1_sg_x1171: std_logic;
  signal din0_0_q_net: std_logic_vector(287 downto 0);
  signal din1_0_q_net: std_logic_vector(287 downto 0);
  signal din2_0_q_net_x0: std_logic_vector(287 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(287 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(287 downto 0);

begin
  ce_1_sg_x1171 <= ce_1;
  clk_1_sg_x1171 <= clk_1;
  reinterpret2_output_port_net_x1 <= in_x0;
  out_x0 <= reinterpret1_output_port_net_x3;

  bussify_96bb31a59a: entity work.bussify_entity_96bb31a59a
    port map (
      in1 => din2_0_q_net_x0,
      bus_out => reinterpret1_output_port_net_x3
    );

  din0_0: entity work.delay_19d8b2f2b7
    port map (
      ce => ce_1_sg_x1171,
      clk => clk_1_sg_x1171,
      clr => '0',
      d => reinterpret2_output_port_net_x1,
      q => din0_0_q_net
    );

  din1_0: entity work.delay_19d8b2f2b7
    port map (
      ce => ce_1_sg_x1171,
      clk => clk_1_sg_x1171,
      clr => '0',
      d => din0_0_q_net,
      q => din1_0_q_net
    );

  din2_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 288
    )
    port map (
      ce => ce_1_sg_x1171,
      clk => clk_1_sg_x1171,
      d => din1_0_q_net,
      en => '1',
      rst => '1',
      q => din2_0_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/twiddle/bus_mult"

entity bus_mult_entity_ebef5f64cd is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(287 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    a_b: out std_logic_vector(591 downto 0); 
    misco: out std_logic_vector(288 downto 0)
  );
end bus_mult_entity_ebef5f64cd;

architecture structural of bus_mult_entity_ebef5f64cd is
  signal ce_1_sg_x1172: std_logic;
  signal clk_1_sg_x1172: std_logic;
  signal concat_y_net_x10: std_logic_vector(73 downto 0);
  signal concat_y_net_x11: std_logic_vector(73 downto 0);
  signal concat_y_net_x12: std_logic_vector(73 downto 0);
  signal concat_y_net_x13: std_logic_vector(73 downto 0);
  signal concat_y_net_x14: std_logic_vector(73 downto 0);
  signal concat_y_net_x15: std_logic_vector(73 downto 0);
  signal concat_y_net_x16: std_logic_vector(73 downto 0);
  signal concat_y_net_x17: std_logic_vector(35 downto 0);
  signal concat_y_net_x9: std_logic_vector(73 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(591 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(288 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(287 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic_vector(288 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x10: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(287 downto 0);
  signal reinterpret2_output_port_net_x9: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net_x3: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net_x3: std_logic_vector(35 downto 0);
  signal reinterpret5_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret6_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret7_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret8_output_port_net_x2: std_logic_vector(35 downto 0);

begin
  concat_y_net_x17 <= a;
  reinterpret2_output_port_net_x2 <= b;
  ce_1_sg_x1172 <= ce_1;
  clk_1_sg_x1172 <= clk_1;
  reinterpret1_output_port_net_x6 <= misci;
  a_b <= concatenate_y_net_x4;
  misco <= dmisc_q_net_x2;

  a_b_bussify_87349b7b15: entity work.a_b_bussify_entity_87349b7b15
    port map (
      in1 => concat_y_net_x9,
      in2 => concat_y_net_x10,
      in3 => concat_y_net_x11,
      in4 => concat_y_net_x12,
      in5 => concat_y_net_x13,
      in6 => concat_y_net_x14,
      in7 => concat_y_net_x15,
      in8 => concat_y_net_x16,
      bus_out => concatenate_y_net_x4
    );

  a_debus_e75e942cb7: entity work.adebus2_0_entity_24ecc6e9de
    port map (
      bus_in => concatenate_y_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x9,
      msb_out2 => reinterpret2_output_port_net_x9
    );

  b_debus_2a51756687: entity work.b_debus_entity_2a51756687
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x5,
      msb_out8 => reinterpret8_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x10,
      out3 => reinterpret3_output_port_net_x3,
      out4 => reinterpret4_output_port_net_x3,
      out5 => reinterpret5_output_port_net_x2,
      out6 => reinterpret6_output_port_net_x2,
      out7 => reinterpret7_output_port_net_x2
    );

  dmisc: entity work.delay_e06ce28c9b
    port map (
      ce => ce_1_sg_x1172,
      clk => clk_1_sg_x1172,
      clr => '0',
      d => reinterpret1_output_port_net_x6,
      q => dmisc_q_net_x2
    );

  mult1_bf21e4707a: entity work.mult1_entity_675dd78166
    port map (
      a => reinterpret2_output_port_net_x9,
      b => reinterpret8_output_port_net_x2,
      ce_1 => ce_1_sg_x1172,
      clk_1 => clk_1_sg_x1172,
      ab => concat_y_net_x9
    );

  mult2_be41341f37: entity work.mult1_entity_675dd78166
    port map (
      a => reinterpret1_output_port_net_x9,
      b => reinterpret7_output_port_net_x2,
      ce_1 => ce_1_sg_x1172,
      clk_1 => clk_1_sg_x1172,
      ab => concat_y_net_x10
    );

  mult3_e43de201a0: entity work.mult1_entity_675dd78166
    port map (
      a => reinterpret2_output_port_net_x9,
      b => reinterpret6_output_port_net_x2,
      ce_1 => ce_1_sg_x1172,
      clk_1 => clk_1_sg_x1172,
      ab => concat_y_net_x11
    );

  mult4_ca94f9b602: entity work.mult1_entity_675dd78166
    port map (
      a => reinterpret1_output_port_net_x9,
      b => reinterpret5_output_port_net_x2,
      ce_1 => ce_1_sg_x1172,
      clk_1 => clk_1_sg_x1172,
      ab => concat_y_net_x12
    );

  mult5_9f41345ebf: entity work.mult1_entity_675dd78166
    port map (
      a => reinterpret2_output_port_net_x9,
      b => reinterpret4_output_port_net_x3,
      ce_1 => ce_1_sg_x1172,
      clk_1 => clk_1_sg_x1172,
      ab => concat_y_net_x13
    );

  mult6_303aaf7068: entity work.mult1_entity_675dd78166
    port map (
      a => reinterpret1_output_port_net_x9,
      b => reinterpret3_output_port_net_x3,
      ce_1 => ce_1_sg_x1172,
      clk_1 => clk_1_sg_x1172,
      ab => concat_y_net_x14
    );

  mult7_ccc1976848: entity work.mult1_entity_675dd78166
    port map (
      a => reinterpret2_output_port_net_x9,
      b => reinterpret2_output_port_net_x10,
      ce_1 => ce_1_sg_x1172,
      clk_1 => clk_1_sg_x1172,
      ab => concat_y_net_x15
    );

  mult8_edacfe7f50: entity work.mult1_entity_675dd78166
    port map (
      a => reinterpret1_output_port_net_x9,
      b => reinterpret1_output_port_net_x5,
      ce_1 => ce_1_sg_x1172,
      clk_1 => clk_1_sg_x1172,
      ab => concat_y_net_x16
    );

  repa_6de0a9ceab: entity work.repa_entity_6de0a9ceab
    port map (
      ce_1 => ce_1_sg_x1172,
      clk_1 => clk_1_sg_x1172,
      in_x0 => concat_y_net_x17,
      out_x0 => concatenate_y_net_x3
    );

  repb_d7e16ebb38: entity work.repb_entity_d7e16ebb38
    port map (
      ce_1 => ce_1_sg_x1172,
      clk_1 => clk_1_sg_x1172,
      in_x0 => reinterpret2_output_port_net_x2,
      out_x0 => reinterpret1_output_port_net_x3
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/twiddle/coeff_gen/cosin/add_convert0"

entity add_convert0_entity_405dc3a448 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    theta: in std_logic_vector(9 downto 0); 
    add: out std_logic_vector(9 downto 0); 
    negate: out std_logic
  );
end add_convert0_entity_405dc3a448;

architecture structural of add_convert0_entity_405dc3a448 is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x0: std_logic_vector(9 downto 0);
  signal ce_1_sg_x1173: std_logic;
  signal clk_1_sg_x1173: std_logic;
  signal concat_y_net: std_logic_vector(10 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(9 downto 0);
  signal delay13_q_net: std_logic_vector(9 downto 0);
  signal delay14_q_net: std_logic_vector(9 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(10 downto 0);
  signal invert_y_net: std_logic;
  signal lookup_y_net: std_logic_vector(8 downto 0);
  signal new_add_y_net: std_logic_vector(9 downto 0);
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x1173 <= ce_1;
  clk_1_sg_x1173 <= clk_1;
  assert_dout_net_x0 <= theta;
  add <= convert2_dout_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x1173,
      clk => clk_1_sg_x1173,
      clr => '0',
      en => "1",
      s => addsub5_s_net
    );

  concat: entity work.concat_4fd36a24a3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => addsub5_s_net,
      in1 => lookup_y_net,
      y => concat_y_net
    );

  convert2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 10,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 10,
      latency => 3,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1173,
      clk => clk_1_sg_x1173,
      clr => '0',
      din => delay13_q_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  delay13: entity work.delay_325391d82e
    port map (
      ce => ce_1_sg_x1173,
      clk => clk_1_sg_x1173,
      clr => '0',
      d => delay14_q_net,
      q => delay13_q_net
    );

  delay14: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1173,
      clk => clk_1_sg_x1173,
      d => new_add_y_net,
      en => '1',
      rst => '1',
      q => delay14_q_net
    );

  delay2: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x1173,
      clk => clk_1_sg_x1173,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_811dd91a3d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x0,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  lookup: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 8,
      x_width => 11,
      y_width => 9
    )
    port map (
      x => fluff_y_net,
      y => lookup_y_net
    );

  new_add: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 11,
      y_width => 10
    )
    port map (
      x => concat_y_net,
      y => new_add_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 9,
      new_msb => 10,
      x_width => 11,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/twiddle/coeff_gen/cosin/add_convert1"

entity add_convert1_entity_46e5f4f868 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(576 downto 0); 
    theta: in std_logic_vector(9 downto 0); 
    misco: out std_logic_vector(576 downto 0); 
    negate: out std_logic
  );
end add_convert1_entity_46e5f4f868;

architecture structural of add_convert1_entity_46e5f4f868 is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x1: std_logic_vector(9 downto 0);
  signal ce_1_sg_x1174: std_logic;
  signal clk_1_sg_x1174: std_logic;
  signal concatenate_y_net_x5: std_logic_vector(576 downto 0);
  signal delay1_q_net_x0: std_logic_vector(576 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(10 downto 0);
  signal invert_y_net: std_logic;
  signal pad_op_net: std_logic;
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x1174 <= ce_1;
  clk_1_sg_x1174 <= clk_1;
  concatenate_y_net_x5 <= misci;
  assert_dout_net_x1 <= theta;
  misco <= delay1_q_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x1174,
      clk => clk_1_sg_x1174,
      clr => '0',
      en => "1",
      s => addsub5_s_net
    );

  delay1: entity work.delay_0eaf48e9e6
    port map (
      ce => ce_1_sg_x1174,
      clk => clk_1_sg_x1174,
      clr => '0',
      d => concatenate_y_net_x5,
      q => delay1_q_net_x0
    );

  delay2: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x1174,
      clk => clk_1_sg_x1174,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_811dd91a3d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => pad_op_net,
      in1 => assert_dout_net_x1,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  pad: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 9,
      new_msb => 10,
      x_width => 11,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/twiddle/coeff_gen/cosin/invert1"

entity invert1_entity_53546a5448 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(17 downto 0); 
    misci: in std_logic_vector(576 downto 0); 
    negate_x0: in std_logic; 
    misco: out std_logic_vector(576 downto 0); 
    out_x0: out std_logic_vector(17 downto 0)
  );
end invert1_entity_53546a5448;

architecture structural of invert1_entity_53546a5448 is
  signal ce_1_sg_x1176: std_logic;
  signal clk_1_sg_x1176: std_logic;
  signal delay1_q_net_x1: std_logic_vector(576 downto 0);
  signal delay20_q_net: std_logic_vector(17 downto 0);
  signal delay21_q_net: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(576 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x0: std_logic_vector(17 downto 0);
  signal negate_op_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x1176 <= ce_1;
  clk_1_sg_x1176 <= clk_1;
  force_im_output_port_net_x1 <= in_x0;
  delay_q_net_x0 <= misci;
  delay8_q_net_x0 <= negate_x0;
  misco <= delay1_q_net_x1;
  out_x0 <= mux_y_net_x0;

  delay1: entity work.delay_0eaf48e9e6
    port map (
      ce => ce_1_sg_x1176,
      clk => clk_1_sg_x1176,
      clr => '0',
      d => delay_q_net_x0,
      q => delay1_q_net_x1
    );

  delay20: entity work.delay_2f744cdafb
    port map (
      ce => ce_1_sg_x1176,
      clk => clk_1_sg_x1176,
      clr => '0',
      d => force_im_output_port_net_x1,
      q => delay20_q_net
    );

  delay21: entity work.delay_c53de546ea
    port map (
      ce => ce_1_sg_x1176,
      clk => clk_1_sg_x1176,
      clr => '0',
      d(0) => delay8_q_net_x0,
      q(0) => delay21_q_net
    );

  mux: entity work.mux_1896e7760c
    port map (
      ce => ce_1_sg_x1176,
      clk => clk_1_sg_x1176,
      clr => '0',
      d0 => delay20_q_net,
      d1 => negate_op_net,
      sel(0) => delay21_q_net,
      y => mux_y_net_x0
    );

  negate: entity work.negate_894f23b88c
    port map (
      ce => ce_1_sg_x1176,
      clk => clk_1_sg_x1176,
      clr => '0',
      ip => force_im_output_port_net_x1,
      op => negate_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/twiddle/coeff_gen/cosin"

entity cosin_entity_8e3afe0766 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(576 downto 0); 
    theta: in std_logic_vector(9 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(576 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_8e3afe0766;

architecture structural of cosin_entity_8e3afe0766 is
  signal assert_dout_net_x1: std_logic_vector(9 downto 0);
  signal ce_1_sg_x1177: std_logic;
  signal clk_1_sg_x1177: std_logic;
  signal concatenate_y_net_x6: std_logic_vector(576 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(9 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(576 downto 0);
  signal delay1_q_net_x2: std_logic_vector(576 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(576 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1177 <= ce_1;
  clk_1_sg_x1177 <= clk_1;
  concatenate_y_net_x6 <= misci;
  slice_y_net_x0 <= theta;
  cos <= mux_y_net_x2;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x3;

  add_convert0_405dc3a448: entity work.add_convert0_entity_405dc3a448
    port map (
      ce_1 => ce_1_sg_x1177,
      clk_1 => clk_1_sg_x1177,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_46e5f4f868: entity work.add_convert1_entity_46e5f4f868
    port map (
      ce_1 => ce_1_sg_x1177,
      clk_1 => clk_1_sg_x1177,
      misci => concatenate_y_net_x6,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 10,
      dout_width => 10
    )
    port map (
      din => slice_y_net_x0,
      dout => assert_dout_net_x1
    );

  c_to_ri_4c115e4546: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_9c1a7479f7
    port map (
      ce => ce_1_sg_x1177,
      clk => clk_1_sg_x1177,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1177,
      clk => clk_1_sg_x1177,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1177,
      clk => clk_1_sg_x1177,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_9483dd6aca: entity work.invert0_entity_6963cb9e38
    port map (
      ce_1 => ce_1_sg_x1177,
      clk_1 => clk_1_sg_x1177,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_53546a5448: entity work.invert1_entity_53546a5448
    port map (
      ce_1 => ce_1_sg_x1177,
      clk_1 => clk_1_sg_x1177,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 36,
      core_name0 => "bmg_72_a63867243b76433f",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x1177,
      clk => clk_1_sg_x1177,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/twiddle/coeff_gen"

entity coeff_gen_entity_2156e43c67 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(576 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(576 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_2156e43c67;

architecture structural of coeff_gen_entity_2156e43c67 is
  signal ce_1_sg_x1178: std_logic;
  signal clk_1_sg_x1178: std_logic;
  signal concat_y_net_x19: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(576 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay1_q_net_x3: std_logic_vector(576 downto 0);
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal register0_q_net_x2: std_logic;
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1178 <= ce_1;
  clk_1_sg_x1178 <= clk_1;
  concatenate_y_net_x7 <= misci;
  register0_q_net_x2 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x19;

  cosin_8e3afe0766: entity work.cosin_entity_8e3afe0766
    port map (
      ce_1 => ce_1_sg_x1178,
      clk_1 => clk_1_sg_x1178,
      misci => concatenate_y_net_x7,
      theta => slice_y_net_x0,
      cos => mux_y_net_x4,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x5
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x1178,
      clk => clk_1_sg_x1178,
      clr => '0',
      rst(0) => register0_q_net_x2,
      op => counter_op_net
    );

  ri_to_c_665aef7760: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x19
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 10,
      y_width => 10
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0/twiddle"

entity twiddle_entity_fe793f06b3 is
  port (
    ai: in std_logic_vector(287 downto 0); 
    bi: in std_logic_vector(287 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(287 downto 0); 
    bwo: out std_logic_vector(303 downto 0); 
    sync_out: out std_logic
  );
end twiddle_entity_fe793f06b3;

architecture structural of twiddle_entity_fe793f06b3 is
  signal ce_1_sg_x1179: std_logic;
  signal clk_1_sg_x1179: std_logic;
  signal concat_y_net_x19: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(591 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(287 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(576 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(287 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(303 downto 0);
  signal delay1_q_net_x3: std_logic_vector(576 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(288 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(288 downto 0);
  signal register0_q_net_x3: std_logic;
  signal reinterpret1_output_port_net_x6: std_logic_vector(288 downto 0);
  signal reinterpret1_output_port_net_x8: std_logic_vector(287 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(287 downto 0);
  signal slice2_y_net_x1: std_logic;

begin
  concatenate_y_net_x5 <= ai;
  concatenate_y_net_x8 <= bi;
  ce_1_sg_x1179 <= ce_1;
  clk_1_sg_x1179 <= clk_1;
  register0_q_net_x3 <= sync_in;
  ao <= reinterpret1_output_port_net_x8;
  bwo <= concatenate_y_net_x9;
  sync_out <= slice2_y_net_x1;

  bus_convert_7b21fae6af: entity work.bus_convert_entity_7b21fae6af
    port map (
      ce_1 => ce_1_sg_x1179,
      clk_1 => clk_1_sg_x1179,
      din => concatenate_y_net_x4,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x9,
      misco => dmisc_q_net_x3
    );

  bus_create_1fcc6c7b2a: entity work.bus_create_entity_1fcc6c7b2a
    port map (
      in1 => concatenate_y_net_x8,
      in2 => register0_q_net_x3,
      in3 => concatenate_y_net_x5,
      bus_out => concatenate_y_net_x7
    );

  bus_expand1_f2c4420ee3: entity work.bus_expand1_entity_f2c4420ee3
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x8,
      msb_out2 => slice2_y_net_x1
    );

  bus_expand_c5406eae1d: entity work.bus_expand_entity_c5406eae1d
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x6,
      msb_out2 => reinterpret2_output_port_net_x2
    );

  bus_mult_ebef5f64cd: entity work.bus_mult_entity_ebef5f64cd
    port map (
      a => concat_y_net_x19,
      b => reinterpret2_output_port_net_x2,
      ce_1 => ce_1_sg_x1179,
      clk_1 => clk_1_sg_x1179,
      misci => reinterpret1_output_port_net_x6,
      a_b => concatenate_y_net_x4,
      misco => dmisc_q_net_x2
    );

  coeff_gen_2156e43c67: entity work.coeff_gen_entity_2156e43c67
    port map (
      ce_1 => ce_1_sg_x1179,
      clk_1 => clk_1_sg_x1179,
      misci => concatenate_y_net_x7,
      rst => register0_q_net_x3,
      misco => delay1_q_net_x3,
      w => concat_y_net_x19
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly0_0"

entity butterfly0_0_entity_7cd5f97621 is
  port (
    a: in std_logic_vector(287 downto 0); 
    b: in std_logic_vector(287 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(287 downto 0); 
    a_bw_x0: out std_logic_vector(287 downto 0); 
    of_x0: out std_logic_vector(7 downto 0); 
    sync_out: out std_logic
  );
end butterfly0_0_entity_7cd5f97621;

architecture structural of butterfly0_0_entity_7cd5f97621 is
  signal ce_1_sg_x1180: std_logic;
  signal clk_1_sg_x1180: std_logic;
  signal concat_y_net_x3: std_logic_vector(639 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(671 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(671 downto 0);
  signal concatenate_y_net_x13: std_logic_vector(31 downto 0);
  signal concatenate_y_net_x14: std_logic_vector(303 downto 0);
  signal concatenate_y_net_x15: std_logic_vector(287 downto 0);
  signal concatenate_y_net_x16: std_logic_vector(287 downto 0);
  signal concatenate_y_net_x17: std_logic_vector(7 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(639 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(31 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(671 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(575 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal register0_q_net_x4: std_logic;
  signal reinterpret1_output_port_net_x3: std_logic_vector(287 downto 0);
  signal reinterpret1_output_port_net_x8: std_logic_vector(287 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(287 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(31 downto 0);
  signal slice0_y_net_x1: std_logic;
  signal slice2_y_net_x1: std_logic;

begin
  concatenate_y_net_x15 <= a;
  concatenate_y_net_x16 <= b;
  ce_1_sg_x1180 <= ce_1;
  clk_1_sg_x1180 <= clk_1;
  slice0_y_net_x1 <= shift;
  register0_q_net_x4 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x3;
  a_bw_x0 <= reinterpret2_output_port_net_x3;
  of_x0 <= concatenate_y_net_x17;
  sync_out <= delay0_q_net_x0;

  bus_add_f396eec95c: entity work.bus_add_entity_f396eec95c
    port map (
      a => reinterpret1_output_port_net_x8,
      b => concatenate_y_net_x14,
      ce_1 => ce_1_sg_x1180,
      clk_1 => clk_1_sg_x1180,
      dout => concatenate_y_net_x3
    );

  bus_convert_1e575c5270: entity work.bus_convert_entity_1e575c5270
    port map (
      ce_1 => ce_1_sg_x1180,
      clk_1 => clk_1_sg_x1180,
      din => concatenate_y_net_x12,
      dout => concatenate_y_net_x9,
      overflow => concatenate_y_net_x6
    );

  bus_expand_c929d7e2d9: entity work.bus_expand_entity_c929d7e2d9
    port map (
      bus_in => concatenate_y_net_x9,
      lsb_out1 => reinterpret1_output_port_net_x3,
      msb_out2 => reinterpret2_output_port_net_x3
    );

  bus_norm0_d9e815a0ed: entity work.bus_norm0_entity_d9e815a0ed
    port map (
      ce_1 => ce_1_sg_x1180,
      clk_1 => clk_1_sg_x1180,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x10
    );

  bus_norm1_0dee5d1bb6: entity work.bus_norm1_entity_0dee5d1bb6
    port map (
      ce_1 => ce_1_sg_x1180,
      clk_1 => clk_1_sg_x1180,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x7
    );

  bus_relational_1e17d15490: entity work.bus_relational_entity_1e17d15490
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      ce_1 => ce_1_sg_x1180,
      clk_1 => clk_1_sg_x1180,
      a_b => concatenate_y_net_x17
    );

  bus_scale_cd744f068b: entity work.bus_scale_entity_cd744f068b
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_4c6bda2888: entity work.bus_sub_entity_4c6bda2888
    port map (
      a => reinterpret1_output_port_net_x8,
      b => concatenate_y_net_x14,
      ce_1 => ce_1_sg_x1180,
      clk_1 => clk_1_sg_x1180,
      dout => concatenate_y_net_x11
    );

  concat: entity work.concat_c5d5ff0cc4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x11,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x1180,
      clk => clk_1_sg_x1180,
      clr => '0',
      d(0) => slice2_y_net_x1,
      q(0) => delay0_q_net_x0
    );

  munge_a681f9c5f9: entity work.munge_entity_a681f9c5f9
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_25965ac8ad: entity work.mux_entity_25965ac8ad
    port map (
      ce_1 => ce_1_sg_x1180,
      clk_1 => clk_1_sg_x1180,
      d0 => concatenate_y_net_x10,
      d1 => concatenate_y_net_x7,
      sel => concatenate_y_net_x13,
      out_x0 => concatenate_y_net_x12
    );

  shift_replicate_cf7b7a5934: entity work.shift_replicate_entity_cf7b7a5934
    port map (
      ce_1 => ce_1_sg_x1180,
      clk_1 => clk_1_sg_x1180,
      in_x0 => slice0_y_net_x1,
      out_x0 => concatenate_y_net_x13
    );

  twiddle_fe793f06b3: entity work.twiddle_entity_fe793f06b3
    port map (
      ai => concatenate_y_net_x15,
      bi => concatenate_y_net_x16,
      ce_1 => ce_1_sg_x1180,
      clk_1 => clk_1_sg_x1180,
      sync_in => register0_q_net_x4,
      ao => reinterpret1_output_port_net_x8,
      bwo => concatenate_y_net_x14,
      sync_out => slice2_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly1_0/twiddle/coeff_gen/cosin/add_convert0"

entity add_convert0_entity_9d4171a882 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    theta: in std_logic_vector(9 downto 0); 
    add: out std_logic_vector(9 downto 0); 
    negate: out std_logic
  );
end add_convert0_entity_9d4171a882;

architecture structural of add_convert0_entity_9d4171a882 is
  signal addsub1_s_net: std_logic_vector(1 downto 0);
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal addsub_s_net: std_logic_vector(10 downto 0);
  signal assert_dout_net_x0: std_logic_vector(9 downto 0);
  signal backwards_y_net: std_logic;
  signal ce_1_sg_x1261: std_logic;
  signal clk_1_sg_x1261: std_logic;
  signal concat_y_net: std_logic_vector(11 downto 0);
  signal constant4_op_net: std_logic_vector(10 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(9 downto 0);
  signal delay13_q_net: std_logic;
  signal delay14_q_net: std_logic_vector(9 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(11 downto 0);
  signal invert_y_net: std_logic;
  signal lookup_y_net: std_logic_vector(9 downto 0);
  signal mux_y_net: std_logic_vector(10 downto 0);
  signal negate_offset_op_net: std_logic_vector(1 downto 0);
  signal new_add_y_net: std_logic_vector(9 downto 0);
  signal pad_op_net: std_logic_vector(1 downto 0);
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x1261 <= ce_1;
  clk_1_sg_x1261 <= clk_1;
  assert_dout_net_x0 <= theta;
  add <= convert2_dout_net_x0;
  negate <= delay2_q_net_x0;

  addsub: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 11,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 10,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 12,
      core_name0 => "addsb_11_0_8bea8e341a05ae56",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 12,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 11
    )
    port map (
      a => constant4_op_net,
      b => new_add_y_net,
      ce => ce_1_sg_x1261,
      clk => clk_1_sg_x1261,
      clr => '0',
      en => "1",
      s => addsub_s_net
    );

  addsub1: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => negate_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x1261,
      clk => clk_1_sg_x1261,
      clr => '0',
      en => "1",
      s => addsub1_s_net
    );

  addsub5: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x1261,
      clk => clk_1_sg_x1261,
      clr => '0',
      en => "1",
      s => addsub5_s_net
    );

  backwards: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => backwards_y_net
    );

  concat: entity work.concat_7ad1e33701
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => addsub5_s_net,
      in1 => lookup_y_net,
      y => concat_y_net
    );

  constant4: entity work.constant_0604807f72
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant4_op_net
    );

  convert2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 11,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 10,
      latency => 3,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1261,
      clk => clk_1_sg_x1261,
      clr => '0',
      din => mux_y_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  delay13: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1261,
      clk => clk_1_sg_x1261,
      d(0) => backwards_y_net,
      en => '1',
      rst => '1',
      q(0) => delay13_q_net
    );

  delay14: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1261,
      clk => clk_1_sg_x1261,
      d => new_add_y_net,
      en => '1',
      rst => '1',
      q => delay14_q_net
    );

  delay2: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x1261,
      clk => clk_1_sg_x1261,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_7ad1e33701
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => pad_op_net,
      in1 => assert_dout_net_x0,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub1_s_net,
      y(0) => invert_y_net
    );

  lookup: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 12,
      y_width => 10
    )
    port map (
      x => fluff_y_net,
      y => lookup_y_net
    );

  mux: entity work.mux_046d743d02
    port map (
      ce => ce_1_sg_x1261,
      clk => clk_1_sg_x1261,
      clr => '0',
      d0 => delay14_q_net,
      d1 => addsub_s_net,
      sel(0) => delay13_q_net,
      y => mux_y_net
    );

  negate_offset: entity work.constant_a7e2bb9e12
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => negate_offset_op_net
    );

  new_add: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 12,
      y_width => 10
    )
    port map (
      x => concat_y_net,
      y => new_add_y_net
    );

  pad: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 10,
      new_msb => 11,
      x_width => 12,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly1_0/twiddle/coeff_gen/cosin/add_convert1"

entity add_convert1_entity_ea65416e0e is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    theta: in std_logic_vector(9 downto 0); 
    misco: out std_logic_vector(288 downto 0); 
    negate: out std_logic
  );
end add_convert1_entity_ea65416e0e;

architecture structural of add_convert1_entity_ea65416e0e is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x1: std_logic_vector(9 downto 0);
  signal ce_1_sg_x1262: std_logic;
  signal clk_1_sg_x1262: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(288 downto 0);
  signal delay1_q_net_x0: std_logic_vector(288 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(11 downto 0);
  signal invert_y_net: std_logic;
  signal pad_op_net: std_logic_vector(1 downto 0);
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x1262 <= ce_1;
  clk_1_sg_x1262 <= clk_1;
  concatenate_y_net_x1 <= misci;
  assert_dout_net_x1 <= theta;
  misco <= delay1_q_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x1262,
      clk => clk_1_sg_x1262,
      clr => '0',
      en => "1",
      s => addsub5_s_net
    );

  delay1: entity work.delay_4583411594
    port map (
      ce => ce_1_sg_x1262,
      clk => clk_1_sg_x1262,
      clr => '0',
      d => concatenate_y_net_x1,
      q => delay1_q_net_x0
    );

  delay2: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x1262,
      clk => clk_1_sg_x1262,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_7ad1e33701
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => pad_op_net,
      in1 => assert_dout_net_x1,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  pad: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 10,
      new_msb => 11,
      x_width => 12,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly1_0/twiddle/coeff_gen/cosin"

entity cosin_entity_aa3cf02d81 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    theta: in std_logic_vector(9 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(288 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_aa3cf02d81;

architecture structural of cosin_entity_aa3cf02d81 is
  signal assert_dout_net_x1: std_logic_vector(9 downto 0);
  signal ce_1_sg_x1265: std_logic;
  signal clk_1_sg_x1265: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(288 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(9 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(288 downto 0);
  signal delay1_q_net_x2: std_logic_vector(288 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(288 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1265 <= ce_1;
  clk_1_sg_x1265 <= clk_1;
  concatenate_y_net_x2 <= misci;
  slice_y_net_x0 <= theta;
  cos <= mux_y_net_x2;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x3;

  add_convert0_9d4171a882: entity work.add_convert0_entity_9d4171a882
    port map (
      ce_1 => ce_1_sg_x1265,
      clk_1 => clk_1_sg_x1265,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_ea65416e0e: entity work.add_convert1_entity_ea65416e0e
    port map (
      ce_1 => ce_1_sg_x1265,
      clk_1 => clk_1_sg_x1265,
      misci => concatenate_y_net_x2,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 10,
      dout_width => 10
    )
    port map (
      din => slice_y_net_x0,
      dout => assert_dout_net_x1
    );

  c_to_ri_dae420f96e: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_80f3e767fa
    port map (
      ce => ce_1_sg_x1265,
      clk => clk_1_sg_x1265,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1265,
      clk => clk_1_sg_x1265,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1265,
      clk => clk_1_sg_x1265,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_204e00b4f3: entity work.invert0_entity_6963cb9e38
    port map (
      ce_1 => ce_1_sg_x1265,
      clk_1 => clk_1_sg_x1265,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_7c3cac080f: entity work.invert1_entity_4148cefff8
    port map (
      ce_1 => ce_1_sg_x1265,
      clk_1 => clk_1_sg_x1265,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 36,
      core_name0 => "bmg_72_0827fe704eed4017",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x1265,
      clk => clk_1_sg_x1265,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly1_0/twiddle/coeff_gen"

entity coeff_gen_entity_b7af4cd97c is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(288 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_b7af4cd97c;

architecture structural of coeff_gen_entity_b7af4cd97c is
  signal ce_1_sg_x1266: std_logic;
  signal clk_1_sg_x1266: std_logic;
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(288 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay0_q_net_x2: std_logic;
  signal delay1_q_net_x3: std_logic_vector(288 downto 0);
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1266 <= ce_1;
  clk_1_sg_x1266 <= clk_1;
  concatenate_y_net_x3 <= misci;
  delay0_q_net_x2 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x11;

  cosin_aa3cf02d81: entity work.cosin_entity_aa3cf02d81
    port map (
      ce_1 => ce_1_sg_x1266,
      clk_1 => clk_1_sg_x1266,
      misci => concatenate_y_net_x3,
      theta => slice_y_net_x0,
      cos => mux_y_net_x4,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x5
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x1266,
      clk => clk_1_sg_x1266,
      clr => '0',
      rst(0) => delay0_q_net_x2,
      op => counter_op_net
    );

  ri_to_c_6a81241854: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x11
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 10,
      y_width => 10
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly1_0/twiddle"

entity twiddle_entity_65d3cc37b4 is
  port (
    ai: in std_logic_vector(143 downto 0); 
    bi: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(143 downto 0); 
    bwo: out std_logic_vector(151 downto 0); 
    sync_out: out std_logic
  );
end twiddle_entity_65d3cc37b4;

architecture structural of twiddle_entity_65d3cc37b4 is
  signal ce_1_sg_x1267: std_logic;
  signal clk_1_sg_x1267: std_logic;
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(288 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(295 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(151 downto 0);
  signal delay0_q_net_x3: std_logic;
  signal delay1_q_net_x3: std_logic_vector(288 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(144 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(144 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(144 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(143 downto 0);
  signal slice2_y_net_x1: std_logic;

begin
  reinterpret2_output_port_net_x4 <= ai;
  reinterpret1_output_port_net_x2 <= bi;
  ce_1_sg_x1267 <= ce_1;
  clk_1_sg_x1267 <= clk_1;
  delay0_q_net_x3 <= sync_in;
  ao <= reinterpret1_output_port_net_x7;
  bwo <= concatenate_y_net_x8;
  sync_out <= slice2_y_net_x1;

  bus_convert_0b11fb521f: entity work.bus_convert_entity_fc9d20fae7
    port map (
      ce_1 => ce_1_sg_x1267,
      clk_1 => clk_1_sg_x1267,
      din => concatenate_y_net_x7,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x8,
      misco => dmisc_q_net_x3
    );

  bus_create_cb60c26277: entity work.bus_create_entity_3d2f105ae8
    port map (
      in1 => reinterpret1_output_port_net_x2,
      in2 => delay0_q_net_x3,
      in3 => reinterpret2_output_port_net_x4,
      bus_out => concatenate_y_net_x3
    );

  bus_expand1_182993e751: entity work.bus_expand1_entity_0d80282e07
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x7,
      msb_out2 => slice2_y_net_x1
    );

  bus_expand_d87d2f07fe: entity work.bus_expand_entity_1995b7ac80
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x5,
      msb_out2 => reinterpret2_output_port_net_x2
    );

  bus_mult_188d09515f: entity work.bus_mult_entity_cc3ac8248d
    port map (
      a => concat_y_net_x11,
      b => reinterpret2_output_port_net_x2,
      ce_1 => ce_1_sg_x1267,
      clk_1 => clk_1_sg_x1267,
      misci => reinterpret1_output_port_net_x5,
      a_b => concatenate_y_net_x7,
      misco => dmisc_q_net_x2
    );

  coeff_gen_b7af4cd97c: entity work.coeff_gen_entity_b7af4cd97c
    port map (
      ce_1 => ce_1_sg_x1267,
      clk_1 => clk_1_sg_x1267,
      misci => concatenate_y_net_x3,
      rst => delay0_q_net_x3,
      misco => delay1_q_net_x3,
      w => concat_y_net_x11
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly1_0"

entity butterfly1_0_entity_2979b67672 is
  port (
    a: in std_logic_vector(143 downto 0); 
    b: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(143 downto 0); 
    a_bw_x0: out std_logic_vector(143 downto 0); 
    of_x0: out std_logic_vector(3 downto 0); 
    sync_out: out std_logic
  );
end butterfly1_0_entity_2979b67672;

architecture structural of butterfly1_0_entity_2979b67672 is
  signal ce_1_sg_x1268: std_logic;
  signal clk_1_sg_x1268: std_logic;
  signal concat_y_net_x3: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(151 downto 0);
  signal concatenate_y_net_x13: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(159 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(287 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(159 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal delay0_q_net_x4: std_logic;
  signal reinterpret1_output_port_net_x4: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x5: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x6: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(15 downto 0);
  signal slice1_y_net_x1: std_logic;
  signal slice2_y_net_x1: std_logic;

begin
  reinterpret2_output_port_net_x5 <= a;
  reinterpret1_output_port_net_x4 <= b;
  ce_1_sg_x1268 <= ce_1;
  clk_1_sg_x1268 <= clk_1;
  slice1_y_net_x1 <= shift;
  delay0_q_net_x4 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x5;
  a_bw_x0 <= reinterpret2_output_port_net_x6;
  of_x0 <= concatenate_y_net_x13;
  sync_out <= delay0_q_net_x0;

  bus_add_45ebf19f5f: entity work.bus_add_entity_928fd44576
    port map (
      a => reinterpret1_output_port_net_x7,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1268,
      clk_1 => clk_1_sg_x1268,
      dout => concatenate_y_net_x3
    );

  bus_convert_87e479a2de: entity work.bus_convert_entity_8625f90d6a
    port map (
      ce_1 => ce_1_sg_x1268,
      clk_1 => clk_1_sg_x1268,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_a6b51210c0: entity work.bus_expand_entity_2a52aaf3de
    port map (
      bus_in => concatenate_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x5,
      msb_out2 => reinterpret2_output_port_net_x6
    );

  bus_norm0_19cdaadba1: entity work.bus_norm0_entity_2065c27fbe
    port map (
      ce_1 => ce_1_sg_x1268,
      clk_1 => clk_1_sg_x1268,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_dc571316e2: entity work.bus_norm1_entity_ebb4710d83
    port map (
      ce_1 => ce_1_sg_x1268,
      clk_1 => clk_1_sg_x1268,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_a8aa0c777f: entity work.bus_relational_entity_633fc73315
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      ce_1 => ce_1_sg_x1268,
      clk_1 => clk_1_sg_x1268,
      a_b => concatenate_y_net_x13
    );

  bus_scale_b3cf6624b2: entity work.bus_scale_entity_0ad20b8fc9
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_21f19c981d: entity work.bus_sub_entity_c471a0f176
    port map (
      a => reinterpret1_output_port_net_x7,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1268,
      clk_1 => clk_1_sg_x1268,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_2a42ff61a3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x1268,
      clk => clk_1_sg_x1268,
      clr => '0',
      d(0) => slice2_y_net_x1,
      q(0) => delay0_q_net_x0
    );

  munge_c57177bb53: entity work.munge_entity_7ae6614fdf
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_65e094e67d: entity work.mux_entity_bd9bbc285a
    port map (
      ce_1 => ce_1_sg_x1268,
      clk_1 => clk_1_sg_x1268,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_df9a191c7a: entity work.shift_replicate_entity_9dcff94fe9
    port map (
      ce_1 => ce_1_sg_x1268,
      clk_1 => clk_1_sg_x1268,
      in_x0 => slice1_y_net_x1,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_65d3cc37b4: entity work.twiddle_entity_65d3cc37b4
    port map (
      ai => reinterpret2_output_port_net_x5,
      bi => reinterpret1_output_port_net_x4,
      ce_1 => ce_1_sg_x1268,
      clk_1 => clk_1_sg_x1268,
      sync_in => delay0_q_net_x4,
      ao => reinterpret1_output_port_net_x7,
      bwo => concatenate_y_net_x12,
      sync_out => slice2_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly1_1/twiddle/coeff_gen/cosin/add_convert0"

entity add_convert0_entity_4e6e26ab31 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    theta: in std_logic_vector(9 downto 0); 
    add: out std_logic_vector(9 downto 0); 
    negate: out std_logic
  );
end add_convert0_entity_4e6e26ab31;

architecture structural of add_convert0_entity_4e6e26ab31 is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal addsub_s_net: std_logic_vector(10 downto 0);
  signal assert_dout_net_x0: std_logic_vector(9 downto 0);
  signal backwards_y_net: std_logic;
  signal ce_1_sg_x1349: std_logic;
  signal clk_1_sg_x1349: std_logic;
  signal concat_y_net: std_logic_vector(11 downto 0);
  signal constant4_op_net: std_logic_vector(10 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(9 downto 0);
  signal delay13_q_net: std_logic;
  signal delay14_q_net: std_logic_vector(9 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(11 downto 0);
  signal invert_y_net: std_logic;
  signal lookup_y_net: std_logic_vector(9 downto 0);
  signal mux_y_net: std_logic_vector(10 downto 0);
  signal new_add_y_net: std_logic_vector(9 downto 0);
  signal pad_op_net: std_logic_vector(1 downto 0);
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x1349 <= ce_1;
  clk_1_sg_x1349 <= clk_1;
  assert_dout_net_x0 <= theta;
  add <= convert2_dout_net_x0;
  negate <= delay2_q_net_x0;

  addsub: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 11,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 10,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 12,
      core_name0 => "addsb_11_0_8bea8e341a05ae56",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 12,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 11
    )
    port map (
      a => constant4_op_net,
      b => new_add_y_net,
      ce => ce_1_sg_x1349,
      clk => clk_1_sg_x1349,
      clr => '0',
      en => "1",
      s => addsub_s_net
    );

  addsub5: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x1349,
      clk => clk_1_sg_x1349,
      clr => '0',
      en => "1",
      s => addsub5_s_net
    );

  backwards: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => backwards_y_net
    );

  concat: entity work.concat_7ad1e33701
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => addsub5_s_net,
      in1 => lookup_y_net,
      y => concat_y_net
    );

  constant4: entity work.constant_0604807f72
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant4_op_net
    );

  convert2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 11,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 10,
      latency => 3,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1349,
      clk => clk_1_sg_x1349,
      clr => '0',
      din => mux_y_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  delay13: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1349,
      clk => clk_1_sg_x1349,
      d(0) => backwards_y_net,
      en => '1',
      rst => '1',
      q(0) => delay13_q_net
    );

  delay14: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1349,
      clk => clk_1_sg_x1349,
      d => new_add_y_net,
      en => '1',
      rst => '1',
      q => delay14_q_net
    );

  delay2: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x1349,
      clk => clk_1_sg_x1349,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_7ad1e33701
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => pad_op_net,
      in1 => assert_dout_net_x0,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  lookup: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 12,
      y_width => 10
    )
    port map (
      x => fluff_y_net,
      y => lookup_y_net
    );

  mux: entity work.mux_046d743d02
    port map (
      ce => ce_1_sg_x1349,
      clk => clk_1_sg_x1349,
      clr => '0',
      d0 => delay14_q_net,
      d1 => addsub_s_net,
      sel(0) => delay13_q_net,
      y => mux_y_net
    );

  new_add: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 12,
      y_width => 10
    )
    port map (
      x => concat_y_net,
      y => new_add_y_net
    );

  pad: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 10,
      new_msb => 11,
      x_width => 12,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly1_1/twiddle/coeff_gen/cosin/add_convert1"

entity add_convert1_entity_6ce9af0e8b is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    theta: in std_logic_vector(9 downto 0); 
    misco: out std_logic_vector(288 downto 0); 
    negate: out std_logic
  );
end add_convert1_entity_6ce9af0e8b;

architecture structural of add_convert1_entity_6ce9af0e8b is
  signal addsub1_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x1: std_logic_vector(9 downto 0);
  signal ce_1_sg_x1350: std_logic;
  signal clk_1_sg_x1350: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(288 downto 0);
  signal delay1_q_net_x0: std_logic_vector(288 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal fluff_y_net: std_logic_vector(11 downto 0);
  signal invert_y_net: std_logic;
  signal negate_offset_op_net: std_logic_vector(1 downto 0);
  signal pad_op_net: std_logic_vector(1 downto 0);
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x1350 <= ce_1;
  clk_1_sg_x1350 <= clk_1;
  concatenate_y_net_x1 <= misci;
  assert_dout_net_x1 <= theta;
  misco <= delay1_q_net_x0;
  negate <= delay2_q_net_x0;

  addsub1: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => negate_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x1350,
      clk => clk_1_sg_x1350,
      clr => '0',
      en => "1",
      s => addsub1_s_net
    );

  delay1: entity work.delay_4583411594
    port map (
      ce => ce_1_sg_x1350,
      clk => clk_1_sg_x1350,
      clr => '0',
      d => concatenate_y_net_x1,
      q => delay1_q_net_x0
    );

  delay2: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x1350,
      clk => clk_1_sg_x1350,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  fluff: entity work.concat_7ad1e33701
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => pad_op_net,
      in1 => assert_dout_net_x1,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub1_s_net,
      y(0) => invert_y_net
    );

  negate_offset: entity work.constant_a7e2bb9e12
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => negate_offset_op_net
    );

  pad: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 10,
      new_msb => 11,
      x_width => 12,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly1_1/twiddle/coeff_gen/cosin"

entity cosin_entity_93f73c624a is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    theta: in std_logic_vector(9 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(288 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_93f73c624a;

architecture structural of cosin_entity_93f73c624a is
  signal assert_dout_net_x1: std_logic_vector(9 downto 0);
  signal ce_1_sg_x1353: std_logic;
  signal clk_1_sg_x1353: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(288 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(9 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(288 downto 0);
  signal delay1_q_net_x2: std_logic_vector(288 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(288 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1353 <= ce_1;
  clk_1_sg_x1353 <= clk_1;
  concatenate_y_net_x2 <= misci;
  slice_y_net_x0 <= theta;
  cos <= mux_y_net_x3;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x2;

  add_convert0_4e6e26ab31: entity work.add_convert0_entity_4e6e26ab31
    port map (
      ce_1 => ce_1_sg_x1353,
      clk_1 => clk_1_sg_x1353,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_6ce9af0e8b: entity work.add_convert1_entity_6ce9af0e8b
    port map (
      ce_1 => ce_1_sg_x1353,
      clk_1 => clk_1_sg_x1353,
      misci => concatenate_y_net_x2,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 10,
      dout_width => 10
    )
    port map (
      din => slice_y_net_x0,
      dout => assert_dout_net_x1
    );

  c_to_ri_2eb7cf4eeb: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_80f3e767fa
    port map (
      ce => ce_1_sg_x1353,
      clk => clk_1_sg_x1353,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1353,
      clk => clk_1_sg_x1353,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1353,
      clk => clk_1_sg_x1353,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_8f4b91568c: entity work.invert0_entity_6963cb9e38
    port map (
      ce_1 => ce_1_sg_x1353,
      clk_1 => clk_1_sg_x1353,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_8858814eb5: entity work.invert1_entity_4148cefff8
    port map (
      ce_1 => ce_1_sg_x1353,
      clk_1 => clk_1_sg_x1353,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 36,
      core_name0 => "bmg_72_f38341fefbc151d5",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x1353,
      clk => clk_1_sg_x1353,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly1_1/twiddle/coeff_gen"

entity coeff_gen_entity_b85f1fd485 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(288 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(288 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_b85f1fd485;

architecture structural of coeff_gen_entity_b85f1fd485 is
  signal ce_1_sg_x1354: std_logic;
  signal clk_1_sg_x1354: std_logic;
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(288 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay0_q_net_x6: std_logic;
  signal delay1_q_net_x3: std_logic_vector(288 downto 0);
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1354 <= ce_1;
  clk_1_sg_x1354 <= clk_1;
  concatenate_y_net_x3 <= misci;
  delay0_q_net_x6 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x11;

  cosin_93f73c624a: entity work.cosin_entity_93f73c624a
    port map (
      ce_1 => ce_1_sg_x1354,
      clk_1 => clk_1_sg_x1354,
      misci => concatenate_y_net_x3,
      theta => slice_y_net_x0,
      cos => mux_y_net_x5,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x4
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x1354,
      clk => clk_1_sg_x1354,
      clr => '0',
      rst(0) => delay0_q_net_x6,
      op => counter_op_net
    );

  ri_to_c_67128394b9: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x11
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 10,
      y_width => 10
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly1_1/twiddle"

entity twiddle_entity_3afa15bd82 is
  port (
    ai: in std_logic_vector(143 downto 0); 
    bi: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(143 downto 0); 
    bwo: out std_logic_vector(151 downto 0); 
    sync_out: out std_logic
  );
end twiddle_entity_3afa15bd82;

architecture structural of twiddle_entity_3afa15bd82 is
  signal ce_1_sg_x1355: std_logic;
  signal clk_1_sg_x1355: std_logic;
  signal concat_y_net_x11: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(288 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(295 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(151 downto 0);
  signal delay0_q_net_x7: std_logic;
  signal delay1_q_net_x3: std_logic_vector(288 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(144 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(144 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(144 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x8: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(143 downto 0);
  signal slice2_y_net_x1: std_logic;

begin
  reinterpret2_output_port_net_x3 <= ai;
  reinterpret1_output_port_net_x7 <= bi;
  ce_1_sg_x1355 <= ce_1;
  clk_1_sg_x1355 <= clk_1;
  delay0_q_net_x7 <= sync_in;
  ao <= reinterpret1_output_port_net_x8;
  bwo <= concatenate_y_net_x8;
  sync_out <= slice2_y_net_x1;

  bus_convert_0866db89e8: entity work.bus_convert_entity_fc9d20fae7
    port map (
      ce_1 => ce_1_sg_x1355,
      clk_1 => clk_1_sg_x1355,
      din => concatenate_y_net_x7,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x8,
      misco => dmisc_q_net_x3
    );

  bus_create_28ef0b5e70: entity work.bus_create_entity_3d2f105ae8
    port map (
      in1 => reinterpret1_output_port_net_x7,
      in2 => delay0_q_net_x7,
      in3 => reinterpret2_output_port_net_x3,
      bus_out => concatenate_y_net_x3
    );

  bus_expand1_2bee2b98f7: entity work.bus_expand1_entity_0d80282e07
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x8,
      msb_out2 => slice2_y_net_x1
    );

  bus_expand_1968750b32: entity work.bus_expand_entity_1995b7ac80
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x5,
      msb_out2 => reinterpret2_output_port_net_x2
    );

  bus_mult_f3542f13c5: entity work.bus_mult_entity_cc3ac8248d
    port map (
      a => concat_y_net_x11,
      b => reinterpret2_output_port_net_x2,
      ce_1 => ce_1_sg_x1355,
      clk_1 => clk_1_sg_x1355,
      misci => reinterpret1_output_port_net_x5,
      a_b => concatenate_y_net_x7,
      misco => dmisc_q_net_x2
    );

  coeff_gen_b85f1fd485: entity work.coeff_gen_entity_b85f1fd485
    port map (
      ce_1 => ce_1_sg_x1355,
      clk_1 => clk_1_sg_x1355,
      misci => concatenate_y_net_x3,
      rst => delay0_q_net_x7,
      misco => delay1_q_net_x3,
      w => concat_y_net_x11
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly1_1"

entity butterfly1_1_entity_064b1c7ae9 is
  port (
    a: in std_logic_vector(143 downto 0); 
    b: in std_logic_vector(143 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(143 downto 0); 
    a_bw_x0: out std_logic_vector(143 downto 0); 
    of_x0: out std_logic_vector(3 downto 0); 
    sync_out: out std_logic
  );
end butterfly1_1_entity_064b1c7ae9;

architecture structural of butterfly1_1_entity_064b1c7ae9 is
  signal ce_1_sg_x1356: std_logic;
  signal clk_1_sg_x1356: std_logic;
  signal concat_y_net_x3: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(151 downto 0);
  signal concatenate_y_net_x13: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(159 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(319 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(287 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(15 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(335 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(159 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal delay0_q_net_x8: std_logic;
  signal reinterpret1_output_port_net_x10: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x8: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x5: std_logic_vector(143 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(15 downto 0);
  signal slice1_y_net_x3: std_logic;
  signal slice2_y_net_x1: std_logic;

begin
  reinterpret2_output_port_net_x4 <= a;
  reinterpret1_output_port_net_x9 <= b;
  ce_1_sg_x1356 <= ce_1;
  clk_1_sg_x1356 <= clk_1;
  slice1_y_net_x3 <= shift;
  delay0_q_net_x8 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x10;
  a_bw_x0 <= reinterpret2_output_port_net_x5;
  of_x0 <= concatenate_y_net_x13;
  sync_out <= delay0_q_net_x0;

  bus_add_098163ec35: entity work.bus_add_entity_928fd44576
    port map (
      a => reinterpret1_output_port_net_x8,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1356,
      clk_1 => clk_1_sg_x1356,
      dout => concatenate_y_net_x3
    );

  bus_convert_9c927278ca: entity work.bus_convert_entity_8625f90d6a
    port map (
      ce_1 => ce_1_sg_x1356,
      clk_1 => clk_1_sg_x1356,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_f93d601c67: entity work.bus_expand_entity_2a52aaf3de
    port map (
      bus_in => concatenate_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x10,
      msb_out2 => reinterpret2_output_port_net_x5
    );

  bus_norm0_f117096b51: entity work.bus_norm0_entity_2065c27fbe
    port map (
      ce_1 => ce_1_sg_x1356,
      clk_1 => clk_1_sg_x1356,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_c9b53485e5: entity work.bus_norm1_entity_ebb4710d83
    port map (
      ce_1 => ce_1_sg_x1356,
      clk_1 => clk_1_sg_x1356,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_0a51098903: entity work.bus_relational_entity_633fc73315
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      ce_1 => ce_1_sg_x1356,
      clk_1 => clk_1_sg_x1356,
      a_b => concatenate_y_net_x13
    );

  bus_scale_4dac0ee6ab: entity work.bus_scale_entity_0ad20b8fc9
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_2a2faed3e1: entity work.bus_sub_entity_c471a0f176
    port map (
      a => reinterpret1_output_port_net_x8,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1356,
      clk_1 => clk_1_sg_x1356,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_2a42ff61a3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x1356,
      clk => clk_1_sg_x1356,
      clr => '0',
      d(0) => slice2_y_net_x1,
      q(0) => delay0_q_net_x0
    );

  munge_092d5f165c: entity work.munge_entity_7ae6614fdf
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_70ff5e3d75: entity work.mux_entity_bd9bbc285a
    port map (
      ce_1 => ce_1_sg_x1356,
      clk_1 => clk_1_sg_x1356,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_d20f46936b: entity work.shift_replicate_entity_9dcff94fe9
    port map (
      ce_1 => ce_1_sg_x1356,
      clk_1 => clk_1_sg_x1356,
      in_x0 => slice1_y_net_x3,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_3afa15bd82: entity work.twiddle_entity_3afa15bd82
    port map (
      ai => reinterpret2_output_port_net_x4,
      bi => reinterpret1_output_port_net_x9,
      ce_1 => ce_1_sg_x1356,
      clk_1 => clk_1_sg_x1356,
      sync_in => delay0_q_net_x8,
      ao => reinterpret1_output_port_net_x8,
      bwo => concatenate_y_net_x12,
      sync_out => slice2_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/bus_add/b_debus"

entity b_debus_entity_287734d8f0 is
  port (
    bus_in: in std_logic_vector(75 downto 0); 
    lsb_out1: out std_logic_vector(18 downto 0); 
    msb_out4: out std_logic_vector(18 downto 0); 
    out2: out std_logic_vector(18 downto 0); 
    out3: out std_logic_vector(18 downto 0)
  );
end b_debus_entity_287734d8f0;

architecture structural of b_debus_entity_287734d8f0 is
  signal concatenate_y_net_x0: std_logic_vector(75 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(18 downto 0);
  signal slice1_y_net: std_logic_vector(18 downto 0);
  signal slice2_y_net: std_logic_vector(18 downto 0);
  signal slice3_y_net: std_logic_vector(18 downto 0);
  signal slice4_y_net: std_logic_vector(18 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out4 <= reinterpret4_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;

  reinterpret1: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 18,
      x_width => 76,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 19,
      new_msb => 37,
      x_width => 76,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 38,
      new_msb => 56,
      x_width => 76,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 57,
      new_msb => 75,
      x_width => 76,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/bus_add/op_bussify"

entity op_bussify_entity_9093d2f161 is
  port (
    in1: in std_logic_vector(19 downto 0); 
    in2: in std_logic_vector(19 downto 0); 
    in3: in std_logic_vector(19 downto 0); 
    in4: in std_logic_vector(19 downto 0); 
    bus_out: out std_logic_vector(79 downto 0)
  );
end op_bussify_entity_9093d2f161;

architecture structural of op_bussify_entity_9093d2f161 is
  signal addsub1_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub2_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub3_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub4_s_net_x0: std_logic_vector(19 downto 0);
  signal concatenate_y_net_x0: std_logic_vector(79 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(19 downto 0);

begin
  addsub1_s_net_x0 <= in1;
  addsub2_s_net_x0 <= in2;
  addsub3_s_net_x0 <= in3;
  addsub4_s_net_x0 <= in4;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_f86ebb6084
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub1_s_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub2_s_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub3_s_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub4_s_net_x0,
      output_port => reinterpret4_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/bus_add"

entity bus_add_entity_c12684f296 is
  port (
    a: in std_logic_vector(71 downto 0); 
    b: in std_logic_vector(75 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    dout: out std_logic_vector(79 downto 0)
  );
end bus_add_entity_c12684f296;

architecture structural of bus_add_entity_c12684f296 is
  signal addsub1_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub2_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub3_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub4_s_net_x0: std_logic_vector(19 downto 0);
  signal ce_1_sg_x1357: std_logic;
  signal clk_1_sg_x1357: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(75 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(79 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(18 downto 0);

begin
  reinterpret1_output_port_net_x3 <= a;
  concatenate_y_net_x2 <= b;
  ce_1_sg_x1357 <= ce_1;
  clk_1_sg_x1357 <= clk_1;
  dout <= concatenate_y_net_x3;

  a_debus_fca2d3fbb3: entity work.a_debus_entity_659a478c77
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  addsub1: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret4_output_port_net_x0,
      b => reinterpret4_output_port_net_x1,
      ce => ce_1_sg_x1357,
      clk => clk_1_sg_x1357,
      clr => '0',
      s => addsub1_s_net_x0
    );

  addsub2: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret3_output_port_net_x0,
      b => reinterpret3_output_port_net_x1,
      ce => ce_1_sg_x1357,
      clk => clk_1_sg_x1357,
      clr => '0',
      s => addsub2_s_net_x0
    );

  addsub3: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret2_output_port_net_x0,
      b => reinterpret2_output_port_net_x1,
      ce => ce_1_sg_x1357,
      clk => clk_1_sg_x1357,
      clr => '0',
      s => addsub3_s_net_x0
    );

  addsub4: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret1_output_port_net_x2,
      b => reinterpret1_output_port_net_x0,
      ce => ce_1_sg_x1357,
      clk => clk_1_sg_x1357,
      clr => '0',
      s => addsub4_s_net_x0
    );

  b_debus_287734d8f0: entity work.b_debus_entity_287734d8f0
    port map (
      bus_in => concatenate_y_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1
    );

  op_bussify_9093d2f161: entity work.op_bussify_entity_9093d2f161
    port map (
      in1 => addsub1_s_net_x0,
      in2 => addsub2_s_net_x0,
      in3 => addsub3_s_net_x0,
      in4 => addsub4_s_net_x0,
      bus_out => concatenate_y_net_x3
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/bus_convert/bussify"

entity bussify_entity_f11ec171e1 is
  port (
    in1: in std_logic_vector(17 downto 0); 
    in2: in std_logic_vector(17 downto 0); 
    in3: in std_logic_vector(17 downto 0); 
    in4: in std_logic_vector(17 downto 0); 
    in5: in std_logic_vector(17 downto 0); 
    in6: in std_logic_vector(17 downto 0); 
    in7: in std_logic_vector(17 downto 0); 
    in8: in std_logic_vector(17 downto 0); 
    bus_out: out std_logic_vector(143 downto 0)
  );
end bussify_entity_f11ec171e1;

architecture structural of bussify_entity_f11ec171e1 is
  signal adder_s_net_x10: std_logic_vector(17 downto 0);
  signal adder_s_net_x11: std_logic_vector(17 downto 0);
  signal adder_s_net_x12: std_logic_vector(17 downto 0);
  signal adder_s_net_x13: std_logic_vector(17 downto 0);
  signal adder_s_net_x14: std_logic_vector(17 downto 0);
  signal adder_s_net_x7: std_logic_vector(17 downto 0);
  signal adder_s_net_x8: std_logic_vector(17 downto 0);
  signal adder_s_net_x9: std_logic_vector(17 downto 0);
  signal concatenate_y_net_x0: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(17 downto 0);

begin
  adder_s_net_x7 <= in1;
  adder_s_net_x8 <= in2;
  adder_s_net_x9 <= in3;
  adder_s_net_x10 <= in4;
  adder_s_net_x11 <= in5;
  adder_s_net_x12 <= in6;
  adder_s_net_x13 <= in7;
  adder_s_net_x14 <= in8;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_341bdeba15
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x7,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x8,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x9,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x10,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x11,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x12,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x13,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x14,
      output_port => reinterpret8_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/bus_convert/debus"

entity debus_entity_8c63c226f2 is
  port (
    bus_in: in std_logic_vector(167 downto 0); 
    lsb_out1: out std_logic_vector(20 downto 0); 
    msb_out8: out std_logic_vector(20 downto 0); 
    out2: out std_logic_vector(20 downto 0); 
    out3: out std_logic_vector(20 downto 0); 
    out4: out std_logic_vector(20 downto 0); 
    out5: out std_logic_vector(20 downto 0); 
    out6: out std_logic_vector(20 downto 0); 
    out7: out std_logic_vector(20 downto 0)
  );
end debus_entity_8c63c226f2;

architecture structural of debus_entity_8c63c226f2 is
  signal concatenate_y_net_x0: std_logic_vector(167 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret5_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret6_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret7_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret8_output_port_net_x2: std_logic_vector(20 downto 0);
  signal slice1_y_net: std_logic_vector(20 downto 0);
  signal slice2_y_net: std_logic_vector(20 downto 0);
  signal slice3_y_net: std_logic_vector(20 downto 0);
  signal slice4_y_net: std_logic_vector(20 downto 0);
  signal slice5_y_net: std_logic_vector(20 downto 0);
  signal slice6_y_net: std_logic_vector(20 downto 0);
  signal slice7_y_net: std_logic_vector(20 downto 0);
  signal slice8_y_net: std_logic_vector(20 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x2;
  msb_out8 <= reinterpret8_output_port_net_x2;
  out2 <= reinterpret2_output_port_net_x2;
  out3 <= reinterpret3_output_port_net_x2;
  out4 <= reinterpret4_output_port_net_x2;
  out5 <= reinterpret5_output_port_net_x2;
  out6 <= reinterpret6_output_port_net_x2;
  out7 <= reinterpret7_output_port_net_x2;

  reinterpret1: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  reinterpret2: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x2
    );

  reinterpret3: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x2
    );

  reinterpret4: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x2
    );

  reinterpret5: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_y_net,
      output_port => reinterpret5_output_port_net_x2
    );

  reinterpret6: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret6_output_port_net_x2
    );

  reinterpret7: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret7_output_port_net_x2
    );

  reinterpret8: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret8_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 20,
      x_width => 168,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 21,
      new_msb => 41,
      x_width => 168,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 42,
      new_msb => 62,
      x_width => 168,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 63,
      new_msb => 83,
      x_width => 168,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 84,
      new_msb => 104,
      x_width => 168,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 105,
      new_msb => 125,
      x_width => 168,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 126,
      new_msb => 146,
      x_width => 168,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 147,
      new_msb => 167,
      x_width => 168,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice8_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/bus_convert"

entity bus_convert_entity_8adb3719d7 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(167 downto 0); 
    dout: out std_logic_vector(143 downto 0); 
    overflow: out std_logic_vector(7 downto 0)
  );
end bus_convert_entity_8adb3719d7;

architecture structural of bus_convert_entity_8adb3719d7 is
  signal adder_s_net_x10: std_logic_vector(17 downto 0);
  signal adder_s_net_x11: std_logic_vector(17 downto 0);
  signal adder_s_net_x12: std_logic_vector(17 downto 0);
  signal adder_s_net_x13: std_logic_vector(17 downto 0);
  signal adder_s_net_x14: std_logic_vector(17 downto 0);
  signal adder_s_net_x15: std_logic_vector(17 downto 0);
  signal adder_s_net_x16: std_logic_vector(17 downto 0);
  signal adder_s_net_x9: std_logic_vector(17 downto 0);
  signal and_y_net_x10: std_logic;
  signal and_y_net_x11: std_logic;
  signal and_y_net_x12: std_logic;
  signal and_y_net_x13: std_logic;
  signal and_y_net_x14: std_logic;
  signal and_y_net_x15: std_logic;
  signal and_y_net_x8: std_logic;
  signal and_y_net_x9: std_logic;
  signal ce_1_sg_x1374: std_logic;
  signal clk_1_sg_x1374: std_logic;
  signal concatenate_y_net_x3: std_logic_vector(167 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(7 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret5_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret6_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret7_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret8_output_port_net_x2: std_logic_vector(20 downto 0);

begin
  ce_1_sg_x1374 <= ce_1;
  clk_1_sg_x1374 <= clk_1;
  concatenate_y_net_x3 <= din;
  dout <= concatenate_y_net_x4;
  overflow <= concatenate_y_net_x5;

  bussify_f11ec171e1: entity work.bussify_entity_f11ec171e1
    port map (
      in1 => adder_s_net_x9,
      in2 => adder_s_net_x10,
      in3 => adder_s_net_x11,
      in4 => adder_s_net_x12,
      in5 => adder_s_net_x13,
      in6 => adder_s_net_x14,
      in7 => adder_s_net_x15,
      in8 => adder_s_net_x16,
      bus_out => concatenate_y_net_x4
    );

  conv1_9839cb8869: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1374,
      clk_1 => clk_1_sg_x1374,
      din => reinterpret8_output_port_net_x2,
      dout => adder_s_net_x9,
      of_x0 => and_y_net_x8
    );

  conv2_4c86cb2f8d: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1374,
      clk_1 => clk_1_sg_x1374,
      din => reinterpret7_output_port_net_x2,
      dout => adder_s_net_x10,
      of_x0 => and_y_net_x9
    );

  conv3_ca4e3f3afa: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1374,
      clk_1 => clk_1_sg_x1374,
      din => reinterpret6_output_port_net_x2,
      dout => adder_s_net_x11,
      of_x0 => and_y_net_x10
    );

  conv4_64ee4304cd: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1374,
      clk_1 => clk_1_sg_x1374,
      din => reinterpret5_output_port_net_x2,
      dout => adder_s_net_x12,
      of_x0 => and_y_net_x11
    );

  conv5_b60075283d: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1374,
      clk_1 => clk_1_sg_x1374,
      din => reinterpret4_output_port_net_x2,
      dout => adder_s_net_x13,
      of_x0 => and_y_net_x12
    );

  conv6_54b831ad6b: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1374,
      clk_1 => clk_1_sg_x1374,
      din => reinterpret3_output_port_net_x2,
      dout => adder_s_net_x14,
      of_x0 => and_y_net_x13
    );

  conv7_0a9aba3e4a: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1374,
      clk_1 => clk_1_sg_x1374,
      din => reinterpret2_output_port_net_x2,
      dout => adder_s_net_x15,
      of_x0 => and_y_net_x14
    );

  conv8_ddfb492104: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1374,
      clk_1 => clk_1_sg_x1374,
      din => reinterpret1_output_port_net_x2,
      dout => adder_s_net_x16,
      of_x0 => and_y_net_x15
    );

  debus_8c63c226f2: entity work.debus_entity_8c63c226f2
    port map (
      bus_in => concatenate_y_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out8 => reinterpret8_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x2,
      out4 => reinterpret4_output_port_net_x2,
      out5 => reinterpret5_output_port_net_x2,
      out6 => reinterpret6_output_port_net_x2,
      out7 => reinterpret7_output_port_net_x2
    );

  of_bussify_faf19a649d: entity work.bussify_entity_cf86712567
    port map (
      in1 => and_y_net_x8,
      in2 => and_y_net_x9,
      in3 => and_y_net_x10,
      in4 => and_y_net_x11,
      in5 => and_y_net_x12,
      in6 => and_y_net_x13,
      in7 => and_y_net_x14,
      in8 => and_y_net_x15,
      bus_out => concatenate_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/bus_norm0/bussify"

entity bussify_entity_633f929f9e is
  port (
    in1: in std_logic_vector(20 downto 0); 
    in2: in std_logic_vector(20 downto 0); 
    in3: in std_logic_vector(20 downto 0); 
    in4: in std_logic_vector(20 downto 0); 
    in5: in std_logic_vector(20 downto 0); 
    in6: in std_logic_vector(20 downto 0); 
    in7: in std_logic_vector(20 downto 0); 
    in8: in std_logic_vector(20 downto 0); 
    bus_out: out std_logic_vector(167 downto 0)
  );
end bussify_entity_633f929f9e;

architecture structural of bussify_entity_633f929f9e is
  signal concatenate_y_net_x0: std_logic_vector(167 downto 0);
  signal conv1_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv2_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv3_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv4_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv5_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv6_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv7_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv8_dout_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(20 downto 0);

begin
  conv1_dout_net_x0 <= in1;
  conv2_dout_net_x0 <= in2;
  conv3_dout_net_x0 <= in3;
  conv4_dout_net_x0 <= in4;
  conv5_dout_net_x0 <= in5;
  conv6_dout_net_x0 <= in6;
  conv7_dout_net_x0 <= in7;
  conv8_dout_net_x0 <= in8;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_7cb1306ccc
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv1_dout_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv2_dout_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv3_dout_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv4_dout_net_x0,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv5_dout_net_x0,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv6_dout_net_x0,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv7_dout_net_x0,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv8_dout_net_x0,
      output_port => reinterpret8_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/bus_norm0/debus"

entity debus_entity_2ff7b66332 is
  port (
    bus_in: in std_logic_vector(159 downto 0); 
    lsb_out1: out std_logic_vector(19 downto 0); 
    msb_out8: out std_logic_vector(19 downto 0); 
    out2: out std_logic_vector(19 downto 0); 
    out3: out std_logic_vector(19 downto 0); 
    out4: out std_logic_vector(19 downto 0); 
    out5: out std_logic_vector(19 downto 0); 
    out6: out std_logic_vector(19 downto 0); 
    out7: out std_logic_vector(19 downto 0)
  );
end debus_entity_2ff7b66332;

architecture structural of debus_entity_2ff7b66332 is
  signal concat_y_net_x0: std_logic_vector(159 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(19 downto 0);
  signal slice1_y_net: std_logic_vector(19 downto 0);
  signal slice2_y_net: std_logic_vector(19 downto 0);
  signal slice3_y_net: std_logic_vector(19 downto 0);
  signal slice4_y_net: std_logic_vector(19 downto 0);
  signal slice5_y_net: std_logic_vector(19 downto 0);
  signal slice6_y_net: std_logic_vector(19 downto 0);
  signal slice7_y_net: std_logic_vector(19 downto 0);
  signal slice8_y_net: std_logic_vector(19 downto 0);

begin
  concat_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out8 <= reinterpret8_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;
  out4 <= reinterpret4_output_port_net_x0;
  out5 <= reinterpret5_output_port_net_x0;
  out6 <= reinterpret6_output_port_net_x0;
  out7 <= reinterpret7_output_port_net_x0;

  reinterpret1: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  reinterpret5: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_y_net,
      output_port => reinterpret5_output_port_net_x0
    );

  reinterpret6: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret6_output_port_net_x0
    );

  reinterpret7: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret7_output_port_net_x0
    );

  reinterpret8: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret8_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 19,
      x_width => 160,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 20,
      new_msb => 39,
      x_width => 160,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 40,
      new_msb => 59,
      x_width => 160,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 60,
      new_msb => 79,
      x_width => 160,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 80,
      new_msb => 99,
      x_width => 160,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 100,
      new_msb => 119,
      x_width => 160,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 120,
      new_msb => 139,
      x_width => 160,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 140,
      new_msb => 159,
      x_width => 160,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice8_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/bus_norm0"

entity bus_norm0_entity_cd1216a1cc is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(159 downto 0); 
    dout: out std_logic_vector(167 downto 0)
  );
end bus_norm0_entity_cd1216a1cc;

architecture structural of bus_norm0_entity_cd1216a1cc is
  signal ce_1_sg_x1375: std_logic;
  signal clk_1_sg_x1375: std_logic;
  signal concat_y_net_x1: std_logic_vector(159 downto 0);
  signal concatenate_y_net_x1: std_logic_vector(167 downto 0);
  signal conv1_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv2_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv3_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv4_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv5_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv6_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv7_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv8_dout_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(19 downto 0);

begin
  ce_1_sg_x1375 <= ce_1;
  clk_1_sg_x1375 <= clk_1;
  concat_y_net_x1 <= din;
  dout <= concatenate_y_net_x1;

  bussify_633f929f9e: entity work.bussify_entity_633f929f9e
    port map (
      in1 => conv1_dout_net_x0,
      in2 => conv2_dout_net_x0,
      in3 => conv3_dout_net_x0,
      in4 => conv4_dout_net_x0,
      in5 => conv5_dout_net_x0,
      in6 => conv6_dout_net_x0,
      in7 => conv7_dout_net_x0,
      in8 => conv8_dout_net_x0,
      bus_out => concatenate_y_net_x1
    );

  conv1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1375,
      clk => clk_1_sg_x1375,
      clr => '0',
      din => reinterpret8_output_port_net_x0,
      en => "1",
      dout => conv1_dout_net_x0
    );

  conv2: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1375,
      clk => clk_1_sg_x1375,
      clr => '0',
      din => reinterpret7_output_port_net_x0,
      en => "1",
      dout => conv2_dout_net_x0
    );

  conv3: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1375,
      clk => clk_1_sg_x1375,
      clr => '0',
      din => reinterpret6_output_port_net_x0,
      en => "1",
      dout => conv3_dout_net_x0
    );

  conv4: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1375,
      clk => clk_1_sg_x1375,
      clr => '0',
      din => reinterpret5_output_port_net_x0,
      en => "1",
      dout => conv4_dout_net_x0
    );

  conv5: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1375,
      clk => clk_1_sg_x1375,
      clr => '0',
      din => reinterpret4_output_port_net_x0,
      en => "1",
      dout => conv5_dout_net_x0
    );

  conv6: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1375,
      clk => clk_1_sg_x1375,
      clr => '0',
      din => reinterpret3_output_port_net_x0,
      en => "1",
      dout => conv6_dout_net_x0
    );

  conv7: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1375,
      clk => clk_1_sg_x1375,
      clr => '0',
      din => reinterpret2_output_port_net_x0,
      en => "1",
      dout => conv7_dout_net_x0
    );

  conv8: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1375,
      clk => clk_1_sg_x1375,
      clr => '0',
      din => reinterpret1_output_port_net_x0,
      en => "1",
      dout => conv8_dout_net_x0
    );

  debus_2ff7b66332: entity work.debus_entity_2ff7b66332
    port map (
      bus_in => concat_y_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out8 => reinterpret8_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0,
      out4 => reinterpret4_output_port_net_x0,
      out5 => reinterpret5_output_port_net_x0,
      out6 => reinterpret6_output_port_net_x0,
      out7 => reinterpret7_output_port_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/bus_norm1/debus"

entity debus_entity_245a4e2068 is
  port (
    bus_in: in std_logic_vector(159 downto 0); 
    lsb_out1: out std_logic_vector(19 downto 0); 
    msb_out8: out std_logic_vector(19 downto 0); 
    out2: out std_logic_vector(19 downto 0); 
    out3: out std_logic_vector(19 downto 0); 
    out4: out std_logic_vector(19 downto 0); 
    out5: out std_logic_vector(19 downto 0); 
    out6: out std_logic_vector(19 downto 0); 
    out7: out std_logic_vector(19 downto 0)
  );
end debus_entity_245a4e2068;

architecture structural of debus_entity_245a4e2068 is
  signal concatenate_y_net_x0: std_logic_vector(159 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret5_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret6_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret7_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret8_output_port_net_x1: std_logic_vector(19 downto 0);
  signal slice1_y_net: std_logic_vector(19 downto 0);
  signal slice2_y_net: std_logic_vector(19 downto 0);
  signal slice3_y_net: std_logic_vector(19 downto 0);
  signal slice4_y_net: std_logic_vector(19 downto 0);
  signal slice5_y_net: std_logic_vector(19 downto 0);
  signal slice6_y_net: std_logic_vector(19 downto 0);
  signal slice7_y_net: std_logic_vector(19 downto 0);
  signal slice8_y_net: std_logic_vector(19 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x1;
  msb_out8 <= reinterpret8_output_port_net_x1;
  out2 <= reinterpret2_output_port_net_x1;
  out3 <= reinterpret3_output_port_net_x1;
  out4 <= reinterpret4_output_port_net_x1;
  out5 <= reinterpret5_output_port_net_x1;
  out6 <= reinterpret6_output_port_net_x1;
  out7 <= reinterpret7_output_port_net_x1;

  reinterpret1: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x1
    );

  reinterpret2: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x1
    );

  reinterpret3: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x1
    );

  reinterpret4: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x1
    );

  reinterpret5: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_y_net,
      output_port => reinterpret5_output_port_net_x1
    );

  reinterpret6: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret6_output_port_net_x1
    );

  reinterpret7: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret7_output_port_net_x1
    );

  reinterpret8: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret8_output_port_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 19,
      x_width => 160,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 20,
      new_msb => 39,
      x_width => 160,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 40,
      new_msb => 59,
      x_width => 160,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 60,
      new_msb => 79,
      x_width => 160,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 80,
      new_msb => 99,
      x_width => 160,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 100,
      new_msb => 119,
      x_width => 160,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 120,
      new_msb => 139,
      x_width => 160,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 140,
      new_msb => 159,
      x_width => 160,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice8_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/bus_norm1"

entity bus_norm1_entity_a4c51fbd17 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(159 downto 0); 
    dout: out std_logic_vector(167 downto 0)
  );
end bus_norm1_entity_a4c51fbd17;

architecture structural of bus_norm1_entity_a4c51fbd17 is
  signal adder_s_net_x10: std_logic_vector(20 downto 0);
  signal adder_s_net_x11: std_logic_vector(20 downto 0);
  signal adder_s_net_x12: std_logic_vector(20 downto 0);
  signal adder_s_net_x13: std_logic_vector(20 downto 0);
  signal adder_s_net_x14: std_logic_vector(20 downto 0);
  signal adder_s_net_x15: std_logic_vector(20 downto 0);
  signal adder_s_net_x8: std_logic_vector(20 downto 0);
  signal adder_s_net_x9: std_logic_vector(20 downto 0);
  signal ce_1_sg_x1384: std_logic;
  signal clk_1_sg_x1384: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(159 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(167 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret5_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret6_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret7_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret8_output_port_net_x1: std_logic_vector(19 downto 0);

begin
  ce_1_sg_x1384 <= ce_1;
  clk_1_sg_x1384 <= clk_1;
  concatenate_y_net_x2 <= din;
  dout <= concatenate_y_net_x3;

  bussify_cda8eb7c50: entity work.bussify_entity_633f929f9e
    port map (
      in1 => adder_s_net_x8,
      in2 => adder_s_net_x9,
      in3 => adder_s_net_x10,
      in4 => adder_s_net_x11,
      in5 => adder_s_net_x12,
      in6 => adder_s_net_x13,
      in7 => adder_s_net_x14,
      in8 => adder_s_net_x15,
      bus_out => concatenate_y_net_x3
    );

  conv1_517e074d52: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1384,
      clk_1 => clk_1_sg_x1384,
      in_x0 => reinterpret8_output_port_net_x1,
      out_x0 => adder_s_net_x8
    );

  conv2_a14e054b2e: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1384,
      clk_1 => clk_1_sg_x1384,
      in_x0 => reinterpret7_output_port_net_x1,
      out_x0 => adder_s_net_x9
    );

  conv3_ba87933170: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1384,
      clk_1 => clk_1_sg_x1384,
      in_x0 => reinterpret6_output_port_net_x1,
      out_x0 => adder_s_net_x10
    );

  conv4_938b3c32c8: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1384,
      clk_1 => clk_1_sg_x1384,
      in_x0 => reinterpret5_output_port_net_x1,
      out_x0 => adder_s_net_x11
    );

  conv5_79f912bba3: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1384,
      clk_1 => clk_1_sg_x1384,
      in_x0 => reinterpret4_output_port_net_x1,
      out_x0 => adder_s_net_x12
    );

  conv6_d915b124cd: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1384,
      clk_1 => clk_1_sg_x1384,
      in_x0 => reinterpret3_output_port_net_x1,
      out_x0 => adder_s_net_x13
    );

  conv7_605bcf4153: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1384,
      clk_1 => clk_1_sg_x1384,
      in_x0 => reinterpret2_output_port_net_x1,
      out_x0 => adder_s_net_x14
    );

  conv8_c1a1fba930: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1384,
      clk_1 => clk_1_sg_x1384,
      in_x0 => reinterpret1_output_port_net_x1,
      out_x0 => adder_s_net_x15
    );

  debus_245a4e2068: entity work.debus_entity_245a4e2068
    port map (
      bus_in => concatenate_y_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out8 => reinterpret8_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1,
      out4 => reinterpret4_output_port_net_x1,
      out5 => reinterpret5_output_port_net_x1,
      out6 => reinterpret6_output_port_net_x1,
      out7 => reinterpret7_output_port_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/bus_relational/b_debus"

entity b_debus_entity_7ed1f0bd4a is
  port (
    bus_in: in std_logic_vector(7 downto 0); 
    lsb_out1: out std_logic_vector(3 downto 0); 
    msb_out2: out std_logic_vector(3 downto 0)
  );
end b_debus_entity_7ed1f0bd4a;

architecture structural of b_debus_entity_7ed1f0bd4a is
  signal reinterpret1_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret_out_output_port_net_x0: std_logic_vector(7 downto 0);
  signal slice1_y_net: std_logic_vector(3 downto 0);
  signal slice2_y_net: std_logic_vector(3 downto 0);

begin
  reinterpret_out_output_port_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out2 <= reinterpret2_output_port_net_x0;

  reinterpret1: entity work.reinterpret_d610556e85
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_d610556e85
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 3,
      x_width => 8,
      y_width => 4
    )
    port map (
      x => reinterpret_out_output_port_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 7,
      x_width => 8,
      y_width => 4
    )
    port map (
      x => reinterpret_out_output_port_net_x0,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/bus_relational/bussify"

entity bussify_entity_ba21439f51 is
  port (
    in1: in std_logic; 
    in2: in std_logic; 
    bus_out: out std_logic_vector(1 downto 0)
  );
end bussify_entity_ba21439f51;

architecture structural of bussify_entity_ba21439f51 is
  signal concatenate_y_net_x0: std_logic_vector(1 downto 0);
  signal reinterpret1_output_port_net: std_logic;
  signal reinterpret2_output_port_net: std_logic;
  signal relational1_op_net_x0: std_logic;
  signal relational2_op_net_x0: std_logic;

begin
  relational1_op_net_x0 <= in1;
  relational2_op_net_x0 <= in2;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_e6f5ee726b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => reinterpret1_output_port_net,
      in1(0) => reinterpret2_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => relational1_op_net_x0,
      output_port(0) => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => relational2_op_net_x0,
      output_port(0) => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/bus_relational"

entity bus_relational_entity_8ce6836c18 is
  port (
    a: in std_logic_vector(3 downto 0); 
    b: in std_logic_vector(7 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    a_b: out std_logic_vector(1 downto 0)
  );
end bus_relational_entity_8ce6836c18;

architecture structural of bus_relational_entity_8ce6836c18 is
  signal ce_1_sg_x1385: std_logic;
  signal clk_1_sg_x1385: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(1 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(3 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret_out_output_port_net_x1: std_logic_vector(7 downto 0);
  signal relational1_op_net_x0: std_logic;
  signal relational2_op_net_x0: std_logic;

begin
  constant_op_net_x1 <= a;
  reinterpret_out_output_port_net_x1 <= b;
  ce_1_sg_x1385 <= ce_1;
  clk_1_sg_x1385 <= clk_1;
  a_b <= concatenate_y_net_x1;

  a_debus_33bd51f10a: entity work.a_debus_entity_778d2a5625
    port map (
      bus_in => constant_op_net_x1,
      msb_lsb_out1 => reinterpret1_output_port_net_x0
    );

  b_debus_7ed1f0bd4a: entity work.b_debus_entity_7ed1f0bd4a
    port map (
      bus_in => reinterpret_out_output_port_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out2 => reinterpret2_output_port_net_x0
    );

  bussify_ba21439f51: entity work.bussify_entity_ba21439f51
    port map (
      in1 => relational1_op_net_x0,
      in2 => relational2_op_net_x0,
      bus_out => concatenate_y_net_x1
    );

  relational1: entity work.relational_01718d4f17
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret2_output_port_net_x0,
      ce => ce_1_sg_x1385,
      clk => clk_1_sg_x1385,
      clr => '0',
      op(0) => relational1_op_net_x0
    );

  relational2: entity work.relational_01718d4f17
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret1_output_port_net_x1,
      ce => ce_1_sg_x1385,
      clk => clk_1_sg_x1385,
      clr => '0',
      op(0) => relational2_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/bus_scale/bussify"

entity bussify_entity_176a84fa1a is
  port (
    in1: in std_logic_vector(19 downto 0); 
    in2: in std_logic_vector(19 downto 0); 
    in3: in std_logic_vector(19 downto 0); 
    in4: in std_logic_vector(19 downto 0); 
    in5: in std_logic_vector(19 downto 0); 
    in6: in std_logic_vector(19 downto 0); 
    in7: in std_logic_vector(19 downto 0); 
    in8: in std_logic_vector(19 downto 0); 
    bus_out: out std_logic_vector(159 downto 0)
  );
end bussify_entity_176a84fa1a;

architecture structural of bussify_entity_176a84fa1a is
  signal concatenate_y_net_x3: std_logic_vector(159 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(19 downto 0);
  signal scale1_op_net_x0: std_logic_vector(19 downto 0);
  signal scale2_op_net_x0: std_logic_vector(19 downto 0);
  signal scale3_op_net_x0: std_logic_vector(19 downto 0);
  signal scale4_op_net_x0: std_logic_vector(19 downto 0);
  signal scale5_op_net_x0: std_logic_vector(19 downto 0);
  signal scale6_op_net_x0: std_logic_vector(19 downto 0);
  signal scale7_op_net_x0: std_logic_vector(19 downto 0);
  signal scale8_op_net_x0: std_logic_vector(19 downto 0);

begin
  scale1_op_net_x0 <= in1;
  scale2_op_net_x0 <= in2;
  scale3_op_net_x0 <= in3;
  scale4_op_net_x0 <= in4;
  scale5_op_net_x0 <= in5;
  scale6_op_net_x0 <= in6;
  scale7_op_net_x0 <= in7;
  scale8_op_net_x0 <= in8;
  bus_out <= concatenate_y_net_x3;

  concatenate: entity work.concat_babbadab38
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      y => concatenate_y_net_x3
    );

  reinterpret1: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale1_op_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale2_op_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale3_op_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale4_op_net_x0,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale5_op_net_x0,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale6_op_net_x0,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale7_op_net_x0,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale8_op_net_x0,
      output_port => reinterpret8_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/bus_scale"

entity bus_scale_entity_fdb0024d57 is
  port (
    din: in std_logic_vector(159 downto 0); 
    dout: out std_logic_vector(159 downto 0)
  );
end bus_scale_entity_fdb0024d57;

architecture structural of bus_scale_entity_fdb0024d57 is
  signal concat_y_net_x3: std_logic_vector(159 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(159 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(19 downto 0);
  signal scale1_op_net_x0: std_logic_vector(19 downto 0);
  signal scale2_op_net_x0: std_logic_vector(19 downto 0);
  signal scale3_op_net_x0: std_logic_vector(19 downto 0);
  signal scale4_op_net_x0: std_logic_vector(19 downto 0);
  signal scale5_op_net_x0: std_logic_vector(19 downto 0);
  signal scale6_op_net_x0: std_logic_vector(19 downto 0);
  signal scale7_op_net_x0: std_logic_vector(19 downto 0);
  signal scale8_op_net_x0: std_logic_vector(19 downto 0);

begin
  concat_y_net_x3 <= din;
  dout <= concatenate_y_net_x4;

  bussify_176a84fa1a: entity work.bussify_entity_176a84fa1a
    port map (
      in1 => scale1_op_net_x0,
      in2 => scale2_op_net_x0,
      in3 => scale3_op_net_x0,
      in4 => scale4_op_net_x0,
      in5 => scale5_op_net_x0,
      in6 => scale6_op_net_x0,
      in7 => scale7_op_net_x0,
      in8 => scale8_op_net_x0,
      bus_out => concatenate_y_net_x4
    );

  debus_84461e735d: entity work.debus_entity_2ff7b66332
    port map (
      bus_in => concat_y_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out8 => reinterpret8_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0,
      out4 => reinterpret4_output_port_net_x0,
      out5 => reinterpret5_output_port_net_x0,
      out6 => reinterpret6_output_port_net_x0,
      out7 => reinterpret7_output_port_net_x0
    );

  scale1: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret8_output_port_net_x0,
      op => scale1_op_net_x0
    );

  scale2: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret7_output_port_net_x0,
      op => scale2_op_net_x0
    );

  scale3: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret6_output_port_net_x0,
      op => scale3_op_net_x0
    );

  scale4: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret5_output_port_net_x0,
      op => scale4_op_net_x0
    );

  scale5: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret4_output_port_net_x0,
      op => scale5_op_net_x0
    );

  scale6: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret3_output_port_net_x0,
      op => scale6_op_net_x0
    );

  scale7: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret2_output_port_net_x0,
      op => scale7_op_net_x0
    );

  scale8: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret1_output_port_net_x0,
      op => scale8_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/bus_sub"

entity bus_sub_entity_c7e911eadf is
  port (
    a: in std_logic_vector(71 downto 0); 
    b: in std_logic_vector(75 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    dout: out std_logic_vector(79 downto 0)
  );
end bus_sub_entity_c7e911eadf;

architecture structural of bus_sub_entity_c7e911eadf is
  signal addsub1_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub2_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub3_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub4_s_net_x0: std_logic_vector(19 downto 0);
  signal ce_1_sg_x1386: std_logic;
  signal clk_1_sg_x1386: std_logic;
  signal concatenate_y_net_x4: std_logic_vector(75 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(79 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(18 downto 0);

begin
  reinterpret1_output_port_net_x5 <= a;
  concatenate_y_net_x4 <= b;
  ce_1_sg_x1386 <= ce_1;
  clk_1_sg_x1386 <= clk_1;
  dout <= concatenate_y_net_x5;

  a_debus_efb0b603ee: entity work.a_debus_entity_659a478c77
    port map (
      bus_in => reinterpret1_output_port_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  addsub1: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret4_output_port_net_x0,
      b => reinterpret4_output_port_net_x1,
      ce => ce_1_sg_x1386,
      clk => clk_1_sg_x1386,
      clr => '0',
      s => addsub1_s_net_x0
    );

  addsub2: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret3_output_port_net_x0,
      b => reinterpret3_output_port_net_x1,
      ce => ce_1_sg_x1386,
      clk => clk_1_sg_x1386,
      clr => '0',
      s => addsub2_s_net_x0
    );

  addsub3: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret2_output_port_net_x0,
      b => reinterpret2_output_port_net_x1,
      ce => ce_1_sg_x1386,
      clk => clk_1_sg_x1386,
      clr => '0',
      s => addsub3_s_net_x0
    );

  addsub4: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret1_output_port_net_x1,
      ce => ce_1_sg_x1386,
      clk => clk_1_sg_x1386,
      clr => '0',
      s => addsub4_s_net_x0
    );

  b_debus_3f510eaab8: entity work.b_debus_entity_287734d8f0
    port map (
      bus_in => concatenate_y_net_x4,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out4 => reinterpret4_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1
    );

  op_bussify_eae9886f7d: entity work.op_bussify_entity_9093d2f161
    port map (
      in1 => addsub1_s_net_x0,
      in2 => addsub2_s_net_x0,
      in3 => addsub3_s_net_x0,
      in4 => addsub4_s_net_x0,
      bus_out => concatenate_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/munge/join"

entity join_entity_90656d5f35 is
  port (
    in1: in std_logic_vector(1 downto 0); 
    in2: in std_logic_vector(1 downto 0); 
    in3: in std_logic_vector(1 downto 0); 
    in4: in std_logic_vector(1 downto 0); 
    bus_out: out std_logic_vector(7 downto 0)
  );
end join_entity_90656d5f35;

architecture structural of join_entity_90656d5f35 is
  signal concatenate_y_net_x0: std_logic_vector(7 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(1 downto 0);

begin
  reinterpret4_output_port_net_x1 <= in1;
  reinterpret2_output_port_net_x1 <= in2;
  reinterpret3_output_port_net_x1 <= in3;
  reinterpret1_output_port_net_x1 <= in4;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_201b1491e8
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret4_output_port_net_x1,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret2_output_port_net_x1,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret3_output_port_net_x1,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret1_output_port_net_x1,
      output_port => reinterpret4_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/munge/split"

entity split_entity_dbab1195c4 is
  port (
    bus_in: in std_logic_vector(7 downto 0); 
    lsb_out1: out std_logic_vector(1 downto 0); 
    msb_out4: out std_logic_vector(1 downto 0); 
    out2: out std_logic_vector(1 downto 0); 
    out3: out std_logic_vector(1 downto 0)
  );
end split_entity_dbab1195c4;

architecture structural of split_entity_dbab1195c4 is
  signal reinterpret1_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret_output_port_net_x0: std_logic_vector(7 downto 0);
  signal slice1_y_net: std_logic_vector(1 downto 0);
  signal slice2_y_net: std_logic_vector(1 downto 0);
  signal slice3_y_net: std_logic_vector(1 downto 0);
  signal slice4_y_net: std_logic_vector(1 downto 0);

begin
  reinterpret_output_port_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x2;
  msb_out4 <= reinterpret4_output_port_net_x2;
  out2 <= reinterpret2_output_port_net_x2;
  out3 <= reinterpret3_output_port_net_x2;

  reinterpret1: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  reinterpret2: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x2
    );

  reinterpret3: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x2
    );

  reinterpret4: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 1,
      x_width => 8,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 3,
      x_width => 8,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 5,
      x_width => 8,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 7,
      x_width => 8,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/munge"

entity munge_entity_55f3dfd2d1 is
  port (
    din: in std_logic_vector(7 downto 0); 
    dout: out std_logic_vector(7 downto 0)
  );
end munge_entity_55f3dfd2d1;

architecture structural of munge_entity_55f3dfd2d1 is
  signal concatenate_y_net_x0: std_logic_vector(7 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(7 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x0: std_logic_vector(7 downto 0);

begin
  concatenate_y_net_x6 <= din;
  dout <= reinterpret_out_output_port_net_x2;

  join_90656d5f35: entity work.join_entity_90656d5f35
    port map (
      in1 => reinterpret4_output_port_net_x2,
      in2 => reinterpret2_output_port_net_x2,
      in3 => reinterpret3_output_port_net_x2,
      in4 => reinterpret1_output_port_net_x2,
      bus_out => concatenate_y_net_x0
    );

  reinterpret: entity work.reinterpret_f21e7f2ddf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concatenate_y_net_x6,
      output_port => reinterpret_output_port_net_x0
    );

  reinterpret_out: entity work.reinterpret_f21e7f2ddf
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concatenate_y_net_x0,
      output_port => reinterpret_out_output_port_net_x2
    );

  split_dbab1195c4: entity work.split_entity_dbab1195c4
    port map (
      bus_in => reinterpret_output_port_net_x0,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out4 => reinterpret4_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/mux/d_bussify"

entity d_bussify_entity_bc42b37e87 is
  port (
    in1: in std_logic_vector(20 downto 0); 
    in2: in std_logic_vector(20 downto 0); 
    in3: in std_logic_vector(20 downto 0); 
    in4: in std_logic_vector(20 downto 0); 
    in5: in std_logic_vector(20 downto 0); 
    in6: in std_logic_vector(20 downto 0); 
    in7: in std_logic_vector(20 downto 0); 
    in8: in std_logic_vector(20 downto 0); 
    bus_out: out std_logic_vector(167 downto 0)
  );
end d_bussify_entity_bc42b37e87;

architecture structural of d_bussify_entity_bc42b37e87 is
  signal concatenate_y_net_x4: std_logic_vector(167 downto 0);
  signal mux0_y_net_x0: std_logic_vector(20 downto 0);
  signal mux1_y_net_x0: std_logic_vector(20 downto 0);
  signal mux2_y_net_x0: std_logic_vector(20 downto 0);
  signal mux3_y_net_x0: std_logic_vector(20 downto 0);
  signal mux4_y_net_x0: std_logic_vector(20 downto 0);
  signal mux5_y_net_x0: std_logic_vector(20 downto 0);
  signal mux6_y_net_x0: std_logic_vector(20 downto 0);
  signal mux7_y_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(20 downto 0);

begin
  mux0_y_net_x0 <= in1;
  mux1_y_net_x0 <= in2;
  mux2_y_net_x0 <= in3;
  mux3_y_net_x0 <= in4;
  mux4_y_net_x0 <= in5;
  mux5_y_net_x0 <= in6;
  mux6_y_net_x0 <= in7;
  mux7_y_net_x0 <= in8;
  bus_out <= concatenate_y_net_x4;

  concatenate: entity work.concat_7cb1306ccc
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      y => concatenate_y_net_x4
    );

  reinterpret1: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux0_y_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux1_y_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux2_y_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux3_y_net_x0,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux4_y_net_x0,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux5_y_net_x0,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux6_y_net_x0,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux7_y_net_x0,
      output_port => reinterpret8_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/mux/expand0"

entity expand0_entity_80e6a837ea is
  port (
    bus_in: in std_logic_vector(167 downto 0); 
    lsb_out1: out std_logic_vector(20 downto 0); 
    msb_out8: out std_logic_vector(20 downto 0); 
    out2: out std_logic_vector(20 downto 0); 
    out3: out std_logic_vector(20 downto 0); 
    out4: out std_logic_vector(20 downto 0); 
    out5: out std_logic_vector(20 downto 0); 
    out6: out std_logic_vector(20 downto 0); 
    out7: out std_logic_vector(20 downto 0)
  );
end expand0_entity_80e6a837ea;

architecture structural of expand0_entity_80e6a837ea is
  signal concatenate_y_net_x2: std_logic_vector(167 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(20 downto 0);
  signal slice1_y_net: std_logic_vector(20 downto 0);
  signal slice2_y_net: std_logic_vector(20 downto 0);
  signal slice3_y_net: std_logic_vector(20 downto 0);
  signal slice4_y_net: std_logic_vector(20 downto 0);
  signal slice5_y_net: std_logic_vector(20 downto 0);
  signal slice6_y_net: std_logic_vector(20 downto 0);
  signal slice7_y_net: std_logic_vector(20 downto 0);
  signal slice8_y_net: std_logic_vector(20 downto 0);

begin
  concatenate_y_net_x2 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out8 <= reinterpret8_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;
  out4 <= reinterpret4_output_port_net_x0;
  out5 <= reinterpret5_output_port_net_x0;
  out6 <= reinterpret6_output_port_net_x0;
  out7 <= reinterpret7_output_port_net_x0;

  reinterpret1: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  reinterpret5: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_y_net,
      output_port => reinterpret5_output_port_net_x0
    );

  reinterpret6: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret6_output_port_net_x0
    );

  reinterpret7: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret7_output_port_net_x0
    );

  reinterpret8: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret8_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 20,
      x_width => 168,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 21,
      new_msb => 41,
      x_width => 168,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 42,
      new_msb => 62,
      x_width => 168,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 63,
      new_msb => 83,
      x_width => 168,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 84,
      new_msb => 104,
      x_width => 168,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 105,
      new_msb => 125,
      x_width => 168,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 126,
      new_msb => 146,
      x_width => 168,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 147,
      new_msb => 167,
      x_width => 168,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice8_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/mux/sel_expand"

entity sel_expand_entity_dc4ed90557 is
  port (
    bus_in: in std_logic_vector(7 downto 0); 
    lsb_out1: out std_logic; 
    msb_out8: out std_logic; 
    out2: out std_logic; 
    out3: out std_logic; 
    out4: out std_logic; 
    out5: out std_logic; 
    out6: out std_logic; 
    out7: out std_logic
  );
end sel_expand_entity_dc4ed90557;

architecture structural of sel_expand_entity_dc4ed90557 is
  signal concatenate_y_net_x0: std_logic_vector(7 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic;
  signal reinterpret2_output_port_net_x0: std_logic;
  signal reinterpret3_output_port_net_x0: std_logic;
  signal reinterpret4_output_port_net_x0: std_logic;
  signal reinterpret5_output_port_net_x0: std_logic;
  signal reinterpret6_output_port_net_x0: std_logic;
  signal reinterpret7_output_port_net_x0: std_logic;
  signal reinterpret8_output_port_net_x0: std_logic;
  signal slice1_y_net: std_logic;
  signal slice2_y_net: std_logic;
  signal slice3_y_net: std_logic;
  signal slice4_y_net: std_logic;
  signal slice5_y_net: std_logic;
  signal slice6_y_net: std_logic;
  signal slice7_y_net: std_logic;
  signal slice8_y_net: std_logic;

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out8 <= reinterpret8_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;
  out4 <= reinterpret4_output_port_net_x0;
  out5 <= reinterpret5_output_port_net_x0;
  out6 <= reinterpret6_output_port_net_x0;
  out7 <= reinterpret7_output_port_net_x0;

  reinterpret1: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice1_y_net,
      output_port(0) => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice2_y_net,
      output_port(0) => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice3_y_net,
      output_port(0) => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice4_y_net,
      output_port(0) => reinterpret4_output_port_net_x0
    );

  reinterpret5: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice5_y_net,
      output_port(0) => reinterpret5_output_port_net_x0
    );

  reinterpret6: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice6_y_net,
      output_port(0) => reinterpret6_output_port_net_x0
    );

  reinterpret7: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice7_y_net,
      output_port(0) => reinterpret7_output_port_net_x0
    );

  reinterpret8: entity work.reinterpret_81130c7f2d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => slice8_y_net,
      output_port(0) => reinterpret8_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 4,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 5,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 6,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 7,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice8_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/mux"

entity mux_entity_6fca129dfb is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d0: in std_logic_vector(167 downto 0); 
    d1: in std_logic_vector(167 downto 0); 
    sel: in std_logic_vector(7 downto 0); 
    out_x0: out std_logic_vector(167 downto 0)
  );
end mux_entity_6fca129dfb;

architecture structural of mux_entity_6fca129dfb is
  signal ce_1_sg_x1387: std_logic;
  signal clk_1_sg_x1387: std_logic;
  signal concatenate_y_net_x6: std_logic_vector(167 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(167 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(7 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(167 downto 0);
  signal mux0_y_net_x0: std_logic_vector(20 downto 0);
  signal mux1_y_net_x0: std_logic_vector(20 downto 0);
  signal mux2_y_net_x0: std_logic_vector(20 downto 0);
  signal mux3_y_net_x0: std_logic_vector(20 downto 0);
  signal mux4_y_net_x0: std_logic_vector(20 downto 0);
  signal mux5_y_net_x0: std_logic_vector(20 downto 0);
  signal mux6_y_net_x0: std_logic_vector(20 downto 0);
  signal mux7_y_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic;
  signal reinterpret2_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic;
  signal reinterpret3_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic;
  signal reinterpret4_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic;
  signal reinterpret5_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret5_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret5_output_port_net_x2: std_logic;
  signal reinterpret6_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret6_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret6_output_port_net_x2: std_logic;
  signal reinterpret7_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret7_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret7_output_port_net_x2: std_logic;
  signal reinterpret8_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret8_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret8_output_port_net_x2: std_logic;

begin
  ce_1_sg_x1387 <= ce_1;
  clk_1_sg_x1387 <= clk_1;
  concatenate_y_net_x6 <= d0;
  concatenate_y_net_x7 <= d1;
  concatenate_y_net_x8 <= sel;
  out_x0 <= concatenate_y_net_x9;

  d_bussify_bc42b37e87: entity work.d_bussify_entity_bc42b37e87
    port map (
      in1 => mux0_y_net_x0,
      in2 => mux1_y_net_x0,
      in3 => mux2_y_net_x0,
      in4 => mux3_y_net_x0,
      in5 => mux4_y_net_x0,
      in6 => mux5_y_net_x0,
      in7 => mux6_y_net_x0,
      in8 => mux7_y_net_x0,
      bus_out => concatenate_y_net_x9
    );

  expand0_80e6a837ea: entity work.expand0_entity_80e6a837ea
    port map (
      bus_in => concatenate_y_net_x6,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out8 => reinterpret8_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0,
      out4 => reinterpret4_output_port_net_x0,
      out5 => reinterpret5_output_port_net_x0,
      out6 => reinterpret6_output_port_net_x0,
      out7 => reinterpret7_output_port_net_x0
    );

  expand1_7c17de33bb: entity work.expand0_entity_80e6a837ea
    port map (
      bus_in => concatenate_y_net_x7,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out8 => reinterpret8_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1,
      out4 => reinterpret4_output_port_net_x1,
      out5 => reinterpret5_output_port_net_x1,
      out6 => reinterpret6_output_port_net_x1,
      out7 => reinterpret7_output_port_net_x1
    );

  mux0: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1387,
      clk => clk_1_sg_x1387,
      clr => '0',
      d0 => reinterpret8_output_port_net_x0,
      d1 => reinterpret8_output_port_net_x1,
      sel(0) => reinterpret8_output_port_net_x2,
      y => mux0_y_net_x0
    );

  mux1: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1387,
      clk => clk_1_sg_x1387,
      clr => '0',
      d0 => reinterpret7_output_port_net_x0,
      d1 => reinterpret7_output_port_net_x1,
      sel(0) => reinterpret7_output_port_net_x2,
      y => mux1_y_net_x0
    );

  mux2: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1387,
      clk => clk_1_sg_x1387,
      clr => '0',
      d0 => reinterpret6_output_port_net_x0,
      d1 => reinterpret6_output_port_net_x1,
      sel(0) => reinterpret6_output_port_net_x2,
      y => mux2_y_net_x0
    );

  mux3: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1387,
      clk => clk_1_sg_x1387,
      clr => '0',
      d0 => reinterpret5_output_port_net_x0,
      d1 => reinterpret5_output_port_net_x1,
      sel(0) => reinterpret5_output_port_net_x2,
      y => mux3_y_net_x0
    );

  mux4: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1387,
      clk => clk_1_sg_x1387,
      clr => '0',
      d0 => reinterpret4_output_port_net_x0,
      d1 => reinterpret4_output_port_net_x1,
      sel(0) => reinterpret4_output_port_net_x2,
      y => mux4_y_net_x0
    );

  mux5: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1387,
      clk => clk_1_sg_x1387,
      clr => '0',
      d0 => reinterpret3_output_port_net_x0,
      d1 => reinterpret3_output_port_net_x1,
      sel(0) => reinterpret3_output_port_net_x2,
      y => mux5_y_net_x0
    );

  mux6: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1387,
      clk => clk_1_sg_x1387,
      clr => '0',
      d0 => reinterpret2_output_port_net_x0,
      d1 => reinterpret2_output_port_net_x1,
      sel(0) => reinterpret2_output_port_net_x2,
      y => mux6_y_net_x0
    );

  mux7: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1387,
      clk => clk_1_sg_x1387,
      clr => '0',
      d0 => reinterpret1_output_port_net_x0,
      d1 => reinterpret1_output_port_net_x1,
      sel(0) => reinterpret1_output_port_net_x2,
      y => mux7_y_net_x0
    );

  sel_expand_dc4ed90557: entity work.sel_expand_entity_dc4ed90557
    port map (
      bus_in => concatenate_y_net_x8,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out8 => reinterpret8_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x2,
      out4 => reinterpret4_output_port_net_x2,
      out5 => reinterpret5_output_port_net_x2,
      out6 => reinterpret6_output_port_net_x2,
      out7 => reinterpret7_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/shift_replicate"

entity shift_replicate_entity_77d18a8753 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic_vector(7 downto 0)
  );
end shift_replicate_entity_77d18a8753;

architecture structural of shift_replicate_entity_77d18a8753 is
  signal ce_1_sg_x1388: std_logic;
  signal clk_1_sg_x1388: std_logic;
  signal concatenate_y_net_x10: std_logic_vector(7 downto 0);
  signal din0_0_q_net_x0: std_logic;
  signal din0_1_q_net_x0: std_logic;
  signal din0_2_q_net_x0: std_logic;
  signal din0_3_q_net_x0: std_logic;
  signal din0_4_q_net_x0: std_logic;
  signal din0_5_q_net_x0: std_logic;
  signal din0_6_q_net_x0: std_logic;
  signal din0_7_q_net_x0: std_logic;
  signal slice2_y_net_x0: std_logic;

begin
  ce_1_sg_x1388 <= ce_1;
  clk_1_sg_x1388 <= clk_1;
  slice2_y_net_x0 <= in_x0;
  out_x0 <= concatenate_y_net_x10;

  bussify_feba657f77: entity work.bussify_entity_cf86712567
    port map (
      in1 => din0_0_q_net_x0,
      in2 => din0_1_q_net_x0,
      in3 => din0_2_q_net_x0,
      in4 => din0_3_q_net_x0,
      in5 => din0_4_q_net_x0,
      in6 => din0_5_q_net_x0,
      in7 => din0_6_q_net_x0,
      in8 => din0_7_q_net_x0,
      bus_out => concatenate_y_net_x10
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1388,
      clk => clk_1_sg_x1388,
      d(0) => slice2_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_0_q_net_x0
    );

  din0_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1388,
      clk => clk_1_sg_x1388,
      d(0) => slice2_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_1_q_net_x0
    );

  din0_2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1388,
      clk => clk_1_sg_x1388,
      d(0) => slice2_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_2_q_net_x0
    );

  din0_3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1388,
      clk => clk_1_sg_x1388,
      d(0) => slice2_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_3_q_net_x0
    );

  din0_4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1388,
      clk => clk_1_sg_x1388,
      d(0) => slice2_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_4_q_net_x0
    );

  din0_5: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1388,
      clk => clk_1_sg_x1388,
      d(0) => slice2_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_5_q_net_x0
    );

  din0_6: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1388,
      clk => clk_1_sg_x1388,
      d(0) => slice2_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_6_q_net_x0
    );

  din0_7: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1388,
      clk => clk_1_sg_x1388,
      d(0) => slice2_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_7_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/twiddle/bus_convert/debus"

entity debus_entity_2291684cf1 is
  port (
    bus_in: in std_logic_vector(147 downto 0); 
    lsb_out1: out std_logic_vector(36 downto 0); 
    msb_out4: out std_logic_vector(36 downto 0); 
    out2: out std_logic_vector(36 downto 0); 
    out3: out std_logic_vector(36 downto 0)
  );
end debus_entity_2291684cf1;

architecture structural of debus_entity_2291684cf1 is
  signal concatenate_y_net_x0: std_logic_vector(147 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(36 downto 0);
  signal slice1_y_net: std_logic_vector(36 downto 0);
  signal slice2_y_net: std_logic_vector(36 downto 0);
  signal slice3_y_net: std_logic_vector(36 downto 0);
  signal slice4_y_net: std_logic_vector(36 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x1;
  msb_out4 <= reinterpret4_output_port_net_x1;
  out2 <= reinterpret2_output_port_net_x1;
  out3 <= reinterpret3_output_port_net_x1;

  reinterpret1: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x1
    );

  reinterpret2: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x1
    );

  reinterpret3: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x1
    );

  reinterpret4: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 36,
      x_width => 148,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 37,
      new_msb => 73,
      x_width => 148,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 74,
      new_msb => 110,
      x_width => 148,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 111,
      new_msb => 147,
      x_width => 148,
      y_width => 37
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/twiddle/bus_convert"

entity bus_convert_entity_1a93cb7750 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(147 downto 0); 
    misci: in std_logic_vector(72 downto 0); 
    dout: out std_logic_vector(75 downto 0); 
    misco: out std_logic_vector(72 downto 0)
  );
end bus_convert_entity_1a93cb7750;

architecture structural of bus_convert_entity_1a93cb7750 is
  signal adder_s_net_x4: std_logic_vector(18 downto 0);
  signal adder_s_net_x5: std_logic_vector(18 downto 0);
  signal adder_s_net_x6: std_logic_vector(18 downto 0);
  signal adder_s_net_x7: std_logic_vector(18 downto 0);
  signal ce_1_sg_x1393: std_logic;
  signal clk_1_sg_x1393: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(147 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(75 downto 0);
  signal dmisc_q_net_x1: std_logic_vector(72 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(72 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(36 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(36 downto 0);

begin
  ce_1_sg_x1393 <= ce_1;
  clk_1_sg_x1393 <= clk_1;
  concatenate_y_net_x1 <= din;
  dmisc_q_net_x1 <= misci;
  dout <= concatenate_y_net_x6;
  misco <= dmisc_q_net_x2;

  bussify_4068e91778: entity work.op_bussify_entity_920272f09d
    port map (
      in1 => adder_s_net_x4,
      in2 => adder_s_net_x5,
      in3 => adder_s_net_x6,
      in4 => adder_s_net_x7,
      bus_out => concatenate_y_net_x6
    );

  conv1_19c26ba7e0: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x1393,
      clk_1 => clk_1_sg_x1393,
      in_x0 => reinterpret4_output_port_net_x1,
      out_x0 => adder_s_net_x4
    );

  conv2_24d6db0486: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x1393,
      clk_1 => clk_1_sg_x1393,
      in_x0 => reinterpret3_output_port_net_x1,
      out_x0 => adder_s_net_x5
    );

  conv3_6f9884a1d1: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x1393,
      clk_1 => clk_1_sg_x1393,
      in_x0 => reinterpret2_output_port_net_x1,
      out_x0 => adder_s_net_x6
    );

  conv4_12cbbf96b5: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x1393,
      clk_1 => clk_1_sg_x1393,
      in_x0 => reinterpret1_output_port_net_x1,
      out_x0 => adder_s_net_x7
    );

  debus_2291684cf1: entity work.debus_entity_2291684cf1
    port map (
      bus_in => concatenate_y_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out4 => reinterpret4_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1
    );

  dmisc: entity work.delay_4e7d828d94
    port map (
      ce => ce_1_sg_x1393,
      clk => clk_1_sg_x1393,
      clr => '0',
      d => dmisc_q_net_x1,
      q => dmisc_q_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/twiddle/bus_create"

entity bus_create_entity_5d547276ee is
  port (
    in1: in std_logic_vector(71 downto 0); 
    in2: in std_logic; 
    in3: in std_logic_vector(71 downto 0); 
    bus_out: out std_logic_vector(144 downto 0)
  );
end bus_create_entity_5d547276ee;

architecture structural of bus_create_entity_5d547276ee is
  signal concatenate_y_net_x0: std_logic_vector(144 downto 0);
  signal delay0_q_net_x1: std_logic;
  signal reinterpret1_output_port_net: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net: std_logic;
  signal reinterpret2_output_port_net_x3: std_logic_vector(71 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(71 downto 0);

begin
  reinterpret1_output_port_net_x1 <= in1;
  delay0_q_net_x1 <= in2;
  reinterpret2_output_port_net_x3 <= in3;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_b15c89b6cc
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1(0) => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_8b4279cdc5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret1_output_port_net_x1,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => delay0_q_net_x1,
      output_port(0) => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_8b4279cdc5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret2_output_port_net_x3,
      output_port => reinterpret3_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/twiddle/bus_expand"

entity bus_expand_entity_645ad419b1 is
  port (
    bus_in: in std_logic_vector(144 downto 0); 
    lsb_out1: out std_logic_vector(72 downto 0); 
    msb_out2: out std_logic_vector(71 downto 0)
  );
end bus_expand_entity_645ad419b1;

architecture structural of bus_expand_entity_645ad419b1 is
  signal delay1_q_net_x0: std_logic_vector(144 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(72 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(71 downto 0);
  signal slice1_y_net: std_logic_vector(72 downto 0);
  signal slice2_y_net: std_logic_vector(71 downto 0);

begin
  delay1_q_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out2 <= reinterpret2_output_port_net_x0;

  reinterpret1: entity work.reinterpret_3a91fc640e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_8b4279cdc5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 72,
      x_width => 145,
      y_width => 73
    )
    port map (
      x => delay1_q_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 73,
      new_msb => 144,
      x_width => 145,
      y_width => 72
    )
    port map (
      x => delay1_q_net_x0,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/twiddle/bus_expand1"

entity bus_expand1_entity_2400a3442f is
  port (
    bus_in: in std_logic_vector(72 downto 0); 
    lsb_out1: out std_logic_vector(71 downto 0); 
    msb_out2: out std_logic
  );
end bus_expand1_entity_2400a3442f;

architecture structural of bus_expand1_entity_2400a3442f is
  signal dmisc_q_net_x3: std_logic_vector(72 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic_vector(71 downto 0);
  signal slice1_y_net: std_logic_vector(71 downto 0);
  signal slice2_y_net_x0: std_logic;

begin
  dmisc_q_net_x3 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x6;
  msb_out2 <= slice2_y_net_x0;

  reinterpret1: entity work.reinterpret_8b4279cdc5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x6
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 71,
      x_width => 73,
      y_width => 72
    )
    port map (
      x => dmisc_q_net_x3,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 72,
      new_msb => 72,
      x_width => 73,
      y_width => 1
    )
    port map (
      x => dmisc_q_net_x3,
      y(0) => slice2_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/twiddle/bus_mult/a*b_bussify"

entity a_b_bussify_entity_65a4d0c967 is
  port (
    in1: in std_logic_vector(73 downto 0); 
    in2: in std_logic_vector(73 downto 0); 
    bus_out: out std_logic_vector(147 downto 0)
  );
end a_b_bussify_entity_65a4d0c967;

architecture structural of a_b_bussify_entity_65a4d0c967 is
  signal concat_y_net_x1: std_logic_vector(73 downto 0);
  signal concat_y_net_x2: std_logic_vector(73 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(147 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(73 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(73 downto 0);

begin
  concat_y_net_x1 <= in1;
  concat_y_net_x2 <= in2;
  bus_out <= concatenate_y_net_x2;

  concatenate: entity work.concat_1cac477702
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concatenate_y_net_x2
    );

  reinterpret1: entity work.reinterpret_efdf1c3890
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net_x1,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_efdf1c3890
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net_x2,
      output_port => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/twiddle/bus_mult/repa"

entity repa_entity_5dd76fbfa5 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(35 downto 0); 
    out_x0: out std_logic_vector(35 downto 0)
  );
end repa_entity_5dd76fbfa5;

architecture structural of repa_entity_5dd76fbfa5 is
  signal ce_1_sg_x1400: std_logic;
  signal clk_1_sg_x1400: std_logic;
  signal concat_y_net_x0: std_logic_vector(35 downto 0);
  signal din0_0_q_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x1400 <= ce_1;
  clk_1_sg_x1400 <= clk_1;
  concat_y_net_x0 <= in_x0;
  out_x0 <= reinterpret1_output_port_net_x3;

  bussify_3399122574: entity work.bussify_entity_8f36b365fb
    port map (
      in1 => din0_0_q_net_x0,
      bus_out => reinterpret1_output_port_net_x3
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 36
    )
    port map (
      ce => ce_1_sg_x1400,
      clk => clk_1_sg_x1400,
      d => concat_y_net_x0,
      en => '1',
      rst => '1',
      q => din0_0_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/twiddle/bus_mult/repb/bussify"

entity bussify_entity_e5d8090f4c is
  port (
    in1: in std_logic_vector(71 downto 0); 
    bus_out: out std_logic_vector(71 downto 0)
  );
end bussify_entity_e5d8090f4c;

architecture structural of bussify_entity_e5d8090f4c is
  signal din0_0_q_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(71 downto 0);

begin
  din0_0_q_net_x0 <= in1;
  bus_out <= reinterpret1_output_port_net_x2;

  reinterpret1: entity work.reinterpret_8b4279cdc5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din0_0_q_net_x0,
      output_port => reinterpret1_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/twiddle/bus_mult/repb"

entity repb_entity_2893651756 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(71 downto 0); 
    out_x0: out std_logic_vector(71 downto 0)
  );
end repb_entity_2893651756;

architecture structural of repb_entity_2893651756 is
  signal ce_1_sg_x1401: std_logic;
  signal clk_1_sg_x1401: std_logic;
  signal din0_0_q_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(71 downto 0);

begin
  ce_1_sg_x1401 <= ce_1;
  clk_1_sg_x1401 <= clk_1;
  reinterpret2_output_port_net_x1 <= in_x0;
  out_x0 <= reinterpret1_output_port_net_x3;

  bussify_e5d8090f4c: entity work.bussify_entity_e5d8090f4c
    port map (
      in1 => din0_0_q_net_x0,
      bus_out => reinterpret1_output_port_net_x3
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 72
    )
    port map (
      ce => ce_1_sg_x1401,
      clk => clk_1_sg_x1401,
      d => reinterpret2_output_port_net_x1,
      en => '1',
      rst => '1',
      q => din0_0_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/twiddle/bus_mult"

entity bus_mult_entity_6dcf8aa288 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(71 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    a_b: out std_logic_vector(147 downto 0); 
    misco: out std_logic_vector(72 downto 0)
  );
end bus_mult_entity_6dcf8aa288;

architecture structural of bus_mult_entity_6dcf8aa288 is
  signal ce_1_sg_x1402: std_logic;
  signal clk_1_sg_x1402: std_logic;
  signal concat_y_net_x3: std_logic_vector(73 downto 0);
  signal concat_y_net_x4: std_logic_vector(73 downto 0);
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(147 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(72 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x8: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(72 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(35 downto 0);

begin
  concat_y_net_x5 <= a;
  reinterpret2_output_port_net_x2 <= b;
  ce_1_sg_x1402 <= ce_1;
  clk_1_sg_x1402 <= clk_1;
  reinterpret1_output_port_net_x9 <= misci;
  a_b <= concatenate_y_net_x3;
  misco <= dmisc_q_net_x2;

  a_b_bussify_65a4d0c967: entity work.a_b_bussify_entity_65a4d0c967
    port map (
      in1 => concat_y_net_x3,
      in2 => concat_y_net_x4,
      bus_out => concatenate_y_net_x3
    );

  a_debus_05e52f212c: entity work.a_debus_entity_43e449aa4c
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      msb_lsb_out1 => reinterpret1_output_port_net_x7
    );

  b_debus_df085663c2: entity work.adebus2_0_entity_24ecc6e9de
    port map (
      bus_in => reinterpret1_output_port_net_x4,
      lsb_out1 => reinterpret1_output_port_net_x8,
      msb_out2 => reinterpret2_output_port_net_x3
    );

  dmisc: entity work.delay_ecf456c907
    port map (
      ce => ce_1_sg_x1402,
      clk => clk_1_sg_x1402,
      clr => '0',
      d => reinterpret1_output_port_net_x9,
      q => dmisc_q_net_x2
    );

  mult1_c2907b5b1d: entity work.mult1_entity_675dd78166
    port map (
      a => reinterpret1_output_port_net_x7,
      b => reinterpret2_output_port_net_x3,
      ce_1 => ce_1_sg_x1402,
      clk_1 => clk_1_sg_x1402,
      ab => concat_y_net_x3
    );

  mult2_7fa592a381: entity work.mult1_entity_675dd78166
    port map (
      a => reinterpret1_output_port_net_x7,
      b => reinterpret1_output_port_net_x8,
      ce_1 => ce_1_sg_x1402,
      clk_1 => clk_1_sg_x1402,
      ab => concat_y_net_x4
    );

  repa_5dd76fbfa5: entity work.repa_entity_5dd76fbfa5
    port map (
      ce_1 => ce_1_sg_x1402,
      clk_1 => clk_1_sg_x1402,
      in_x0 => concat_y_net_x5,
      out_x0 => reinterpret1_output_port_net_x3
    );

  repb_2893651756: entity work.repb_entity_2893651756
    port map (
      ce_1 => ce_1_sg_x1402,
      clk_1 => clk_1_sg_x1402,
      in_x0 => reinterpret2_output_port_net_x2,
      out_x0 => reinterpret1_output_port_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/twiddle/coeff_gen/cosin/add_convert0"

entity add_convert0_entity_2c86b88a0d is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    theta: in std_logic_vector(9 downto 0); 
    add: out std_logic_vector(9 downto 0); 
    negate: out std_logic
  );
end add_convert0_entity_2c86b88a0d;

architecture structural of add_convert0_entity_2c86b88a0d is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x0: std_logic_vector(9 downto 0);
  signal ce_1_sg_x1403: std_logic;
  signal clk_1_sg_x1403: std_logic;
  signal concat_y_net: std_logic_vector(12 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(9 downto 0);
  signal delay13_q_net: std_logic_vector(9 downto 0);
  signal delay14_q_net: std_logic_vector(9 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(12 downto 0);
  signal invert_y_net: std_logic;
  signal lookup_y_net: std_logic_vector(10 downto 0);
  signal new_add_y_net: std_logic_vector(9 downto 0);
  signal pad_op_net: std_logic_vector(2 downto 0);
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x1403 <= ce_1;
  clk_1_sg_x1403 <= clk_1;
  assert_dout_net_x0 <= theta;
  add <= convert2_dout_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x1403,
      clk => clk_1_sg_x1403,
      clr => '0',
      en => "1",
      s => addsub5_s_net
    );

  concat: entity work.concat_8503582fb5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => addsub5_s_net,
      in1 => lookup_y_net,
      y => concat_y_net
    );

  convert2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 10,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 10,
      latency => 3,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1403,
      clk => clk_1_sg_x1403,
      clr => '0',
      din => delay13_q_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  delay13: entity work.delay_325391d82e
    port map (
      ce => ce_1_sg_x1403,
      clk => clk_1_sg_x1403,
      clr => '0',
      d => delay14_q_net,
      q => delay13_q_net
    );

  delay14: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1403,
      clk => clk_1_sg_x1403,
      d => new_add_y_net,
      en => '1',
      rst => '1',
      q => delay14_q_net
    );

  delay2: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x1403,
      clk => clk_1_sg_x1403,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_f2e37e721e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => pad_op_net,
      in1 => assert_dout_net_x0,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  lookup: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 10,
      x_width => 13,
      y_width => 11
    )
    port map (
      x => fluff_y_net,
      y => lookup_y_net
    );

  new_add: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 13,
      y_width => 10
    )
    port map (
      x => concat_y_net,
      y => new_add_y_net
    );

  pad: entity work.constant_822933f89b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 11,
      new_msb => 12,
      x_width => 13,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/twiddle/coeff_gen/cosin/add_convert1"

entity add_convert1_entity_89a72d4bba is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(144 downto 0); 
    theta: in std_logic_vector(9 downto 0); 
    misco: out std_logic_vector(144 downto 0); 
    negate: out std_logic
  );
end add_convert1_entity_89a72d4bba;

architecture structural of add_convert1_entity_89a72d4bba is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x1: std_logic_vector(9 downto 0);
  signal ce_1_sg_x1404: std_logic;
  signal clk_1_sg_x1404: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(144 downto 0);
  signal delay1_q_net_x0: std_logic_vector(144 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(12 downto 0);
  signal invert_y_net: std_logic;
  signal pad_op_net: std_logic_vector(2 downto 0);
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x1404 <= ce_1;
  clk_1_sg_x1404 <= clk_1;
  concatenate_y_net_x1 <= misci;
  assert_dout_net_x1 <= theta;
  misco <= delay1_q_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x1404,
      clk => clk_1_sg_x1404,
      clr => '0',
      en => "1",
      s => addsub5_s_net
    );

  delay1: entity work.delay_1fbe6c9ff9
    port map (
      ce => ce_1_sg_x1404,
      clk => clk_1_sg_x1404,
      clr => '0',
      d => concatenate_y_net_x1,
      q => delay1_q_net_x0
    );

  delay2: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x1404,
      clk => clk_1_sg_x1404,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_f2e37e721e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => pad_op_net,
      in1 => assert_dout_net_x1,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  pad: entity work.constant_822933f89b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 11,
      new_msb => 12,
      x_width => 13,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/twiddle/coeff_gen/cosin/invert1"

entity invert1_entity_28048e1b9d is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(17 downto 0); 
    misci: in std_logic_vector(144 downto 0); 
    negate_x0: in std_logic; 
    misco: out std_logic_vector(144 downto 0); 
    out_x0: out std_logic_vector(17 downto 0)
  );
end invert1_entity_28048e1b9d;

architecture structural of invert1_entity_28048e1b9d is
  signal ce_1_sg_x1406: std_logic;
  signal clk_1_sg_x1406: std_logic;
  signal delay1_q_net_x1: std_logic_vector(144 downto 0);
  signal delay20_q_net: std_logic_vector(17 downto 0);
  signal delay21_q_net: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(144 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x0: std_logic_vector(17 downto 0);
  signal negate_op_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x1406 <= ce_1;
  clk_1_sg_x1406 <= clk_1;
  force_im_output_port_net_x1 <= in_x0;
  delay_q_net_x0 <= misci;
  delay8_q_net_x0 <= negate_x0;
  misco <= delay1_q_net_x1;
  out_x0 <= mux_y_net_x0;

  delay1: entity work.delay_1fbe6c9ff9
    port map (
      ce => ce_1_sg_x1406,
      clk => clk_1_sg_x1406,
      clr => '0',
      d => delay_q_net_x0,
      q => delay1_q_net_x1
    );

  delay20: entity work.delay_2f744cdafb
    port map (
      ce => ce_1_sg_x1406,
      clk => clk_1_sg_x1406,
      clr => '0',
      d => force_im_output_port_net_x1,
      q => delay20_q_net
    );

  delay21: entity work.delay_c53de546ea
    port map (
      ce => ce_1_sg_x1406,
      clk => clk_1_sg_x1406,
      clr => '0',
      d(0) => delay8_q_net_x0,
      q(0) => delay21_q_net
    );

  mux: entity work.mux_1896e7760c
    port map (
      ce => ce_1_sg_x1406,
      clk => clk_1_sg_x1406,
      clr => '0',
      d0 => delay20_q_net,
      d1 => negate_op_net,
      sel(0) => delay21_q_net,
      y => mux_y_net_x0
    );

  negate: entity work.negate_894f23b88c
    port map (
      ce => ce_1_sg_x1406,
      clk => clk_1_sg_x1406,
      clr => '0',
      ip => force_im_output_port_net_x1,
      op => negate_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/twiddle/coeff_gen/cosin"

entity cosin_entity_c126b6685e is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(144 downto 0); 
    theta: in std_logic_vector(9 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(144 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_c126b6685e;

architecture structural of cosin_entity_c126b6685e is
  signal assert_dout_net_x1: std_logic_vector(9 downto 0);
  signal ce_1_sg_x1407: std_logic;
  signal clk_1_sg_x1407: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(144 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(9 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(144 downto 0);
  signal delay1_q_net_x2: std_logic_vector(144 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(144 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1407 <= ce_1;
  clk_1_sg_x1407 <= clk_1;
  concatenate_y_net_x2 <= misci;
  slice_y_net_x0 <= theta;
  cos <= mux_y_net_x2;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x3;

  add_convert0_2c86b88a0d: entity work.add_convert0_entity_2c86b88a0d
    port map (
      ce_1 => ce_1_sg_x1407,
      clk_1 => clk_1_sg_x1407,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_89a72d4bba: entity work.add_convert1_entity_89a72d4bba
    port map (
      ce_1 => ce_1_sg_x1407,
      clk_1 => clk_1_sg_x1407,
      misci => concatenate_y_net_x2,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 10,
      dout_width => 10
    )
    port map (
      din => slice_y_net_x0,
      dout => assert_dout_net_x1
    );

  c_to_ri_d6eab0b155: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_c52fce8d02
    port map (
      ce => ce_1_sg_x1407,
      clk => clk_1_sg_x1407,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1407,
      clk => clk_1_sg_x1407,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1407,
      clk => clk_1_sg_x1407,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_89c2a93a79: entity work.invert0_entity_0a6af8c8da
    port map (
      ce_1 => ce_1_sg_x1407,
      clk_1 => clk_1_sg_x1407,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_28048e1b9d: entity work.invert1_entity_28048e1b9d
    port map (
      ce_1 => ce_1_sg_x1407,
      clk_1 => clk_1_sg_x1407,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 36,
      core_name0 => "bmg_72_63cea93ccf129673",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x1407,
      clk => clk_1_sg_x1407,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/twiddle/coeff_gen"

entity coeff_gen_entity_26a706801c is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(144 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(144 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_26a706801c;

architecture structural of coeff_gen_entity_26a706801c is
  signal ce_1_sg_x1408: std_logic;
  signal clk_1_sg_x1408: std_logic;
  signal concat_y_net_x7: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(144 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay0_q_net_x2: std_logic;
  signal delay1_q_net_x3: std_logic_vector(144 downto 0);
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1408 <= ce_1;
  clk_1_sg_x1408 <= clk_1;
  concatenate_y_net_x3 <= misci;
  delay0_q_net_x2 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x7;

  cosin_c126b6685e: entity work.cosin_entity_c126b6685e
    port map (
      ce_1 => ce_1_sg_x1408,
      clk_1 => clk_1_sg_x1408,
      misci => concatenate_y_net_x3,
      theta => slice_y_net_x0,
      cos => mux_y_net_x4,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x5
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x1408,
      clk => clk_1_sg_x1408,
      clr => '0',
      rst(0) => delay0_q_net_x2,
      op => counter_op_net
    );

  ri_to_c_8f09e9f30e: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x7
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 10,
      y_width => 10
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0/twiddle"

entity twiddle_entity_2680346fa5 is
  port (
    ai: in std_logic_vector(71 downto 0); 
    bi: in std_logic_vector(71 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(71 downto 0); 
    bwo: out std_logic_vector(75 downto 0); 
    sync_out: out std_logic
  );
end twiddle_entity_2680346fa5;

architecture structural of twiddle_entity_2680346fa5 is
  signal ce_1_sg_x1409: std_logic;
  signal clk_1_sg_x1409: std_logic;
  signal concat_y_net_x7: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(144 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(147 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(75 downto 0);
  signal delay0_q_net_x3: std_logic;
  signal delay1_q_net_x3: std_logic_vector(144 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(72 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(72 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(72 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(71 downto 0);
  signal slice2_y_net_x1: std_logic;

begin
  reinterpret2_output_port_net_x4 <= ai;
  reinterpret1_output_port_net_x2 <= bi;
  ce_1_sg_x1409 <= ce_1;
  clk_1_sg_x1409 <= clk_1;
  delay0_q_net_x3 <= sync_in;
  ao <= reinterpret1_output_port_net_x10;
  bwo <= concatenate_y_net_x8;
  sync_out <= slice2_y_net_x1;

  bus_convert_1a93cb7750: entity work.bus_convert_entity_1a93cb7750
    port map (
      ce_1 => ce_1_sg_x1409,
      clk_1 => clk_1_sg_x1409,
      din => concatenate_y_net_x7,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x8,
      misco => dmisc_q_net_x3
    );

  bus_create_5d547276ee: entity work.bus_create_entity_5d547276ee
    port map (
      in1 => reinterpret1_output_port_net_x2,
      in2 => delay0_q_net_x3,
      in3 => reinterpret2_output_port_net_x4,
      bus_out => concatenate_y_net_x3
    );

  bus_expand1_2400a3442f: entity work.bus_expand1_entity_2400a3442f
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x10,
      msb_out2 => slice2_y_net_x1
    );

  bus_expand_645ad419b1: entity work.bus_expand_entity_645ad419b1
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x9,
      msb_out2 => reinterpret2_output_port_net_x2
    );

  bus_mult_6dcf8aa288: entity work.bus_mult_entity_6dcf8aa288
    port map (
      a => concat_y_net_x7,
      b => reinterpret2_output_port_net_x2,
      ce_1 => ce_1_sg_x1409,
      clk_1 => clk_1_sg_x1409,
      misci => reinterpret1_output_port_net_x9,
      a_b => concatenate_y_net_x7,
      misco => dmisc_q_net_x2
    );

  coeff_gen_26a706801c: entity work.coeff_gen_entity_26a706801c
    port map (
      ce_1 => ce_1_sg_x1409,
      clk_1 => clk_1_sg_x1409,
      misci => concatenate_y_net_x3,
      rst => delay0_q_net_x3,
      misco => delay1_q_net_x3,
      w => concat_y_net_x7
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_0"

entity butterfly2_0_entity_5a3cb56ff3 is
  port (
    a: in std_logic_vector(71 downto 0); 
    b: in std_logic_vector(71 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(71 downto 0); 
    a_bw_x0: out std_logic_vector(71 downto 0); 
    of_x0: out std_logic_vector(1 downto 0); 
    sync_out: out std_logic
  );
end butterfly2_0_entity_5a3cb56ff3;

architecture structural of butterfly2_0_entity_5a3cb56ff3 is
  signal ce_1_sg_x1410: std_logic;
  signal clk_1_sg_x1410: std_logic;
  signal concat_y_net_x3: std_logic_vector(159 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(167 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(7 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(75 downto 0);
  signal concatenate_y_net_x13: std_logic_vector(1 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(159 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(7 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(167 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(167 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(79 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal delay0_q_net_x4: std_logic;
  signal reinterpret1_output_port_net_x10: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x5: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x6: std_logic_vector(71 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(7 downto 0);
  signal slice2_y_net_x1: std_logic;
  signal slice2_y_net_x2: std_logic;

begin
  reinterpret2_output_port_net_x5 <= a;
  reinterpret1_output_port_net_x4 <= b;
  ce_1_sg_x1410 <= ce_1;
  clk_1_sg_x1410 <= clk_1;
  slice2_y_net_x2 <= shift;
  delay0_q_net_x4 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x11;
  a_bw_x0 <= reinterpret2_output_port_net_x6;
  of_x0 <= concatenate_y_net_x13;
  sync_out <= delay0_q_net_x0;

  bus_add_c12684f296: entity work.bus_add_entity_c12684f296
    port map (
      a => reinterpret1_output_port_net_x10,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1410,
      clk_1 => clk_1_sg_x1410,
      dout => concatenate_y_net_x3
    );

  bus_convert_8adb3719d7: entity work.bus_convert_entity_8adb3719d7
    port map (
      ce_1 => ce_1_sg_x1410,
      clk_1 => clk_1_sg_x1410,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_c935f8ebd7: entity work.bus_expand_a_entity_1605f56624
    port map (
      bus_in => concatenate_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x11,
      msb_out2 => reinterpret2_output_port_net_x6
    );

  bus_norm0_cd1216a1cc: entity work.bus_norm0_entity_cd1216a1cc
    port map (
      ce_1 => ce_1_sg_x1410,
      clk_1 => clk_1_sg_x1410,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_a4c51fbd17: entity work.bus_norm1_entity_a4c51fbd17
    port map (
      ce_1 => ce_1_sg_x1410,
      clk_1 => clk_1_sg_x1410,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_8ce6836c18: entity work.bus_relational_entity_8ce6836c18
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      ce_1 => ce_1_sg_x1410,
      clk_1 => clk_1_sg_x1410,
      a_b => concatenate_y_net_x13
    );

  bus_scale_fdb0024d57: entity work.bus_scale_entity_fdb0024d57
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_c7e911eadf: entity work.bus_sub_entity_c7e911eadf
    port map (
      a => reinterpret1_output_port_net_x10,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1410,
      clk_1 => clk_1_sg_x1410,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_1ea5b7e23c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x1410,
      clk => clk_1_sg_x1410,
      clr => '0',
      d(0) => slice2_y_net_x1,
      q(0) => delay0_q_net_x0
    );

  munge_55f3dfd2d1: entity work.munge_entity_55f3dfd2d1
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_6fca129dfb: entity work.mux_entity_6fca129dfb
    port map (
      ce_1 => ce_1_sg_x1410,
      clk_1 => clk_1_sg_x1410,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_77d18a8753: entity work.shift_replicate_entity_77d18a8753
    port map (
      ce_1 => ce_1_sg_x1410,
      clk_1 => clk_1_sg_x1410,
      in_x0 => slice2_y_net_x2,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_2680346fa5: entity work.twiddle_entity_2680346fa5
    port map (
      ai => reinterpret2_output_port_net_x5,
      bi => reinterpret1_output_port_net_x4,
      ce_1 => ce_1_sg_x1410,
      clk_1 => clk_1_sg_x1410,
      sync_in => delay0_q_net_x4,
      ao => reinterpret1_output_port_net_x10,
      bwo => concatenate_y_net_x12,
      sync_out => slice2_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_1/twiddle/coeff_gen/cosin"

entity cosin_entity_a03cb42322 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(144 downto 0); 
    theta: in std_logic_vector(9 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(144 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_a03cb42322;

architecture structural of cosin_entity_a03cb42322 is
  signal assert_dout_net_x1: std_logic_vector(9 downto 0);
  signal ce_1_sg_x1461: std_logic;
  signal clk_1_sg_x1461: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(144 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(9 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(144 downto 0);
  signal delay1_q_net_x2: std_logic_vector(144 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(144 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1461 <= ce_1;
  clk_1_sg_x1461 <= clk_1;
  concatenate_y_net_x2 <= misci;
  slice_y_net_x0 <= theta;
  cos <= mux_y_net_x3;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x2;

  add_convert0_764e842aa4: entity work.add_convert0_entity_2c86b88a0d
    port map (
      ce_1 => ce_1_sg_x1461,
      clk_1 => clk_1_sg_x1461,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_c1474703c9: entity work.add_convert1_entity_89a72d4bba
    port map (
      ce_1 => ce_1_sg_x1461,
      clk_1 => clk_1_sg_x1461,
      misci => concatenate_y_net_x2,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 10,
      dout_width => 10
    )
    port map (
      din => slice_y_net_x0,
      dout => assert_dout_net_x1
    );

  c_to_ri_0563552608: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_c52fce8d02
    port map (
      ce => ce_1_sg_x1461,
      clk => clk_1_sg_x1461,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1461,
      clk => clk_1_sg_x1461,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1461,
      clk => clk_1_sg_x1461,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_3b2652b19b: entity work.invert0_entity_0a6af8c8da
    port map (
      ce_1 => ce_1_sg_x1461,
      clk_1 => clk_1_sg_x1461,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_e3a96a338f: entity work.invert1_entity_28048e1b9d
    port map (
      ce_1 => ce_1_sg_x1461,
      clk_1 => clk_1_sg_x1461,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 36,
      core_name0 => "bmg_72_efe230359262404f",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x1461,
      clk => clk_1_sg_x1461,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_1/twiddle/coeff_gen"

entity coeff_gen_entity_8e787afe06 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(144 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(144 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_8e787afe06;

architecture structural of coeff_gen_entity_8e787afe06 is
  signal ce_1_sg_x1462: std_logic;
  signal clk_1_sg_x1462: std_logic;
  signal concat_y_net_x7: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(144 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay0_q_net_x6: std_logic;
  signal delay1_q_net_x3: std_logic_vector(144 downto 0);
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1462 <= ce_1;
  clk_1_sg_x1462 <= clk_1;
  concatenate_y_net_x3 <= misci;
  delay0_q_net_x6 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x7;

  cosin_a03cb42322: entity work.cosin_entity_a03cb42322
    port map (
      ce_1 => ce_1_sg_x1462,
      clk_1 => clk_1_sg_x1462,
      misci => concatenate_y_net_x3,
      theta => slice_y_net_x0,
      cos => mux_y_net_x5,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x4
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x1462,
      clk => clk_1_sg_x1462,
      clr => '0',
      rst(0) => delay0_q_net_x6,
      op => counter_op_net
    );

  ri_to_c_9a94af76bd: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x7
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 10,
      y_width => 10
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_1/twiddle"

entity twiddle_entity_9babb7204e is
  port (
    ai: in std_logic_vector(71 downto 0); 
    bi: in std_logic_vector(71 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(71 downto 0); 
    bwo: out std_logic_vector(75 downto 0); 
    sync_out: out std_logic
  );
end twiddle_entity_9babb7204e;

architecture structural of twiddle_entity_9babb7204e is
  signal ce_1_sg_x1463: std_logic;
  signal clk_1_sg_x1463: std_logic;
  signal concat_y_net_x7: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(144 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(147 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(75 downto 0);
  signal delay0_q_net_x7: std_logic;
  signal delay1_q_net_x3: std_logic_vector(144 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(72 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(72 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(72 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(71 downto 0);
  signal slice2_y_net_x1: std_logic;

begin
  reinterpret2_output_port_net_x3 <= ai;
  reinterpret1_output_port_net_x7 <= bi;
  ce_1_sg_x1463 <= ce_1;
  clk_1_sg_x1463 <= clk_1;
  delay0_q_net_x7 <= sync_in;
  ao <= reinterpret1_output_port_net_x10;
  bwo <= concatenate_y_net_x8;
  sync_out <= slice2_y_net_x1;

  bus_convert_0429bfa632: entity work.bus_convert_entity_1a93cb7750
    port map (
      ce_1 => ce_1_sg_x1463,
      clk_1 => clk_1_sg_x1463,
      din => concatenate_y_net_x7,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x8,
      misco => dmisc_q_net_x3
    );

  bus_create_88c9438c80: entity work.bus_create_entity_5d547276ee
    port map (
      in1 => reinterpret1_output_port_net_x7,
      in2 => delay0_q_net_x7,
      in3 => reinterpret2_output_port_net_x3,
      bus_out => concatenate_y_net_x3
    );

  bus_expand1_8a937d6a7f: entity work.bus_expand1_entity_2400a3442f
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x10,
      msb_out2 => slice2_y_net_x1
    );

  bus_expand_1ee1e322b0: entity work.bus_expand_entity_645ad419b1
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x9,
      msb_out2 => reinterpret2_output_port_net_x2
    );

  bus_mult_84c3ea56e2: entity work.bus_mult_entity_6dcf8aa288
    port map (
      a => concat_y_net_x7,
      b => reinterpret2_output_port_net_x2,
      ce_1 => ce_1_sg_x1463,
      clk_1 => clk_1_sg_x1463,
      misci => reinterpret1_output_port_net_x9,
      a_b => concatenate_y_net_x7,
      misco => dmisc_q_net_x2
    );

  coeff_gen_8e787afe06: entity work.coeff_gen_entity_8e787afe06
    port map (
      ce_1 => ce_1_sg_x1463,
      clk_1 => clk_1_sg_x1463,
      misci => concatenate_y_net_x3,
      rst => delay0_q_net_x7,
      misco => delay1_q_net_x3,
      w => concat_y_net_x7
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_1"

entity butterfly2_1_entity_6045c8224a is
  port (
    a: in std_logic_vector(71 downto 0); 
    b: in std_logic_vector(71 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(71 downto 0); 
    a_bw_x0: out std_logic_vector(71 downto 0); 
    of_x0: out std_logic_vector(1 downto 0); 
    sync_out: out std_logic
  );
end butterfly2_1_entity_6045c8224a;

architecture structural of butterfly2_1_entity_6045c8224a is
  signal ce_1_sg_x1464: std_logic;
  signal clk_1_sg_x1464: std_logic;
  signal concat_y_net_x3: std_logic_vector(159 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(167 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(7 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(75 downto 0);
  signal concatenate_y_net_x13: std_logic_vector(1 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(159 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(7 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(167 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(167 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(79 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal delay0_q_net_x8: std_logic;
  signal reinterpret1_output_port_net_x10: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x5: std_logic_vector(71 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(7 downto 0);
  signal slice2_y_net_x1: std_logic;
  signal slice2_y_net_x4: std_logic;

begin
  reinterpret2_output_port_net_x4 <= a;
  reinterpret1_output_port_net_x11 <= b;
  ce_1_sg_x1464 <= ce_1;
  clk_1_sg_x1464 <= clk_1;
  slice2_y_net_x4 <= shift;
  delay0_q_net_x8 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x3;
  a_bw_x0 <= reinterpret2_output_port_net_x5;
  of_x0 <= concatenate_y_net_x13;
  sync_out <= delay0_q_net_x0;

  bus_add_f82f9fee38: entity work.bus_add_entity_c12684f296
    port map (
      a => reinterpret1_output_port_net_x10,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1464,
      clk_1 => clk_1_sg_x1464,
      dout => concatenate_y_net_x3
    );

  bus_convert_da201282e4: entity work.bus_convert_entity_8adb3719d7
    port map (
      ce_1 => ce_1_sg_x1464,
      clk_1 => clk_1_sg_x1464,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_5e8dedc30e: entity work.bus_expand_a_entity_1605f56624
    port map (
      bus_in => concatenate_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x3,
      msb_out2 => reinterpret2_output_port_net_x5
    );

  bus_norm0_49f4e587e2: entity work.bus_norm0_entity_cd1216a1cc
    port map (
      ce_1 => ce_1_sg_x1464,
      clk_1 => clk_1_sg_x1464,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_32a1a84a19: entity work.bus_norm1_entity_a4c51fbd17
    port map (
      ce_1 => ce_1_sg_x1464,
      clk_1 => clk_1_sg_x1464,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_63638d7c20: entity work.bus_relational_entity_8ce6836c18
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      ce_1 => ce_1_sg_x1464,
      clk_1 => clk_1_sg_x1464,
      a_b => concatenate_y_net_x13
    );

  bus_scale_7dd4efda92: entity work.bus_scale_entity_fdb0024d57
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_9ba7e78ac7: entity work.bus_sub_entity_c7e911eadf
    port map (
      a => reinterpret1_output_port_net_x10,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1464,
      clk_1 => clk_1_sg_x1464,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_1ea5b7e23c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x1464,
      clk => clk_1_sg_x1464,
      clr => '0',
      d(0) => slice2_y_net_x1,
      q(0) => delay0_q_net_x0
    );

  munge_aa416b1f6b: entity work.munge_entity_55f3dfd2d1
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_7bdf7cca61: entity work.mux_entity_6fca129dfb
    port map (
      ce_1 => ce_1_sg_x1464,
      clk_1 => clk_1_sg_x1464,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_864aa27ce0: entity work.shift_replicate_entity_77d18a8753
    port map (
      ce_1 => ce_1_sg_x1464,
      clk_1 => clk_1_sg_x1464,
      in_x0 => slice2_y_net_x4,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_9babb7204e: entity work.twiddle_entity_9babb7204e
    port map (
      ai => reinterpret2_output_port_net_x4,
      bi => reinterpret1_output_port_net_x11,
      ce_1 => ce_1_sg_x1464,
      clk_1 => clk_1_sg_x1464,
      sync_in => delay0_q_net_x8,
      ao => reinterpret1_output_port_net_x10,
      bwo => concatenate_y_net_x12,
      sync_out => slice2_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_2/twiddle/coeff_gen/cosin"

entity cosin_entity_0aa46a16ea is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(144 downto 0); 
    theta: in std_logic_vector(9 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(144 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_0aa46a16ea;

architecture structural of cosin_entity_0aa46a16ea is
  signal assert_dout_net_x1: std_logic_vector(9 downto 0);
  signal ce_1_sg_x1515: std_logic;
  signal clk_1_sg_x1515: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(144 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(9 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(144 downto 0);
  signal delay1_q_net_x2: std_logic_vector(144 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(144 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1515 <= ce_1;
  clk_1_sg_x1515 <= clk_1;
  concatenate_y_net_x2 <= misci;
  slice_y_net_x0 <= theta;
  cos <= mux_y_net_x2;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x3;

  add_convert0_1b932dc3a2: entity work.add_convert0_entity_2c86b88a0d
    port map (
      ce_1 => ce_1_sg_x1515,
      clk_1 => clk_1_sg_x1515,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_326454e452: entity work.add_convert1_entity_89a72d4bba
    port map (
      ce_1 => ce_1_sg_x1515,
      clk_1 => clk_1_sg_x1515,
      misci => concatenate_y_net_x2,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 10,
      dout_width => 10
    )
    port map (
      din => slice_y_net_x0,
      dout => assert_dout_net_x1
    );

  c_to_ri_d3f2836d53: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_c52fce8d02
    port map (
      ce => ce_1_sg_x1515,
      clk => clk_1_sg_x1515,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1515,
      clk => clk_1_sg_x1515,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1515,
      clk => clk_1_sg_x1515,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_88bc704b52: entity work.invert0_entity_0a6af8c8da
    port map (
      ce_1 => ce_1_sg_x1515,
      clk_1 => clk_1_sg_x1515,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_d8d731df1d: entity work.invert1_entity_28048e1b9d
    port map (
      ce_1 => ce_1_sg_x1515,
      clk_1 => clk_1_sg_x1515,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 36,
      core_name0 => "bmg_72_397194a7fc06b72c",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x1515,
      clk => clk_1_sg_x1515,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_2/twiddle/coeff_gen"

entity coeff_gen_entity_b68167d004 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(144 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(144 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_b68167d004;

architecture structural of coeff_gen_entity_b68167d004 is
  signal ce_1_sg_x1516: std_logic;
  signal clk_1_sg_x1516: std_logic;
  signal concat_y_net_x7: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(144 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay0_q_net_x2: std_logic;
  signal delay1_q_net_x3: std_logic_vector(144 downto 0);
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1516 <= ce_1;
  clk_1_sg_x1516 <= clk_1;
  concatenate_y_net_x3 <= misci;
  delay0_q_net_x2 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x7;

  cosin_0aa46a16ea: entity work.cosin_entity_0aa46a16ea
    port map (
      ce_1 => ce_1_sg_x1516,
      clk_1 => clk_1_sg_x1516,
      misci => concatenate_y_net_x3,
      theta => slice_y_net_x0,
      cos => mux_y_net_x4,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x5
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x1516,
      clk => clk_1_sg_x1516,
      clr => '0',
      rst(0) => delay0_q_net_x2,
      op => counter_op_net
    );

  ri_to_c_ab45956185: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x7
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 10,
      y_width => 10
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_2/twiddle"

entity twiddle_entity_7612051f50 is
  port (
    ai: in std_logic_vector(71 downto 0); 
    bi: in std_logic_vector(71 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(71 downto 0); 
    bwo: out std_logic_vector(75 downto 0); 
    sync_out: out std_logic
  );
end twiddle_entity_7612051f50;

architecture structural of twiddle_entity_7612051f50 is
  signal ce_1_sg_x1517: std_logic;
  signal clk_1_sg_x1517: std_logic;
  signal concat_y_net_x7: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(144 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(147 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(75 downto 0);
  signal delay0_q_net_x3: std_logic;
  signal delay1_q_net_x3: std_logic_vector(144 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(72 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(72 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(72 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(71 downto 0);
  signal slice2_y_net_x1: std_logic;

begin
  reinterpret2_output_port_net_x4 <= ai;
  reinterpret1_output_port_net_x2 <= bi;
  ce_1_sg_x1517 <= ce_1;
  clk_1_sg_x1517 <= clk_1;
  delay0_q_net_x3 <= sync_in;
  ao <= reinterpret1_output_port_net_x10;
  bwo <= concatenate_y_net_x8;
  sync_out <= slice2_y_net_x1;

  bus_convert_cb5de96a9b: entity work.bus_convert_entity_1a93cb7750
    port map (
      ce_1 => ce_1_sg_x1517,
      clk_1 => clk_1_sg_x1517,
      din => concatenate_y_net_x7,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x8,
      misco => dmisc_q_net_x3
    );

  bus_create_235aa138cb: entity work.bus_create_entity_5d547276ee
    port map (
      in1 => reinterpret1_output_port_net_x2,
      in2 => delay0_q_net_x3,
      in3 => reinterpret2_output_port_net_x4,
      bus_out => concatenate_y_net_x3
    );

  bus_expand1_bd791a5971: entity work.bus_expand1_entity_2400a3442f
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x10,
      msb_out2 => slice2_y_net_x1
    );

  bus_expand_05121528db: entity work.bus_expand_entity_645ad419b1
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x9,
      msb_out2 => reinterpret2_output_port_net_x2
    );

  bus_mult_6ab77e9709: entity work.bus_mult_entity_6dcf8aa288
    port map (
      a => concat_y_net_x7,
      b => reinterpret2_output_port_net_x2,
      ce_1 => ce_1_sg_x1517,
      clk_1 => clk_1_sg_x1517,
      misci => reinterpret1_output_port_net_x9,
      a_b => concatenate_y_net_x7,
      misco => dmisc_q_net_x2
    );

  coeff_gen_b68167d004: entity work.coeff_gen_entity_b68167d004
    port map (
      ce_1 => ce_1_sg_x1517,
      clk_1 => clk_1_sg_x1517,
      misci => concatenate_y_net_x3,
      rst => delay0_q_net_x3,
      misco => delay1_q_net_x3,
      w => concat_y_net_x7
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_2"

entity butterfly2_2_entity_d94595fc0f is
  port (
    a: in std_logic_vector(71 downto 0); 
    b: in std_logic_vector(71 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(71 downto 0); 
    a_bw_x0: out std_logic_vector(71 downto 0); 
    of_x0: out std_logic_vector(1 downto 0); 
    sync_out: out std_logic
  );
end butterfly2_2_entity_d94595fc0f;

architecture structural of butterfly2_2_entity_d94595fc0f is
  signal ce_1_sg_x1518: std_logic;
  signal clk_1_sg_x1518: std_logic;
  signal concat_y_net_x3: std_logic_vector(159 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(167 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(7 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(75 downto 0);
  signal concatenate_y_net_x13: std_logic_vector(1 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(159 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(7 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(167 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(167 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(79 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal delay0_q_net_x4: std_logic;
  signal reinterpret1_output_port_net_x10: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x5: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x6: std_logic_vector(71 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(7 downto 0);
  signal slice2_y_net_x1: std_logic;
  signal slice2_y_net_x6: std_logic;

begin
  reinterpret2_output_port_net_x5 <= a;
  reinterpret1_output_port_net_x4 <= b;
  ce_1_sg_x1518 <= ce_1;
  clk_1_sg_x1518 <= clk_1;
  slice2_y_net_x6 <= shift;
  delay0_q_net_x4 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x11;
  a_bw_x0 <= reinterpret2_output_port_net_x6;
  of_x0 <= concatenate_y_net_x13;
  sync_out <= delay0_q_net_x0;

  bus_add_0819ae7b96: entity work.bus_add_entity_c12684f296
    port map (
      a => reinterpret1_output_port_net_x10,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1518,
      clk_1 => clk_1_sg_x1518,
      dout => concatenate_y_net_x3
    );

  bus_convert_982e7e8961: entity work.bus_convert_entity_8adb3719d7
    port map (
      ce_1 => ce_1_sg_x1518,
      clk_1 => clk_1_sg_x1518,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_54e668e2ec: entity work.bus_expand_a_entity_1605f56624
    port map (
      bus_in => concatenate_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x11,
      msb_out2 => reinterpret2_output_port_net_x6
    );

  bus_norm0_5f405a8468: entity work.bus_norm0_entity_cd1216a1cc
    port map (
      ce_1 => ce_1_sg_x1518,
      clk_1 => clk_1_sg_x1518,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_df38f16f88: entity work.bus_norm1_entity_a4c51fbd17
    port map (
      ce_1 => ce_1_sg_x1518,
      clk_1 => clk_1_sg_x1518,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_73fc768919: entity work.bus_relational_entity_8ce6836c18
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      ce_1 => ce_1_sg_x1518,
      clk_1 => clk_1_sg_x1518,
      a_b => concatenate_y_net_x13
    );

  bus_scale_622f4851df: entity work.bus_scale_entity_fdb0024d57
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_58d517d242: entity work.bus_sub_entity_c7e911eadf
    port map (
      a => reinterpret1_output_port_net_x10,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1518,
      clk_1 => clk_1_sg_x1518,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_1ea5b7e23c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x1518,
      clk => clk_1_sg_x1518,
      clr => '0',
      d(0) => slice2_y_net_x1,
      q(0) => delay0_q_net_x0
    );

  munge_ccb8210321: entity work.munge_entity_55f3dfd2d1
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_849d9725ad: entity work.mux_entity_6fca129dfb
    port map (
      ce_1 => ce_1_sg_x1518,
      clk_1 => clk_1_sg_x1518,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_b93199e03c: entity work.shift_replicate_entity_77d18a8753
    port map (
      ce_1 => ce_1_sg_x1518,
      clk_1 => clk_1_sg_x1518,
      in_x0 => slice2_y_net_x6,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_7612051f50: entity work.twiddle_entity_7612051f50
    port map (
      ai => reinterpret2_output_port_net_x5,
      bi => reinterpret1_output_port_net_x4,
      ce_1 => ce_1_sg_x1518,
      clk_1 => clk_1_sg_x1518,
      sync_in => delay0_q_net_x4,
      ao => reinterpret1_output_port_net_x10,
      bwo => concatenate_y_net_x12,
      sync_out => slice2_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_3/twiddle/coeff_gen/cosin"

entity cosin_entity_2a48325266 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(144 downto 0); 
    theta: in std_logic_vector(9 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(144 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_2a48325266;

architecture structural of cosin_entity_2a48325266 is
  signal assert_dout_net_x1: std_logic_vector(9 downto 0);
  signal ce_1_sg_x1569: std_logic;
  signal clk_1_sg_x1569: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(144 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(9 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(144 downto 0);
  signal delay1_q_net_x2: std_logic_vector(144 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(144 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1569 <= ce_1;
  clk_1_sg_x1569 <= clk_1;
  concatenate_y_net_x2 <= misci;
  slice_y_net_x0 <= theta;
  cos <= mux_y_net_x3;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x2;

  add_convert0_909b7d1f10: entity work.add_convert0_entity_2c86b88a0d
    port map (
      ce_1 => ce_1_sg_x1569,
      clk_1 => clk_1_sg_x1569,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_4922fc62cd: entity work.add_convert1_entity_89a72d4bba
    port map (
      ce_1 => ce_1_sg_x1569,
      clk_1 => clk_1_sg_x1569,
      misci => concatenate_y_net_x2,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 10,
      dout_width => 10
    )
    port map (
      din => slice_y_net_x0,
      dout => assert_dout_net_x1
    );

  c_to_ri_17dc7b745d: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_c52fce8d02
    port map (
      ce => ce_1_sg_x1569,
      clk => clk_1_sg_x1569,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1569,
      clk => clk_1_sg_x1569,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1569,
      clk => clk_1_sg_x1569,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_9e35ade8c6: entity work.invert0_entity_0a6af8c8da
    port map (
      ce_1 => ce_1_sg_x1569,
      clk_1 => clk_1_sg_x1569,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_98dd32d6ec: entity work.invert1_entity_28048e1b9d
    port map (
      ce_1 => ce_1_sg_x1569,
      clk_1 => clk_1_sg_x1569,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 36,
      core_name0 => "bmg_72_8e74499683501928",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x1569,
      clk => clk_1_sg_x1569,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_3/twiddle/coeff_gen"

entity coeff_gen_entity_dd50cf8cb7 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(144 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(144 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_dd50cf8cb7;

architecture structural of coeff_gen_entity_dd50cf8cb7 is
  signal ce_1_sg_x1570: std_logic;
  signal clk_1_sg_x1570: std_logic;
  signal concat_y_net_x7: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(144 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay0_q_net_x6: std_logic;
  signal delay1_q_net_x3: std_logic_vector(144 downto 0);
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1570 <= ce_1;
  clk_1_sg_x1570 <= clk_1;
  concatenate_y_net_x3 <= misci;
  delay0_q_net_x6 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x7;

  cosin_2a48325266: entity work.cosin_entity_2a48325266
    port map (
      ce_1 => ce_1_sg_x1570,
      clk_1 => clk_1_sg_x1570,
      misci => concatenate_y_net_x3,
      theta => slice_y_net_x0,
      cos => mux_y_net_x5,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x4
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x1570,
      clk => clk_1_sg_x1570,
      clr => '0',
      rst(0) => delay0_q_net_x6,
      op => counter_op_net
    );

  ri_to_c_230740cf95: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x7
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 10,
      y_width => 10
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_3/twiddle"

entity twiddle_entity_604585c3e3 is
  port (
    ai: in std_logic_vector(71 downto 0); 
    bi: in std_logic_vector(71 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(71 downto 0); 
    bwo: out std_logic_vector(75 downto 0); 
    sync_out: out std_logic
  );
end twiddle_entity_604585c3e3;

architecture structural of twiddle_entity_604585c3e3 is
  signal ce_1_sg_x1571: std_logic;
  signal clk_1_sg_x1571: std_logic;
  signal concat_y_net_x7: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(144 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(147 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(75 downto 0);
  signal delay0_q_net_x7: std_logic;
  signal delay1_q_net_x3: std_logic_vector(144 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(72 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(72 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(72 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(71 downto 0);
  signal slice2_y_net_x1: std_logic;

begin
  reinterpret2_output_port_net_x3 <= ai;
  reinterpret1_output_port_net_x7 <= bi;
  ce_1_sg_x1571 <= ce_1;
  clk_1_sg_x1571 <= clk_1;
  delay0_q_net_x7 <= sync_in;
  ao <= reinterpret1_output_port_net_x10;
  bwo <= concatenate_y_net_x8;
  sync_out <= slice2_y_net_x1;

  bus_convert_397e6e570e: entity work.bus_convert_entity_1a93cb7750
    port map (
      ce_1 => ce_1_sg_x1571,
      clk_1 => clk_1_sg_x1571,
      din => concatenate_y_net_x7,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x8,
      misco => dmisc_q_net_x3
    );

  bus_create_137efe8cca: entity work.bus_create_entity_5d547276ee
    port map (
      in1 => reinterpret1_output_port_net_x7,
      in2 => delay0_q_net_x7,
      in3 => reinterpret2_output_port_net_x3,
      bus_out => concatenate_y_net_x3
    );

  bus_expand1_4f8c4f730f: entity work.bus_expand1_entity_2400a3442f
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x10,
      msb_out2 => slice2_y_net_x1
    );

  bus_expand_8dd7156d0c: entity work.bus_expand_entity_645ad419b1
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x9,
      msb_out2 => reinterpret2_output_port_net_x2
    );

  bus_mult_289a9ddea9: entity work.bus_mult_entity_6dcf8aa288
    port map (
      a => concat_y_net_x7,
      b => reinterpret2_output_port_net_x2,
      ce_1 => ce_1_sg_x1571,
      clk_1 => clk_1_sg_x1571,
      misci => reinterpret1_output_port_net_x9,
      a_b => concatenate_y_net_x7,
      misco => dmisc_q_net_x2
    );

  coeff_gen_dd50cf8cb7: entity work.coeff_gen_entity_dd50cf8cb7
    port map (
      ce_1 => ce_1_sg_x1571,
      clk_1 => clk_1_sg_x1571,
      misci => concatenate_y_net_x3,
      rst => delay0_q_net_x7,
      misco => delay1_q_net_x3,
      w => concat_y_net_x7
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly2_3"

entity butterfly2_3_entity_41739be53f is
  port (
    a: in std_logic_vector(71 downto 0); 
    b: in std_logic_vector(71 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(71 downto 0); 
    a_bw_x0: out std_logic_vector(71 downto 0); 
    of_x0: out std_logic_vector(1 downto 0); 
    sync_out: out std_logic
  );
end butterfly2_3_entity_41739be53f;

architecture structural of butterfly2_3_entity_41739be53f is
  signal ce_1_sg_x1572: std_logic;
  signal clk_1_sg_x1572: std_logic;
  signal concat_y_net_x3: std_logic_vector(159 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(167 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(7 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(75 downto 0);
  signal concatenate_y_net_x13: std_logic_vector(1 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(159 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(143 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(7 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(167 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(167 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(79 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal delay0_q_net_x8: std_logic;
  signal reinterpret1_output_port_net_x10: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x5: std_logic_vector(71 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(7 downto 0);
  signal slice2_y_net_x1: std_logic;
  signal slice2_y_net_x8: std_logic;

begin
  reinterpret2_output_port_net_x4 <= a;
  reinterpret1_output_port_net_x11 <= b;
  ce_1_sg_x1572 <= ce_1;
  clk_1_sg_x1572 <= clk_1;
  slice2_y_net_x8 <= shift;
  delay0_q_net_x8 <= sync_in;
  a_bw <= reinterpret1_output_port_net_x3;
  a_bw_x0 <= reinterpret2_output_port_net_x5;
  of_x0 <= concatenate_y_net_x13;
  sync_out <= delay0_q_net_x0;

  bus_add_1464dd0081: entity work.bus_add_entity_c12684f296
    port map (
      a => reinterpret1_output_port_net_x10,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1572,
      clk_1 => clk_1_sg_x1572,
      dout => concatenate_y_net_x3
    );

  bus_convert_bc712b19a5: entity work.bus_convert_entity_8adb3719d7
    port map (
      ce_1 => ce_1_sg_x1572,
      clk_1 => clk_1_sg_x1572,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_e3574abffb: entity work.bus_expand_a_entity_1605f56624
    port map (
      bus_in => concatenate_y_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x3,
      msb_out2 => reinterpret2_output_port_net_x5
    );

  bus_norm0_8e060e2cb8: entity work.bus_norm0_entity_cd1216a1cc
    port map (
      ce_1 => ce_1_sg_x1572,
      clk_1 => clk_1_sg_x1572,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_e17b073540: entity work.bus_norm1_entity_a4c51fbd17
    port map (
      ce_1 => ce_1_sg_x1572,
      clk_1 => clk_1_sg_x1572,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_c50cbfd632: entity work.bus_relational_entity_8ce6836c18
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      ce_1 => ce_1_sg_x1572,
      clk_1 => clk_1_sg_x1572,
      a_b => concatenate_y_net_x13
    );

  bus_scale_5ee9f1e17e: entity work.bus_scale_entity_fdb0024d57
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_dbb778d70a: entity work.bus_sub_entity_c7e911eadf
    port map (
      a => reinterpret1_output_port_net_x10,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1572,
      clk_1 => clk_1_sg_x1572,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_1ea5b7e23c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x1572,
      clk => clk_1_sg_x1572,
      clr => '0',
      d(0) => slice2_y_net_x1,
      q(0) => delay0_q_net_x0
    );

  munge_4a3f7bc222: entity work.munge_entity_55f3dfd2d1
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_430de0ae81: entity work.mux_entity_6fca129dfb
    port map (
      ce_1 => ce_1_sg_x1572,
      clk_1 => clk_1_sg_x1572,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_efc58714ec: entity work.shift_replicate_entity_77d18a8753
    port map (
      ce_1 => ce_1_sg_x1572,
      clk_1 => clk_1_sg_x1572,
      in_x0 => slice2_y_net_x8,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_604585c3e3: entity work.twiddle_entity_604585c3e3
    port map (
      ai => reinterpret2_output_port_net_x4,
      bi => reinterpret1_output_port_net_x11,
      ce_1 => ce_1_sg_x1572,
      clk_1 => clk_1_sg_x1572,
      sync_in => delay0_q_net_x8,
      ao => reinterpret1_output_port_net_x10,
      bwo => concatenate_y_net_x12,
      sync_out => slice2_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/bus_add/a_debus"

entity a_debus_entity_1018bb3de8 is
  port (
    bus_in: in std_logic_vector(35 downto 0); 
    lsb_out1: out std_logic_vector(17 downto 0); 
    msb_out2: out std_logic_vector(17 downto 0)
  );
end a_debus_entity_1018bb3de8;

architecture structural of a_debus_entity_1018bb3de8 is
  signal reinterpret1_output_port_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal slice1_y_net: std_logic_vector(17 downto 0);
  signal slice2_y_net: std_logic_vector(17 downto 0);

begin
  reinterpret1_output_port_net_x1 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x2;
  msb_out2 <= reinterpret2_output_port_net_x0;

  reinterpret1: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  reinterpret2: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 36,
      y_width => 18
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 35,
      x_width => 36,
      y_width => 18
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/bus_add/b_debus"

entity b_debus_entity_aae50da49a is
  port (
    bus_in: in std_logic_vector(37 downto 0); 
    lsb_out1: out std_logic_vector(18 downto 0); 
    msb_out2: out std_logic_vector(18 downto 0)
  );
end b_debus_entity_aae50da49a;

architecture structural of b_debus_entity_aae50da49a is
  signal concatenate_y_net_x0: std_logic_vector(37 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(18 downto 0);
  signal slice1_y_net: std_logic_vector(18 downto 0);
  signal slice2_y_net: std_logic_vector(18 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out2 <= reinterpret2_output_port_net_x0;

  reinterpret1: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_63700884f5
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 18,
      x_width => 38,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 19,
      new_msb => 37,
      x_width => 38,
      y_width => 19
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/bus_add/op_bussify"

entity op_bussify_entity_11c6fd13cd is
  port (
    in1: in std_logic_vector(19 downto 0); 
    in2: in std_logic_vector(19 downto 0); 
    bus_out: out std_logic_vector(39 downto 0)
  );
end op_bussify_entity_11c6fd13cd;

architecture structural of op_bussify_entity_11c6fd13cd is
  signal addsub1_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub2_s_net_x0: std_logic_vector(19 downto 0);
  signal concatenate_y_net_x0: std_logic_vector(39 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(19 downto 0);

begin
  addsub1_s_net_x0 <= in1;
  addsub2_s_net_x0 <= in2;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_9e724c4b50
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub1_s_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => addsub2_s_net_x0,
      output_port => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/bus_add"

entity bus_add_entity_c1c3c9cfae is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(37 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    dout: out std_logic_vector(39 downto 0)
  );
end bus_add_entity_c1c3c9cfae;

architecture structural of bus_add_entity_c1c3c9cfae is
  signal addsub1_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub2_s_net_x0: std_logic_vector(19 downto 0);
  signal ce_1_sg_x1573: std_logic;
  signal clk_1_sg_x1573: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(37 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(39 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(18 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(18 downto 0);

begin
  reinterpret1_output_port_net_x3 <= a;
  concatenate_y_net_x2 <= b;
  ce_1_sg_x1573 <= ce_1;
  clk_1_sg_x1573 <= clk_1;
  dout <= concatenate_y_net_x3;

  a_debus_1018bb3de8: entity work.a_debus_entity_1018bb3de8
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out2 => reinterpret2_output_port_net_x0
    );

  addsub1: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret2_output_port_net_x0,
      b => reinterpret2_output_port_net_x1,
      ce => ce_1_sg_x1573,
      clk => clk_1_sg_x1573,
      clr => '0',
      s => addsub1_s_net_x0
    );

  addsub2: entity work.addsub_c1b57d7d0a
    port map (
      a => reinterpret1_output_port_net_x2,
      b => reinterpret1_output_port_net_x0,
      ce => ce_1_sg_x1573,
      clk => clk_1_sg_x1573,
      clr => '0',
      s => addsub2_s_net_x0
    );

  b_debus_aae50da49a: entity work.b_debus_entity_aae50da49a
    port map (
      bus_in => concatenate_y_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  op_bussify_11c6fd13cd: entity work.op_bussify_entity_11c6fd13cd
    port map (
      in1 => addsub1_s_net_x0,
      in2 => addsub2_s_net_x0,
      bus_out => concatenate_y_net_x3
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/bus_convert/debus"

entity debus_entity_4677a82132 is
  port (
    bus_in: in std_logic_vector(83 downto 0); 
    lsb_out1: out std_logic_vector(20 downto 0); 
    msb_out4: out std_logic_vector(20 downto 0); 
    out2: out std_logic_vector(20 downto 0); 
    out3: out std_logic_vector(20 downto 0)
  );
end debus_entity_4677a82132;

architecture structural of debus_entity_4677a82132 is
  signal concatenate_y_net_x0: std_logic_vector(83 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(20 downto 0);
  signal slice1_y_net: std_logic_vector(20 downto 0);
  signal slice2_y_net: std_logic_vector(20 downto 0);
  signal slice3_y_net: std_logic_vector(20 downto 0);
  signal slice4_y_net: std_logic_vector(20 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x2;
  msb_out4 <= reinterpret4_output_port_net_x2;
  out2 <= reinterpret2_output_port_net_x2;
  out3 <= reinterpret3_output_port_net_x2;

  reinterpret1: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  reinterpret2: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x2
    );

  reinterpret3: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x2
    );

  reinterpret4: entity work.reinterpret_d357e69fa3
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 20,
      x_width => 84,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 21,
      new_msb => 41,
      x_width => 84,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 42,
      new_msb => 62,
      x_width => 84,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 63,
      new_msb => 83,
      x_width => 84,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/bus_convert"

entity bus_convert_entity_9afdc2814a is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(83 downto 0); 
    dout: out std_logic_vector(71 downto 0); 
    overflow: out std_logic_vector(3 downto 0)
  );
end bus_convert_entity_9afdc2814a;

architecture structural of bus_convert_entity_9afdc2814a is
  signal adder_s_net_x5: std_logic_vector(17 downto 0);
  signal adder_s_net_x6: std_logic_vector(17 downto 0);
  signal adder_s_net_x7: std_logic_vector(17 downto 0);
  signal adder_s_net_x8: std_logic_vector(17 downto 0);
  signal and_y_net_x4: std_logic;
  signal and_y_net_x5: std_logic;
  signal and_y_net_x6: std_logic;
  signal and_y_net_x7: std_logic;
  signal ce_1_sg_x1582: std_logic;
  signal clk_1_sg_x1582: std_logic;
  signal concatenate_y_net_x3: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(20 downto 0);

begin
  ce_1_sg_x1582 <= ce_1;
  clk_1_sg_x1582 <= clk_1;
  concatenate_y_net_x3 <= din;
  dout <= concatenate_y_net_x4;
  overflow <= concatenate_y_net_x5;

  bussify_12dcbd6ace: entity work.bussify_entity_2706e362ec
    port map (
      in1 => adder_s_net_x5,
      in2 => adder_s_net_x6,
      in3 => adder_s_net_x7,
      in4 => adder_s_net_x8,
      bus_out => concatenate_y_net_x4
    );

  conv1_d739b0eb2e: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1582,
      clk_1 => clk_1_sg_x1582,
      din => reinterpret4_output_port_net_x2,
      dout => adder_s_net_x5,
      of_x0 => and_y_net_x4
    );

  conv2_4dfd76f5a8: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1582,
      clk_1 => clk_1_sg_x1582,
      din => reinterpret3_output_port_net_x2,
      dout => adder_s_net_x6,
      of_x0 => and_y_net_x5
    );

  conv3_781a6b0dcc: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1582,
      clk_1 => clk_1_sg_x1582,
      din => reinterpret2_output_port_net_x2,
      dout => adder_s_net_x7,
      of_x0 => and_y_net_x6
    );

  conv4_c32c2195dc: entity work.conv1_entity_a604afc213
    port map (
      ce_1 => ce_1_sg_x1582,
      clk_1 => clk_1_sg_x1582,
      din => reinterpret1_output_port_net_x2,
      dout => adder_s_net_x8,
      of_x0 => and_y_net_x7
    );

  debus_4677a82132: entity work.debus_entity_4677a82132
    port map (
      bus_in => concatenate_y_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out4 => reinterpret4_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x2
    );

  of_bussify_4f2685e045: entity work.bussify_entity_40eba17d52
    port map (
      in1 => and_y_net_x4,
      in2 => and_y_net_x5,
      in3 => and_y_net_x6,
      in4 => and_y_net_x7,
      bus_out => concatenate_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/bus_expand"

entity bus_expand_entity_77aa047eca is
  port (
    bus_in: in std_logic_vector(71 downto 0); 
    msb_out2: out std_logic_vector(35 downto 0)
  );
end bus_expand_entity_77aa047eca;

architecture structural of bus_expand_entity_77aa047eca is
  signal concatenate_y_net_x5: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(35 downto 0);
  signal slice2_y_net: std_logic_vector(35 downto 0);

begin
  concatenate_y_net_x5 <= bus_in;
  msb_out2 <= reinterpret2_output_port_net_x1;

  reinterpret2: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x1
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 36,
      new_msb => 71,
      x_width => 72,
      y_width => 36
    )
    port map (
      x => concatenate_y_net_x5,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/bus_norm0/bussify"

entity bussify_entity_ee21293818 is
  port (
    in1: in std_logic_vector(20 downto 0); 
    in2: in std_logic_vector(20 downto 0); 
    in3: in std_logic_vector(20 downto 0); 
    in4: in std_logic_vector(20 downto 0); 
    bus_out: out std_logic_vector(83 downto 0)
  );
end bussify_entity_ee21293818;

architecture structural of bussify_entity_ee21293818 is
  signal concatenate_y_net_x0: std_logic_vector(83 downto 0);
  signal conv1_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv2_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv3_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv4_dout_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(20 downto 0);

begin
  conv1_dout_net_x0 <= in1;
  conv2_dout_net_x0 <= in2;
  conv3_dout_net_x0 <= in3;
  conv4_dout_net_x0 <= in4;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_356a264444
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv1_dout_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv2_dout_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv3_dout_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_f0ca8483cb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => conv4_dout_net_x0,
      output_port => reinterpret4_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/bus_norm0/debus"

entity debus_entity_b07a3a212b is
  port (
    bus_in: in std_logic_vector(79 downto 0); 
    lsb_out1: out std_logic_vector(19 downto 0); 
    msb_out4: out std_logic_vector(19 downto 0); 
    out2: out std_logic_vector(19 downto 0); 
    out3: out std_logic_vector(19 downto 0)
  );
end debus_entity_b07a3a212b;

architecture structural of debus_entity_b07a3a212b is
  signal concat_y_net_x0: std_logic_vector(79 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(19 downto 0);
  signal slice1_y_net: std_logic_vector(19 downto 0);
  signal slice2_y_net: std_logic_vector(19 downto 0);
  signal slice3_y_net: std_logic_vector(19 downto 0);
  signal slice4_y_net: std_logic_vector(19 downto 0);

begin
  concat_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out4 <= reinterpret4_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;

  reinterpret1: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 19,
      x_width => 80,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 20,
      new_msb => 39,
      x_width => 80,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 40,
      new_msb => 59,
      x_width => 80,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 60,
      new_msb => 79,
      x_width => 80,
      y_width => 20
    )
    port map (
      x => concat_y_net_x0,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/bus_norm0"

entity bus_norm0_entity_8ef81a9379 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(79 downto 0); 
    dout: out std_logic_vector(83 downto 0)
  );
end bus_norm0_entity_8ef81a9379;

architecture structural of bus_norm0_entity_8ef81a9379 is
  signal ce_1_sg_x1583: std_logic;
  signal clk_1_sg_x1583: std_logic;
  signal concat_y_net_x1: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x1: std_logic_vector(83 downto 0);
  signal conv1_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv2_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv3_dout_net_x0: std_logic_vector(20 downto 0);
  signal conv4_dout_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(19 downto 0);

begin
  ce_1_sg_x1583 <= ce_1;
  clk_1_sg_x1583 <= clk_1;
  concat_y_net_x1 <= din;
  dout <= concatenate_y_net_x1;

  bussify_ee21293818: entity work.bussify_entity_ee21293818
    port map (
      in1 => conv1_dout_net_x0,
      in2 => conv2_dout_net_x0,
      in3 => conv3_dout_net_x0,
      in4 => conv4_dout_net_x0,
      bus_out => concatenate_y_net_x1
    );

  conv1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1583,
      clk => clk_1_sg_x1583,
      clr => '0',
      din => reinterpret4_output_port_net_x0,
      en => "1",
      dout => conv1_dout_net_x0
    );

  conv2: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1583,
      clk => clk_1_sg_x1583,
      clr => '0',
      din => reinterpret3_output_port_net_x0,
      en => "1",
      dout => conv2_dout_net_x0
    );

  conv3: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1583,
      clk => clk_1_sg_x1583,
      clr => '0',
      din => reinterpret2_output_port_net_x0,
      en => "1",
      dout => conv3_dout_net_x0
    );

  conv4: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 17,
      din_width => 20,
      dout_arith => 2,
      dout_bin_pt => 18,
      dout_width => 21,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1583,
      clk => clk_1_sg_x1583,
      clr => '0',
      din => reinterpret1_output_port_net_x0,
      en => "1",
      dout => conv4_dout_net_x0
    );

  debus_b07a3a212b: entity work.debus_entity_b07a3a212b
    port map (
      bus_in => concat_y_net_x1,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/bus_norm1/debus"

entity debus_entity_eb0194394b is
  port (
    bus_in: in std_logic_vector(79 downto 0); 
    lsb_out1: out std_logic_vector(19 downto 0); 
    msb_out4: out std_logic_vector(19 downto 0); 
    out2: out std_logic_vector(19 downto 0); 
    out3: out std_logic_vector(19 downto 0)
  );
end debus_entity_eb0194394b;

architecture structural of debus_entity_eb0194394b is
  signal concatenate_y_net_x0: std_logic_vector(79 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(19 downto 0);
  signal slice1_y_net: std_logic_vector(19 downto 0);
  signal slice2_y_net: std_logic_vector(19 downto 0);
  signal slice3_y_net: std_logic_vector(19 downto 0);
  signal slice4_y_net: std_logic_vector(19 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x1;
  msb_out4 <= reinterpret4_output_port_net_x1;
  out2 <= reinterpret2_output_port_net_x1;
  out3 <= reinterpret3_output_port_net_x1;

  reinterpret1: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x1
    );

  reinterpret2: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x1
    );

  reinterpret3: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x1
    );

  reinterpret4: entity work.reinterpret_f661f8d9b7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 19,
      x_width => 80,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 20,
      new_msb => 39,
      x_width => 80,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 40,
      new_msb => 59,
      x_width => 80,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 60,
      new_msb => 79,
      x_width => 80,
      y_width => 20
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/bus_norm1"

entity bus_norm1_entity_42dcedf23c is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(79 downto 0); 
    dout: out std_logic_vector(83 downto 0)
  );
end bus_norm1_entity_42dcedf23c;

architecture structural of bus_norm1_entity_42dcedf23c is
  signal adder_s_net_x4: std_logic_vector(20 downto 0);
  signal adder_s_net_x5: std_logic_vector(20 downto 0);
  signal adder_s_net_x6: std_logic_vector(20 downto 0);
  signal adder_s_net_x7: std_logic_vector(20 downto 0);
  signal ce_1_sg_x1588: std_logic;
  signal clk_1_sg_x1588: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(83 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(19 downto 0);

begin
  ce_1_sg_x1588 <= ce_1;
  clk_1_sg_x1588 <= clk_1;
  concatenate_y_net_x2 <= din;
  dout <= concatenate_y_net_x3;

  bussify_98903ebfe1: entity work.bussify_entity_ee21293818
    port map (
      in1 => adder_s_net_x4,
      in2 => adder_s_net_x5,
      in3 => adder_s_net_x6,
      in4 => adder_s_net_x7,
      bus_out => concatenate_y_net_x3
    );

  conv1_601fd7306a: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1588,
      clk_1 => clk_1_sg_x1588,
      in_x0 => reinterpret4_output_port_net_x1,
      out_x0 => adder_s_net_x4
    );

  conv2_cd73cfcba7: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1588,
      clk_1 => clk_1_sg_x1588,
      in_x0 => reinterpret3_output_port_net_x1,
      out_x0 => adder_s_net_x5
    );

  conv3_e809809591: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1588,
      clk_1 => clk_1_sg_x1588,
      in_x0 => reinterpret2_output_port_net_x1,
      out_x0 => adder_s_net_x6
    );

  conv4_a56960c20e: entity work.conv1_entity_d9a6ef2b1d
    port map (
      ce_1 => ce_1_sg_x1588,
      clk_1 => clk_1_sg_x1588,
      in_x0 => reinterpret1_output_port_net_x1,
      out_x0 => adder_s_net_x7
    );

  debus_eb0194394b: entity work.debus_entity_eb0194394b
    port map (
      bus_in => concatenate_y_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out4 => reinterpret4_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/bus_relational"

entity bus_relational_entity_a0f0b0e9c1 is
  port (
    a: in std_logic_vector(3 downto 0); 
    b: in std_logic_vector(3 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    a_b: out std_logic
  );
end bus_relational_entity_a0f0b0e9c1;

architecture structural of bus_relational_entity_a0f0b0e9c1 is
  signal ce_1_sg_x1589: std_logic;
  signal clk_1_sg_x1589: std_logic;
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic;
  signal reinterpret_out_output_port_net_x1: std_logic_vector(3 downto 0);
  signal relational1_op_net_x0: std_logic;

begin
  constant_op_net_x1 <= a;
  reinterpret_out_output_port_net_x1 <= b;
  ce_1_sg_x1589 <= ce_1;
  clk_1_sg_x1589 <= clk_1;
  a_b <= reinterpret1_output_port_net_x3;

  a_debus_a511bd0f36: entity work.a_debus_entity_778d2a5625
    port map (
      bus_in => constant_op_net_x1,
      msb_lsb_out1 => reinterpret1_output_port_net_x0
    );

  b_debus_c49cd08362: entity work.a_debus_entity_778d2a5625
    port map (
      bus_in => reinterpret_out_output_port_net_x1,
      msb_lsb_out1 => reinterpret1_output_port_net_x1
    );

  bussify_ac0ccedbbc: entity work.bussify_entity_cb7efd63bc
    port map (
      in1 => relational1_op_net_x0,
      bus_out => reinterpret1_output_port_net_x3
    );

  relational1: entity work.relational_01718d4f17
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret1_output_port_net_x1,
      ce => ce_1_sg_x1589,
      clk => clk_1_sg_x1589,
      clr => '0',
      op(0) => relational1_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/bus_scale/bussify"

entity bussify_entity_5c5cd2ec5b is
  port (
    in1: in std_logic_vector(19 downto 0); 
    in2: in std_logic_vector(19 downto 0); 
    in3: in std_logic_vector(19 downto 0); 
    in4: in std_logic_vector(19 downto 0); 
    bus_out: out std_logic_vector(79 downto 0)
  );
end bussify_entity_5c5cd2ec5b;

architecture structural of bussify_entity_5c5cd2ec5b is
  signal concatenate_y_net_x3: std_logic_vector(79 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(19 downto 0);
  signal scale1_op_net_x0: std_logic_vector(19 downto 0);
  signal scale2_op_net_x0: std_logic_vector(19 downto 0);
  signal scale3_op_net_x0: std_logic_vector(19 downto 0);
  signal scale4_op_net_x0: std_logic_vector(19 downto 0);

begin
  scale1_op_net_x0 <= in1;
  scale2_op_net_x0 <= in2;
  scale3_op_net_x0 <= in3;
  scale4_op_net_x0 <= in4;
  bus_out <= concatenate_y_net_x3;

  concatenate: entity work.concat_f86ebb6084
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concatenate_y_net_x3
    );

  reinterpret1: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale1_op_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale2_op_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale3_op_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_4a8cbc85ce
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => scale4_op_net_x0,
      output_port => reinterpret4_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/bus_scale"

entity bus_scale_entity_849d56a871 is
  port (
    din: in std_logic_vector(79 downto 0); 
    dout: out std_logic_vector(79 downto 0)
  );
end bus_scale_entity_849d56a871;

architecture structural of bus_scale_entity_849d56a871 is
  signal concat_y_net_x3: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(79 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(19 downto 0);
  signal scale1_op_net_x0: std_logic_vector(19 downto 0);
  signal scale2_op_net_x0: std_logic_vector(19 downto 0);
  signal scale3_op_net_x0: std_logic_vector(19 downto 0);
  signal scale4_op_net_x0: std_logic_vector(19 downto 0);

begin
  concat_y_net_x3 <= din;
  dout <= concatenate_y_net_x4;

  bussify_5c5cd2ec5b: entity work.bussify_entity_5c5cd2ec5b
    port map (
      in1 => scale1_op_net_x0,
      in2 => scale2_op_net_x0,
      in3 => scale3_op_net_x0,
      in4 => scale4_op_net_x0,
      bus_out => concatenate_y_net_x4
    );

  debus_b4f98d16f8: entity work.debus_entity_b07a3a212b
    port map (
      bus_in => concat_y_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  scale1: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret4_output_port_net_x0,
      op => scale1_op_net_x0
    );

  scale2: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret3_output_port_net_x0,
      op => scale2_op_net_x0
    );

  scale3: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret2_output_port_net_x0,
      op => scale3_op_net_x0
    );

  scale4: entity work.scale_97239b8ed2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => reinterpret1_output_port_net_x0,
      op => scale4_op_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/bus_sub"

entity bus_sub_entity_88da2f7d37 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(37 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    dout: out std_logic_vector(39 downto 0)
  );
end bus_sub_entity_88da2f7d37;

architecture structural of bus_sub_entity_88da2f7d37 is
  signal addsub1_s_net_x0: std_logic_vector(19 downto 0);
  signal addsub2_s_net_x0: std_logic_vector(19 downto 0);
  signal ce_1_sg_x1590: std_logic;
  signal clk_1_sg_x1590: std_logic;
  signal concatenate_y_net_x4: std_logic_vector(37 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(39 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(18 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(18 downto 0);

begin
  reinterpret1_output_port_net_x5 <= a;
  concatenate_y_net_x4 <= b;
  ce_1_sg_x1590 <= ce_1;
  clk_1_sg_x1590 <= clk_1;
  dout <= concatenate_y_net_x5;

  a_debus_e230f533fe: entity work.a_debus_entity_1018bb3de8
    port map (
      bus_in => reinterpret1_output_port_net_x5,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out2 => reinterpret2_output_port_net_x0
    );

  addsub1: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret2_output_port_net_x0,
      b => reinterpret2_output_port_net_x1,
      ce => ce_1_sg_x1590,
      clk => clk_1_sg_x1590,
      clr => '0',
      s => addsub1_s_net_x0
    );

  addsub2: entity work.addsub_5f641f1cd5
    port map (
      a => reinterpret1_output_port_net_x0,
      b => reinterpret1_output_port_net_x1,
      ce => ce_1_sg_x1590,
      clk => clk_1_sg_x1590,
      clr => '0',
      s => addsub2_s_net_x0
    );

  b_debus_6e0e559e2d: entity work.b_debus_entity_aae50da49a
    port map (
      bus_in => concatenate_y_net_x4,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  op_bussify_80eb404130: entity work.op_bussify_entity_11c6fd13cd
    port map (
      in1 => addsub1_s_net_x0,
      in2 => addsub2_s_net_x0,
      bus_out => concatenate_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/munge/join"

entity join_entity_6c52f1f9f8 is
  port (
    in1: in std_logic_vector(1 downto 0); 
    in2: in std_logic_vector(1 downto 0); 
    bus_out: out std_logic_vector(3 downto 0)
  );
end join_entity_6c52f1f9f8;

architecture structural of join_entity_6c52f1f9f8 is
  signal concatenate_y_net_x0: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(1 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(1 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(1 downto 0);

begin
  reinterpret2_output_port_net_x1 <= in1;
  reinterpret1_output_port_net_x1 <= in2;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_bd20dd351d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret2_output_port_net_x1,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret1_output_port_net_x1,
      output_port => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/munge/split"

entity split_entity_c86a6552d1 is
  port (
    bus_in: in std_logic_vector(3 downto 0); 
    lsb_out1: out std_logic_vector(1 downto 0); 
    msb_out2: out std_logic_vector(1 downto 0)
  );
end split_entity_c86a6552d1;

architecture structural of split_entity_c86a6552d1 is
  signal reinterpret1_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret_output_port_net_x0: std_logic_vector(3 downto 0);
  signal slice1_y_net: std_logic_vector(1 downto 0);
  signal slice2_y_net: std_logic_vector(1 downto 0);

begin
  reinterpret_output_port_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x2;
  msb_out2 <= reinterpret2_output_port_net_x2;

  reinterpret1: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  reinterpret2: entity work.reinterpret_9a54e08c7c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 1,
      x_width => 4,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 3,
      x_width => 4,
      y_width => 2
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/munge"

entity munge_entity_357ca253a5 is
  port (
    din: in std_logic_vector(3 downto 0); 
    dout: out std_logic_vector(3 downto 0)
  );
end munge_entity_357ca253a5;

architecture structural of munge_entity_357ca253a5 is
  signal concatenate_y_net_x0: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(3 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(1 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(3 downto 0);
  signal reinterpret_output_port_net_x0: std_logic_vector(3 downto 0);

begin
  concatenate_y_net_x6 <= din;
  dout <= reinterpret_out_output_port_net_x2;

  join_6c52f1f9f8: entity work.join_entity_6c52f1f9f8
    port map (
      in1 => reinterpret2_output_port_net_x2,
      in2 => reinterpret1_output_port_net_x2,
      bus_out => concatenate_y_net_x0
    );

  reinterpret: entity work.reinterpret_d610556e85
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concatenate_y_net_x6,
      output_port => reinterpret_output_port_net_x0
    );

  reinterpret_out: entity work.reinterpret_d610556e85
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concatenate_y_net_x0,
      output_port => reinterpret_out_output_port_net_x2
    );

  split_c86a6552d1: entity work.split_entity_c86a6552d1
    port map (
      bus_in => reinterpret_output_port_net_x0,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out2 => reinterpret2_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/mux/d_bussify"

entity d_bussify_entity_877ff52c3d is
  port (
    in1: in std_logic_vector(20 downto 0); 
    in2: in std_logic_vector(20 downto 0); 
    in3: in std_logic_vector(20 downto 0); 
    in4: in std_logic_vector(20 downto 0); 
    bus_out: out std_logic_vector(83 downto 0)
  );
end d_bussify_entity_877ff52c3d;

architecture structural of d_bussify_entity_877ff52c3d is
  signal concatenate_y_net_x4: std_logic_vector(83 downto 0);
  signal mux0_y_net_x0: std_logic_vector(20 downto 0);
  signal mux1_y_net_x0: std_logic_vector(20 downto 0);
  signal mux2_y_net_x0: std_logic_vector(20 downto 0);
  signal mux3_y_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(20 downto 0);

begin
  mux0_y_net_x0 <= in1;
  mux1_y_net_x0 <= in2;
  mux2_y_net_x0 <= in3;
  mux3_y_net_x0 <= in4;
  bus_out <= concatenate_y_net_x4;

  concatenate: entity work.concat_356a264444
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concatenate_y_net_x4
    );

  reinterpret1: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux0_y_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux1_y_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux2_y_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => mux3_y_net_x0,
      output_port => reinterpret4_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/mux/expand0"

entity expand0_entity_cb98829673 is
  port (
    bus_in: in std_logic_vector(83 downto 0); 
    lsb_out1: out std_logic_vector(20 downto 0); 
    msb_out4: out std_logic_vector(20 downto 0); 
    out2: out std_logic_vector(20 downto 0); 
    out3: out std_logic_vector(20 downto 0)
  );
end expand0_entity_cb98829673;

architecture structural of expand0_entity_cb98829673 is
  signal concatenate_y_net_x2: std_logic_vector(83 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(20 downto 0);
  signal slice1_y_net: std_logic_vector(20 downto 0);
  signal slice2_y_net: std_logic_vector(20 downto 0);
  signal slice3_y_net: std_logic_vector(20 downto 0);
  signal slice4_y_net: std_logic_vector(20 downto 0);

begin
  concatenate_y_net_x2 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out4 <= reinterpret4_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;

  reinterpret1: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_299ca43e25
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 20,
      x_width => 84,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 21,
      new_msb => 41,
      x_width => 84,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 42,
      new_msb => 62,
      x_width => 84,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 63,
      new_msb => 83,
      x_width => 84,
      y_width => 21
    )
    port map (
      x => concatenate_y_net_x2,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/mux"

entity mux_entity_630a0af6dd is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d0: in std_logic_vector(83 downto 0); 
    d1: in std_logic_vector(83 downto 0); 
    sel: in std_logic_vector(3 downto 0); 
    out_x0: out std_logic_vector(83 downto 0)
  );
end mux_entity_630a0af6dd;

architecture structural of mux_entity_630a0af6dd is
  signal ce_1_sg_x1591: std_logic;
  signal clk_1_sg_x1591: std_logic;
  signal concatenate_y_net_x6: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(83 downto 0);
  signal mux0_y_net_x0: std_logic_vector(20 downto 0);
  signal mux1_y_net_x0: std_logic_vector(20 downto 0);
  signal mux2_y_net_x0: std_logic_vector(20 downto 0);
  signal mux3_y_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic;
  signal reinterpret2_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic;
  signal reinterpret3_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic;
  signal reinterpret4_output_port_net_x0: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(20 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic;

begin
  ce_1_sg_x1591 <= ce_1;
  clk_1_sg_x1591 <= clk_1;
  concatenate_y_net_x6 <= d0;
  concatenate_y_net_x7 <= d1;
  concatenate_y_net_x8 <= sel;
  out_x0 <= concatenate_y_net_x9;

  d_bussify_877ff52c3d: entity work.d_bussify_entity_877ff52c3d
    port map (
      in1 => mux0_y_net_x0,
      in2 => mux1_y_net_x0,
      in3 => mux2_y_net_x0,
      in4 => mux3_y_net_x0,
      bus_out => concatenate_y_net_x9
    );

  expand0_cb98829673: entity work.expand0_entity_cb98829673
    port map (
      bus_in => concatenate_y_net_x6,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out4 => reinterpret4_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0
    );

  expand1_5b60dde69b: entity work.expand0_entity_cb98829673
    port map (
      bus_in => concatenate_y_net_x7,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out4 => reinterpret4_output_port_net_x1,
      out2 => reinterpret2_output_port_net_x1,
      out3 => reinterpret3_output_port_net_x1
    );

  mux0: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1591,
      clk => clk_1_sg_x1591,
      clr => '0',
      d0 => reinterpret4_output_port_net_x0,
      d1 => reinterpret4_output_port_net_x1,
      sel(0) => reinterpret4_output_port_net_x2,
      y => mux0_y_net_x0
    );

  mux1: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1591,
      clk => clk_1_sg_x1591,
      clr => '0',
      d0 => reinterpret3_output_port_net_x0,
      d1 => reinterpret3_output_port_net_x1,
      sel(0) => reinterpret3_output_port_net_x2,
      y => mux1_y_net_x0
    );

  mux2: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1591,
      clk => clk_1_sg_x1591,
      clr => '0',
      d0 => reinterpret2_output_port_net_x0,
      d1 => reinterpret2_output_port_net_x1,
      sel(0) => reinterpret2_output_port_net_x2,
      y => mux2_y_net_x0
    );

  mux3: entity work.mux_46aae2a33a
    port map (
      ce => ce_1_sg_x1591,
      clk => clk_1_sg_x1591,
      clr => '0',
      d0 => reinterpret1_output_port_net_x0,
      d1 => reinterpret1_output_port_net_x1,
      sel(0) => reinterpret1_output_port_net_x2,
      y => mux3_y_net_x0
    );

  sel_expand_4e27e48b9f: entity work.sel_expand_entity_adc2425a23
    port map (
      bus_in => concatenate_y_net_x8,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out4 => reinterpret4_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/shift_replicate"

entity shift_replicate_entity_55fd1c8662 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic_vector(3 downto 0)
  );
end shift_replicate_entity_55fd1c8662;

architecture structural of shift_replicate_entity_55fd1c8662 is
  signal ce_1_sg_x1592: std_logic;
  signal clk_1_sg_x1592: std_logic;
  signal concatenate_y_net_x10: std_logic_vector(3 downto 0);
  signal din0_0_q_net_x0: std_logic;
  signal din0_1_q_net_x0: std_logic;
  signal din0_2_q_net_x0: std_logic;
  signal din0_3_q_net_x0: std_logic;
  signal slice3_y_net_x0: std_logic;

begin
  ce_1_sg_x1592 <= ce_1;
  clk_1_sg_x1592 <= clk_1;
  slice3_y_net_x0 <= in_x0;
  out_x0 <= concatenate_y_net_x10;

  bussify_2629bd17ff: entity work.bussify_entity_40eba17d52
    port map (
      in1 => din0_0_q_net_x0,
      in2 => din0_1_q_net_x0,
      in3 => din0_2_q_net_x0,
      in4 => din0_3_q_net_x0,
      bus_out => concatenate_y_net_x10
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1592,
      clk => clk_1_sg_x1592,
      d(0) => slice3_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_0_q_net_x0
    );

  din0_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1592,
      clk => clk_1_sg_x1592,
      d(0) => slice3_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_1_q_net_x0
    );

  din0_2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1592,
      clk => clk_1_sg_x1592,
      d(0) => slice3_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_2_q_net_x0
    );

  din0_3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1592,
      clk => clk_1_sg_x1592,
      d(0) => slice3_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_3_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/twiddle/bus_convert/bussify"

entity bussify_entity_1a0d64f129 is
  port (
    in1: in std_logic_vector(18 downto 0); 
    in2: in std_logic_vector(18 downto 0); 
    bus_out: out std_logic_vector(37 downto 0)
  );
end bussify_entity_1a0d64f129;

architecture structural of bussify_entity_1a0d64f129 is
  signal adder_s_net_x1: std_logic_vector(18 downto 0);
  signal adder_s_net_x2: std_logic_vector(18 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(37 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(18 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(18 downto 0);

begin
  adder_s_net_x1 <= in1;
  adder_s_net_x2 <= in2;
  bus_out <= concatenate_y_net_x5;

  concatenate: entity work.concat_5a12f8f9be
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concatenate_y_net_x5
    );

  reinterpret1: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x1,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_bc4405cd1e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => adder_s_net_x2,
      output_port => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/twiddle/bus_convert/debus"

entity debus_entity_3590ac929a is
  port (
    bus_in: in std_logic_vector(73 downto 0); 
    lsb_out1: out std_logic_vector(36 downto 0); 
    msb_out2: out std_logic_vector(36 downto 0)
  );
end debus_entity_3590ac929a;

architecture structural of debus_entity_3590ac929a is
  signal reinterpret1_output_port_net_x1: std_logic_vector(73 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(36 downto 0);
  signal slice1_y_net: std_logic_vector(36 downto 0);
  signal slice2_y_net: std_logic_vector(36 downto 0);

begin
  reinterpret1_output_port_net_x1 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x2;
  msb_out2 <= reinterpret2_output_port_net_x1;

  reinterpret1: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  reinterpret2: entity work.reinterpret_5b4829fb41
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 36,
      x_width => 74,
      y_width => 37
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 37,
      new_msb => 73,
      x_width => 74,
      y_width => 37
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/twiddle/bus_convert"

entity bus_convert_entity_91b50cade4 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(73 downto 0); 
    misci: in std_logic_vector(36 downto 0); 
    dout: out std_logic_vector(37 downto 0); 
    misco: out std_logic_vector(36 downto 0)
  );
end bus_convert_entity_91b50cade4;

architecture structural of bus_convert_entity_91b50cade4 is
  signal adder_s_net_x2: std_logic_vector(18 downto 0);
  signal adder_s_net_x3: std_logic_vector(18 downto 0);
  signal ce_1_sg_x1595: std_logic;
  signal clk_1_sg_x1595: std_logic;
  signal concatenate_y_net_x6: std_logic_vector(37 downto 0);
  signal dmisc_q_net_x1: std_logic_vector(36 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(36 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(36 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(73 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(36 downto 0);

begin
  ce_1_sg_x1595 <= ce_1;
  clk_1_sg_x1595 <= clk_1;
  reinterpret1_output_port_net_x3 <= din;
  dmisc_q_net_x1 <= misci;
  dout <= concatenate_y_net_x6;
  misco <= dmisc_q_net_x2;

  bussify_1a0d64f129: entity work.bussify_entity_1a0d64f129
    port map (
      in1 => adder_s_net_x2,
      in2 => adder_s_net_x3,
      bus_out => concatenate_y_net_x6
    );

  conv1_eda7d65f2b: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x1595,
      clk_1 => clk_1_sg_x1595,
      in_x0 => reinterpret2_output_port_net_x1,
      out_x0 => adder_s_net_x2
    );

  conv2_a25d78c862: entity work.conv1_entity_da7c425d8c
    port map (
      ce_1 => ce_1_sg_x1595,
      clk_1 => clk_1_sg_x1595,
      in_x0 => reinterpret1_output_port_net_x2,
      out_x0 => adder_s_net_x3
    );

  debus_3590ac929a: entity work.debus_entity_3590ac929a
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  dmisc: entity work.delay_64530ed2c8
    port map (
      ce => ce_1_sg_x1595,
      clk => clk_1_sg_x1595,
      clr => '0',
      d => dmisc_q_net_x1,
      q => dmisc_q_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/twiddle/bus_create"

entity bus_create_entity_97340e9c90 is
  port (
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic; 
    in3: in std_logic_vector(35 downto 0); 
    bus_out: out std_logic_vector(72 downto 0)
  );
end bus_create_entity_97340e9c90;

architecture structural of bus_create_entity_97340e9c90 is
  signal concatenate_y_net_x0: std_logic_vector(72 downto 0);
  signal delay0_q_net_x1: std_logic;
  signal reinterpret1_output_port_net: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net: std_logic;
  signal reinterpret2_output_port_net_x3: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(35 downto 0);

begin
  reinterpret1_output_port_net_x1 <= in1;
  delay0_q_net_x1 <= in2;
  reinterpret2_output_port_net_x3 <= in3;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_b28df1ab2e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1(0) => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret1_output_port_net_x1,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_112d91c147
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port(0) => delay0_q_net_x1,
      output_port(0) => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret2_output_port_net_x3,
      output_port => reinterpret3_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/twiddle/bus_expand"

entity bus_expand_entity_d9bc53bf08 is
  port (
    bus_in: in std_logic_vector(72 downto 0); 
    lsb_out1: out std_logic_vector(36 downto 0); 
    msb_out2: out std_logic_vector(35 downto 0)
  );
end bus_expand_entity_d9bc53bf08;

architecture structural of bus_expand_entity_d9bc53bf08 is
  signal delay1_q_net_x0: std_logic_vector(72 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(35 downto 0);
  signal slice1_y_net: std_logic_vector(36 downto 0);
  signal slice2_y_net: std_logic_vector(35 downto 0);

begin
  delay1_q_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out2 <= reinterpret2_output_port_net_x0;

  reinterpret1: entity work.reinterpret_892b735f0d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 36,
      x_width => 73,
      y_width => 37
    )
    port map (
      x => delay1_q_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 37,
      new_msb => 72,
      x_width => 73,
      y_width => 36
    )
    port map (
      x => delay1_q_net_x0,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/twiddle/bus_expand1"

entity bus_expand1_entity_e1226d08d4 is
  port (
    bus_in: in std_logic_vector(36 downto 0); 
    lsb_out1: out std_logic_vector(35 downto 0); 
    msb_out2: out std_logic
  );
end bus_expand1_entity_e1226d08d4;

architecture structural of bus_expand1_entity_e1226d08d4 is
  signal dmisc_q_net_x3: std_logic_vector(36 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic_vector(35 downto 0);
  signal slice1_y_net: std_logic_vector(35 downto 0);
  signal slice2_y_net_x0: std_logic;

begin
  dmisc_q_net_x3 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x6;
  msb_out2 <= slice2_y_net_x0;

  reinterpret1: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x6
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 35,
      x_width => 37,
      y_width => 36
    )
    port map (
      x => dmisc_q_net_x3,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 36,
      new_msb => 36,
      x_width => 37,
      y_width => 1
    )
    port map (
      x => dmisc_q_net_x3,
      y(0) => slice2_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/twiddle/bus_mult/a*b_bussify"

entity a_b_bussify_entity_530563ecbd is
  port (
    in1: in std_logic_vector(73 downto 0); 
    bus_out: out std_logic_vector(73 downto 0)
  );
end a_b_bussify_entity_530563ecbd;

architecture structural of a_b_bussify_entity_530563ecbd is
  signal concat_y_net_x0: std_logic_vector(73 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(73 downto 0);

begin
  concat_y_net_x0 <= in1;
  bus_out <= reinterpret1_output_port_net_x4;

  reinterpret1: entity work.reinterpret_efdf1c3890
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concat_y_net_x0,
      output_port => reinterpret1_output_port_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/twiddle/bus_mult/repa"

entity repa_entity_4418adf0c5 is
  port (
    in_x0: in std_logic_vector(35 downto 0); 
    out_x0: out std_logic_vector(35 downto 0)
  );
end repa_entity_4418adf0c5;

architecture structural of repa_entity_4418adf0c5 is
  signal concat_y_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(35 downto 0);

begin
  concat_y_net_x1 <= in_x0;
  out_x0 <= reinterpret1_output_port_net_x3;

  bussify_eb61e4c4ae: entity work.bussify_entity_8f36b365fb
    port map (
      in1 => concat_y_net_x1,
      bus_out => reinterpret1_output_port_net_x3
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/twiddle/bus_mult"

entity bus_mult_entity_0442ffebf5 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(36 downto 0); 
    a_b: out std_logic_vector(73 downto 0); 
    misco: out std_logic_vector(36 downto 0)
  );
end bus_mult_entity_0442ffebf5;

architecture structural of bus_mult_entity_0442ffebf5 is
  signal ce_1_sg_x1599: std_logic;
  signal clk_1_sg_x1599: std_logic;
  signal concat_y_net_x2: std_logic_vector(73 downto 0);
  signal concat_y_net_x3: std_logic_vector(35 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(36 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(73 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x8: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(35 downto 0);

begin
  concat_y_net_x3 <= a;
  reinterpret2_output_port_net_x3 <= b;
  ce_1_sg_x1599 <= ce_1;
  clk_1_sg_x1599 <= clk_1;
  reinterpret1_output_port_net_x9 <= misci;
  a_b <= reinterpret1_output_port_net_x10;
  misco <= dmisc_q_net_x2;

  a_b_bussify_530563ecbd: entity work.a_b_bussify_entity_530563ecbd
    port map (
      in1 => concat_y_net_x2,
      bus_out => reinterpret1_output_port_net_x10
    );

  a_debus_71b5572aef: entity work.a_debus_entity_43e449aa4c
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      msb_lsb_out1 => reinterpret1_output_port_net_x6
    );

  b_debus_e485680fdb: entity work.a_debus_entity_43e449aa4c
    port map (
      bus_in => reinterpret1_output_port_net_x8,
      msb_lsb_out1 => reinterpret1_output_port_net_x7
    );

  dmisc: entity work.delay_2d0f74b2c1
    port map (
      ce => ce_1_sg_x1599,
      clk => clk_1_sg_x1599,
      clr => '0',
      d => reinterpret1_output_port_net_x9,
      q => dmisc_q_net_x2
    );

  mult1_71ebb8820c: entity work.mult1_entity_675dd78166
    port map (
      a => reinterpret1_output_port_net_x6,
      b => reinterpret1_output_port_net_x7,
      ce_1 => ce_1_sg_x1599,
      clk_1 => clk_1_sg_x1599,
      ab => concat_y_net_x2
    );

  repa_4418adf0c5: entity work.repa_entity_4418adf0c5
    port map (
      in_x0 => concat_y_net_x3,
      out_x0 => reinterpret1_output_port_net_x3
    );

  repb_75c41b7844: entity work.repa_entity_4418adf0c5
    port map (
      in_x0 => reinterpret2_output_port_net_x3,
      out_x0 => reinterpret1_output_port_net_x8
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/twiddle/coeff_gen/cosin/add_convert0"

entity add_convert0_entity_14997ce1e6 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    theta: in std_logic_vector(9 downto 0); 
    add: out std_logic_vector(9 downto 0); 
    negate: out std_logic
  );
end add_convert0_entity_14997ce1e6;

architecture structural of add_convert0_entity_14997ce1e6 is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x0: std_logic_vector(9 downto 0);
  signal ce_1_sg_x1600: std_logic;
  signal clk_1_sg_x1600: std_logic;
  signal concat_y_net: std_logic_vector(13 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(9 downto 0);
  signal delay13_q_net: std_logic_vector(9 downto 0);
  signal delay14_q_net: std_logic_vector(9 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(13 downto 0);
  signal invert_y_net: std_logic;
  signal lookup_y_net: std_logic_vector(11 downto 0);
  signal new_add_y_net: std_logic_vector(9 downto 0);
  signal pad_op_net: std_logic_vector(3 downto 0);
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x1600 <= ce_1;
  clk_1_sg_x1600 <= clk_1;
  assert_dout_net_x0 <= theta;
  add <= convert2_dout_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x1600,
      clk => clk_1_sg_x1600,
      clr => '0',
      en => "1",
      s => addsub5_s_net
    );

  concat: entity work.concat_06ee58da9a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => addsub5_s_net,
      in1 => lookup_y_net,
      y => concat_y_net
    );

  convert2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 10,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 10,
      latency => 3,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1600,
      clk => clk_1_sg_x1600,
      clr => '0',
      din => delay13_q_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  delay13: entity work.delay_325391d82e
    port map (
      ce => ce_1_sg_x1600,
      clk => clk_1_sg_x1600,
      clr => '0',
      d => delay14_q_net,
      q => delay13_q_net
    );

  delay14: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1600,
      clk => clk_1_sg_x1600,
      d => new_add_y_net,
      en => '1',
      rst => '1',
      q => delay14_q_net
    );

  delay2: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x1600,
      clk => clk_1_sg_x1600,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_df2ac77737
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => pad_op_net,
      in1 => assert_dout_net_x0,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  lookup: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 11,
      x_width => 14,
      y_width => 12
    )
    port map (
      x => fluff_y_net,
      y => lookup_y_net
    );

  new_add: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 14,
      y_width => 10
    )
    port map (
      x => concat_y_net,
      y => new_add_y_net
    );

  pad: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 12,
      new_msb => 13,
      x_width => 14,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/twiddle/coeff_gen/cosin/add_convert1"

entity add_convert1_entity_a8e7a479ab is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    theta: in std_logic_vector(9 downto 0); 
    misco: out std_logic_vector(72 downto 0); 
    negate: out std_logic
  );
end add_convert1_entity_a8e7a479ab;

architecture structural of add_convert1_entity_a8e7a479ab is
  signal addsub5_s_net: std_logic_vector(1 downto 0);
  signal assert_dout_net_x1: std_logic_vector(9 downto 0);
  signal ce_1_sg_x1601: std_logic;
  signal clk_1_sg_x1601: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(72 downto 0);
  signal delay1_q_net_x0: std_logic_vector(72 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal direction_offset_op_net: std_logic_vector(1 downto 0);
  signal fluff_y_net: std_logic_vector(13 downto 0);
  signal invert_y_net: std_logic;
  signal pad_op_net: std_logic_vector(3 downto 0);
  signal quadrant_y_net: std_logic_vector(1 downto 0);

begin
  ce_1_sg_x1601 <= ce_1;
  clk_1_sg_x1601 <= clk_1;
  concatenate_y_net_x1 <= misci;
  assert_dout_net_x1 <= theta;
  misco <= delay1_q_net_x0;
  negate <= delay2_q_net_x0;

  addsub5: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlUnsigned,
      a_bin_pt => 0,
      a_width => 2,
      b_arith => xlUnsigned,
      b_bin_pt => 0,
      b_width => 2,
      c_has_c_out => 0,
      c_latency => 0,
      c_output_width => 3,
      core_name0 => "addsb_11_0_6a49eeb869ee9525",
      extra_registers => 0,
      full_s_arith => 1,
      full_s_width => 3,
      latency => 0,
      overflow => 1,
      quantization => 1,
      s_arith => xlUnsigned,
      s_bin_pt => 0,
      s_width => 2
    )
    port map (
      a => direction_offset_op_net,
      b => quadrant_y_net,
      ce => ce_1_sg_x1601,
      clk => clk_1_sg_x1601,
      clr => '0',
      en => "1",
      s => addsub5_s_net
    );

  delay1: entity work.delay_ecf456c907
    port map (
      ce => ce_1_sg_x1601,
      clk => clk_1_sg_x1601,
      clr => '0',
      d => concatenate_y_net_x1,
      q => delay1_q_net_x0
    );

  delay2: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x1601,
      clk => clk_1_sg_x1601,
      clr => '0',
      d(0) => invert_y_net,
      q(0) => delay2_q_net_x0
    );

  direction_offset: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => direction_offset_op_net
    );

  fluff: entity work.concat_df2ac77737
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => pad_op_net,
      in1 => assert_dout_net_x1,
      y => fluff_y_net
    );

  invert: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => addsub5_s_net,
      y(0) => invert_y_net
    );

  pad: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => pad_op_net
    );

  quadrant: entity work.xlslice
    generic map (
      new_lsb => 12,
      new_msb => 13,
      x_width => 14,
      y_width => 2
    )
    port map (
      x => fluff_y_net,
      y => quadrant_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/twiddle/coeff_gen/cosin/invert1"

entity invert1_entity_7ca3aac22e is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(17 downto 0); 
    misci: in std_logic_vector(72 downto 0); 
    negate_x0: in std_logic; 
    misco: out std_logic_vector(72 downto 0); 
    out_x0: out std_logic_vector(17 downto 0)
  );
end invert1_entity_7ca3aac22e;

architecture structural of invert1_entity_7ca3aac22e is
  signal ce_1_sg_x1603: std_logic;
  signal clk_1_sg_x1603: std_logic;
  signal delay1_q_net_x1: std_logic_vector(72 downto 0);
  signal delay20_q_net: std_logic_vector(17 downto 0);
  signal delay21_q_net: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(72 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x0: std_logic_vector(17 downto 0);
  signal negate_op_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x1603 <= ce_1;
  clk_1_sg_x1603 <= clk_1;
  force_im_output_port_net_x1 <= in_x0;
  delay_q_net_x0 <= misci;
  delay8_q_net_x0 <= negate_x0;
  misco <= delay1_q_net_x1;
  out_x0 <= mux_y_net_x0;

  delay1: entity work.delay_ecf456c907
    port map (
      ce => ce_1_sg_x1603,
      clk => clk_1_sg_x1603,
      clr => '0',
      d => delay_q_net_x0,
      q => delay1_q_net_x1
    );

  delay20: entity work.delay_2f744cdafb
    port map (
      ce => ce_1_sg_x1603,
      clk => clk_1_sg_x1603,
      clr => '0',
      d => force_im_output_port_net_x1,
      q => delay20_q_net
    );

  delay21: entity work.delay_c53de546ea
    port map (
      ce => ce_1_sg_x1603,
      clk => clk_1_sg_x1603,
      clr => '0',
      d(0) => delay8_q_net_x0,
      q(0) => delay21_q_net
    );

  mux: entity work.mux_1896e7760c
    port map (
      ce => ce_1_sg_x1603,
      clk => clk_1_sg_x1603,
      clr => '0',
      d0 => delay20_q_net,
      d1 => negate_op_net,
      sel(0) => delay21_q_net,
      y => mux_y_net_x0
    );

  negate: entity work.negate_894f23b88c
    port map (
      ce => ce_1_sg_x1603,
      clk => clk_1_sg_x1603,
      clr => '0',
      ip => force_im_output_port_net_x1,
      op => negate_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/twiddle/coeff_gen/cosin"

entity cosin_entity_95d9bdafe5 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    theta: in std_logic_vector(9 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(72 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_95d9bdafe5;

architecture structural of cosin_entity_95d9bdafe5 is
  signal assert_dout_net_x1: std_logic_vector(9 downto 0);
  signal ce_1_sg_x1604: std_logic;
  signal clk_1_sg_x1604: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(72 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(9 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(72 downto 0);
  signal delay1_q_net_x2: std_logic_vector(72 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(72 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1604 <= ce_1;
  clk_1_sg_x1604 <= clk_1;
  concatenate_y_net_x2 <= misci;
  slice_y_net_x0 <= theta;
  cos <= mux_y_net_x2;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x3;

  add_convert0_14997ce1e6: entity work.add_convert0_entity_14997ce1e6
    port map (
      ce_1 => ce_1_sg_x1604,
      clk_1 => clk_1_sg_x1604,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_a8e7a479ab: entity work.add_convert1_entity_a8e7a479ab
    port map (
      ce_1 => ce_1_sg_x1604,
      clk_1 => clk_1_sg_x1604,
      misci => concatenate_y_net_x2,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 10,
      dout_width => 10
    )
    port map (
      din => slice_y_net_x0,
      dout => assert_dout_net_x1
    );

  c_to_ri_c8988f75a6: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_4e7d828d94
    port map (
      ce => ce_1_sg_x1604,
      clk => clk_1_sg_x1604,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1604,
      clk => clk_1_sg_x1604,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1604,
      clk => clk_1_sg_x1604,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_29d881cc3e: entity work.invert0_entity_0a6af8c8da
    port map (
      ce_1 => ce_1_sg_x1604,
      clk_1 => clk_1_sg_x1604,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_7ca3aac22e: entity work.invert1_entity_7ca3aac22e
    port map (
      ce_1 => ce_1_sg_x1604,
      clk_1 => clk_1_sg_x1604,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 36,
      core_name0 => "bmg_72_96ab944b43e5c4d3",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x1604,
      clk => clk_1_sg_x1604,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/twiddle/coeff_gen"

entity coeff_gen_entity_d7d6c5b1ed is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(72 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_d7d6c5b1ed;

architecture structural of coeff_gen_entity_d7d6c5b1ed is
  signal ce_1_sg_x1605: std_logic;
  signal clk_1_sg_x1605: std_logic;
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay0_q_net_x2: std_logic;
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1605 <= ce_1;
  clk_1_sg_x1605 <= clk_1;
  concatenate_y_net_x3 <= misci;
  delay0_q_net_x2 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x5;

  cosin_95d9bdafe5: entity work.cosin_entity_95d9bdafe5
    port map (
      ce_1 => ce_1_sg_x1605,
      clk_1 => clk_1_sg_x1605,
      misci => concatenate_y_net_x3,
      theta => slice_y_net_x0,
      cos => mux_y_net_x4,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x5
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x1605,
      clk => clk_1_sg_x1605,
      clr => '0',
      rst(0) => delay0_q_net_x2,
      op => counter_op_net
    );

  ri_to_c_41ff10ccee: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x5
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 10,
      y_width => 10
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0/twiddle"

entity twiddle_entity_a587db64ea is
  port (
    ai: in std_logic_vector(35 downto 0); 
    bi: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(35 downto 0); 
    bwo: out std_logic_vector(37 downto 0); 
    sync_out: out std_logic
  );
end twiddle_entity_a587db64ea;

architecture structural of twiddle_entity_a587db64ea is
  signal ce_1_sg_x1606: std_logic;
  signal clk_1_sg_x1606: std_logic;
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(37 downto 0);
  signal delay0_q_net_x3: std_logic;
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(36 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(36 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(73 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x5: std_logic_vector(35 downto 0);
  signal slice2_y_net_x1: std_logic;

begin
  reinterpret2_output_port_net_x5 <= ai;
  reinterpret1_output_port_net_x2 <= bi;
  ce_1_sg_x1606 <= ce_1;
  clk_1_sg_x1606 <= clk_1;
  delay0_q_net_x3 <= sync_in;
  ao <= reinterpret1_output_port_net_x11;
  bwo <= concatenate_y_net_x7;
  sync_out <= slice2_y_net_x1;

  bus_convert_91b50cade4: entity work.bus_convert_entity_91b50cade4
    port map (
      ce_1 => ce_1_sg_x1606,
      clk_1 => clk_1_sg_x1606,
      din => reinterpret1_output_port_net_x10,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x7,
      misco => dmisc_q_net_x3
    );

  bus_create_97340e9c90: entity work.bus_create_entity_97340e9c90
    port map (
      in1 => reinterpret1_output_port_net_x2,
      in2 => delay0_q_net_x3,
      in3 => reinterpret2_output_port_net_x5,
      bus_out => concatenate_y_net_x3
    );

  bus_expand1_e1226d08d4: entity work.bus_expand1_entity_e1226d08d4
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x11,
      msb_out2 => slice2_y_net_x1
    );

  bus_expand_d9bc53bf08: entity work.bus_expand_entity_d9bc53bf08
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x9,
      msb_out2 => reinterpret2_output_port_net_x4
    );

  bus_mult_0442ffebf5: entity work.bus_mult_entity_0442ffebf5
    port map (
      a => concat_y_net_x5,
      b => reinterpret2_output_port_net_x4,
      ce_1 => ce_1_sg_x1606,
      clk_1 => clk_1_sg_x1606,
      misci => reinterpret1_output_port_net_x9,
      a_b => reinterpret1_output_port_net_x10,
      misco => dmisc_q_net_x2
    );

  coeff_gen_d7d6c5b1ed: entity work.coeff_gen_entity_d7d6c5b1ed
    port map (
      ce_1 => ce_1_sg_x1606,
      clk_1 => clk_1_sg_x1606,
      misci => concatenate_y_net_x3,
      rst => delay0_q_net_x3,
      misco => delay1_q_net_x3,
      w => concat_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_0"

entity butterfly3_0_entity_8062a214fc is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic; 
    sync_out: out std_logic
  );
end butterfly3_0_entity_8062a214fc;

architecture structural of butterfly3_0_entity_8062a214fc is
  signal ce_1_sg_x1607: std_logic;
  signal clk_1_sg_x1607: std_logic;
  signal concat_y_net_x3: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(37 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(39 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(39 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x0: std_logic;
  signal delay0_q_net_x4: std_logic;
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic;
  signal reinterpret2_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x6: std_logic_vector(35 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(3 downto 0);
  signal slice2_y_net_x1: std_logic;
  signal slice3_y_net_x1: std_logic;

begin
  reinterpret2_output_port_net_x6 <= a;
  reinterpret1_output_port_net_x4 <= b;
  ce_1_sg_x1607 <= ce_1;
  clk_1_sg_x1607 <= clk_1;
  slice3_y_net_x1 <= shift;
  delay0_q_net_x4 <= sync_in;
  a_bw <= reinterpret2_output_port_net_x2;
  of_x0 <= reinterpret1_output_port_net_x5;
  sync_out <= delay0_q_net_x0;

  bus_add_c1c3c9cfae: entity work.bus_add_entity_c1c3c9cfae
    port map (
      a => reinterpret1_output_port_net_x11,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1607,
      clk_1 => clk_1_sg_x1607,
      dout => concatenate_y_net_x3
    );

  bus_convert_9afdc2814a: entity work.bus_convert_entity_9afdc2814a
    port map (
      ce_1 => ce_1_sg_x1607,
      clk_1 => clk_1_sg_x1607,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_77aa047eca: entity work.bus_expand_entity_77aa047eca
    port map (
      bus_in => concatenate_y_net_x5,
      msb_out2 => reinterpret2_output_port_net_x2
    );

  bus_norm0_8ef81a9379: entity work.bus_norm0_entity_8ef81a9379
    port map (
      ce_1 => ce_1_sg_x1607,
      clk_1 => clk_1_sg_x1607,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_42dcedf23c: entity work.bus_norm1_entity_42dcedf23c
    port map (
      ce_1 => ce_1_sg_x1607,
      clk_1 => clk_1_sg_x1607,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_a0f0b0e9c1: entity work.bus_relational_entity_a0f0b0e9c1
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      ce_1 => ce_1_sg_x1607,
      clk_1 => clk_1_sg_x1607,
      a_b => reinterpret1_output_port_net_x5
    );

  bus_scale_849d56a871: entity work.bus_scale_entity_849d56a871
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_88da2f7d37: entity work.bus_sub_entity_88da2f7d37
    port map (
      a => reinterpret1_output_port_net_x11,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1607,
      clk_1 => clk_1_sg_x1607,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_cfdc93535e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  delay0: entity work.delay_aab7b18c27
    port map (
      ce => ce_1_sg_x1607,
      clk => clk_1_sg_x1607,
      clr => '0',
      d(0) => slice2_y_net_x1,
      q(0) => delay0_q_net_x0
    );

  munge_357ca253a5: entity work.munge_entity_357ca253a5
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_630a0af6dd: entity work.mux_entity_630a0af6dd
    port map (
      ce_1 => ce_1_sg_x1607,
      clk_1 => clk_1_sg_x1607,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_55fd1c8662: entity work.shift_replicate_entity_55fd1c8662
    port map (
      ce_1 => ce_1_sg_x1607,
      clk_1 => clk_1_sg_x1607,
      in_x0 => slice3_y_net_x1,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_a587db64ea: entity work.twiddle_entity_a587db64ea
    port map (
      ai => reinterpret2_output_port_net_x6,
      bi => reinterpret1_output_port_net_x4,
      ce_1 => ce_1_sg_x1607,
      clk_1 => clk_1_sg_x1607,
      sync_in => delay0_q_net_x4,
      ao => reinterpret1_output_port_net_x11,
      bwo => concatenate_y_net_x12,
      sync_out => slice2_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_1/twiddle/bus_expand1"

entity bus_expand1_entity_29a4630f8b is
  port (
    bus_in: in std_logic_vector(36 downto 0); 
    lsb_out1: out std_logic_vector(35 downto 0)
  );
end bus_expand1_entity_29a4630f8b;

architecture structural of bus_expand1_entity_29a4630f8b is
  signal dmisc_q_net_x3: std_logic_vector(36 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic_vector(35 downto 0);
  signal slice1_y_net: std_logic_vector(35 downto 0);

begin
  dmisc_q_net_x3 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x6;

  reinterpret1: entity work.reinterpret_86b044698f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x6
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 35,
      x_width => 37,
      y_width => 36
    )
    port map (
      x => dmisc_q_net_x3,
      y => slice1_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_1/twiddle/coeff_gen/cosin"

entity cosin_entity_580159a5c3 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    theta: in std_logic_vector(9 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(72 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_580159a5c3;

architecture structural of cosin_entity_580159a5c3 is
  signal assert_dout_net_x1: std_logic_vector(9 downto 0);
  signal ce_1_sg_x1639: std_logic;
  signal clk_1_sg_x1639: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(72 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(9 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(72 downto 0);
  signal delay1_q_net_x2: std_logic_vector(72 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(72 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1639 <= ce_1;
  clk_1_sg_x1639 <= clk_1;
  concatenate_y_net_x2 <= misci;
  slice_y_net_x0 <= theta;
  cos <= mux_y_net_x3;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x2;

  add_convert0_12b2a90bb9: entity work.add_convert0_entity_14997ce1e6
    port map (
      ce_1 => ce_1_sg_x1639,
      clk_1 => clk_1_sg_x1639,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_f0c5dc9ffd: entity work.add_convert1_entity_a8e7a479ab
    port map (
      ce_1 => ce_1_sg_x1639,
      clk_1 => clk_1_sg_x1639,
      misci => concatenate_y_net_x2,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 10,
      dout_width => 10
    )
    port map (
      din => slice_y_net_x0,
      dout => assert_dout_net_x1
    );

  c_to_ri_02eb95d99c: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_4e7d828d94
    port map (
      ce => ce_1_sg_x1639,
      clk => clk_1_sg_x1639,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1639,
      clk => clk_1_sg_x1639,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1639,
      clk => clk_1_sg_x1639,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_c75805175e: entity work.invert0_entity_0a6af8c8da
    port map (
      ce_1 => ce_1_sg_x1639,
      clk_1 => clk_1_sg_x1639,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_9d40ceb6a3: entity work.invert1_entity_7ca3aac22e
    port map (
      ce_1 => ce_1_sg_x1639,
      clk_1 => clk_1_sg_x1639,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 36,
      core_name0 => "bmg_72_d9e8b569ea27a9e5",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x1639,
      clk => clk_1_sg_x1639,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_1/twiddle/coeff_gen"

entity coeff_gen_entity_2a9008f243 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(72 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_2a9008f243;

architecture structural of coeff_gen_entity_2a9008f243 is
  signal ce_1_sg_x1640: std_logic;
  signal clk_1_sg_x1640: std_logic;
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay0_q_net_x6: std_logic;
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1640 <= ce_1;
  clk_1_sg_x1640 <= clk_1;
  concatenate_y_net_x3 <= misci;
  delay0_q_net_x6 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x5;

  cosin_580159a5c3: entity work.cosin_entity_580159a5c3
    port map (
      ce_1 => ce_1_sg_x1640,
      clk_1 => clk_1_sg_x1640,
      misci => concatenate_y_net_x3,
      theta => slice_y_net_x0,
      cos => mux_y_net_x5,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x4
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x1640,
      clk => clk_1_sg_x1640,
      clr => '0',
      rst(0) => delay0_q_net_x6,
      op => counter_op_net
    );

  ri_to_c_1ae0cce98a: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x5
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 10,
      y_width => 10
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_1/twiddle"

entity twiddle_entity_ac1c461423 is
  port (
    ai: in std_logic_vector(35 downto 0); 
    bi: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(35 downto 0); 
    bwo: out std_logic_vector(37 downto 0)
  );
end twiddle_entity_ac1c461423;

architecture structural of twiddle_entity_ac1c461423 is
  signal ce_1_sg_x1641: std_logic;
  signal clk_1_sg_x1641: std_logic;
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(37 downto 0);
  signal delay0_q_net_x7: std_logic;
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(36 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(36 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(73 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x12: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(35 downto 0);

begin
  reinterpret2_output_port_net_x2 <= ai;
  reinterpret1_output_port_net_x11 <= bi;
  ce_1_sg_x1641 <= ce_1;
  clk_1_sg_x1641 <= clk_1;
  delay0_q_net_x7 <= sync_in;
  ao <= reinterpret1_output_port_net_x12;
  bwo <= concatenate_y_net_x7;

  bus_convert_23b1162f42: entity work.bus_convert_entity_91b50cade4
    port map (
      ce_1 => ce_1_sg_x1641,
      clk_1 => clk_1_sg_x1641,
      din => reinterpret1_output_port_net_x10,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x7,
      misco => dmisc_q_net_x3
    );

  bus_create_f222553533: entity work.bus_create_entity_97340e9c90
    port map (
      in1 => reinterpret1_output_port_net_x11,
      in2 => delay0_q_net_x7,
      in3 => reinterpret2_output_port_net_x2,
      bus_out => concatenate_y_net_x3
    );

  bus_expand1_29a4630f8b: entity work.bus_expand1_entity_29a4630f8b
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x12
    );

  bus_expand_ae1ff707b0: entity work.bus_expand_entity_d9bc53bf08
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x9,
      msb_out2 => reinterpret2_output_port_net_x3
    );

  bus_mult_bc7631205b: entity work.bus_mult_entity_0442ffebf5
    port map (
      a => concat_y_net_x5,
      b => reinterpret2_output_port_net_x3,
      ce_1 => ce_1_sg_x1641,
      clk_1 => clk_1_sg_x1641,
      misci => reinterpret1_output_port_net_x9,
      a_b => reinterpret1_output_port_net_x10,
      misco => dmisc_q_net_x2
    );

  coeff_gen_2a9008f243: entity work.coeff_gen_entity_2a9008f243
    port map (
      ce_1 => ce_1_sg_x1641,
      clk_1 => clk_1_sg_x1641,
      misci => concatenate_y_net_x3,
      rst => delay0_q_net_x7,
      misco => delay1_q_net_x3,
      w => concat_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_1"

entity butterfly3_1_entity_e619c6d458 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic
  );
end butterfly3_1_entity_e619c6d458;

architecture structural of butterfly3_1_entity_e619c6d458 is
  signal ce_1_sg_x1642: std_logic;
  signal clk_1_sg_x1642: std_logic;
  signal concat_y_net_x3: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(37 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(39 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(39 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x8: std_logic;
  signal reinterpret1_output_port_net_x12: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x13: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic;
  signal reinterpret2_output_port_net_x3: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(35 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(3 downto 0);
  signal slice3_y_net_x3: std_logic;

begin
  reinterpret2_output_port_net_x3 <= a;
  reinterpret1_output_port_net_x13 <= b;
  ce_1_sg_x1642 <= ce_1;
  clk_1_sg_x1642 <= clk_1;
  slice3_y_net_x3 <= shift;
  delay0_q_net_x8 <= sync_in;
  a_bw <= reinterpret2_output_port_net_x4;
  of_x0 <= reinterpret1_output_port_net_x4;

  bus_add_add17cfc03: entity work.bus_add_entity_c1c3c9cfae
    port map (
      a => reinterpret1_output_port_net_x12,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1642,
      clk_1 => clk_1_sg_x1642,
      dout => concatenate_y_net_x3
    );

  bus_convert_dc8fc838ed: entity work.bus_convert_entity_9afdc2814a
    port map (
      ce_1 => ce_1_sg_x1642,
      clk_1 => clk_1_sg_x1642,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_135c476451: entity work.bus_expand_entity_77aa047eca
    port map (
      bus_in => concatenate_y_net_x5,
      msb_out2 => reinterpret2_output_port_net_x4
    );

  bus_norm0_46360e5f27: entity work.bus_norm0_entity_8ef81a9379
    port map (
      ce_1 => ce_1_sg_x1642,
      clk_1 => clk_1_sg_x1642,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_933e8ed971: entity work.bus_norm1_entity_42dcedf23c
    port map (
      ce_1 => ce_1_sg_x1642,
      clk_1 => clk_1_sg_x1642,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_1e5b03c715: entity work.bus_relational_entity_a0f0b0e9c1
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      ce_1 => ce_1_sg_x1642,
      clk_1 => clk_1_sg_x1642,
      a_b => reinterpret1_output_port_net_x4
    );

  bus_scale_99e3fec824: entity work.bus_scale_entity_849d56a871
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_6277281380: entity work.bus_sub_entity_88da2f7d37
    port map (
      a => reinterpret1_output_port_net_x12,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1642,
      clk_1 => clk_1_sg_x1642,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_cfdc93535e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  munge_396298f246: entity work.munge_entity_357ca253a5
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_24bfc20393: entity work.mux_entity_630a0af6dd
    port map (
      ce_1 => ce_1_sg_x1642,
      clk_1 => clk_1_sg_x1642,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_9d48384f8d: entity work.shift_replicate_entity_55fd1c8662
    port map (
      ce_1 => ce_1_sg_x1642,
      clk_1 => clk_1_sg_x1642,
      in_x0 => slice3_y_net_x3,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_ac1c461423: entity work.twiddle_entity_ac1c461423
    port map (
      ai => reinterpret2_output_port_net_x3,
      bi => reinterpret1_output_port_net_x13,
      ce_1 => ce_1_sg_x1642,
      clk_1 => clk_1_sg_x1642,
      sync_in => delay0_q_net_x8,
      ao => reinterpret1_output_port_net_x12,
      bwo => concatenate_y_net_x12
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_2/twiddle/coeff_gen/cosin"

entity cosin_entity_06ffe0cf08 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    theta: in std_logic_vector(9 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(72 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_06ffe0cf08;

architecture structural of cosin_entity_06ffe0cf08 is
  signal assert_dout_net_x1: std_logic_vector(9 downto 0);
  signal ce_1_sg_x1674: std_logic;
  signal clk_1_sg_x1674: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(72 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(9 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(72 downto 0);
  signal delay1_q_net_x2: std_logic_vector(72 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(72 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1674 <= ce_1;
  clk_1_sg_x1674 <= clk_1;
  concatenate_y_net_x2 <= misci;
  slice_y_net_x0 <= theta;
  cos <= mux_y_net_x2;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x3;

  add_convert0_b802e69039: entity work.add_convert0_entity_14997ce1e6
    port map (
      ce_1 => ce_1_sg_x1674,
      clk_1 => clk_1_sg_x1674,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_fb556fed03: entity work.add_convert1_entity_a8e7a479ab
    port map (
      ce_1 => ce_1_sg_x1674,
      clk_1 => clk_1_sg_x1674,
      misci => concatenate_y_net_x2,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 10,
      dout_width => 10
    )
    port map (
      din => slice_y_net_x0,
      dout => assert_dout_net_x1
    );

  c_to_ri_d5fdef5874: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_4e7d828d94
    port map (
      ce => ce_1_sg_x1674,
      clk => clk_1_sg_x1674,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1674,
      clk => clk_1_sg_x1674,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1674,
      clk => clk_1_sg_x1674,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_f6558c3294: entity work.invert0_entity_0a6af8c8da
    port map (
      ce_1 => ce_1_sg_x1674,
      clk_1 => clk_1_sg_x1674,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_1b77e24c9b: entity work.invert1_entity_7ca3aac22e
    port map (
      ce_1 => ce_1_sg_x1674,
      clk_1 => clk_1_sg_x1674,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 36,
      core_name0 => "bmg_72_02a980c9aa9b0535",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x1674,
      clk => clk_1_sg_x1674,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_2/twiddle/coeff_gen"

entity coeff_gen_entity_ac28f5009b is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(72 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_ac28f5009b;

architecture structural of coeff_gen_entity_ac28f5009b is
  signal ce_1_sg_x1675: std_logic;
  signal clk_1_sg_x1675: std_logic;
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay0_q_net_x2: std_logic;
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1675 <= ce_1;
  clk_1_sg_x1675 <= clk_1;
  concatenate_y_net_x3 <= misci;
  delay0_q_net_x2 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x5;

  cosin_06ffe0cf08: entity work.cosin_entity_06ffe0cf08
    port map (
      ce_1 => ce_1_sg_x1675,
      clk_1 => clk_1_sg_x1675,
      misci => concatenate_y_net_x3,
      theta => slice_y_net_x0,
      cos => mux_y_net_x4,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x5
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x1675,
      clk => clk_1_sg_x1675,
      clr => '0',
      rst(0) => delay0_q_net_x2,
      op => counter_op_net
    );

  ri_to_c_b56addd63c: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x5
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 10,
      y_width => 10
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_2/twiddle"

entity twiddle_entity_02b91626f3 is
  port (
    ai: in std_logic_vector(35 downto 0); 
    bi: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(35 downto 0); 
    bwo: out std_logic_vector(37 downto 0)
  );
end twiddle_entity_02b91626f3;

architecture structural of twiddle_entity_02b91626f3 is
  signal ce_1_sg_x1676: std_logic;
  signal clk_1_sg_x1676: std_logic;
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(37 downto 0);
  signal delay0_q_net_x3: std_logic;
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(36 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(36 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(73 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x5: std_logic_vector(35 downto 0);

begin
  reinterpret2_output_port_net_x5 <= ai;
  reinterpret1_output_port_net_x2 <= bi;
  ce_1_sg_x1676 <= ce_1;
  clk_1_sg_x1676 <= clk_1;
  delay0_q_net_x3 <= sync_in;
  ao <= reinterpret1_output_port_net_x11;
  bwo <= concatenate_y_net_x7;

  bus_convert_34c2dee531: entity work.bus_convert_entity_91b50cade4
    port map (
      ce_1 => ce_1_sg_x1676,
      clk_1 => clk_1_sg_x1676,
      din => reinterpret1_output_port_net_x10,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x7,
      misco => dmisc_q_net_x3
    );

  bus_create_248efa378b: entity work.bus_create_entity_97340e9c90
    port map (
      in1 => reinterpret1_output_port_net_x2,
      in2 => delay0_q_net_x3,
      in3 => reinterpret2_output_port_net_x5,
      bus_out => concatenate_y_net_x3
    );

  bus_expand1_f05615d1e6: entity work.bus_expand1_entity_29a4630f8b
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x11
    );

  bus_expand_3f30de9de7: entity work.bus_expand_entity_d9bc53bf08
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x9,
      msb_out2 => reinterpret2_output_port_net_x4
    );

  bus_mult_c35b146c26: entity work.bus_mult_entity_0442ffebf5
    port map (
      a => concat_y_net_x5,
      b => reinterpret2_output_port_net_x4,
      ce_1 => ce_1_sg_x1676,
      clk_1 => clk_1_sg_x1676,
      misci => reinterpret1_output_port_net_x9,
      a_b => reinterpret1_output_port_net_x10,
      misco => dmisc_q_net_x2
    );

  coeff_gen_ac28f5009b: entity work.coeff_gen_entity_ac28f5009b
    port map (
      ce_1 => ce_1_sg_x1676,
      clk_1 => clk_1_sg_x1676,
      misci => concatenate_y_net_x3,
      rst => delay0_q_net_x3,
      misco => delay1_q_net_x3,
      w => concat_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_2"

entity butterfly3_2_entity_83105020c0 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic
  );
end butterfly3_2_entity_83105020c0;

architecture structural of butterfly3_2_entity_83105020c0 is
  signal ce_1_sg_x1677: std_logic;
  signal clk_1_sg_x1677: std_logic;
  signal concat_y_net_x3: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(37 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(39 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(39 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x4: std_logic;
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic;
  signal reinterpret2_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x6: std_logic_vector(35 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(3 downto 0);
  signal slice3_y_net_x5: std_logic;

begin
  reinterpret2_output_port_net_x6 <= a;
  reinterpret1_output_port_net_x4 <= b;
  ce_1_sg_x1677 <= ce_1;
  clk_1_sg_x1677 <= clk_1;
  slice3_y_net_x5 <= shift;
  delay0_q_net_x4 <= sync_in;
  a_bw <= reinterpret2_output_port_net_x2;
  of_x0 <= reinterpret1_output_port_net_x5;

  bus_add_6ef3fa784a: entity work.bus_add_entity_c1c3c9cfae
    port map (
      a => reinterpret1_output_port_net_x11,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1677,
      clk_1 => clk_1_sg_x1677,
      dout => concatenate_y_net_x3
    );

  bus_convert_5447641d23: entity work.bus_convert_entity_9afdc2814a
    port map (
      ce_1 => ce_1_sg_x1677,
      clk_1 => clk_1_sg_x1677,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_84f2f5dd36: entity work.bus_expand_entity_77aa047eca
    port map (
      bus_in => concatenate_y_net_x5,
      msb_out2 => reinterpret2_output_port_net_x2
    );

  bus_norm0_572d05b41b: entity work.bus_norm0_entity_8ef81a9379
    port map (
      ce_1 => ce_1_sg_x1677,
      clk_1 => clk_1_sg_x1677,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_56fc4cba7e: entity work.bus_norm1_entity_42dcedf23c
    port map (
      ce_1 => ce_1_sg_x1677,
      clk_1 => clk_1_sg_x1677,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_ccf07cd2f5: entity work.bus_relational_entity_a0f0b0e9c1
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      ce_1 => ce_1_sg_x1677,
      clk_1 => clk_1_sg_x1677,
      a_b => reinterpret1_output_port_net_x5
    );

  bus_scale_74e93fe604: entity work.bus_scale_entity_849d56a871
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_73469086ab: entity work.bus_sub_entity_88da2f7d37
    port map (
      a => reinterpret1_output_port_net_x11,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1677,
      clk_1 => clk_1_sg_x1677,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_cfdc93535e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  munge_c001a69843: entity work.munge_entity_357ca253a5
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_5984f0f46b: entity work.mux_entity_630a0af6dd
    port map (
      ce_1 => ce_1_sg_x1677,
      clk_1 => clk_1_sg_x1677,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_28af757726: entity work.shift_replicate_entity_55fd1c8662
    port map (
      ce_1 => ce_1_sg_x1677,
      clk_1 => clk_1_sg_x1677,
      in_x0 => slice3_y_net_x5,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_02b91626f3: entity work.twiddle_entity_02b91626f3
    port map (
      ai => reinterpret2_output_port_net_x6,
      bi => reinterpret1_output_port_net_x4,
      ce_1 => ce_1_sg_x1677,
      clk_1 => clk_1_sg_x1677,
      sync_in => delay0_q_net_x4,
      ao => reinterpret1_output_port_net_x11,
      bwo => concatenate_y_net_x12
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_3/twiddle/coeff_gen/cosin"

entity cosin_entity_e42185ed5b is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    theta: in std_logic_vector(9 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(72 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_e42185ed5b;

architecture structural of cosin_entity_e42185ed5b is
  signal assert_dout_net_x1: std_logic_vector(9 downto 0);
  signal ce_1_sg_x1709: std_logic;
  signal clk_1_sg_x1709: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(72 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(9 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(72 downto 0);
  signal delay1_q_net_x2: std_logic_vector(72 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(72 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1709 <= ce_1;
  clk_1_sg_x1709 <= clk_1;
  concatenate_y_net_x2 <= misci;
  slice_y_net_x0 <= theta;
  cos <= mux_y_net_x3;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x2;

  add_convert0_7436cdb43e: entity work.add_convert0_entity_14997ce1e6
    port map (
      ce_1 => ce_1_sg_x1709,
      clk_1 => clk_1_sg_x1709,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_bbfef3c493: entity work.add_convert1_entity_a8e7a479ab
    port map (
      ce_1 => ce_1_sg_x1709,
      clk_1 => clk_1_sg_x1709,
      misci => concatenate_y_net_x2,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 10,
      dout_width => 10
    )
    port map (
      din => slice_y_net_x0,
      dout => assert_dout_net_x1
    );

  c_to_ri_ce7899b697: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_4e7d828d94
    port map (
      ce => ce_1_sg_x1709,
      clk => clk_1_sg_x1709,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1709,
      clk => clk_1_sg_x1709,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1709,
      clk => clk_1_sg_x1709,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_17816968e2: entity work.invert0_entity_0a6af8c8da
    port map (
      ce_1 => ce_1_sg_x1709,
      clk_1 => clk_1_sg_x1709,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_97b12469da: entity work.invert1_entity_7ca3aac22e
    port map (
      ce_1 => ce_1_sg_x1709,
      clk_1 => clk_1_sg_x1709,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 36,
      core_name0 => "bmg_72_3cc72ca7547c281d",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x1709,
      clk => clk_1_sg_x1709,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_3/twiddle/coeff_gen"

entity coeff_gen_entity_9330fa563d is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(72 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_9330fa563d;

architecture structural of coeff_gen_entity_9330fa563d is
  signal ce_1_sg_x1710: std_logic;
  signal clk_1_sg_x1710: std_logic;
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay0_q_net_x6: std_logic;
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1710 <= ce_1;
  clk_1_sg_x1710 <= clk_1;
  concatenate_y_net_x3 <= misci;
  delay0_q_net_x6 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x5;

  cosin_e42185ed5b: entity work.cosin_entity_e42185ed5b
    port map (
      ce_1 => ce_1_sg_x1710,
      clk_1 => clk_1_sg_x1710,
      misci => concatenate_y_net_x3,
      theta => slice_y_net_x0,
      cos => mux_y_net_x5,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x4
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x1710,
      clk => clk_1_sg_x1710,
      clr => '0',
      rst(0) => delay0_q_net_x6,
      op => counter_op_net
    );

  ri_to_c_18a80f9a1f: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x5
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 10,
      y_width => 10
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_3/twiddle"

entity twiddle_entity_52d4481362 is
  port (
    ai: in std_logic_vector(35 downto 0); 
    bi: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(35 downto 0); 
    bwo: out std_logic_vector(37 downto 0)
  );
end twiddle_entity_52d4481362;

architecture structural of twiddle_entity_52d4481362 is
  signal ce_1_sg_x1711: std_logic;
  signal clk_1_sg_x1711: std_logic;
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(37 downto 0);
  signal delay0_q_net_x7: std_logic;
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(36 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(36 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(73 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x12: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(35 downto 0);

begin
  reinterpret2_output_port_net_x2 <= ai;
  reinterpret1_output_port_net_x11 <= bi;
  ce_1_sg_x1711 <= ce_1;
  clk_1_sg_x1711 <= clk_1;
  delay0_q_net_x7 <= sync_in;
  ao <= reinterpret1_output_port_net_x12;
  bwo <= concatenate_y_net_x7;

  bus_convert_e4ee66a973: entity work.bus_convert_entity_91b50cade4
    port map (
      ce_1 => ce_1_sg_x1711,
      clk_1 => clk_1_sg_x1711,
      din => reinterpret1_output_port_net_x10,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x7,
      misco => dmisc_q_net_x3
    );

  bus_create_3d71c4f15c: entity work.bus_create_entity_97340e9c90
    port map (
      in1 => reinterpret1_output_port_net_x11,
      in2 => delay0_q_net_x7,
      in3 => reinterpret2_output_port_net_x2,
      bus_out => concatenate_y_net_x3
    );

  bus_expand1_dbc66d28d8: entity work.bus_expand1_entity_29a4630f8b
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x12
    );

  bus_expand_f77fd36bb3: entity work.bus_expand_entity_d9bc53bf08
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x9,
      msb_out2 => reinterpret2_output_port_net_x3
    );

  bus_mult_12f700dd1b: entity work.bus_mult_entity_0442ffebf5
    port map (
      a => concat_y_net_x5,
      b => reinterpret2_output_port_net_x3,
      ce_1 => ce_1_sg_x1711,
      clk_1 => clk_1_sg_x1711,
      misci => reinterpret1_output_port_net_x9,
      a_b => reinterpret1_output_port_net_x10,
      misco => dmisc_q_net_x2
    );

  coeff_gen_9330fa563d: entity work.coeff_gen_entity_9330fa563d
    port map (
      ce_1 => ce_1_sg_x1711,
      clk_1 => clk_1_sg_x1711,
      misci => concatenate_y_net_x3,
      rst => delay0_q_net_x7,
      misco => delay1_q_net_x3,
      w => concat_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_3"

entity butterfly3_3_entity_bec45a7fd3 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic
  );
end butterfly3_3_entity_bec45a7fd3;

architecture structural of butterfly3_3_entity_bec45a7fd3 is
  signal ce_1_sg_x1712: std_logic;
  signal clk_1_sg_x1712: std_logic;
  signal concat_y_net_x3: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(37 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(39 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(39 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x8: std_logic;
  signal reinterpret1_output_port_net_x12: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x13: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic;
  signal reinterpret2_output_port_net_x3: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(35 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(3 downto 0);
  signal slice3_y_net_x7: std_logic;

begin
  reinterpret2_output_port_net_x3 <= a;
  reinterpret1_output_port_net_x13 <= b;
  ce_1_sg_x1712 <= ce_1;
  clk_1_sg_x1712 <= clk_1;
  slice3_y_net_x7 <= shift;
  delay0_q_net_x8 <= sync_in;
  a_bw <= reinterpret2_output_port_net_x4;
  of_x0 <= reinterpret1_output_port_net_x4;

  bus_add_ab5ebe2563: entity work.bus_add_entity_c1c3c9cfae
    port map (
      a => reinterpret1_output_port_net_x12,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1712,
      clk_1 => clk_1_sg_x1712,
      dout => concatenate_y_net_x3
    );

  bus_convert_e349293a35: entity work.bus_convert_entity_9afdc2814a
    port map (
      ce_1 => ce_1_sg_x1712,
      clk_1 => clk_1_sg_x1712,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_d83ea83c8f: entity work.bus_expand_entity_77aa047eca
    port map (
      bus_in => concatenate_y_net_x5,
      msb_out2 => reinterpret2_output_port_net_x4
    );

  bus_norm0_8a0ee9e8fa: entity work.bus_norm0_entity_8ef81a9379
    port map (
      ce_1 => ce_1_sg_x1712,
      clk_1 => clk_1_sg_x1712,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_f6bcb95ec9: entity work.bus_norm1_entity_42dcedf23c
    port map (
      ce_1 => ce_1_sg_x1712,
      clk_1 => clk_1_sg_x1712,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_578787b082: entity work.bus_relational_entity_a0f0b0e9c1
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      ce_1 => ce_1_sg_x1712,
      clk_1 => clk_1_sg_x1712,
      a_b => reinterpret1_output_port_net_x4
    );

  bus_scale_c9bd4e85ab: entity work.bus_scale_entity_849d56a871
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_c4266a901d: entity work.bus_sub_entity_88da2f7d37
    port map (
      a => reinterpret1_output_port_net_x12,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1712,
      clk_1 => clk_1_sg_x1712,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_cfdc93535e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  munge_27bc77f265: entity work.munge_entity_357ca253a5
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_d0c42411d0: entity work.mux_entity_630a0af6dd
    port map (
      ce_1 => ce_1_sg_x1712,
      clk_1 => clk_1_sg_x1712,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_754197aabe: entity work.shift_replicate_entity_55fd1c8662
    port map (
      ce_1 => ce_1_sg_x1712,
      clk_1 => clk_1_sg_x1712,
      in_x0 => slice3_y_net_x7,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_52d4481362: entity work.twiddle_entity_52d4481362
    port map (
      ai => reinterpret2_output_port_net_x3,
      bi => reinterpret1_output_port_net_x13,
      ce_1 => ce_1_sg_x1712,
      clk_1 => clk_1_sg_x1712,
      sync_in => delay0_q_net_x8,
      ao => reinterpret1_output_port_net_x12,
      bwo => concatenate_y_net_x12
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_4/twiddle/coeff_gen/cosin"

entity cosin_entity_8e7ebc163f is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    theta: in std_logic_vector(9 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(72 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_8e7ebc163f;

architecture structural of cosin_entity_8e7ebc163f is
  signal assert_dout_net_x1: std_logic_vector(9 downto 0);
  signal ce_1_sg_x1744: std_logic;
  signal clk_1_sg_x1744: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(72 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(9 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(72 downto 0);
  signal delay1_q_net_x2: std_logic_vector(72 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(72 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1744 <= ce_1;
  clk_1_sg_x1744 <= clk_1;
  concatenate_y_net_x2 <= misci;
  slice_y_net_x0 <= theta;
  cos <= mux_y_net_x2;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x3;

  add_convert0_d5f0edba79: entity work.add_convert0_entity_14997ce1e6
    port map (
      ce_1 => ce_1_sg_x1744,
      clk_1 => clk_1_sg_x1744,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_364d19e15d: entity work.add_convert1_entity_a8e7a479ab
    port map (
      ce_1 => ce_1_sg_x1744,
      clk_1 => clk_1_sg_x1744,
      misci => concatenate_y_net_x2,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 10,
      dout_width => 10
    )
    port map (
      din => slice_y_net_x0,
      dout => assert_dout_net_x1
    );

  c_to_ri_749aafd515: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_4e7d828d94
    port map (
      ce => ce_1_sg_x1744,
      clk => clk_1_sg_x1744,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1744,
      clk => clk_1_sg_x1744,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1744,
      clk => clk_1_sg_x1744,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_46d25b1675: entity work.invert0_entity_0a6af8c8da
    port map (
      ce_1 => ce_1_sg_x1744,
      clk_1 => clk_1_sg_x1744,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_26359b037e: entity work.invert1_entity_7ca3aac22e
    port map (
      ce_1 => ce_1_sg_x1744,
      clk_1 => clk_1_sg_x1744,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 36,
      core_name0 => "bmg_72_7ff662aa85879f72",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x1744,
      clk => clk_1_sg_x1744,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_4/twiddle/coeff_gen"

entity coeff_gen_entity_feb505f1a7 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(72 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_feb505f1a7;

architecture structural of coeff_gen_entity_feb505f1a7 is
  signal ce_1_sg_x1745: std_logic;
  signal clk_1_sg_x1745: std_logic;
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay0_q_net_x2: std_logic;
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1745 <= ce_1;
  clk_1_sg_x1745 <= clk_1;
  concatenate_y_net_x3 <= misci;
  delay0_q_net_x2 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x5;

  cosin_8e7ebc163f: entity work.cosin_entity_8e7ebc163f
    port map (
      ce_1 => ce_1_sg_x1745,
      clk_1 => clk_1_sg_x1745,
      misci => concatenate_y_net_x3,
      theta => slice_y_net_x0,
      cos => mux_y_net_x4,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x5
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x1745,
      clk => clk_1_sg_x1745,
      clr => '0',
      rst(0) => delay0_q_net_x2,
      op => counter_op_net
    );

  ri_to_c_dc23540ec1: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x5
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 10,
      y_width => 10
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_4/twiddle"

entity twiddle_entity_351e4b3735 is
  port (
    ai: in std_logic_vector(35 downto 0); 
    bi: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(35 downto 0); 
    bwo: out std_logic_vector(37 downto 0)
  );
end twiddle_entity_351e4b3735;

architecture structural of twiddle_entity_351e4b3735 is
  signal ce_1_sg_x1746: std_logic;
  signal clk_1_sg_x1746: std_logic;
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(37 downto 0);
  signal delay0_q_net_x3: std_logic;
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(36 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(36 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(73 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x5: std_logic_vector(35 downto 0);

begin
  reinterpret2_output_port_net_x5 <= ai;
  reinterpret1_output_port_net_x2 <= bi;
  ce_1_sg_x1746 <= ce_1;
  clk_1_sg_x1746 <= clk_1;
  delay0_q_net_x3 <= sync_in;
  ao <= reinterpret1_output_port_net_x11;
  bwo <= concatenate_y_net_x7;

  bus_convert_b2a7f293e1: entity work.bus_convert_entity_91b50cade4
    port map (
      ce_1 => ce_1_sg_x1746,
      clk_1 => clk_1_sg_x1746,
      din => reinterpret1_output_port_net_x10,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x7,
      misco => dmisc_q_net_x3
    );

  bus_create_8a1773c7ec: entity work.bus_create_entity_97340e9c90
    port map (
      in1 => reinterpret1_output_port_net_x2,
      in2 => delay0_q_net_x3,
      in3 => reinterpret2_output_port_net_x5,
      bus_out => concatenate_y_net_x3
    );

  bus_expand1_0316ae3dea: entity work.bus_expand1_entity_29a4630f8b
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x11
    );

  bus_expand_6c55e0d79e: entity work.bus_expand_entity_d9bc53bf08
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x9,
      msb_out2 => reinterpret2_output_port_net_x4
    );

  bus_mult_be8db63ddb: entity work.bus_mult_entity_0442ffebf5
    port map (
      a => concat_y_net_x5,
      b => reinterpret2_output_port_net_x4,
      ce_1 => ce_1_sg_x1746,
      clk_1 => clk_1_sg_x1746,
      misci => reinterpret1_output_port_net_x9,
      a_b => reinterpret1_output_port_net_x10,
      misco => dmisc_q_net_x2
    );

  coeff_gen_feb505f1a7: entity work.coeff_gen_entity_feb505f1a7
    port map (
      ce_1 => ce_1_sg_x1746,
      clk_1 => clk_1_sg_x1746,
      misci => concatenate_y_net_x3,
      rst => delay0_q_net_x3,
      misco => delay1_q_net_x3,
      w => concat_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_4"

entity butterfly3_4_entity_4f0d49bf48 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic
  );
end butterfly3_4_entity_4f0d49bf48;

architecture structural of butterfly3_4_entity_4f0d49bf48 is
  signal ce_1_sg_x1747: std_logic;
  signal clk_1_sg_x1747: std_logic;
  signal concat_y_net_x3: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(37 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(39 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(39 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x4: std_logic;
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic;
  signal reinterpret2_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x6: std_logic_vector(35 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(3 downto 0);
  signal slice3_y_net_x9: std_logic;

begin
  reinterpret2_output_port_net_x6 <= a;
  reinterpret1_output_port_net_x4 <= b;
  ce_1_sg_x1747 <= ce_1;
  clk_1_sg_x1747 <= clk_1;
  slice3_y_net_x9 <= shift;
  delay0_q_net_x4 <= sync_in;
  a_bw <= reinterpret2_output_port_net_x2;
  of_x0 <= reinterpret1_output_port_net_x5;

  bus_add_436345b842: entity work.bus_add_entity_c1c3c9cfae
    port map (
      a => reinterpret1_output_port_net_x11,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1747,
      clk_1 => clk_1_sg_x1747,
      dout => concatenate_y_net_x3
    );

  bus_convert_858c7e2b29: entity work.bus_convert_entity_9afdc2814a
    port map (
      ce_1 => ce_1_sg_x1747,
      clk_1 => clk_1_sg_x1747,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_33acd62475: entity work.bus_expand_entity_77aa047eca
    port map (
      bus_in => concatenate_y_net_x5,
      msb_out2 => reinterpret2_output_port_net_x2
    );

  bus_norm0_7fce459096: entity work.bus_norm0_entity_8ef81a9379
    port map (
      ce_1 => ce_1_sg_x1747,
      clk_1 => clk_1_sg_x1747,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_036b6289c5: entity work.bus_norm1_entity_42dcedf23c
    port map (
      ce_1 => ce_1_sg_x1747,
      clk_1 => clk_1_sg_x1747,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_2b9820cb8c: entity work.bus_relational_entity_a0f0b0e9c1
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      ce_1 => ce_1_sg_x1747,
      clk_1 => clk_1_sg_x1747,
      a_b => reinterpret1_output_port_net_x5
    );

  bus_scale_094ec28a38: entity work.bus_scale_entity_849d56a871
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_944d14c0ce: entity work.bus_sub_entity_88da2f7d37
    port map (
      a => reinterpret1_output_port_net_x11,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1747,
      clk_1 => clk_1_sg_x1747,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_cfdc93535e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  munge_339f9d0945: entity work.munge_entity_357ca253a5
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_c40f326d41: entity work.mux_entity_630a0af6dd
    port map (
      ce_1 => ce_1_sg_x1747,
      clk_1 => clk_1_sg_x1747,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_adab0a25a9: entity work.shift_replicate_entity_55fd1c8662
    port map (
      ce_1 => ce_1_sg_x1747,
      clk_1 => clk_1_sg_x1747,
      in_x0 => slice3_y_net_x9,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_351e4b3735: entity work.twiddle_entity_351e4b3735
    port map (
      ai => reinterpret2_output_port_net_x6,
      bi => reinterpret1_output_port_net_x4,
      ce_1 => ce_1_sg_x1747,
      clk_1 => clk_1_sg_x1747,
      sync_in => delay0_q_net_x4,
      ao => reinterpret1_output_port_net_x11,
      bwo => concatenate_y_net_x12
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_5/twiddle/coeff_gen/cosin"

entity cosin_entity_90930bf490 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    theta: in std_logic_vector(9 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(72 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_90930bf490;

architecture structural of cosin_entity_90930bf490 is
  signal assert_dout_net_x1: std_logic_vector(9 downto 0);
  signal ce_1_sg_x1779: std_logic;
  signal clk_1_sg_x1779: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(72 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(9 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(72 downto 0);
  signal delay1_q_net_x2: std_logic_vector(72 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(72 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1779 <= ce_1;
  clk_1_sg_x1779 <= clk_1;
  concatenate_y_net_x2 <= misci;
  slice_y_net_x0 <= theta;
  cos <= mux_y_net_x3;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x2;

  add_convert0_fd46bfae3a: entity work.add_convert0_entity_14997ce1e6
    port map (
      ce_1 => ce_1_sg_x1779,
      clk_1 => clk_1_sg_x1779,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_81f095f13f: entity work.add_convert1_entity_a8e7a479ab
    port map (
      ce_1 => ce_1_sg_x1779,
      clk_1 => clk_1_sg_x1779,
      misci => concatenate_y_net_x2,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 10,
      dout_width => 10
    )
    port map (
      din => slice_y_net_x0,
      dout => assert_dout_net_x1
    );

  c_to_ri_fb4e9f4d3a: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_4e7d828d94
    port map (
      ce => ce_1_sg_x1779,
      clk => clk_1_sg_x1779,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1779,
      clk => clk_1_sg_x1779,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1779,
      clk => clk_1_sg_x1779,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_f45b265be0: entity work.invert0_entity_0a6af8c8da
    port map (
      ce_1 => ce_1_sg_x1779,
      clk_1 => clk_1_sg_x1779,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_7e66eeb670: entity work.invert1_entity_7ca3aac22e
    port map (
      ce_1 => ce_1_sg_x1779,
      clk_1 => clk_1_sg_x1779,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 36,
      core_name0 => "bmg_72_284f56a19a87aaea",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x1779,
      clk => clk_1_sg_x1779,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_5/twiddle/coeff_gen"

entity coeff_gen_entity_2b5bbf5e0a is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(72 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_2b5bbf5e0a;

architecture structural of coeff_gen_entity_2b5bbf5e0a is
  signal ce_1_sg_x1780: std_logic;
  signal clk_1_sg_x1780: std_logic;
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay0_q_net_x6: std_logic;
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1780 <= ce_1;
  clk_1_sg_x1780 <= clk_1;
  concatenate_y_net_x3 <= misci;
  delay0_q_net_x6 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x5;

  cosin_90930bf490: entity work.cosin_entity_90930bf490
    port map (
      ce_1 => ce_1_sg_x1780,
      clk_1 => clk_1_sg_x1780,
      misci => concatenate_y_net_x3,
      theta => slice_y_net_x0,
      cos => mux_y_net_x5,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x4
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x1780,
      clk => clk_1_sg_x1780,
      clr => '0',
      rst(0) => delay0_q_net_x6,
      op => counter_op_net
    );

  ri_to_c_728760fc06: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x5
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 10,
      y_width => 10
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_5/twiddle"

entity twiddle_entity_fe79c65014 is
  port (
    ai: in std_logic_vector(35 downto 0); 
    bi: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(35 downto 0); 
    bwo: out std_logic_vector(37 downto 0)
  );
end twiddle_entity_fe79c65014;

architecture structural of twiddle_entity_fe79c65014 is
  signal ce_1_sg_x1781: std_logic;
  signal clk_1_sg_x1781: std_logic;
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(37 downto 0);
  signal delay0_q_net_x7: std_logic;
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(36 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(36 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(73 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x12: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(35 downto 0);

begin
  reinterpret2_output_port_net_x2 <= ai;
  reinterpret1_output_port_net_x11 <= bi;
  ce_1_sg_x1781 <= ce_1;
  clk_1_sg_x1781 <= clk_1;
  delay0_q_net_x7 <= sync_in;
  ao <= reinterpret1_output_port_net_x12;
  bwo <= concatenate_y_net_x7;

  bus_convert_2d0af278d8: entity work.bus_convert_entity_91b50cade4
    port map (
      ce_1 => ce_1_sg_x1781,
      clk_1 => clk_1_sg_x1781,
      din => reinterpret1_output_port_net_x10,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x7,
      misco => dmisc_q_net_x3
    );

  bus_create_532f4c9624: entity work.bus_create_entity_97340e9c90
    port map (
      in1 => reinterpret1_output_port_net_x11,
      in2 => delay0_q_net_x7,
      in3 => reinterpret2_output_port_net_x2,
      bus_out => concatenate_y_net_x3
    );

  bus_expand1_9e6fc78bd9: entity work.bus_expand1_entity_29a4630f8b
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x12
    );

  bus_expand_b735da53fb: entity work.bus_expand_entity_d9bc53bf08
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x9,
      msb_out2 => reinterpret2_output_port_net_x3
    );

  bus_mult_494e69818a: entity work.bus_mult_entity_0442ffebf5
    port map (
      a => concat_y_net_x5,
      b => reinterpret2_output_port_net_x3,
      ce_1 => ce_1_sg_x1781,
      clk_1 => clk_1_sg_x1781,
      misci => reinterpret1_output_port_net_x9,
      a_b => reinterpret1_output_port_net_x10,
      misco => dmisc_q_net_x2
    );

  coeff_gen_2b5bbf5e0a: entity work.coeff_gen_entity_2b5bbf5e0a
    port map (
      ce_1 => ce_1_sg_x1781,
      clk_1 => clk_1_sg_x1781,
      misci => concatenate_y_net_x3,
      rst => delay0_q_net_x7,
      misco => delay1_q_net_x3,
      w => concat_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_5"

entity butterfly3_5_entity_94d0c0ebaa is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic
  );
end butterfly3_5_entity_94d0c0ebaa;

architecture structural of butterfly3_5_entity_94d0c0ebaa is
  signal ce_1_sg_x1782: std_logic;
  signal clk_1_sg_x1782: std_logic;
  signal concat_y_net_x3: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(37 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(39 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(39 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x8: std_logic;
  signal reinterpret1_output_port_net_x12: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x13: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic;
  signal reinterpret2_output_port_net_x3: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(35 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(3 downto 0);
  signal slice3_y_net_x11: std_logic;

begin
  reinterpret2_output_port_net_x3 <= a;
  reinterpret1_output_port_net_x13 <= b;
  ce_1_sg_x1782 <= ce_1;
  clk_1_sg_x1782 <= clk_1;
  slice3_y_net_x11 <= shift;
  delay0_q_net_x8 <= sync_in;
  a_bw <= reinterpret2_output_port_net_x4;
  of_x0 <= reinterpret1_output_port_net_x4;

  bus_add_afc40e5f36: entity work.bus_add_entity_c1c3c9cfae
    port map (
      a => reinterpret1_output_port_net_x12,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1782,
      clk_1 => clk_1_sg_x1782,
      dout => concatenate_y_net_x3
    );

  bus_convert_cd66f23200: entity work.bus_convert_entity_9afdc2814a
    port map (
      ce_1 => ce_1_sg_x1782,
      clk_1 => clk_1_sg_x1782,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_13edd7a08a: entity work.bus_expand_entity_77aa047eca
    port map (
      bus_in => concatenate_y_net_x5,
      msb_out2 => reinterpret2_output_port_net_x4
    );

  bus_norm0_23b3d8c70e: entity work.bus_norm0_entity_8ef81a9379
    port map (
      ce_1 => ce_1_sg_x1782,
      clk_1 => clk_1_sg_x1782,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_6fd48854af: entity work.bus_norm1_entity_42dcedf23c
    port map (
      ce_1 => ce_1_sg_x1782,
      clk_1 => clk_1_sg_x1782,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_4c664248d6: entity work.bus_relational_entity_a0f0b0e9c1
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      ce_1 => ce_1_sg_x1782,
      clk_1 => clk_1_sg_x1782,
      a_b => reinterpret1_output_port_net_x4
    );

  bus_scale_068c4265aa: entity work.bus_scale_entity_849d56a871
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_1ec9232d27: entity work.bus_sub_entity_88da2f7d37
    port map (
      a => reinterpret1_output_port_net_x12,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1782,
      clk_1 => clk_1_sg_x1782,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_cfdc93535e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  munge_6c4d7354fa: entity work.munge_entity_357ca253a5
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_8ed0f53161: entity work.mux_entity_630a0af6dd
    port map (
      ce_1 => ce_1_sg_x1782,
      clk_1 => clk_1_sg_x1782,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_5f2e43e76e: entity work.shift_replicate_entity_55fd1c8662
    port map (
      ce_1 => ce_1_sg_x1782,
      clk_1 => clk_1_sg_x1782,
      in_x0 => slice3_y_net_x11,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_fe79c65014: entity work.twiddle_entity_fe79c65014
    port map (
      ai => reinterpret2_output_port_net_x3,
      bi => reinterpret1_output_port_net_x13,
      ce_1 => ce_1_sg_x1782,
      clk_1 => clk_1_sg_x1782,
      sync_in => delay0_q_net_x8,
      ao => reinterpret1_output_port_net_x12,
      bwo => concatenate_y_net_x12
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_6/twiddle/coeff_gen/cosin"

entity cosin_entity_c54cd7e236 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    theta: in std_logic_vector(9 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(72 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_c54cd7e236;

architecture structural of cosin_entity_c54cd7e236 is
  signal assert_dout_net_x1: std_logic_vector(9 downto 0);
  signal ce_1_sg_x1814: std_logic;
  signal clk_1_sg_x1814: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(72 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(9 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(72 downto 0);
  signal delay1_q_net_x2: std_logic_vector(72 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(72 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1814 <= ce_1;
  clk_1_sg_x1814 <= clk_1;
  concatenate_y_net_x2 <= misci;
  slice_y_net_x0 <= theta;
  cos <= mux_y_net_x2;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x3;

  add_convert0_0377702853: entity work.add_convert0_entity_14997ce1e6
    port map (
      ce_1 => ce_1_sg_x1814,
      clk_1 => clk_1_sg_x1814,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_36a0b23dd6: entity work.add_convert1_entity_a8e7a479ab
    port map (
      ce_1 => ce_1_sg_x1814,
      clk_1 => clk_1_sg_x1814,
      misci => concatenate_y_net_x2,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 10,
      dout_width => 10
    )
    port map (
      din => slice_y_net_x0,
      dout => assert_dout_net_x1
    );

  c_to_ri_620385c7e5: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_4e7d828d94
    port map (
      ce => ce_1_sg_x1814,
      clk => clk_1_sg_x1814,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1814,
      clk => clk_1_sg_x1814,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1814,
      clk => clk_1_sg_x1814,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_e27a14d0cb: entity work.invert0_entity_0a6af8c8da
    port map (
      ce_1 => ce_1_sg_x1814,
      clk_1 => clk_1_sg_x1814,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_dc97fef588: entity work.invert1_entity_7ca3aac22e
    port map (
      ce_1 => ce_1_sg_x1814,
      clk_1 => clk_1_sg_x1814,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 36,
      core_name0 => "bmg_72_2894f866823b7de9",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x1814,
      clk => clk_1_sg_x1814,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_6/twiddle/coeff_gen"

entity coeff_gen_entity_9a1eb9cba4 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(72 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_9a1eb9cba4;

architecture structural of coeff_gen_entity_9a1eb9cba4 is
  signal ce_1_sg_x1815: std_logic;
  signal clk_1_sg_x1815: std_logic;
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay0_q_net_x2: std_logic;
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1815 <= ce_1;
  clk_1_sg_x1815 <= clk_1;
  concatenate_y_net_x3 <= misci;
  delay0_q_net_x2 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x5;

  cosin_c54cd7e236: entity work.cosin_entity_c54cd7e236
    port map (
      ce_1 => ce_1_sg_x1815,
      clk_1 => clk_1_sg_x1815,
      misci => concatenate_y_net_x3,
      theta => slice_y_net_x0,
      cos => mux_y_net_x4,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x5
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x1815,
      clk => clk_1_sg_x1815,
      clr => '0',
      rst(0) => delay0_q_net_x2,
      op => counter_op_net
    );

  ri_to_c_09e5f51402: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x5
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 10,
      y_width => 10
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_6/twiddle"

entity twiddle_entity_131d2977a4 is
  port (
    ai: in std_logic_vector(35 downto 0); 
    bi: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(35 downto 0); 
    bwo: out std_logic_vector(37 downto 0)
  );
end twiddle_entity_131d2977a4;

architecture structural of twiddle_entity_131d2977a4 is
  signal ce_1_sg_x1816: std_logic;
  signal clk_1_sg_x1816: std_logic;
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(37 downto 0);
  signal delay0_q_net_x3: std_logic;
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(36 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(36 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(73 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x5: std_logic_vector(35 downto 0);

begin
  reinterpret2_output_port_net_x5 <= ai;
  reinterpret1_output_port_net_x2 <= bi;
  ce_1_sg_x1816 <= ce_1;
  clk_1_sg_x1816 <= clk_1;
  delay0_q_net_x3 <= sync_in;
  ao <= reinterpret1_output_port_net_x11;
  bwo <= concatenate_y_net_x7;

  bus_convert_5f85ac197a: entity work.bus_convert_entity_91b50cade4
    port map (
      ce_1 => ce_1_sg_x1816,
      clk_1 => clk_1_sg_x1816,
      din => reinterpret1_output_port_net_x10,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x7,
      misco => dmisc_q_net_x3
    );

  bus_create_8450a080c5: entity work.bus_create_entity_97340e9c90
    port map (
      in1 => reinterpret1_output_port_net_x2,
      in2 => delay0_q_net_x3,
      in3 => reinterpret2_output_port_net_x5,
      bus_out => concatenate_y_net_x3
    );

  bus_expand1_c792216f0e: entity work.bus_expand1_entity_29a4630f8b
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x11
    );

  bus_expand_b7b21ed534: entity work.bus_expand_entity_d9bc53bf08
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x9,
      msb_out2 => reinterpret2_output_port_net_x4
    );

  bus_mult_aae81fc2f2: entity work.bus_mult_entity_0442ffebf5
    port map (
      a => concat_y_net_x5,
      b => reinterpret2_output_port_net_x4,
      ce_1 => ce_1_sg_x1816,
      clk_1 => clk_1_sg_x1816,
      misci => reinterpret1_output_port_net_x9,
      a_b => reinterpret1_output_port_net_x10,
      misco => dmisc_q_net_x2
    );

  coeff_gen_9a1eb9cba4: entity work.coeff_gen_entity_9a1eb9cba4
    port map (
      ce_1 => ce_1_sg_x1816,
      clk_1 => clk_1_sg_x1816,
      misci => concatenate_y_net_x3,
      rst => delay0_q_net_x3,
      misco => delay1_q_net_x3,
      w => concat_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_6"

entity butterfly3_6_entity_e4239cd59a is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic
  );
end butterfly3_6_entity_e4239cd59a;

architecture structural of butterfly3_6_entity_e4239cd59a is
  signal ce_1_sg_x1817: std_logic;
  signal clk_1_sg_x1817: std_logic;
  signal concat_y_net_x3: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(37 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(39 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(39 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x4: std_logic;
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic;
  signal reinterpret2_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x6: std_logic_vector(35 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(3 downto 0);
  signal slice3_y_net_x13: std_logic;

begin
  reinterpret2_output_port_net_x6 <= a;
  reinterpret1_output_port_net_x4 <= b;
  ce_1_sg_x1817 <= ce_1;
  clk_1_sg_x1817 <= clk_1;
  slice3_y_net_x13 <= shift;
  delay0_q_net_x4 <= sync_in;
  a_bw <= reinterpret2_output_port_net_x2;
  of_x0 <= reinterpret1_output_port_net_x5;

  bus_add_1ad4a4d697: entity work.bus_add_entity_c1c3c9cfae
    port map (
      a => reinterpret1_output_port_net_x11,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1817,
      clk_1 => clk_1_sg_x1817,
      dout => concatenate_y_net_x3
    );

  bus_convert_26dd3666af: entity work.bus_convert_entity_9afdc2814a
    port map (
      ce_1 => ce_1_sg_x1817,
      clk_1 => clk_1_sg_x1817,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_d264c47538: entity work.bus_expand_entity_77aa047eca
    port map (
      bus_in => concatenate_y_net_x5,
      msb_out2 => reinterpret2_output_port_net_x2
    );

  bus_norm0_6c02c3c482: entity work.bus_norm0_entity_8ef81a9379
    port map (
      ce_1 => ce_1_sg_x1817,
      clk_1 => clk_1_sg_x1817,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_1e2a9f8458: entity work.bus_norm1_entity_42dcedf23c
    port map (
      ce_1 => ce_1_sg_x1817,
      clk_1 => clk_1_sg_x1817,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_fac5a453db: entity work.bus_relational_entity_a0f0b0e9c1
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      ce_1 => ce_1_sg_x1817,
      clk_1 => clk_1_sg_x1817,
      a_b => reinterpret1_output_port_net_x5
    );

  bus_scale_4d211cb921: entity work.bus_scale_entity_849d56a871
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_f6d731bca0: entity work.bus_sub_entity_88da2f7d37
    port map (
      a => reinterpret1_output_port_net_x11,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1817,
      clk_1 => clk_1_sg_x1817,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_cfdc93535e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  munge_6b09550d87: entity work.munge_entity_357ca253a5
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_4bb5dbdc53: entity work.mux_entity_630a0af6dd
    port map (
      ce_1 => ce_1_sg_x1817,
      clk_1 => clk_1_sg_x1817,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_3269c257b7: entity work.shift_replicate_entity_55fd1c8662
    port map (
      ce_1 => ce_1_sg_x1817,
      clk_1 => clk_1_sg_x1817,
      in_x0 => slice3_y_net_x13,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_131d2977a4: entity work.twiddle_entity_131d2977a4
    port map (
      ai => reinterpret2_output_port_net_x6,
      bi => reinterpret1_output_port_net_x4,
      ce_1 => ce_1_sg_x1817,
      clk_1 => clk_1_sg_x1817,
      sync_in => delay0_q_net_x4,
      ao => reinterpret1_output_port_net_x11,
      bwo => concatenate_y_net_x12
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_7/twiddle/coeff_gen/cosin"

entity cosin_entity_ae37f74c40 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    theta: in std_logic_vector(9 downto 0); 
    cos: out std_logic_vector(17 downto 0); 
    misco: out std_logic_vector(72 downto 0); 
    sin: out std_logic_vector(17 downto 0)
  );
end cosin_entity_ae37f74c40;

architecture structural of cosin_entity_ae37f74c40 is
  signal assert_dout_net_x1: std_logic_vector(9 downto 0);
  signal ce_1_sg_x1849: std_logic;
  signal clk_1_sg_x1849: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(72 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(9 downto 0);
  signal delay10_q_net_x0: std_logic;
  signal delay1_q_net_x0: std_logic_vector(72 downto 0);
  signal delay1_q_net_x2: std_logic_vector(72 downto 0);
  signal delay2_q_net_x0: std_logic;
  signal delay2_q_net_x1: std_logic;
  signal delay8_q_net_x0: std_logic;
  signal delay_q_net_x0: std_logic_vector(72 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal mux_y_net_x2: std_logic_vector(17 downto 0);
  signal mux_y_net_x3: std_logic_vector(17 downto 0);
  signal rom_data_net_x0: std_logic_vector(35 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1849 <= ce_1;
  clk_1_sg_x1849 <= clk_1;
  concatenate_y_net_x2 <= misci;
  slice_y_net_x0 <= theta;
  cos <= mux_y_net_x3;
  misco <= delay1_q_net_x2;
  sin <= mux_y_net_x2;

  add_convert0_25930ff243: entity work.add_convert0_entity_14997ce1e6
    port map (
      ce_1 => ce_1_sg_x1849,
      clk_1 => clk_1_sg_x1849,
      theta => assert_dout_net_x1,
      add => convert2_dout_net_x0,
      negate => delay2_q_net_x0
    );

  add_convert1_4ec2b3d924: entity work.add_convert1_entity_a8e7a479ab
    port map (
      ce_1 => ce_1_sg_x1849,
      clk_1 => clk_1_sg_x1849,
      misci => concatenate_y_net_x2,
      theta => assert_dout_net_x1,
      misco => delay1_q_net_x0,
      negate => delay2_q_net_x1
    );

  assert_x0: entity work.xlpassthrough
    generic map (
      din_width => 10,
      dout_width => 10
    )
    port map (
      din => slice_y_net_x0,
      dout => assert_dout_net_x1
    );

  c_to_ri_c079357105: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => rom_data_net_x0,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  delay: entity work.delay_4e7d828d94
    port map (
      ce => ce_1_sg_x1849,
      clk => clk_1_sg_x1849,
      clr => '0',
      d => delay1_q_net_x0,
      q => delay_q_net_x0
    );

  delay10: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1849,
      clk => clk_1_sg_x1849,
      clr => '0',
      d(0) => delay2_q_net_x0,
      q(0) => delay10_q_net_x0
    );

  delay8: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1849,
      clk => clk_1_sg_x1849,
      clr => '0',
      d(0) => delay2_q_net_x1,
      q(0) => delay8_q_net_x0
    );

  invert0_3a0563edc4: entity work.invert0_entity_0a6af8c8da
    port map (
      ce_1 => ce_1_sg_x1849,
      clk_1 => clk_1_sg_x1849,
      in_x0 => force_re_output_port_net_x1,
      negate_x0 => delay10_q_net_x0,
      out_x0 => mux_y_net_x2
    );

  invert1_7b857b3189: entity work.invert1_entity_7ca3aac22e
    port map (
      ce_1 => ce_1_sg_x1849,
      clk_1 => clk_1_sg_x1849,
      in_x0 => force_im_output_port_net_x1,
      misci => delay_q_net_x0,
      negate_x0 => delay8_q_net_x0,
      misco => delay1_q_net_x2,
      out_x0 => mux_y_net_x3
    );

  rom: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 36,
      core_name0 => "bmg_72_a7c85af04669be3e",
      latency => 2
    )
    port map (
      addr => convert2_dout_net_x0,
      ce => ce_1_sg_x1849,
      clk => clk_1_sg_x1849,
      en => "1",
      rst => "0",
      data => rom_data_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_7/twiddle/coeff_gen"

entity coeff_gen_entity_37a36b83ac is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    misci: in std_logic_vector(72 downto 0); 
    rst: in std_logic; 
    misco: out std_logic_vector(72 downto 0); 
    w: out std_logic_vector(35 downto 0)
  );
end coeff_gen_entity_37a36b83ac;

architecture structural of coeff_gen_entity_37a36b83ac is
  signal ce_1_sg_x1850: std_logic;
  signal clk_1_sg_x1850: std_logic;
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay0_q_net_x6: std_logic;
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal mux_y_net_x4: std_logic_vector(17 downto 0);
  signal mux_y_net_x5: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1850 <= ce_1;
  clk_1_sg_x1850 <= clk_1;
  concatenate_y_net_x3 <= misci;
  delay0_q_net_x6 <= rst;
  misco <= delay1_q_net_x3;
  w <= concat_y_net_x5;

  cosin_ae37f74c40: entity work.cosin_entity_ae37f74c40
    port map (
      ce_1 => ce_1_sg_x1850,
      clk_1 => clk_1_sg_x1850,
      misci => concatenate_y_net_x3,
      theta => slice_y_net_x0,
      cos => mux_y_net_x5,
      misco => delay1_q_net_x3,
      sin => mux_y_net_x4
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x1850,
      clk => clk_1_sg_x1850,
      clr => '0',
      rst(0) => delay0_q_net_x6,
      op => counter_op_net
    );

  ri_to_c_bd3fd0b2e1: entity work.ri_to_c_entity_5c6a2cd5f2
    port map (
      im => mux_y_net_x5,
      re => mux_y_net_x4,
      c => concat_y_net_x5
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 10,
      y_width => 10
    )
    port map (
      x => counter_op_net,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_7/twiddle"

entity twiddle_entity_c11512134d is
  port (
    ai: in std_logic_vector(35 downto 0); 
    bi: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    sync_in: in std_logic; 
    ao: out std_logic_vector(35 downto 0); 
    bwo: out std_logic_vector(37 downto 0)
  );
end twiddle_entity_c11512134d;

architecture structural of twiddle_entity_c11512134d is
  signal ce_1_sg_x1851: std_logic;
  signal clk_1_sg_x1851: std_logic;
  signal concat_y_net_x5: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(72 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(37 downto 0);
  signal delay0_q_net_x7: std_logic;
  signal delay1_q_net_x3: std_logic_vector(72 downto 0);
  signal dmisc_q_net_x2: std_logic_vector(36 downto 0);
  signal dmisc_q_net_x3: std_logic_vector(36 downto 0);
  signal reinterpret1_output_port_net_x10: std_logic_vector(73 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x12: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(36 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(35 downto 0);

begin
  reinterpret2_output_port_net_x2 <= ai;
  reinterpret1_output_port_net_x11 <= bi;
  ce_1_sg_x1851 <= ce_1;
  clk_1_sg_x1851 <= clk_1;
  delay0_q_net_x7 <= sync_in;
  ao <= reinterpret1_output_port_net_x12;
  bwo <= concatenate_y_net_x7;

  bus_convert_1d4d920e1d: entity work.bus_convert_entity_91b50cade4
    port map (
      ce_1 => ce_1_sg_x1851,
      clk_1 => clk_1_sg_x1851,
      din => reinterpret1_output_port_net_x10,
      misci => dmisc_q_net_x2,
      dout => concatenate_y_net_x7,
      misco => dmisc_q_net_x3
    );

  bus_create_51560a4a8e: entity work.bus_create_entity_97340e9c90
    port map (
      in1 => reinterpret1_output_port_net_x11,
      in2 => delay0_q_net_x7,
      in3 => reinterpret2_output_port_net_x2,
      bus_out => concatenate_y_net_x3
    );

  bus_expand1_4c5e08da44: entity work.bus_expand1_entity_29a4630f8b
    port map (
      bus_in => dmisc_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x12
    );

  bus_expand_1f72acac2b: entity work.bus_expand_entity_d9bc53bf08
    port map (
      bus_in => delay1_q_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x9,
      msb_out2 => reinterpret2_output_port_net_x3
    );

  bus_mult_1b71bc898e: entity work.bus_mult_entity_0442ffebf5
    port map (
      a => concat_y_net_x5,
      b => reinterpret2_output_port_net_x3,
      ce_1 => ce_1_sg_x1851,
      clk_1 => clk_1_sg_x1851,
      misci => reinterpret1_output_port_net_x9,
      a_b => reinterpret1_output_port_net_x10,
      misco => dmisc_q_net_x2
    );

  coeff_gen_37a36b83ac: entity work.coeff_gen_entity_37a36b83ac
    port map (
      ce_1 => ce_1_sg_x1851,
      clk_1 => clk_1_sg_x1851,
      misci => concatenate_y_net_x3,
      rst => delay0_q_net_x7,
      misco => delay1_q_net_x3,
      w => concat_y_net_x5
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct/butterfly3_7"

entity butterfly3_7_entity_3ec1defde4 is
  port (
    a: in std_logic_vector(35 downto 0); 
    b: in std_logic_vector(35 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    shift: in std_logic; 
    sync_in: in std_logic; 
    a_bw: out std_logic_vector(35 downto 0); 
    of_x0: out std_logic
  );
end butterfly3_7_entity_3ec1defde4;

architecture structural of butterfly3_7_entity_3ec1defde4 is
  signal ce_1_sg_x1852: std_logic;
  signal clk_1_sg_x1852: std_logic;
  signal concat_y_net_x3: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x10: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x11: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x12: std_logic_vector(37 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(39 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x5: std_logic_vector(71 downto 0);
  signal concatenate_y_net_x6: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x7: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x8: std_logic_vector(83 downto 0);
  signal concatenate_y_net_x9: std_logic_vector(39 downto 0);
  signal constant_op_net_x1: std_logic_vector(3 downto 0);
  signal delay0_q_net_x8: std_logic;
  signal reinterpret1_output_port_net_x12: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x13: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic;
  signal reinterpret2_output_port_net_x3: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(35 downto 0);
  signal reinterpret_out_output_port_net_x2: std_logic_vector(3 downto 0);
  signal slice3_y_net_x15: std_logic;

begin
  reinterpret2_output_port_net_x3 <= a;
  reinterpret1_output_port_net_x13 <= b;
  ce_1_sg_x1852 <= ce_1;
  clk_1_sg_x1852 <= clk_1;
  slice3_y_net_x15 <= shift;
  delay0_q_net_x8 <= sync_in;
  a_bw <= reinterpret2_output_port_net_x4;
  of_x0 <= reinterpret1_output_port_net_x4;

  bus_add_736064e38c: entity work.bus_add_entity_c1c3c9cfae
    port map (
      a => reinterpret1_output_port_net_x12,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1852,
      clk_1 => clk_1_sg_x1852,
      dout => concatenate_y_net_x3
    );

  bus_convert_fe00ab135c: entity work.bus_convert_entity_9afdc2814a
    port map (
      ce_1 => ce_1_sg_x1852,
      clk_1 => clk_1_sg_x1852,
      din => concatenate_y_net_x10,
      dout => concatenate_y_net_x5,
      overflow => concatenate_y_net_x6
    );

  bus_expand_ba50182ace: entity work.bus_expand_entity_77aa047eca
    port map (
      bus_in => concatenate_y_net_x5,
      msb_out2 => reinterpret2_output_port_net_x4
    );

  bus_norm0_36c55ad4da: entity work.bus_norm0_entity_8ef81a9379
    port map (
      ce_1 => ce_1_sg_x1852,
      clk_1 => clk_1_sg_x1852,
      din => concat_y_net_x3,
      dout => concatenate_y_net_x7
    );

  bus_norm1_e958fe55ec: entity work.bus_norm1_entity_42dcedf23c
    port map (
      ce_1 => ce_1_sg_x1852,
      clk_1 => clk_1_sg_x1852,
      din => concatenate_y_net_x4,
      dout => concatenate_y_net_x8
    );

  bus_relational_2f505b4a19: entity work.bus_relational_entity_a0f0b0e9c1
    port map (
      a => constant_op_net_x1,
      b => reinterpret_out_output_port_net_x2,
      ce_1 => ce_1_sg_x1852,
      clk_1 => clk_1_sg_x1852,
      a_b => reinterpret1_output_port_net_x4
    );

  bus_scale_5ee041eadb: entity work.bus_scale_entity_849d56a871
    port map (
      din => concat_y_net_x3,
      dout => concatenate_y_net_x4
    );

  bus_sub_9345d19b3c: entity work.bus_sub_entity_88da2f7d37
    port map (
      a => reinterpret1_output_port_net_x12,
      b => concatenate_y_net_x12,
      ce_1 => ce_1_sg_x1852,
      clk_1 => clk_1_sg_x1852,
      dout => concatenate_y_net_x9
    );

  concat: entity work.concat_cfdc93535e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x3,
      in1 => concatenate_y_net_x9,
      y => concat_y_net_x3
    );

  constant_x0: entity work.constant_4c449dd556
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net_x1
    );

  munge_81210f72d5: entity work.munge_entity_357ca253a5
    port map (
      din => concatenate_y_net_x6,
      dout => reinterpret_out_output_port_net_x2
    );

  mux_8f222c47be: entity work.mux_entity_630a0af6dd
    port map (
      ce_1 => ce_1_sg_x1852,
      clk_1 => clk_1_sg_x1852,
      d0 => concatenate_y_net_x7,
      d1 => concatenate_y_net_x8,
      sel => concatenate_y_net_x11,
      out_x0 => concatenate_y_net_x10
    );

  shift_replicate_fa291e8bf3: entity work.shift_replicate_entity_55fd1c8662
    port map (
      ce_1 => ce_1_sg_x1852,
      clk_1 => clk_1_sg_x1852,
      in_x0 => slice3_y_net_x15,
      out_x0 => concatenate_y_net_x11
    );

  twiddle_c11512134d: entity work.twiddle_entity_c11512134d
    port map (
      ai => reinterpret2_output_port_net_x3,
      bi => reinterpret1_output_port_net_x13,
      ce_1 => ce_1_sg_x1852,
      clk_1 => clk_1_sg_x1852,
      sync_in => delay0_q_net_x8,
      ao => reinterpret1_output_port_net_x12,
      bwo => concatenate_y_net_x12
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_direct"

entity fft_direct_entity_48b2537350 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in00: in std_logic_vector(35 downto 0); 
    in01: in std_logic_vector(35 downto 0); 
    in010: in std_logic_vector(35 downto 0); 
    in011: in std_logic_vector(35 downto 0); 
    in012: in std_logic_vector(35 downto 0); 
    in013: in std_logic_vector(35 downto 0); 
    in014: in std_logic_vector(35 downto 0); 
    in015: in std_logic_vector(35 downto 0); 
    in02: in std_logic_vector(35 downto 0); 
    in03: in std_logic_vector(35 downto 0); 
    in04: in std_logic_vector(35 downto 0); 
    in05: in std_logic_vector(35 downto 0); 
    in06: in std_logic_vector(35 downto 0); 
    in07: in std_logic_vector(35 downto 0); 
    in08: in std_logic_vector(35 downto 0); 
    in09: in std_logic_vector(35 downto 0); 
    shift: in std_logic_vector(3 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic; 
    out00: out std_logic_vector(35 downto 0); 
    out01: out std_logic_vector(35 downto 0); 
    out02: out std_logic_vector(35 downto 0); 
    out03: out std_logic_vector(35 downto 0); 
    out04: out std_logic_vector(35 downto 0); 
    out05: out std_logic_vector(35 downto 0); 
    out06: out std_logic_vector(35 downto 0); 
    out07: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_direct_entity_48b2537350;

architecture structural of fft_direct_entity_48b2537350 is
  signal ce_1_sg_x1853: std_logic;
  signal clk_1_sg_x1853: std_logic;
  signal combine_y_net_x0: std_logic;
  signal concatenate_y_net_x13: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x15: std_logic_vector(287 downto 0);
  signal concatenate_y_net_x16: std_logic_vector(287 downto 0);
  signal concatenate_y_net_x17: std_logic_vector(7 downto 0);
  signal concatenate_y_net_x18: std_logic_vector(3 downto 0);
  signal concatenate_y_net_x19: std_logic_vector(1 downto 0);
  signal concatenate_y_net_x20: std_logic_vector(1 downto 0);
  signal concatenate_y_net_x21: std_logic_vector(1 downto 0);
  signal concatenate_y_net_x22: std_logic_vector(1 downto 0);
  signal delay0_q_net_x1: std_logic;
  signal delay0_q_net_x10: std_logic;
  signal delay0_q_net_x11: std_logic;
  signal delay0_q_net_x12: std_logic;
  signal delay0_q_net_x13: std_logic;
  signal delay0_q_net_x14: std_logic;
  signal delay0_q_net_x8: std_logic;
  signal delay0_q_net_x9: std_logic;
  signal of_0_q_net: std_logic_vector(7 downto 0);
  signal of_1_y_net: std_logic_vector(7 downto 0);
  signal of_2_y_net: std_logic_vector(7 downto 0);
  signal of_3_y_net: std_logic_vector(7 downto 0);
  signal of_or_y_net_x0: std_logic_vector(7 downto 0);
  signal register0_q_net_x24: std_logic_vector(35 downto 0);
  signal register0_q_net_x25: std_logic_vector(35 downto 0);
  signal register0_q_net_x26: std_logic_vector(35 downto 0);
  signal register0_q_net_x27: std_logic_vector(35 downto 0);
  signal register0_q_net_x28: std_logic_vector(35 downto 0);
  signal register0_q_net_x29: std_logic_vector(35 downto 0);
  signal register0_q_net_x30: std_logic_vector(35 downto 0);
  signal register0_q_net_x31: std_logic_vector(35 downto 0);
  signal register0_q_net_x32: std_logic_vector(35 downto 0);
  signal register0_q_net_x33: std_logic_vector(35 downto 0);
  signal register0_q_net_x34: std_logic_vector(35 downto 0);
  signal register0_q_net_x35: std_logic_vector(35 downto 0);
  signal register0_q_net_x36: std_logic_vector(35 downto 0);
  signal register0_q_net_x37: std_logic_vector(35 downto 0);
  signal register0_q_net_x38: std_logic_vector(35 downto 0);
  signal register0_q_net_x39: std_logic_vector(35 downto 0);
  signal register0_q_net_x40: std_logic;
  signal reinterpret1_output_port_net_x0: std_logic;
  signal reinterpret1_output_port_net_x10: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x18: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x19: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x20: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x21: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x22: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x23: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x24: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x25: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x26: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x27: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x28: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x29: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(287 downto 0);
  signal reinterpret1_output_port_net_x30: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x31: std_logic;
  signal reinterpret1_output_port_net_x32: std_logic;
  signal reinterpret1_output_port_net_x33: std_logic;
  signal reinterpret1_output_port_net_x34: std_logic;
  signal reinterpret1_output_port_net_x35: std_logic;
  signal reinterpret1_output_port_net_x36: std_logic;
  signal reinterpret1_output_port_net_x37: std_logic;
  signal reinterpret1_output_port_net_x38: std_logic;
  signal reinterpret1_output_port_net_x39: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(143 downto 0);
  signal reinterpret1_output_port_net_x40: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x41: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x42: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x43: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x44: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x45: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x46: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x8: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic;
  signal reinterpret2_output_port_net_x10: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x12: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x13: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x14: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x15: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x16: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x17: std_logic_vector(287 downto 0);
  signal reinterpret2_output_port_net_x18: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x19: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x20: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x21: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x22: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x23: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x24: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x25: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x26: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x27: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x28: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x29: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x30: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x4: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x5: std_logic_vector(143 downto 0);
  signal reinterpret2_output_port_net_x6: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x7: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net_x8: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x9: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic;
  signal reinterpret4_output_port_net_x0: std_logic;
  signal reinterpret5_output_port_net_x0: std_logic;
  signal reinterpret6_output_port_net_x0: std_logic;
  signal reinterpret7_output_port_net_x0: std_logic;
  signal reinterpret8_output_port_net_x0: std_logic;
  signal slice0_y_net_x1: std_logic;
  signal slice1_y_net_x3: std_logic;
  signal slice2_y_net_x8: std_logic;
  signal slice3_y_net_x15: std_logic;
  signal slice_y_net_x0: std_logic_vector(3 downto 0);

begin
  ce_1_sg_x1853 <= ce_1;
  clk_1_sg_x1853 <= clk_1;
  register0_q_net_x24 <= in00;
  register0_q_net_x25 <= in01;
  register0_q_net_x26 <= in010;
  register0_q_net_x27 <= in011;
  register0_q_net_x28 <= in012;
  register0_q_net_x29 <= in013;
  register0_q_net_x30 <= in014;
  register0_q_net_x31 <= in015;
  register0_q_net_x32 <= in02;
  register0_q_net_x33 <= in03;
  register0_q_net_x34 <= in04;
  register0_q_net_x35 <= in05;
  register0_q_net_x36 <= in06;
  register0_q_net_x37 <= in07;
  register0_q_net_x38 <= in08;
  register0_q_net_x39 <= in09;
  slice_y_net_x0 <= shift;
  register0_q_net_x40 <= sync;
  of_x0 <= combine_y_net_x0;
  out00 <= reinterpret1_output_port_net_x39;
  out01 <= reinterpret1_output_port_net_x43;
  out02 <= reinterpret1_output_port_net_x41;
  out03 <= reinterpret1_output_port_net_x45;
  out04 <= reinterpret1_output_port_net_x40;
  out05 <= reinterpret1_output_port_net_x44;
  out06 <= reinterpret1_output_port_net_x42;
  out07 <= reinterpret1_output_port_net_x46;
  sync_out <= delay0_q_net_x1;

  abus_4e0b43e236: entity work.abus_entity_4e0b43e236
    port map (
      in1 => register0_q_net_x24,
      in2 => register0_q_net_x25,
      in3 => register0_q_net_x32,
      in4 => register0_q_net_x33,
      in5 => register0_q_net_x34,
      in6 => register0_q_net_x35,
      in7 => register0_q_net_x36,
      in8 => register0_q_net_x37,
      bus_out => concatenate_y_net_x15
    );

  adebus0_0_3208f972d5: entity work.bus_expand_entity_2a52aaf3de
    port map (
      bus_in => reinterpret2_output_port_net_x17,
      lsb_out1 => reinterpret1_output_port_net_x4,
      msb_out2 => reinterpret2_output_port_net_x5
    );

  adebus1_0_f4b375e7cf: entity work.bus_expand_a_entity_1605f56624
    port map (
      bus_in => reinterpret2_output_port_net_x18,
      lsb_out1 => reinterpret1_output_port_net_x5,
      msb_out2 => reinterpret2_output_port_net_x6
    );

  adebus1_1_8d7a59c446: entity work.bus_expand_a_entity_1605f56624
    port map (
      bus_in => reinterpret2_output_port_net_x19,
      lsb_out1 => reinterpret1_output_port_net_x6,
      msb_out2 => reinterpret2_output_port_net_x7
    );

  adebus2_0_24ecc6e9de: entity work.adebus2_0_entity_24ecc6e9de
    port map (
      bus_in => reinterpret2_output_port_net_x20,
      lsb_out1 => reinterpret1_output_port_net_x7,
      msb_out2 => reinterpret2_output_port_net_x8
    );

  adebus2_1_c3f8654080: entity work.adebus2_0_entity_24ecc6e9de
    port map (
      bus_in => reinterpret2_output_port_net_x21,
      lsb_out1 => reinterpret1_output_port_net_x8,
      msb_out2 => reinterpret2_output_port_net_x9
    );

  adebus2_2_a6c1a7eb33: entity work.adebus2_0_entity_24ecc6e9de
    port map (
      bus_in => reinterpret2_output_port_net_x22,
      lsb_out1 => reinterpret1_output_port_net_x9,
      msb_out2 => reinterpret2_output_port_net_x10
    );

  adebus2_3_bd203b797d: entity work.adebus2_0_entity_24ecc6e9de
    port map (
      bus_in => reinterpret2_output_port_net_x23,
      lsb_out1 => reinterpret1_output_port_net_x10,
      msb_out2 => reinterpret2_output_port_net_x11
    );

  adebus3_0_373b5dff0d: entity work.a_debus_entity_43e449aa4c
    port map (
      bus_in => reinterpret2_output_port_net_x2,
      msb_lsb_out1 => reinterpret1_output_port_net_x39
    );

  adebus3_1_6e96270221: entity work.a_debus_entity_43e449aa4c
    port map (
      bus_in => reinterpret2_output_port_net_x24,
      msb_lsb_out1 => reinterpret1_output_port_net_x40
    );

  adebus3_2_8b0f21fe92: entity work.a_debus_entity_43e449aa4c
    port map (
      bus_in => reinterpret2_output_port_net_x25,
      msb_lsb_out1 => reinterpret1_output_port_net_x41
    );

  adebus3_3_835a8b6feb: entity work.a_debus_entity_43e449aa4c
    port map (
      bus_in => reinterpret2_output_port_net_x26,
      msb_lsb_out1 => reinterpret1_output_port_net_x42
    );

  adebus3_4_d255d436f4: entity work.a_debus_entity_43e449aa4c
    port map (
      bus_in => reinterpret2_output_port_net_x27,
      msb_lsb_out1 => reinterpret1_output_port_net_x43
    );

  adebus3_5_51bae34d5b: entity work.a_debus_entity_43e449aa4c
    port map (
      bus_in => reinterpret2_output_port_net_x28,
      msb_lsb_out1 => reinterpret1_output_port_net_x44
    );

  adebus3_6_3f858a8872: entity work.a_debus_entity_43e449aa4c
    port map (
      bus_in => reinterpret2_output_port_net_x29,
      msb_lsb_out1 => reinterpret1_output_port_net_x45
    );

  adebus3_7_e83b4589f0: entity work.a_debus_entity_43e449aa4c
    port map (
      bus_in => reinterpret2_output_port_net_x30,
      msb_lsb_out1 => reinterpret1_output_port_net_x46
    );

  bbus_fdbc74167d: entity work.abus_entity_4e0b43e236
    port map (
      in1 => register0_q_net_x38,
      in2 => register0_q_net_x39,
      in3 => register0_q_net_x26,
      in4 => register0_q_net_x27,
      in5 => register0_q_net_x28,
      in6 => register0_q_net_x29,
      in7 => register0_q_net_x30,
      in8 => register0_q_net_x31,
      bus_out => concatenate_y_net_x16
    );

  bdebus0_0_2593b8ab00: entity work.bus_expand_entity_2a52aaf3de
    port map (
      bus_in => reinterpret1_output_port_net_x3,
      lsb_out1 => reinterpret1_output_port_net_x18,
      msb_out2 => reinterpret2_output_port_net_x4
    );

  bdebus1_0_6903f16f9f: entity work.bus_expand_a_entity_1605f56624
    port map (
      bus_in => reinterpret1_output_port_net_x25,
      lsb_out1 => reinterpret1_output_port_net_x19,
      msb_out2 => reinterpret2_output_port_net_x12
    );

  bdebus1_1_bdaae2a429: entity work.bus_expand_a_entity_1605f56624
    port map (
      bus_in => reinterpret1_output_port_net_x26,
      lsb_out1 => reinterpret1_output_port_net_x20,
      msb_out2 => reinterpret2_output_port_net_x13
    );

  bdebus2_0_90c782eeff: entity work.adebus2_0_entity_24ecc6e9de
    port map (
      bus_in => reinterpret1_output_port_net_x27,
      lsb_out1 => reinterpret1_output_port_net_x21,
      msb_out2 => reinterpret2_output_port_net_x3
    );

  bdebus2_1_c6024ed2e5: entity work.adebus2_0_entity_24ecc6e9de
    port map (
      bus_in => reinterpret1_output_port_net_x28,
      lsb_out1 => reinterpret1_output_port_net_x22,
      msb_out2 => reinterpret2_output_port_net_x14
    );

  bdebus2_2_165c543afa: entity work.adebus2_0_entity_24ecc6e9de
    port map (
      bus_in => reinterpret1_output_port_net_x29,
      lsb_out1 => reinterpret1_output_port_net_x23,
      msb_out2 => reinterpret2_output_port_net_x15
    );

  bdebus2_3_21bea9e0ff: entity work.adebus2_0_entity_24ecc6e9de
    port map (
      bus_in => reinterpret1_output_port_net_x30,
      lsb_out1 => reinterpret1_output_port_net_x24,
      msb_out2 => reinterpret2_output_port_net_x16
    );

  butterfly0_0_7cd5f97621: entity work.butterfly0_0_entity_7cd5f97621
    port map (
      a => concatenate_y_net_x15,
      b => concatenate_y_net_x16,
      ce_1 => ce_1_sg_x1853,
      clk_1 => clk_1_sg_x1853,
      shift => slice0_y_net_x1,
      sync_in => register0_q_net_x40,
      a_bw => reinterpret1_output_port_net_x3,
      a_bw_x0 => reinterpret2_output_port_net_x17,
      of_x0 => concatenate_y_net_x17,
      sync_out => delay0_q_net_x8
    );

  butterfly1_0_2979b67672: entity work.butterfly1_0_entity_2979b67672
    port map (
      a => reinterpret2_output_port_net_x5,
      b => reinterpret1_output_port_net_x4,
      ce_1 => ce_1_sg_x1853,
      clk_1 => clk_1_sg_x1853,
      shift => slice1_y_net_x3,
      sync_in => delay0_q_net_x8,
      a_bw => reinterpret1_output_port_net_x25,
      a_bw_x0 => reinterpret2_output_port_net_x18,
      of_x0 => concatenate_y_net_x13,
      sync_out => delay0_q_net_x9
    );

  butterfly1_1_064b1c7ae9: entity work.butterfly1_1_entity_064b1c7ae9
    port map (
      a => reinterpret2_output_port_net_x4,
      b => reinterpret1_output_port_net_x18,
      ce_1 => ce_1_sg_x1853,
      clk_1 => clk_1_sg_x1853,
      shift => slice1_y_net_x3,
      sync_in => delay0_q_net_x8,
      a_bw => reinterpret1_output_port_net_x26,
      a_bw_x0 => reinterpret2_output_port_net_x19,
      of_x0 => concatenate_y_net_x18,
      sync_out => delay0_q_net_x10
    );

  butterfly2_0_5a3cb56ff3: entity work.butterfly2_0_entity_5a3cb56ff3
    port map (
      a => reinterpret2_output_port_net_x6,
      b => reinterpret1_output_port_net_x5,
      ce_1 => ce_1_sg_x1853,
      clk_1 => clk_1_sg_x1853,
      shift => slice2_y_net_x8,
      sync_in => delay0_q_net_x9,
      a_bw => reinterpret1_output_port_net_x27,
      a_bw_x0 => reinterpret2_output_port_net_x20,
      of_x0 => concatenate_y_net_x19,
      sync_out => delay0_q_net_x11
    );

  butterfly2_1_6045c8224a: entity work.butterfly2_1_entity_6045c8224a
    port map (
      a => reinterpret2_output_port_net_x12,
      b => reinterpret1_output_port_net_x19,
      ce_1 => ce_1_sg_x1853,
      clk_1 => clk_1_sg_x1853,
      shift => slice2_y_net_x8,
      sync_in => delay0_q_net_x9,
      a_bw => reinterpret1_output_port_net_x28,
      a_bw_x0 => reinterpret2_output_port_net_x21,
      of_x0 => concatenate_y_net_x20,
      sync_out => delay0_q_net_x12
    );

  butterfly2_2_d94595fc0f: entity work.butterfly2_2_entity_d94595fc0f
    port map (
      a => reinterpret2_output_port_net_x7,
      b => reinterpret1_output_port_net_x6,
      ce_1 => ce_1_sg_x1853,
      clk_1 => clk_1_sg_x1853,
      shift => slice2_y_net_x8,
      sync_in => delay0_q_net_x10,
      a_bw => reinterpret1_output_port_net_x29,
      a_bw_x0 => reinterpret2_output_port_net_x22,
      of_x0 => concatenate_y_net_x21,
      sync_out => delay0_q_net_x13
    );

  butterfly2_3_41739be53f: entity work.butterfly2_3_entity_41739be53f
    port map (
      a => reinterpret2_output_port_net_x13,
      b => reinterpret1_output_port_net_x20,
      ce_1 => ce_1_sg_x1853,
      clk_1 => clk_1_sg_x1853,
      shift => slice2_y_net_x8,
      sync_in => delay0_q_net_x10,
      a_bw => reinterpret1_output_port_net_x30,
      a_bw_x0 => reinterpret2_output_port_net_x23,
      of_x0 => concatenate_y_net_x22,
      sync_out => delay0_q_net_x14
    );

  butterfly3_0_8062a214fc: entity work.butterfly3_0_entity_8062a214fc
    port map (
      a => reinterpret2_output_port_net_x8,
      b => reinterpret1_output_port_net_x7,
      ce_1 => ce_1_sg_x1853,
      clk_1 => clk_1_sg_x1853,
      shift => slice3_y_net_x15,
      sync_in => delay0_q_net_x11,
      a_bw => reinterpret2_output_port_net_x2,
      of_x0 => reinterpret1_output_port_net_x31,
      sync_out => delay0_q_net_x1
    );

  butterfly3_1_e619c6d458: entity work.butterfly3_1_entity_e619c6d458
    port map (
      a => reinterpret2_output_port_net_x3,
      b => reinterpret1_output_port_net_x21,
      ce_1 => ce_1_sg_x1853,
      clk_1 => clk_1_sg_x1853,
      shift => slice3_y_net_x15,
      sync_in => delay0_q_net_x11,
      a_bw => reinterpret2_output_port_net_x24,
      of_x0 => reinterpret1_output_port_net_x32
    );

  butterfly3_2_83105020c0: entity work.butterfly3_2_entity_83105020c0
    port map (
      a => reinterpret2_output_port_net_x9,
      b => reinterpret1_output_port_net_x8,
      ce_1 => ce_1_sg_x1853,
      clk_1 => clk_1_sg_x1853,
      shift => slice3_y_net_x15,
      sync_in => delay0_q_net_x12,
      a_bw => reinterpret2_output_port_net_x25,
      of_x0 => reinterpret1_output_port_net_x33
    );

  butterfly3_3_bec45a7fd3: entity work.butterfly3_3_entity_bec45a7fd3
    port map (
      a => reinterpret2_output_port_net_x14,
      b => reinterpret1_output_port_net_x22,
      ce_1 => ce_1_sg_x1853,
      clk_1 => clk_1_sg_x1853,
      shift => slice3_y_net_x15,
      sync_in => delay0_q_net_x12,
      a_bw => reinterpret2_output_port_net_x26,
      of_x0 => reinterpret1_output_port_net_x34
    );

  butterfly3_4_4f0d49bf48: entity work.butterfly3_4_entity_4f0d49bf48
    port map (
      a => reinterpret2_output_port_net_x10,
      b => reinterpret1_output_port_net_x9,
      ce_1 => ce_1_sg_x1853,
      clk_1 => clk_1_sg_x1853,
      shift => slice3_y_net_x15,
      sync_in => delay0_q_net_x13,
      a_bw => reinterpret2_output_port_net_x27,
      of_x0 => reinterpret1_output_port_net_x35
    );

  butterfly3_5_94d0c0ebaa: entity work.butterfly3_5_entity_94d0c0ebaa
    port map (
      a => reinterpret2_output_port_net_x15,
      b => reinterpret1_output_port_net_x23,
      ce_1 => ce_1_sg_x1853,
      clk_1 => clk_1_sg_x1853,
      shift => slice3_y_net_x15,
      sync_in => delay0_q_net_x13,
      a_bw => reinterpret2_output_port_net_x28,
      of_x0 => reinterpret1_output_port_net_x36
    );

  butterfly3_6_e4239cd59a: entity work.butterfly3_6_entity_e4239cd59a
    port map (
      a => reinterpret2_output_port_net_x11,
      b => reinterpret1_output_port_net_x10,
      ce_1 => ce_1_sg_x1853,
      clk_1 => clk_1_sg_x1853,
      shift => slice3_y_net_x15,
      sync_in => delay0_q_net_x14,
      a_bw => reinterpret2_output_port_net_x29,
      of_x0 => reinterpret1_output_port_net_x37
    );

  butterfly3_7_3ec1defde4: entity work.butterfly3_7_entity_3ec1defde4
    port map (
      a => reinterpret2_output_port_net_x16,
      b => reinterpret1_output_port_net_x24,
      ce_1 => ce_1_sg_x1853,
      clk_1 => clk_1_sg_x1853,
      shift => slice3_y_net_x15,
      sync_in => delay0_q_net_x14,
      a_bw => reinterpret2_output_port_net_x30,
      of_x0 => reinterpret1_output_port_net_x38
    );

  combine: entity work.logical_89a6aa91bc
    port map (
      ce => ce_1_sg_x1853,
      clk => clk_1_sg_x1853,
      clr => '0',
      d0(0) => reinterpret8_output_port_net_x0,
      d1(0) => reinterpret7_output_port_net_x0,
      d2(0) => reinterpret6_output_port_net_x0,
      d3(0) => reinterpret5_output_port_net_x0,
      d4(0) => reinterpret4_output_port_net_x0,
      d5(0) => reinterpret3_output_port_net_x0,
      d6(0) => reinterpret2_output_port_net_x0,
      d7(0) => reinterpret1_output_port_net_x0,
      y(0) => combine_y_net_x0
    );

  of_0: entity work.delay_423c6c1400
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => concatenate_y_net_x17,
      q => of_0_q_net
    );

  of_1: entity work.concat_1a070f1f35
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x13,
      in1 => concatenate_y_net_x18,
      y => of_1_y_net
    );

  of_2: entity work.concat_201b1491e8
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => concatenate_y_net_x19,
      in1 => concatenate_y_net_x20,
      in2 => concatenate_y_net_x21,
      in3 => concatenate_y_net_x22,
      y => of_2_y_net
    );

  of_3: entity work.concat_7673b9b993
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0(0) => reinterpret1_output_port_net_x31,
      in1(0) => reinterpret1_output_port_net_x32,
      in2(0) => reinterpret1_output_port_net_x33,
      in3(0) => reinterpret1_output_port_net_x34,
      in4(0) => reinterpret1_output_port_net_x35,
      in5(0) => reinterpret1_output_port_net_x36,
      in6(0) => reinterpret1_output_port_net_x37,
      in7(0) => reinterpret1_output_port_net_x38,
      y => of_3_y_net
    );

  of_expand_cee063b030: entity work.sel_expand_entity_dc4ed90557
    port map (
      bus_in => of_or_y_net_x0,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out8 => reinterpret8_output_port_net_x0,
      out2 => reinterpret2_output_port_net_x0,
      out3 => reinterpret3_output_port_net_x0,
      out4 => reinterpret4_output_port_net_x0,
      out5 => reinterpret5_output_port_net_x0,
      out6 => reinterpret6_output_port_net_x0,
      out7 => reinterpret7_output_port_net_x0
    );

  of_or: entity work.logical_a2aa3b9c70
    port map (
      ce => ce_1_sg_x1853,
      clk => clk_1_sg_x1853,
      clr => '0',
      d0 => of_0_q_net,
      d1 => of_1_y_net,
      d2 => of_2_y_net,
      d3 => of_3_y_net,
      y => of_or_y_net_x0
    );

  slice0: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => slice0_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => slice1_y_net_x3
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => slice2_y_net_x8
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 4,
      y_width => 1
    )
    port map (
      x => slice_y_net_x0,
      y(0) => slice3_y_net_x15
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/reorder/addr_expand"

entity addr_expand_entity_107acd0def is
  port (
    bus_in: in std_logic_vector(79 downto 0); 
    lsb_out1: out std_logic_vector(9 downto 0); 
    msb_out8: out std_logic_vector(9 downto 0); 
    out2: out std_logic_vector(9 downto 0); 
    out3: out std_logic_vector(9 downto 0); 
    out4: out std_logic_vector(9 downto 0); 
    out5: out std_logic_vector(9 downto 0); 
    out6: out std_logic_vector(9 downto 0); 
    out7: out std_logic_vector(9 downto 0)
  );
end addr_expand_entity_107acd0def;

architecture structural of addr_expand_entity_107acd0def is
  signal concatenate_y_net_x0: std_logic_vector(79 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(9 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(9 downto 0);
  signal reinterpret3_output_port_net_x0: std_logic_vector(9 downto 0);
  signal reinterpret4_output_port_net_x0: std_logic_vector(9 downto 0);
  signal reinterpret5_output_port_net_x0: std_logic_vector(9 downto 0);
  signal reinterpret6_output_port_net_x0: std_logic_vector(9 downto 0);
  signal reinterpret7_output_port_net_x0: std_logic_vector(9 downto 0);
  signal reinterpret8_output_port_net_x0: std_logic_vector(9 downto 0);
  signal slice1_y_net: std_logic_vector(9 downto 0);
  signal slice2_y_net: std_logic_vector(9 downto 0);
  signal slice3_y_net: std_logic_vector(9 downto 0);
  signal slice4_y_net: std_logic_vector(9 downto 0);
  signal slice5_y_net: std_logic_vector(9 downto 0);
  signal slice6_y_net: std_logic_vector(9 downto 0);
  signal slice7_y_net: std_logic_vector(9 downto 0);
  signal slice8_y_net: std_logic_vector(9 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out8 <= reinterpret8_output_port_net_x0;
  out2 <= reinterpret2_output_port_net_x0;
  out3 <= reinterpret3_output_port_net_x0;
  out4 <= reinterpret4_output_port_net_x0;
  out5 <= reinterpret5_output_port_net_x0;
  out6 <= reinterpret6_output_port_net_x0;
  out7 <= reinterpret7_output_port_net_x0;

  reinterpret1: entity work.reinterpret_7093fd32f4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_7093fd32f4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  reinterpret3: entity work.reinterpret_7093fd32f4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x0
    );

  reinterpret4: entity work.reinterpret_7093fd32f4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x0
    );

  reinterpret5: entity work.reinterpret_7093fd32f4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice5_y_net,
      output_port => reinterpret5_output_port_net_x0
    );

  reinterpret6: entity work.reinterpret_7093fd32f4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice6_y_net,
      output_port => reinterpret6_output_port_net_x0
    );

  reinterpret7: entity work.reinterpret_7093fd32f4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice7_y_net,
      output_port => reinterpret7_output_port_net_x0
    );

  reinterpret8: entity work.reinterpret_7093fd32f4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice8_y_net,
      output_port => reinterpret8_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 80,
      y_width => 10
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 10,
      new_msb => 19,
      x_width => 80,
      y_width => 10
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 20,
      new_msb => 29,
      x_width => 80,
      y_width => 10
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 30,
      new_msb => 39,
      x_width => 80,
      y_width => 10
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice4_y_net
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 40,
      new_msb => 49,
      x_width => 80,
      y_width => 10
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice5_y_net
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 50,
      new_msb => 59,
      x_width => 80,
      y_width => 10
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice6_y_net
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 60,
      new_msb => 69,
      x_width => 80,
      y_width => 10
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice7_y_net
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 70,
      new_msb => 79,
      x_width => 80,
      y_width => 10
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice8_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/reorder/addr_replicate/bussify"

entity bussify_entity_ab92c75552 is
  port (
    in1: in std_logic_vector(9 downto 0); 
    in2: in std_logic_vector(9 downto 0); 
    in3: in std_logic_vector(9 downto 0); 
    in4: in std_logic_vector(9 downto 0); 
    in5: in std_logic_vector(9 downto 0); 
    in6: in std_logic_vector(9 downto 0); 
    in7: in std_logic_vector(9 downto 0); 
    in8: in std_logic_vector(9 downto 0); 
    bus_out: out std_logic_vector(79 downto 0)
  );
end bussify_entity_ab92c75552;

architecture structural of bussify_entity_ab92c75552 is
  signal concatenate_y_net_x1: std_logic_vector(79 downto 0);
  signal din2_0_q_net_x0: std_logic_vector(9 downto 0);
  signal din2_1_q_net_x0: std_logic_vector(9 downto 0);
  signal din2_2_q_net_x0: std_logic_vector(9 downto 0);
  signal din2_3_q_net_x0: std_logic_vector(9 downto 0);
  signal din2_4_q_net_x0: std_logic_vector(9 downto 0);
  signal din2_5_q_net_x0: std_logic_vector(9 downto 0);
  signal din2_6_q_net_x0: std_logic_vector(9 downto 0);
  signal din2_7_q_net_x0: std_logic_vector(9 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(9 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(9 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(9 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(9 downto 0);
  signal reinterpret5_output_port_net: std_logic_vector(9 downto 0);
  signal reinterpret6_output_port_net: std_logic_vector(9 downto 0);
  signal reinterpret7_output_port_net: std_logic_vector(9 downto 0);
  signal reinterpret8_output_port_net: std_logic_vector(9 downto 0);

begin
  din2_0_q_net_x0 <= in1;
  din2_1_q_net_x0 <= in2;
  din2_2_q_net_x0 <= in3;
  din2_3_q_net_x0 <= in4;
  din2_4_q_net_x0 <= in5;
  din2_5_q_net_x0 <= in6;
  din2_6_q_net_x0 <= in7;
  din2_7_q_net_x0 <= in8;
  bus_out <= concatenate_y_net_x1;

  concatenate: entity work.concat_afa8ffa0c9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      in4 => reinterpret5_output_port_net,
      in5 => reinterpret6_output_port_net,
      in6 => reinterpret7_output_port_net,
      in7 => reinterpret8_output_port_net,
      y => concatenate_y_net_x1
    );

  reinterpret1: entity work.reinterpret_7093fd32f4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din2_0_q_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_7093fd32f4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din2_1_q_net_x0,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_7093fd32f4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din2_2_q_net_x0,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_7093fd32f4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din2_3_q_net_x0,
      output_port => reinterpret4_output_port_net
    );

  reinterpret5: entity work.reinterpret_7093fd32f4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din2_4_q_net_x0,
      output_port => reinterpret5_output_port_net
    );

  reinterpret6: entity work.reinterpret_7093fd32f4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din2_5_q_net_x0,
      output_port => reinterpret6_output_port_net
    );

  reinterpret7: entity work.reinterpret_7093fd32f4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din2_6_q_net_x0,
      output_port => reinterpret7_output_port_net
    );

  reinterpret8: entity work.reinterpret_7093fd32f4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din2_7_q_net_x0,
      output_port => reinterpret8_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/reorder/addr_replicate"

entity addr_replicate_entity_a7f20ee2e2 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(9 downto 0); 
    out_x0: out std_logic_vector(79 downto 0)
  );
end addr_replicate_entity_a7f20ee2e2;

architecture structural of addr_replicate_entity_a7f20ee2e2 is
  signal ce_1_sg_x1855: std_logic;
  signal clk_1_sg_x1855: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(79 downto 0);
  signal din0_0_q_net: std_logic_vector(9 downto 0);
  signal din0_1_q_net: std_logic_vector(9 downto 0);
  signal din1_0_q_net: std_logic_vector(9 downto 0);
  signal din1_1_q_net: std_logic_vector(9 downto 0);
  signal din1_2_q_net: std_logic_vector(9 downto 0);
  signal din1_3_q_net: std_logic_vector(9 downto 0);
  signal din2_0_q_net_x0: std_logic_vector(9 downto 0);
  signal din2_1_q_net_x0: std_logic_vector(9 downto 0);
  signal din2_2_q_net_x0: std_logic_vector(9 downto 0);
  signal din2_3_q_net_x0: std_logic_vector(9 downto 0);
  signal din2_4_q_net_x0: std_logic_vector(9 downto 0);
  signal din2_5_q_net_x0: std_logic_vector(9 downto 0);
  signal din2_6_q_net_x0: std_logic_vector(9 downto 0);
  signal din2_7_q_net_x0: std_logic_vector(9 downto 0);
  signal map_mux_y_net_x0: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1855 <= ce_1;
  clk_1_sg_x1855 <= clk_1;
  map_mux_y_net_x0 <= in_x0;
  out_x0 <= concatenate_y_net_x2;

  bussify_ab92c75552: entity work.bussify_entity_ab92c75552
    port map (
      in1 => din2_0_q_net_x0,
      in2 => din2_1_q_net_x0,
      in3 => din2_2_q_net_x0,
      in4 => din2_3_q_net_x0,
      in5 => din2_4_q_net_x0,
      in6 => din2_5_q_net_x0,
      in7 => din2_6_q_net_x0,
      in8 => din2_7_q_net_x0,
      bus_out => concatenate_y_net_x2
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1855,
      clk => clk_1_sg_x1855,
      d => map_mux_y_net_x0,
      en => '1',
      rst => '1',
      q => din0_0_q_net
    );

  din0_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1855,
      clk => clk_1_sg_x1855,
      d => map_mux_y_net_x0,
      en => '1',
      rst => '1',
      q => din0_1_q_net
    );

  din1_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1855,
      clk => clk_1_sg_x1855,
      d => din0_0_q_net,
      en => '1',
      rst => '1',
      q => din1_0_q_net
    );

  din1_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1855,
      clk => clk_1_sg_x1855,
      d => din0_1_q_net,
      en => '1',
      rst => '1',
      q => din1_1_q_net
    );

  din1_2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1855,
      clk => clk_1_sg_x1855,
      d => din0_0_q_net,
      en => '1',
      rst => '1',
      q => din1_2_q_net
    );

  din1_3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1855,
      clk => clk_1_sg_x1855,
      d => din0_1_q_net,
      en => '1',
      rst => '1',
      q => din1_3_q_net
    );

  din2_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1855,
      clk => clk_1_sg_x1855,
      d => din1_0_q_net,
      en => '1',
      rst => '1',
      q => din2_0_q_net_x0
    );

  din2_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1855,
      clk => clk_1_sg_x1855,
      d => din1_1_q_net,
      en => '1',
      rst => '1',
      q => din2_1_q_net_x0
    );

  din2_2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1855,
      clk => clk_1_sg_x1855,
      d => din1_2_q_net,
      en => '1',
      rst => '1',
      q => din2_2_q_net_x0
    );

  din2_3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1855,
      clk => clk_1_sg_x1855,
      d => din1_3_q_net,
      en => '1',
      rst => '1',
      q => din2_3_q_net_x0
    );

  din2_4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1855,
      clk => clk_1_sg_x1855,
      d => din1_0_q_net,
      en => '1',
      rst => '1',
      q => din2_4_q_net_x0
    );

  din2_5: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1855,
      clk => clk_1_sg_x1855,
      d => din1_1_q_net,
      en => '1',
      rst => '1',
      q => din2_5_q_net_x0
    );

  din2_6: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1855,
      clk => clk_1_sg_x1855,
      d => din1_2_q_net,
      en => '1',
      rst => '1',
      q => din2_6_q_net_x0
    );

  din2_7: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1855,
      clk => clk_1_sg_x1855,
      d => din1_3_q_net,
      en => '1',
      rst => '1',
      q => din2_7_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/reorder/buf0/debus_addr"

entity debus_addr_entity_9cc46d162a is
  port (
    bus_in: in std_logic_vector(19 downto 0); 
    lsb_out1: out std_logic_vector(9 downto 0); 
    msb_out2: out std_logic_vector(9 downto 0)
  );
end debus_addr_entity_9cc46d162a;

architecture structural of debus_addr_entity_9cc46d162a is
  signal concatenate_y_net_x0: std_logic_vector(19 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(9 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(9 downto 0);
  signal slice1_y_net: std_logic_vector(9 downto 0);
  signal slice2_y_net: std_logic_vector(9 downto 0);

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out2 <= reinterpret2_output_port_net_x0;

  reinterpret1: entity work.reinterpret_7093fd32f4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_7093fd32f4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 20,
      y_width => 10
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 10,
      new_msb => 19,
      x_width => 20,
      y_width => 10
    )
    port map (
      x => concatenate_y_net_x0,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/reorder/buf0/debus_din"

entity debus_din_entity_1c6bb9bce8 is
  port (
    bus_in: in std_logic_vector(35 downto 0); 
    lsb_out1: out std_logic_vector(17 downto 0); 
    msb_out2: out std_logic_vector(17 downto 0)
  );
end debus_din_entity_1c6bb9bce8;

architecture structural of debus_din_entity_1c6bb9bce8 is
  signal ddin_q_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(17 downto 0);
  signal slice1_y_net: std_logic_vector(17 downto 0);
  signal slice2_y_net: std_logic_vector(17 downto 0);

begin
  ddin_q_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x0;
  msb_out2 <= reinterpret2_output_port_net_x0;

  reinterpret1: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x0
    );

  reinterpret2: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x0
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 36,
      y_width => 18
    )
    port map (
      x => ddin_q_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 35,
      x_width => 36,
      y_width => 18
    )
    port map (
      x => ddin_q_net_x0,
      y => slice2_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/reorder/buf0/debus_we"

entity debus_we_entity_40e52a9cba is
  port (
    bus_in: in std_logic_vector(1 downto 0); 
    lsb_out1: out std_logic; 
    msb_out2: out std_logic
  );
end debus_we_entity_40e52a9cba;

architecture structural of debus_we_entity_40e52a9cba is
  signal concatenate_y_net_x0: std_logic_vector(1 downto 0);
  signal slice1_y_net_x0: std_logic;
  signal slice2_y_net_x0: std_logic;

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= slice1_y_net_x0;
  msb_out2 <= slice2_y_net_x0;

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice1_y_net_x0
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 2,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice2_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/reorder/buf0/din_bussify"

entity din_bussify_entity_5a0df534e8 is
  port (
    in1: in std_logic_vector(17 downto 0); 
    in2: in std_logic_vector(17 downto 0); 
    bus_out: out std_logic_vector(35 downto 0)
  );
end din_bussify_entity_5a0df534e8;

architecture structural of din_bussify_entity_5a0df534e8 is
  signal bram0_data_out_net_x0: std_logic_vector(17 downto 0);
  signal bram1_data_out_net_x0: std_logic_vector(17 downto 0);
  signal concatenate_y_net_x1: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);

begin
  bram0_data_out_net_x0 <= in1;
  bram1_data_out_net_x0 <= in2;
  bus_out <= concatenate_y_net_x1;

  concatenate: entity work.concat_b198bd62b0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concatenate_y_net_x1
    );

  reinterpret1: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => bram0_data_out_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_9306b5127f
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => bram1_data_out_net_x0,
      output_port => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/reorder/buf0/rep_addr/bussify"

entity bussify_entity_3b0ea6416a is
  port (
    in1: in std_logic_vector(9 downto 0); 
    in2: in std_logic_vector(9 downto 0); 
    bus_out: out std_logic_vector(19 downto 0)
  );
end bussify_entity_3b0ea6416a;

architecture structural of bussify_entity_3b0ea6416a is
  signal concatenate_y_net_x1: std_logic_vector(19 downto 0);
  signal din3_0_q_net_x0: std_logic_vector(9 downto 0);
  signal din3_1_q_net_x0: std_logic_vector(9 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(9 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(9 downto 0);

begin
  din3_0_q_net_x0 <= in1;
  din3_1_q_net_x0 <= in2;
  bus_out <= concatenate_y_net_x1;

  concatenate: entity work.concat_9d608cd669
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      y => concatenate_y_net_x1
    );

  reinterpret1: entity work.reinterpret_7093fd32f4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din3_0_q_net_x0,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_7093fd32f4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => din3_1_q_net_x0,
      output_port => reinterpret2_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/reorder/buf0/rep_addr"

entity rep_addr_entity_0f0df1fca6 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(9 downto 0); 
    out_x0: out std_logic_vector(19 downto 0)
  );
end rep_addr_entity_0f0df1fca6;

architecture structural of rep_addr_entity_0f0df1fca6 is
  signal ce_1_sg_x1856: std_logic;
  signal clk_1_sg_x1856: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(19 downto 0);
  signal din0_0_q_net: std_logic_vector(9 downto 0);
  signal din1_0_q_net: std_logic_vector(9 downto 0);
  signal din1_1_q_net: std_logic_vector(9 downto 0);
  signal din2_0_q_net: std_logic_vector(9 downto 0);
  signal din2_1_q_net: std_logic_vector(9 downto 0);
  signal din3_0_q_net_x0: std_logic_vector(9 downto 0);
  signal din3_1_q_net_x0: std_logic_vector(9 downto 0);
  signal reinterpret8_output_port_net_x1: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1856 <= ce_1;
  clk_1_sg_x1856 <= clk_1;
  reinterpret8_output_port_net_x1 <= in_x0;
  out_x0 <= concatenate_y_net_x2;

  bussify_3b0ea6416a: entity work.bussify_entity_3b0ea6416a
    port map (
      in1 => din3_0_q_net_x0,
      in2 => din3_1_q_net_x0,
      bus_out => concatenate_y_net_x2
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1856,
      clk => clk_1_sg_x1856,
      d => reinterpret8_output_port_net_x1,
      en => '1',
      rst => '1',
      q => din0_0_q_net
    );

  din1_0: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1856,
      clk => clk_1_sg_x1856,
      clr => '0',
      d => din0_0_q_net,
      q => din1_0_q_net
    );

  din1_1: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1856,
      clk => clk_1_sg_x1856,
      clr => '0',
      d => din0_0_q_net,
      q => din1_1_q_net
    );

  din2_0: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1856,
      clk => clk_1_sg_x1856,
      clr => '0',
      d => din1_0_q_net,
      q => din2_0_q_net
    );

  din2_1: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1856,
      clk => clk_1_sg_x1856,
      clr => '0',
      d => din1_1_q_net,
      q => din2_1_q_net
    );

  din3_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1856,
      clk => clk_1_sg_x1856,
      d => din2_0_q_net,
      en => '1',
      rst => '1',
      q => din3_0_q_net_x0
    );

  din3_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1856,
      clk => clk_1_sg_x1856,
      d => din2_1_q_net,
      en => '1',
      rst => '1',
      q => din3_1_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/reorder/buf0/rep_we"

entity rep_we_entity_8ecf562569 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic_vector(1 downto 0)
  );
end rep_we_entity_8ecf562569;

architecture structural of rep_we_entity_8ecf562569 is
  signal ce_1_sg_x1857: std_logic;
  signal clk_1_sg_x1857: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(1 downto 0);
  signal din0_0_q_net: std_logic;
  signal din1_0_q_net: std_logic;
  signal din1_1_q_net: std_logic;
  signal din2_0_q_net: std_logic;
  signal din2_1_q_net: std_logic;
  signal din3_0_q_net_x0: std_logic;
  signal din3_1_q_net_x0: std_logic;
  signal slice8_y_net_x0: std_logic;

begin
  ce_1_sg_x1857 <= ce_1;
  clk_1_sg_x1857 <= clk_1;
  slice8_y_net_x0 <= in_x0;
  out_x0 <= concatenate_y_net_x2;

  bussify_093e0da756: entity work.bussify_entity_ba21439f51
    port map (
      in1 => din3_0_q_net_x0,
      in2 => din3_1_q_net_x0,
      bus_out => concatenate_y_net_x2
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1857,
      clk => clk_1_sg_x1857,
      d(0) => slice8_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_0_q_net
    );

  din1_0: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x1857,
      clk => clk_1_sg_x1857,
      clr => '0',
      d(0) => din0_0_q_net,
      q(0) => din1_0_q_net
    );

  din1_1: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x1857,
      clk => clk_1_sg_x1857,
      clr => '0',
      d(0) => din0_0_q_net,
      q(0) => din1_1_q_net
    );

  din2_0: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x1857,
      clk => clk_1_sg_x1857,
      clr => '0',
      d(0) => din1_0_q_net,
      q(0) => din2_0_q_net
    );

  din2_1: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x1857,
      clk => clk_1_sg_x1857,
      clr => '0',
      d(0) => din1_1_q_net,
      q(0) => din2_1_q_net
    );

  din3_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1857,
      clk => clk_1_sg_x1857,
      d(0) => din2_0_q_net,
      en => '1',
      rst => '1',
      q(0) => din3_0_q_net_x0
    );

  din3_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1857,
      clk => clk_1_sg_x1857,
      d(0) => din2_1_q_net,
      en => '1',
      rst => '1',
      q(0) => din3_1_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/reorder/buf0"

entity buf0_entity_47ab72c879 is
  port (
    addr: in std_logic_vector(9 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(35 downto 0); 
    we: in std_logic; 
    dout: out std_logic_vector(35 downto 0)
  );
end buf0_entity_47ab72c879;

architecture structural of buf0_entity_47ab72c879 is
  signal bram0_data_out_net_x0: std_logic_vector(17 downto 0);
  signal bram1_data_out_net_x0: std_logic_vector(17 downto 0);
  signal ce_1_sg_x1858: std_logic;
  signal clk_1_sg_x1858: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(19 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(1 downto 0);
  signal concatenate_y_net_x4: std_logic_vector(35 downto 0);
  signal ddin_q_net_x0: std_logic_vector(35 downto 0);
  signal delay_din0_q_net_x0: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(9 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net_x0: std_logic_vector(9 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(17 downto 0);
  signal reinterpret8_output_port_net_x2: std_logic_vector(9 downto 0);
  signal slice1_y_net_x0: std_logic;
  signal slice2_y_net_x0: std_logic;
  signal slice8_y_net_x1: std_logic;

begin
  reinterpret8_output_port_net_x2 <= addr;
  ce_1_sg_x1858 <= ce_1;
  clk_1_sg_x1858 <= clk_1;
  delay_din0_q_net_x0 <= din;
  slice8_y_net_x1 <= we;
  dout <= concatenate_y_net_x4;

  bram0: entity work.xlspram_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_1640ba8a478928b3",
      latency => 2
    )
    port map (
      addr => reinterpret2_output_port_net_x0,
      ce => ce_1_sg_x1858,
      clk => clk_1_sg_x1858,
      data_in => reinterpret2_output_port_net_x1,
      en => "1",
      rst => "0",
      we(0) => slice2_y_net_x0,
      data_out => bram0_data_out_net_x0
    );

  bram1: entity work.xlspram_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_1640ba8a478928b3",
      latency => 2
    )
    port map (
      addr => reinterpret1_output_port_net_x0,
      ce => ce_1_sg_x1858,
      clk => clk_1_sg_x1858,
      data_in => reinterpret1_output_port_net_x1,
      en => "1",
      rst => "0",
      we(0) => slice1_y_net_x0,
      data_out => bram1_data_out_net_x0
    );

  ddin: entity work.delay_bdaf6c9e55
    port map (
      ce => ce_1_sg_x1858,
      clk => clk_1_sg_x1858,
      clr => '0',
      d => delay_din0_q_net_x0,
      q => ddin_q_net_x0
    );

  debus_addr_9cc46d162a: entity work.debus_addr_entity_9cc46d162a
    port map (
      bus_in => concatenate_y_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x0,
      msb_out2 => reinterpret2_output_port_net_x0
    );

  debus_din_1c6bb9bce8: entity work.debus_din_entity_1c6bb9bce8
    port map (
      bus_in => ddin_q_net_x0,
      lsb_out1 => reinterpret1_output_port_net_x1,
      msb_out2 => reinterpret2_output_port_net_x1
    );

  debus_we_40e52a9cba: entity work.debus_we_entity_40e52a9cba
    port map (
      bus_in => concatenate_y_net_x3,
      lsb_out1 => slice1_y_net_x0,
      msb_out2 => slice2_y_net_x0
    );

  din_bussify_5a0df534e8: entity work.din_bussify_entity_5a0df534e8
    port map (
      in1 => bram0_data_out_net_x0,
      in2 => bram1_data_out_net_x0,
      bus_out => concatenate_y_net_x4
    );

  rep_addr_0f0df1fca6: entity work.rep_addr_entity_0f0df1fca6
    port map (
      ce_1 => ce_1_sg_x1858,
      clk_1 => clk_1_sg_x1858,
      in_x0 => reinterpret8_output_port_net_x2,
      out_x0 => concatenate_y_net_x2
    );

  rep_we_8ecf562569: entity work.rep_we_entity_8ecf562569
    port map (
      ce_1 => ce_1_sg_x1858,
      clk_1 => clk_1_sg_x1858,
      in_x0 => slice8_y_net_x1,
      out_x0 => concatenate_y_net_x3
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/reorder/current_map/B_bussify"

entity b_bussify_entity_a8d1141874 is
  port (
    in1: in std_logic_vector(9 downto 0); 
    bus_out: out std_logic_vector(9 downto 0)
  );
end b_bussify_entity_a8d1141874;

architecture structural of b_bussify_entity_a8d1141874 is
  signal bram0_doutb_net_x0: std_logic_vector(9 downto 0);
  signal reinterpret1_output_port_net_x0: std_logic_vector(9 downto 0);

begin
  bram0_doutb_net_x0 <= in1;
  bus_out <= reinterpret1_output_port_net_x0;

  reinterpret1: entity work.reinterpret_7093fd32f4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => bram0_doutb_net_x0,
      output_port => reinterpret1_output_port_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/reorder/current_map/debus_addra"

entity debus_addra_entity_f2a8cccc36 is
  port (
    bus_in: in std_logic_vector(9 downto 0); 
    msb_lsb_out1: out std_logic_vector(9 downto 0)
  );
end debus_addra_entity_f2a8cccc36;

architecture structural of debus_addra_entity_f2a8cccc36 is
  signal reinterpret1_output_port_net_x1: std_logic_vector(9 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(9 downto 0);
  signal slice1_y_net: std_logic_vector(9 downto 0);

begin
  reinterpret1_output_port_net_x1 <= bus_in;
  msb_lsb_out1 <= reinterpret1_output_port_net_x2;

  reinterpret1: entity work.reinterpret_7093fd32f4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 9,
      x_width => 10,
      y_width => 10
    )
    port map (
      x => reinterpret1_output_port_net_x1,
      y => slice1_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/reorder/current_map/rep_addra"

entity rep_addra_entity_1e82c0f9f6 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(9 downto 0); 
    out_x0: out std_logic_vector(9 downto 0)
  );
end rep_addra_entity_1e82c0f9f6;

architecture structural of rep_addra_entity_1e82c0f9f6 is
  signal ce_1_sg_x1880: std_logic;
  signal clk_1_sg_x1880: std_logic;
  signal daddr1_q_net_x0: std_logic_vector(9 downto 0);
  signal din0_0_q_net: std_logic_vector(9 downto 0);
  signal din1_0_q_net: std_logic_vector(9 downto 0);
  signal din2_0_q_net: std_logic_vector(9 downto 0);
  signal din3_0_q_net: std_logic_vector(9 downto 0);
  signal din4_0_q_net_x0: std_logic_vector(9 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(9 downto 0);

begin
  ce_1_sg_x1880 <= ce_1;
  clk_1_sg_x1880 <= clk_1;
  daddr1_q_net_x0 <= in_x0;
  out_x0 <= reinterpret1_output_port_net_x3;

  bussify_1b86f4007b: entity work.b_bussify_entity_a8d1141874
    port map (
      in1 => din4_0_q_net_x0,
      bus_out => reinterpret1_output_port_net_x3
    );

  din0_0: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1880,
      clk => clk_1_sg_x1880,
      clr => '0',
      d => daddr1_q_net_x0,
      q => din0_0_q_net
    );

  din1_0: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1880,
      clk => clk_1_sg_x1880,
      clr => '0',
      d => din0_0_q_net,
      q => din1_0_q_net
    );

  din2_0: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1880,
      clk => clk_1_sg_x1880,
      clr => '0',
      d => din1_0_q_net,
      q => din2_0_q_net
    );

  din3_0: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1880,
      clk => clk_1_sg_x1880,
      clr => '0',
      d => din2_0_q_net,
      q => din3_0_q_net
    );

  din4_0: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1880,
      clk => clk_1_sg_x1880,
      clr => '0',
      d => din3_0_q_net,
      q => din4_0_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/reorder/current_map/rep_addrb"

entity rep_addrb_entity_fe51d947f5 is
  port (
    in_x0: in std_logic_vector(9 downto 0); 
    out_x0: out std_logic_vector(9 downto 0)
  );
end rep_addrb_entity_fe51d947f5;

architecture structural of rep_addrb_entity_fe51d947f5 is
  signal daddr0_q_net_x1: std_logic_vector(9 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(9 downto 0);

begin
  daddr0_q_net_x1 <= in_x0;
  out_x0 <= reinterpret1_output_port_net_x3;

  bussify_77219abd90: entity work.b_bussify_entity_a8d1141874
    port map (
      in1 => daddr0_q_net_x1,
      bus_out => reinterpret1_output_port_net_x3
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/reorder/current_map/rep_wea"

entity rep_wea_entity_91fb1018be is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end rep_wea_entity_91fb1018be;

architecture structural of rep_wea_entity_91fb1018be is
  signal ce_1_sg_x1881: std_logic;
  signal clk_1_sg_x1881: std_logic;
  signal den_q_net_x0: std_logic;
  signal din0_0_q_net: std_logic;
  signal din1_0_q_net: std_logic;
  signal din2_0_q_net: std_logic;
  signal din3_0_q_net: std_logic;
  signal din4_0_q_net_x0: std_logic;
  signal reinterpret1_output_port_net_x2: std_logic;

begin
  ce_1_sg_x1881 <= ce_1;
  clk_1_sg_x1881 <= clk_1;
  den_q_net_x0 <= in_x0;
  out_x0 <= reinterpret1_output_port_net_x2;

  bussify_c6fe5454c7: entity work.bussify_entity_cb7efd63bc
    port map (
      in1 => din4_0_q_net_x0,
      bus_out => reinterpret1_output_port_net_x2
    );

  din0_0: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x1881,
      clk => clk_1_sg_x1881,
      clr => '0',
      d(0) => den_q_net_x0,
      q(0) => din0_0_q_net
    );

  din1_0: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x1881,
      clk => clk_1_sg_x1881,
      clr => '0',
      d(0) => din0_0_q_net,
      q(0) => din1_0_q_net
    );

  din2_0: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x1881,
      clk => clk_1_sg_x1881,
      clr => '0',
      d(0) => din1_0_q_net,
      q(0) => din2_0_q_net
    );

  din3_0: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x1881,
      clk => clk_1_sg_x1881,
      clr => '0',
      d(0) => din2_0_q_net,
      q(0) => din3_0_q_net
    );

  din4_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1881,
      clk => clk_1_sg_x1881,
      d(0) => din3_0_q_net,
      en => '1',
      rst => '1',
      q(0) => din4_0_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/reorder/current_map"

entity current_map_entity_d4d2d4ccc1 is
  port (
    addra: in std_logic_vector(9 downto 0); 
    addrb: in std_logic_vector(9 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    dina: in std_logic_vector(9 downto 0); 
    dinb: in std_logic_vector(9 downto 0); 
    wea: in std_logic; 
    web: in std_logic; 
    b: out std_logic_vector(9 downto 0)
  );
end current_map_entity_d4d2d4ccc1;

architecture structural of current_map_entity_d4d2d4ccc1 is
  signal blank_op_net_x0: std_logic_vector(9 downto 0);
  signal bram0_doutb_net_x0: std_logic_vector(9 downto 0);
  signal ce_1_sg_x1882: std_logic;
  signal clk_1_sg_x1882: std_logic;
  signal daddr0_q_net_x2: std_logic_vector(9 downto 0);
  signal daddr1_q_net_x1: std_logic_vector(9 downto 0);
  signal ddina_q_net_x0: std_logic_vector(9 downto 0);
  signal ddinb_q_net_x0: std_logic_vector(9 downto 0);
  signal den_q_net_x1: std_logic;
  signal dnew_map_q_net_x0: std_logic_vector(9 downto 0);
  signal never_op_net_x2: std_logic;
  signal reinterpret1_output_port_net_x10: std_logic_vector(9 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(9 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(9 downto 0);
  signal reinterpret1_output_port_net_x4: std_logic_vector(9 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(9 downto 0);
  signal reinterpret1_output_port_net_x6: std_logic_vector(9 downto 0);
  signal reinterpret1_output_port_net_x7: std_logic_vector(9 downto 0);
  signal reinterpret1_output_port_net_x8: std_logic;
  signal reinterpret1_output_port_net_x9: std_logic;
  signal slice1_y_net_x0: std_logic;
  signal slice1_y_net_x1: std_logic;

begin
  daddr1_q_net_x1 <= addra;
  daddr0_q_net_x2 <= addrb;
  ce_1_sg_x1882 <= ce_1;
  clk_1_sg_x1882 <= clk_1;
  dnew_map_q_net_x0 <= dina;
  blank_op_net_x0 <= dinb;
  den_q_net_x1 <= wea;
  never_op_net_x2 <= web;
  b <= reinterpret1_output_port_net_x10;

  b_bussify_a8d1141874: entity work.b_bussify_entity_a8d1141874
    port map (
      in1 => bram0_doutb_net_x0,
      bus_out => reinterpret1_output_port_net_x10
    );

  bram0: entity work.xldpram_he6_cres_correlator
    generic map (
      c_address_width_a => 10,
      c_address_width_b => 10,
      c_width_a => 10,
      c_width_b => 10,
      core_name0 => "bmg_72_3471d49fd6e899d2",
      latency => 3
    )
    port map (
      a_ce => ce_1_sg_x1882,
      a_clk => clk_1_sg_x1882,
      addra => reinterpret1_output_port_net_x2,
      addrb => reinterpret1_output_port_net_x3,
      b_ce => ce_1_sg_x1882,
      b_clk => clk_1_sg_x1882,
      dina => reinterpret1_output_port_net_x4,
      dinb => reinterpret1_output_port_net_x5,
      ena => "1",
      enb => "1",
      rsta => "0",
      rstb => "0",
      wea(0) => slice1_y_net_x0,
      web(0) => slice1_y_net_x1,
      doutb => bram0_doutb_net_x0
    );

  ddina: entity work.delay_0f6b6badfe
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => dnew_map_q_net_x0,
      q => ddina_q_net_x0
    );

  ddinb: entity work.delay_0f6b6badfe
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => blank_op_net_x0,
      q => ddinb_q_net_x0
    );

  debus_addra_f2a8cccc36: entity work.debus_addra_entity_f2a8cccc36
    port map (
      bus_in => reinterpret1_output_port_net_x6,
      msb_lsb_out1 => reinterpret1_output_port_net_x2
    );

  debus_addrb_d34b0c8c1d: entity work.debus_addra_entity_f2a8cccc36
    port map (
      bus_in => reinterpret1_output_port_net_x7,
      msb_lsb_out1 => reinterpret1_output_port_net_x3
    );

  debus_dina_45c89b44df: entity work.debus_addra_entity_f2a8cccc36
    port map (
      bus_in => ddina_q_net_x0,
      msb_lsb_out1 => reinterpret1_output_port_net_x4
    );

  debus_dinb_1c56e60538: entity work.debus_addra_entity_f2a8cccc36
    port map (
      bus_in => ddinb_q_net_x0,
      msb_lsb_out1 => reinterpret1_output_port_net_x5
    );

  debus_wea_2262122cbc: entity work.we_expand_entity_c5b97811a6
    port map (
      bus_in => reinterpret1_output_port_net_x8,
      msb_lsb_out1 => slice1_y_net_x0
    );

  debus_web_b73deb652b: entity work.we_expand_entity_c5b97811a6
    port map (
      bus_in => reinterpret1_output_port_net_x9,
      msb_lsb_out1 => slice1_y_net_x1
    );

  rep_addra_1e82c0f9f6: entity work.rep_addra_entity_1e82c0f9f6
    port map (
      ce_1 => ce_1_sg_x1882,
      clk_1 => clk_1_sg_x1882,
      in_x0 => daddr1_q_net_x1,
      out_x0 => reinterpret1_output_port_net_x6
    );

  rep_addrb_fe51d947f5: entity work.rep_addrb_entity_fe51d947f5
    port map (
      in_x0 => daddr0_q_net_x2,
      out_x0 => reinterpret1_output_port_net_x7
    );

  rep_wea_91fb1018be: entity work.rep_wea_entity_91fb1018be
    port map (
      ce_1 => ce_1_sg_x1882,
      clk_1 => clk_1_sg_x1882,
      in_x0 => den_q_net_x1,
      out_x0 => reinterpret1_output_port_net_x8
    );

  rep_web_95e4aa880b: entity work.we_replicate_entity_fc91f86d0a
    port map (
      in_x0 => never_op_net_x2,
      out_x0 => reinterpret1_output_port_net_x9
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/reorder/edge_detect"

entity edge_detect_entity_ce41245624 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end edge_detect_entity_ce41245624;

architecture structural of edge_detect_entity_ce41245624 is
  signal ce_1_sg_x1883: std_logic;
  signal clk_1_sg_x1883: std_logic;
  signal delay_q_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal inverter_op_net: std_logic;
  signal msb_y_net_x0: std_logic;

begin
  ce_1_sg_x1883 <= ce_1;
  clk_1_sg_x1883 <= clk_1;
  msb_y_net_x0 <= in_x0;
  out_x0 <= edge_op_y_net_x0;

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1883,
      clk => clk_1_sg_x1883,
      d(0) => msb_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_q_net
    );

  edge_op: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter_op_net,
      d1(0) => delay_q_net,
      y(0) => edge_op_y_net_x0
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x1883,
      clk => clk_1_sg_x1883,
      clr => '0',
      ip(0) => msb_y_net_x0,
      op(0) => inverter_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/reorder/sync_delay_en"

entity sync_delay_en_entity_c37a87f2f7 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    en: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_en_entity_c37a87f2f7;

architecture structural of sync_delay_en_entity_c37a87f2f7 is
  signal ce_1_sg_x1884: std_logic;
  signal clk_1_sg_x1884: std_logic;
  signal constant1_op_net: std_logic_vector(10 downto 0);
  signal constant2_op_net: std_logic_vector(10 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(10 downto 0);
  signal counter_op_net: std_logic_vector(10 downto 0);
  signal logical1_y_net: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x0: std_logic;
  signal or_y_net_x0: std_logic;
  signal pre_sync_delay_q_net_x0: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x1884 <= ce_1;
  clk_1_sg_x1884 <= clk_1;
  or_y_net_x0 <= en;
  pre_sync_delay_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x0;

  constant1: entity work.constant_a3923dd146
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_0604807f72
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_118598964d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.counter_b5e433c475
    port map (
      ce => ce_1_sg_x1884,
      clk => clk_1_sg_x1884,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical1_y_net,
      load(0) => pre_sync_delay_q_net_x0,
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => pre_sync_delay_q_net_x0,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  logical1: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical_y_net,
      d1(0) => or_y_net_x0,
      y(0) => logical1_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => pre_sync_delay_q_net_x0,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x0
    );

  relational: entity work.relational_2147430058
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_b4b277ae0f
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/reorder/we_expand"

entity we_expand_entity_c4316113b1 is
  port (
    bus_in: in std_logic_vector(7 downto 0); 
    lsb_out1: out std_logic; 
    msb_out8: out std_logic; 
    out2: out std_logic; 
    out3: out std_logic; 
    out4: out std_logic; 
    out5: out std_logic; 
    out6: out std_logic; 
    out7: out std_logic
  );
end we_expand_entity_c4316113b1;

architecture structural of we_expand_entity_c4316113b1 is
  signal concatenate_y_net_x0: std_logic_vector(7 downto 0);
  signal slice1_y_net_x3: std_logic;
  signal slice2_y_net_x3: std_logic;
  signal slice3_y_net_x2: std_logic;
  signal slice4_y_net_x2: std_logic;
  signal slice5_y_net_x2: std_logic;
  signal slice6_y_net_x2: std_logic;
  signal slice7_y_net_x2: std_logic;
  signal slice8_y_net_x2: std_logic;

begin
  concatenate_y_net_x0 <= bus_in;
  lsb_out1 <= slice1_y_net_x3;
  msb_out8 <= slice8_y_net_x2;
  out2 <= slice2_y_net_x3;
  out3 <= slice3_y_net_x2;
  out4 <= slice4_y_net_x2;
  out5 <= slice5_y_net_x2;
  out6 <= slice6_y_net_x2;
  out7 <= slice7_y_net_x2;

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice1_y_net_x3
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice2_y_net_x3
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice3_y_net_x2
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 3,
      new_msb => 3,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice4_y_net_x2
    );

  slice5: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 4,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice5_y_net_x2
    );

  slice6: entity work.xlslice
    generic map (
      new_lsb => 5,
      new_msb => 5,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice6_y_net_x2
    );

  slice7: entity work.xlslice
    generic map (
      new_lsb => 6,
      new_msb => 6,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice7_y_net_x2
    );

  slice8: entity work.xlslice
    generic map (
      new_lsb => 7,
      new_msb => 7,
      x_width => 8,
      y_width => 1
    )
    port map (
      x => concatenate_y_net_x0,
      y(0) => slice8_y_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/reorder/we_replicate"

entity we_replicate_entity_f6446d11d0 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic_vector(7 downto 0)
  );
end we_replicate_entity_f6446d11d0;

architecture structural of we_replicate_entity_f6446d11d0 is
  signal ce_1_sg_x1885: std_logic;
  signal clk_1_sg_x1885: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(7 downto 0);
  signal delay_we2_q_net_x0: std_logic;
  signal din0_0_q_net: std_logic;
  signal din0_1_q_net: std_logic;
  signal din1_0_q_net: std_logic;
  signal din1_1_q_net: std_logic;
  signal din1_2_q_net: std_logic;
  signal din1_3_q_net: std_logic;
  signal din2_0_q_net_x0: std_logic;
  signal din2_1_q_net_x0: std_logic;
  signal din2_2_q_net_x0: std_logic;
  signal din2_3_q_net_x0: std_logic;
  signal din2_4_q_net_x0: std_logic;
  signal din2_5_q_net_x0: std_logic;
  signal din2_6_q_net_x0: std_logic;
  signal din2_7_q_net_x0: std_logic;

begin
  ce_1_sg_x1885 <= ce_1;
  clk_1_sg_x1885 <= clk_1;
  delay_we2_q_net_x0 <= in_x0;
  out_x0 <= concatenate_y_net_x2;

  bussify_e8021acf42: entity work.bussify_entity_cf86712567
    port map (
      in1 => din2_0_q_net_x0,
      in2 => din2_1_q_net_x0,
      in3 => din2_2_q_net_x0,
      in4 => din2_3_q_net_x0,
      in5 => din2_4_q_net_x0,
      in6 => din2_5_q_net_x0,
      in7 => din2_6_q_net_x0,
      in8 => din2_7_q_net_x0,
      bus_out => concatenate_y_net_x2
    );

  din0_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1885,
      clk => clk_1_sg_x1885,
      d(0) => delay_we2_q_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_0_q_net
    );

  din0_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1885,
      clk => clk_1_sg_x1885,
      d(0) => delay_we2_q_net_x0,
      en => '1',
      rst => '1',
      q(0) => din0_1_q_net
    );

  din1_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1885,
      clk => clk_1_sg_x1885,
      d(0) => din0_0_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_0_q_net
    );

  din1_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1885,
      clk => clk_1_sg_x1885,
      d(0) => din0_1_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_1_q_net
    );

  din1_2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1885,
      clk => clk_1_sg_x1885,
      d(0) => din0_0_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_2_q_net
    );

  din1_3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1885,
      clk => clk_1_sg_x1885,
      d(0) => din0_1_q_net,
      en => '1',
      rst => '1',
      q(0) => din1_3_q_net
    );

  din2_0: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1885,
      clk => clk_1_sg_x1885,
      d(0) => din1_0_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_0_q_net_x0
    );

  din2_1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1885,
      clk => clk_1_sg_x1885,
      d(0) => din1_1_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_1_q_net_x0
    );

  din2_2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1885,
      clk => clk_1_sg_x1885,
      d(0) => din1_2_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_2_q_net_x0
    );

  din2_3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1885,
      clk => clk_1_sg_x1885,
      d(0) => din1_3_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_3_q_net_x0
    );

  din2_4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1885,
      clk => clk_1_sg_x1885,
      d(0) => din1_0_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_4_q_net_x0
    );

  din2_5: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1885,
      clk => clk_1_sg_x1885,
      d(0) => din1_1_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_5_q_net_x0
    );

  din2_6: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1885,
      clk => clk_1_sg_x1885,
      d(0) => din1_2_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_6_q_net_x0
    );

  din2_7: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1885,
      clk => clk_1_sg_x1885,
      d(0) => din1_3_q_net,
      en => '1',
      rst => '1',
      q(0) => din2_7_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/reorder"

entity reorder_entity_05ae0fc381 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din0: in std_logic_vector(35 downto 0); 
    din1: in std_logic_vector(35 downto 0); 
    din2: in std_logic_vector(35 downto 0); 
    din3: in std_logic_vector(35 downto 0); 
    din4: in std_logic_vector(35 downto 0); 
    din5: in std_logic_vector(35 downto 0); 
    din6: in std_logic_vector(35 downto 0); 
    din7: in std_logic_vector(35 downto 0); 
    en: in std_logic; 
    sync: in std_logic; 
    dout0: out std_logic_vector(35 downto 0); 
    dout1: out std_logic_vector(35 downto 0); 
    dout2: out std_logic_vector(35 downto 0); 
    dout3: out std_logic_vector(35 downto 0); 
    dout4: out std_logic_vector(35 downto 0); 
    dout5: out std_logic_vector(35 downto 0); 
    dout6: out std_logic_vector(35 downto 0); 
    dout7: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end reorder_entity_05ae0fc381;

architecture structural of reorder_entity_05ae0fc381 is
  signal blank_op_net_x0: std_logic_vector(9 downto 0);
  signal ce_1_sg_x1886: std_logic;
  signal clk_1_sg_x1886: std_logic;
  signal concatenate_y_net_x12: std_logic_vector(7 downto 0);
  signal concatenate_y_net_x13: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x14: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x15: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x16: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x17: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x18: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x19: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(79 downto 0);
  signal concatenate_y_net_x20: std_logic_vector(35 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal daddr0_q_net_x2: std_logic_vector(9 downto 0);
  signal daddr1_q_net_x1: std_logic_vector(9 downto 0);
  signal delay_din0_q_net_x0: std_logic_vector(35 downto 0);
  signal delay_din1_q_net_x0: std_logic_vector(35 downto 0);
  signal delay_din2_q_net_x0: std_logic_vector(35 downto 0);
  signal delay_din3_q_net_x0: std_logic_vector(35 downto 0);
  signal delay_din4_q_net_x0: std_logic_vector(35 downto 0);
  signal delay_din5_q_net_x0: std_logic_vector(35 downto 0);
  signal delay_din6_q_net_x0: std_logic_vector(35 downto 0);
  signal delay_din7_q_net_x0: std_logic_vector(35 downto 0);
  signal delay_we0_q_net: std_logic;
  signal delay_we2_q_net_x0: std_logic;
  signal den_q_net_x1: std_logic;
  signal dly_q_net_x10: std_logic_vector(35 downto 0);
  signal dly_q_net_x11: std_logic_vector(35 downto 0);
  signal dly_q_net_x12: std_logic_vector(35 downto 0);
  signal dly_q_net_x13: std_logic_vector(35 downto 0);
  signal dly_q_net_x14: std_logic;
  signal dly_q_net_x7: std_logic_vector(35 downto 0);
  signal dly_q_net_x8: std_logic_vector(35 downto 0);
  signal dly_q_net_x9: std_logic_vector(35 downto 0);
  signal dmap_src_q_net: std_logic;
  signal dnew_map_q_net_x0: std_logic_vector(9 downto 0);
  signal dsync_q_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal en_op_net_x0: std_logic;
  signal map_mod_data_net: std_logic_vector(9 downto 0);
  signal map_mux_y_net_x0: std_logic_vector(9 downto 0);
  signal map_src_q_net: std_logic;
  signal msb_y_net_x0: std_logic;
  signal mux83_y_net_x0: std_logic_vector(35 downto 0);
  signal mux_y_net_x0: std_logic;
  signal never_op_net_x2: std_logic;
  signal or_y_net_x0: std_logic;
  signal post_sync_delay_q_net_x0: std_logic;
  signal pre_sync_delay_q_net_x0: std_logic;
  signal reinterpret1_output_port_net_x10: std_logic_vector(9 downto 0);
  signal reinterpret1_output_port_net_x3: std_logic_vector(9 downto 0);
  signal reinterpret2_output_port_net_x3: std_logic_vector(9 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(9 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(9 downto 0);
  signal reinterpret5_output_port_net_x2: std_logic_vector(9 downto 0);
  signal reinterpret6_output_port_net_x2: std_logic_vector(9 downto 0);
  signal reinterpret7_output_port_net_x2: std_logic_vector(9 downto 0);
  signal reinterpret8_output_port_net_x2: std_logic_vector(9 downto 0);
  signal slice1_y_net_x3: std_logic;
  signal slice2_y_net_x3: std_logic;
  signal slice3_y_net_x2: std_logic;
  signal slice4_y_net_x2: std_logic;
  signal slice5_y_net_x2: std_logic;
  signal slice6_y_net_x2: std_logic;
  signal slice7_y_net_x2: std_logic;
  signal slice8_y_net_x2: std_logic;

begin
  ce_1_sg_x1886 <= ce_1;
  clk_1_sg_x1886 <= clk_1;
  dly_q_net_x7 <= din0;
  dly_q_net_x8 <= din1;
  dly_q_net_x9 <= din2;
  dly_q_net_x10 <= din3;
  dly_q_net_x11 <= din4;
  dly_q_net_x12 <= din5;
  dly_q_net_x13 <= din6;
  mux83_y_net_x0 <= din7;
  en_op_net_x0 <= en;
  dly_q_net_x14 <= sync;
  dout0 <= concatenate_y_net_x13;
  dout1 <= concatenate_y_net_x14;
  dout2 <= concatenate_y_net_x15;
  dout3 <= concatenate_y_net_x16;
  dout4 <= concatenate_y_net_x17;
  dout5 <= concatenate_y_net_x18;
  dout6 <= concatenate_y_net_x19;
  dout7 <= concatenate_y_net_x20;
  sync_out <= post_sync_delay_q_net_x0;

  addr_expand_107acd0def: entity work.addr_expand_entity_107acd0def
    port map (
      bus_in => concatenate_y_net_x2,
      lsb_out1 => reinterpret1_output_port_net_x3,
      msb_out8 => reinterpret8_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x3,
      out3 => reinterpret3_output_port_net_x2,
      out4 => reinterpret4_output_port_net_x2,
      out5 => reinterpret5_output_port_net_x2,
      out6 => reinterpret6_output_port_net_x2,
      out7 => reinterpret7_output_port_net_x2
    );

  addr_replicate_a7f20ee2e2: entity work.addr_replicate_entity_a7f20ee2e2
    port map (
      ce_1 => ce_1_sg_x1886,
      clk_1 => clk_1_sg_x1886,
      in_x0 => map_mux_y_net_x0,
      out_x0 => concatenate_y_net_x2
    );

  blank: entity work.constant_498bc68c14
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => blank_op_net_x0
    );

  buf0_47ab72c879: entity work.buf0_entity_47ab72c879
    port map (
      addr => reinterpret8_output_port_net_x2,
      ce_1 => ce_1_sg_x1886,
      clk_1 => clk_1_sg_x1886,
      din => delay_din0_q_net_x0,
      we => slice8_y_net_x2,
      dout => concatenate_y_net_x13
    );

  buf1_bfe260de94: entity work.buf0_entity_47ab72c879
    port map (
      addr => reinterpret7_output_port_net_x2,
      ce_1 => ce_1_sg_x1886,
      clk_1 => clk_1_sg_x1886,
      din => delay_din1_q_net_x0,
      we => slice7_y_net_x2,
      dout => concatenate_y_net_x14
    );

  buf2_d5cce054b2: entity work.buf0_entity_47ab72c879
    port map (
      addr => reinterpret6_output_port_net_x2,
      ce_1 => ce_1_sg_x1886,
      clk_1 => clk_1_sg_x1886,
      din => delay_din2_q_net_x0,
      we => slice6_y_net_x2,
      dout => concatenate_y_net_x15
    );

  buf3_eab8818778: entity work.buf0_entity_47ab72c879
    port map (
      addr => reinterpret5_output_port_net_x2,
      ce_1 => ce_1_sg_x1886,
      clk_1 => clk_1_sg_x1886,
      din => delay_din3_q_net_x0,
      we => slice5_y_net_x2,
      dout => concatenate_y_net_x16
    );

  buf4_e2fa9787c9: entity work.buf0_entity_47ab72c879
    port map (
      addr => reinterpret4_output_port_net_x2,
      ce_1 => ce_1_sg_x1886,
      clk_1 => clk_1_sg_x1886,
      din => delay_din4_q_net_x0,
      we => slice4_y_net_x2,
      dout => concatenate_y_net_x17
    );

  buf5_86c4a965eb: entity work.buf0_entity_47ab72c879
    port map (
      addr => reinterpret3_output_port_net_x2,
      ce_1 => ce_1_sg_x1886,
      clk_1 => clk_1_sg_x1886,
      din => delay_din5_q_net_x0,
      we => slice3_y_net_x2,
      dout => concatenate_y_net_x18
    );

  buf6_9cb790f923: entity work.buf0_entity_47ab72c879
    port map (
      addr => reinterpret2_output_port_net_x3,
      ce_1 => ce_1_sg_x1886,
      clk_1 => clk_1_sg_x1886,
      din => delay_din6_q_net_x0,
      we => slice2_y_net_x3,
      dout => concatenate_y_net_x19
    );

  buf7_14962b824b: entity work.buf0_entity_47ab72c879
    port map (
      addr => reinterpret1_output_port_net_x3,
      ce_1 => ce_1_sg_x1886,
      clk_1 => clk_1_sg_x1886,
      din => delay_din7_q_net_x0,
      we => slice1_y_net_x3,
      dout => concatenate_y_net_x20
    );

  counter: entity work.counter_a1cad1a9ea
    port map (
      ce => ce_1_sg_x1886,
      clk => clk_1_sg_x1886,
      clr => '0',
      en(0) => en_op_net_x0,
      rst(0) => dly_q_net_x14,
      op => counter_op_net
    );

  current_map_d4d2d4ccc1: entity work.current_map_entity_d4d2d4ccc1
    port map (
      addra => daddr1_q_net_x1,
      addrb => daddr0_q_net_x2,
      ce_1 => ce_1_sg_x1886,
      clk_1 => clk_1_sg_x1886,
      dina => dnew_map_q_net_x0,
      dinb => blank_op_net_x0,
      wea => den_q_net_x1,
      web => never_op_net_x2,
      b => reinterpret1_output_port_net_x10
    );

  daddr0: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1886,
      clk => clk_1_sg_x1886,
      clr => '0',
      d => counter_op_net,
      q => daddr0_q_net_x2
    );

  daddr1: entity work.delay_ef95dcaf33
    port map (
      ce => ce_1_sg_x1886,
      clk => clk_1_sg_x1886,
      clr => '0',
      d => daddr0_q_net_x2,
      q => daddr1_q_net_x1
    );

  delay_din0: entity work.delay_faa52967c8
    port map (
      ce => ce_1_sg_x1886,
      clk => clk_1_sg_x1886,
      clr => '0',
      d => dly_q_net_x7,
      q => delay_din0_q_net_x0
    );

  delay_din1: entity work.delay_faa52967c8
    port map (
      ce => ce_1_sg_x1886,
      clk => clk_1_sg_x1886,
      clr => '0',
      d => dly_q_net_x8,
      q => delay_din1_q_net_x0
    );

  delay_din2: entity work.delay_faa52967c8
    port map (
      ce => ce_1_sg_x1886,
      clk => clk_1_sg_x1886,
      clr => '0',
      d => dly_q_net_x9,
      q => delay_din2_q_net_x0
    );

  delay_din3: entity work.delay_faa52967c8
    port map (
      ce => ce_1_sg_x1886,
      clk => clk_1_sg_x1886,
      clr => '0',
      d => dly_q_net_x10,
      q => delay_din3_q_net_x0
    );

  delay_din4: entity work.delay_faa52967c8
    port map (
      ce => ce_1_sg_x1886,
      clk => clk_1_sg_x1886,
      clr => '0',
      d => dly_q_net_x11,
      q => delay_din4_q_net_x0
    );

  delay_din5: entity work.delay_faa52967c8
    port map (
      ce => ce_1_sg_x1886,
      clk => clk_1_sg_x1886,
      clr => '0',
      d => dly_q_net_x12,
      q => delay_din5_q_net_x0
    );

  delay_din6: entity work.delay_faa52967c8
    port map (
      ce => ce_1_sg_x1886,
      clk => clk_1_sg_x1886,
      clr => '0',
      d => dly_q_net_x13,
      q => delay_din6_q_net_x0
    );

  delay_din7: entity work.delay_faa52967c8
    port map (
      ce => ce_1_sg_x1886,
      clk => clk_1_sg_x1886,
      clr => '0',
      d => mux83_y_net_x0,
      q => delay_din7_q_net_x0
    );

  delay_we0: entity work.delay_14a6a51cbc
    port map (
      ce => ce_1_sg_x1886,
      clk => clk_1_sg_x1886,
      clr => '0',
      d(0) => en_op_net_x0,
      q(0) => delay_we0_q_net
    );

  delay_we2: entity work.delay_a14e3dd1bd
    port map (
      ce => ce_1_sg_x1886,
      clk => clk_1_sg_x1886,
      clr => '0',
      d(0) => en_op_net_x0,
      q(0) => delay_we2_q_net_x0
    );

  den: entity work.delay_c53de546ea
    port map (
      ce => ce_1_sg_x1886,
      clk => clk_1_sg_x1886,
      clr => '0',
      d(0) => en_op_net_x0,
      q(0) => den_q_net_x1
    );

  dmap_src: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1886,
      clk => clk_1_sg_x1886,
      clr => '0',
      d(0) => map_src_q_net,
      q(0) => dmap_src_q_net
    );

  dnew_map: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1886,
      clk => clk_1_sg_x1886,
      clr => '0',
      d => map_mod_data_net,
      q => dnew_map_q_net_x0
    );

  dsync: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x1886,
      clk => clk_1_sg_x1886,
      clr => '0',
      d(0) => dly_q_net_x14,
      q(0) => dsync_q_net
    );

  edge_detect_ce41245624: entity work.edge_detect_entity_ce41245624
    port map (
      ce_1 => ce_1_sg_x1886,
      clk_1 => clk_1_sg_x1886,
      in_x0 => msb_y_net_x0,
      out_x0 => edge_op_y_net_x0
    );

  map_mod: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 10,
      core_name0 => "bmg_72_b5c4cba6fbbd091f",
      latency => 2
    )
    port map (
      addr => map_mux_y_net_x0,
      ce => ce_1_sg_x1886,
      clk => clk_1_sg_x1886,
      en => "1",
      rst => "0",
      data => map_mod_data_net
    );

  map_mux: entity work.mux_6ec07dbeb8
    port map (
      ce => ce_1_sg_x1886,
      clk => clk_1_sg_x1886,
      clr => '0',
      d0 => daddr1_q_net_x1,
      d1 => reinterpret1_output_port_net_x10,
      sel(0) => dmap_src_q_net,
      y => map_mux_y_net_x0
    );

  map_src: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x1886,
      clk => clk_1_sg_x1886,
      d(0) => edge_op_y_net_x0,
      en(0) => edge_op_y_net_x0,
      rst(0) => dsync_q_net,
      q(0) => map_src_q_net
    );

  msb: entity work.xlslice
    generic map (
      new_lsb => 9,
      new_msb => 9,
      x_width => 10,
      y_width => 1
    )
    port map (
      x => counter_op_net,
      y(0) => msb_y_net_x0
    );

  never: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => never_op_net_x2
    );

  or_x0: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => pre_sync_delay_q_net_x0,
      d1(0) => delay_we0_q_net,
      y(0) => or_y_net_x0
    );

  post_sync_delay: entity work.delay_fa260f7d22
    port map (
      ce => ce_1_sg_x1886,
      clk => clk_1_sg_x1886,
      clr => '0',
      d(0) => mux_y_net_x0,
      q(0) => post_sync_delay_q_net_x0
    );

  pre_sync_delay: entity work.delay_14a6a51cbc
    port map (
      ce => ce_1_sg_x1886,
      clk => clk_1_sg_x1886,
      clr => '0',
      d(0) => dly_q_net_x14,
      q(0) => pre_sync_delay_q_net_x0
    );

  sync_delay_en_c37a87f2f7: entity work.sync_delay_en_entity_c37a87f2f7
    port map (
      ce_1 => ce_1_sg_x1886,
      clk_1 => clk_1_sg_x1886,
      en => or_y_net_x0,
      in_x0 => pre_sync_delay_q_net_x0,
      out_x0 => mux_y_net_x0
    );

  we_expand_c4316113b1: entity work.we_expand_entity_c4316113b1
    port map (
      bus_in => concatenate_y_net_x12,
      lsb_out1 => slice1_y_net_x3,
      msb_out8 => slice8_y_net_x2,
      out2 => slice2_y_net_x3,
      out3 => slice3_y_net_x2,
      out4 => slice4_y_net_x2,
      out5 => slice5_y_net_x2,
      out6 => slice6_y_net_x2,
      out7 => slice7_y_net_x2
    );

  we_replicate_f6446d11d0: entity work.we_replicate_entity_f6446d11d0
    port map (
      ce_1 => ce_1_sg_x1886,
      clk_1 => clk_1_sg_x1886,
      in_x0 => delay_we2_q_net_x0,
      out_x0 => concatenate_y_net_x12
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/square_transposer/barrel_switcher"

entity barrel_switcher_entity_d82be26788 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    in3: in std_logic_vector(35 downto 0); 
    in4: in std_logic_vector(35 downto 0); 
    in5: in std_logic_vector(35 downto 0); 
    in6: in std_logic_vector(35 downto 0); 
    in7: in std_logic_vector(35 downto 0); 
    in8: in std_logic_vector(35 downto 0); 
    sel: in std_logic_vector(2 downto 0); 
    sync_in: in std_logic; 
    out1: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0); 
    out3: out std_logic_vector(35 downto 0); 
    out4: out std_logic_vector(35 downto 0); 
    out5: out std_logic_vector(35 downto 0); 
    out6: out std_logic_vector(35 downto 0); 
    out7: out std_logic_vector(35 downto 0); 
    out8: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end barrel_switcher_entity_d82be26788;

architecture structural of barrel_switcher_entity_d82be26788 is
  signal ce_1_sg_x1887: std_logic;
  signal clk_1_sg_x1887: std_logic;
  signal counter_op_net_x0: std_logic_vector(2 downto 0);
  signal delay1_q_net: std_logic_vector(2 downto 0);
  signal delay2_q_net: std_logic_vector(2 downto 0);
  signal delay_sync_q_net_x0: std_logic;
  signal dly_q_net_x10: std_logic_vector(35 downto 0);
  signal dly_q_net_x11: std_logic_vector(35 downto 0);
  signal dly_q_net_x12: std_logic_vector(35 downto 0);
  signal dly_q_net_x6: std_logic_vector(35 downto 0);
  signal dly_q_net_x7: std_logic_vector(35 downto 0);
  signal dly_q_net_x8: std_logic_vector(35 downto 0);
  signal dly_q_net_x9: std_logic_vector(35 downto 0);
  signal mux11_y_net: std_logic_vector(35 downto 0);
  signal mux12_y_net: std_logic_vector(35 downto 0);
  signal mux13_y_net_x0: std_logic_vector(35 downto 0);
  signal mux21_y_net: std_logic_vector(35 downto 0);
  signal mux22_y_net: std_logic_vector(35 downto 0);
  signal mux23_y_net_x0: std_logic_vector(35 downto 0);
  signal mux31_y_net: std_logic_vector(35 downto 0);
  signal mux32_y_net: std_logic_vector(35 downto 0);
  signal mux33_y_net_x0: std_logic_vector(35 downto 0);
  signal mux41_y_net: std_logic_vector(35 downto 0);
  signal mux42_y_net: std_logic_vector(35 downto 0);
  signal mux43_y_net_x0: std_logic_vector(35 downto 0);
  signal mux51_y_net: std_logic_vector(35 downto 0);
  signal mux52_y_net: std_logic_vector(35 downto 0);
  signal mux53_y_net_x0: std_logic_vector(35 downto 0);
  signal mux61_y_net: std_logic_vector(35 downto 0);
  signal mux62_y_net: std_logic_vector(35 downto 0);
  signal mux63_y_net_x0: std_logic_vector(35 downto 0);
  signal mux71_y_net: std_logic_vector(35 downto 0);
  signal mux72_y_net: std_logic_vector(35 downto 0);
  signal mux73_y_net_x0: std_logic_vector(35 downto 0);
  signal mux81_y_net: std_logic_vector(35 downto 0);
  signal mux82_y_net: std_logic_vector(35 downto 0);
  signal mux83_y_net_x1: std_logic_vector(35 downto 0);
  signal register0_q_net_x1: std_logic;
  signal reinterpret1_output_port_net_x1: std_logic_vector(35 downto 0);
  signal slice1_y_net: std_logic;
  signal slice2_y_net: std_logic;
  signal slice3_y_net: std_logic;

begin
  ce_1_sg_x1887 <= ce_1;
  clk_1_sg_x1887 <= clk_1;
  reinterpret1_output_port_net_x1 <= in1;
  dly_q_net_x12 <= in2;
  dly_q_net_x11 <= in3;
  dly_q_net_x10 <= in4;
  dly_q_net_x9 <= in5;
  dly_q_net_x8 <= in6;
  dly_q_net_x7 <= in7;
  dly_q_net_x6 <= in8;
  counter_op_net_x0 <= sel;
  register0_q_net_x1 <= sync_in;
  out1 <= mux13_y_net_x0;
  out2 <= mux23_y_net_x0;
  out3 <= mux33_y_net_x0;
  out4 <= mux43_y_net_x0;
  out5 <= mux53_y_net_x0;
  out6 <= mux63_y_net_x0;
  out7 <= mux73_y_net_x0;
  out8 <= mux83_y_net_x1;
  sync_out <= delay_sync_q_net_x0;

  delay1: entity work.delay_54d5af2115
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d => counter_op_net_x0,
      q => delay1_q_net
    );

  delay2: entity work.delay_54d5af2115
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d => delay1_q_net,
      q => delay2_q_net
    );

  delay_sync: entity work.delay_23d71a76f2
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d(0) => register0_q_net_x1,
      q(0) => delay_sync_q_net_x0
    );

  mux11: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d0 => reinterpret1_output_port_net_x1,
      d1 => dly_q_net_x9,
      sel(0) => slice1_y_net,
      y => mux11_y_net
    );

  mux12: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d0 => mux11_y_net,
      d1 => mux31_y_net,
      sel(0) => slice2_y_net,
      y => mux12_y_net
    );

  mux13: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d0 => mux12_y_net,
      d1 => mux22_y_net,
      sel(0) => slice3_y_net,
      y => mux13_y_net_x0
    );

  mux21: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d0 => dly_q_net_x12,
      d1 => dly_q_net_x8,
      sel(0) => slice1_y_net,
      y => mux21_y_net
    );

  mux22: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d0 => mux21_y_net,
      d1 => mux41_y_net,
      sel(0) => slice2_y_net,
      y => mux22_y_net
    );

  mux23: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d0 => mux22_y_net,
      d1 => mux32_y_net,
      sel(0) => slice3_y_net,
      y => mux23_y_net_x0
    );

  mux31: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d0 => dly_q_net_x11,
      d1 => dly_q_net_x7,
      sel(0) => slice1_y_net,
      y => mux31_y_net
    );

  mux32: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d0 => mux31_y_net,
      d1 => mux51_y_net,
      sel(0) => slice2_y_net,
      y => mux32_y_net
    );

  mux33: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d0 => mux32_y_net,
      d1 => mux42_y_net,
      sel(0) => slice3_y_net,
      y => mux33_y_net_x0
    );

  mux41: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d0 => dly_q_net_x10,
      d1 => dly_q_net_x6,
      sel(0) => slice1_y_net,
      y => mux41_y_net
    );

  mux42: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d0 => mux41_y_net,
      d1 => mux61_y_net,
      sel(0) => slice2_y_net,
      y => mux42_y_net
    );

  mux43: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d0 => mux42_y_net,
      d1 => mux52_y_net,
      sel(0) => slice3_y_net,
      y => mux43_y_net_x0
    );

  mux51: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d0 => dly_q_net_x9,
      d1 => reinterpret1_output_port_net_x1,
      sel(0) => slice1_y_net,
      y => mux51_y_net
    );

  mux52: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d0 => mux51_y_net,
      d1 => mux71_y_net,
      sel(0) => slice2_y_net,
      y => mux52_y_net
    );

  mux53: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d0 => mux52_y_net,
      d1 => mux62_y_net,
      sel(0) => slice3_y_net,
      y => mux53_y_net_x0
    );

  mux61: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d0 => dly_q_net_x8,
      d1 => dly_q_net_x12,
      sel(0) => slice1_y_net,
      y => mux61_y_net
    );

  mux62: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d0 => mux61_y_net,
      d1 => mux81_y_net,
      sel(0) => slice2_y_net,
      y => mux62_y_net
    );

  mux63: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d0 => mux62_y_net,
      d1 => mux72_y_net,
      sel(0) => slice3_y_net,
      y => mux63_y_net_x0
    );

  mux71: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d0 => dly_q_net_x7,
      d1 => dly_q_net_x11,
      sel(0) => slice1_y_net,
      y => mux71_y_net
    );

  mux72: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d0 => mux71_y_net,
      d1 => mux11_y_net,
      sel(0) => slice2_y_net,
      y => mux72_y_net
    );

  mux73: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d0 => mux72_y_net,
      d1 => mux82_y_net,
      sel(0) => slice3_y_net,
      y => mux73_y_net_x0
    );

  mux81: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d0 => dly_q_net_x6,
      d1 => dly_q_net_x10,
      sel(0) => slice1_y_net,
      y => mux81_y_net
    );

  mux82: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d0 => mux81_y_net,
      d1 => mux21_y_net,
      sel(0) => slice2_y_net,
      y => mux82_y_net
    );

  mux83: entity work.mux_4bb6f691f7
    port map (
      ce => ce_1_sg_x1887,
      clk => clk_1_sg_x1887,
      clr => '0',
      d0 => mux82_y_net,
      d1 => mux12_y_net,
      sel(0) => slice3_y_net,
      y => mux83_y_net_x1
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 3,
      y_width => 1
    )
    port map (
      x => counter_op_net_x0,
      y(0) => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 3,
      y_width => 1
    )
    port map (
      x => delay1_q_net,
      y(0) => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 3,
      y_width => 1
    )
    port map (
      x => delay2_q_net,
      y(0) => slice3_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/square_transposer/db0"

entity db0_entity_6fbe7fb3c7 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(35 downto 0); 
    dout: out std_logic_vector(35 downto 0)
  );
end db0_entity_6fbe7fb3c7;

architecture structural of db0_entity_6fbe7fb3c7 is
  signal ce_1_sg_x1888: std_logic;
  signal clk_1_sg_x1888: std_logic;
  signal dly_q_net_x8: std_logic_vector(35 downto 0);
  signal mux13_y_net_x1: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x1888 <= ce_1;
  clk_1_sg_x1888 <= clk_1;
  mux13_y_net_x1 <= din;
  dout <= dly_q_net_x8;

  dly: entity work.delay_1b04a69dde
    port map (
      ce => ce_1_sg_x1888,
      clk => clk_1_sg_x1888,
      clr => '0',
      d => mux13_y_net_x1,
      q => dly_q_net_x8
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/square_transposer/db1"

entity db1_entity_a857677661 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(35 downto 0); 
    dout: out std_logic_vector(35 downto 0)
  );
end db1_entity_a857677661;

architecture structural of db1_entity_a857677661 is
  signal ce_1_sg_x1889: std_logic;
  signal clk_1_sg_x1889: std_logic;
  signal dly_q_net_x9: std_logic_vector(35 downto 0);
  signal mux23_y_net_x1: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x1889 <= ce_1;
  clk_1_sg_x1889 <= clk_1;
  mux23_y_net_x1 <= din;
  dout <= dly_q_net_x9;

  dly: entity work.delay_28d2c9d50c
    port map (
      ce => ce_1_sg_x1889,
      clk => clk_1_sg_x1889,
      clr => '0',
      d => mux23_y_net_x1,
      q => dly_q_net_x9
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/square_transposer/db2"

entity db2_entity_8ae4ae5b4f is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(35 downto 0); 
    dout: out std_logic_vector(35 downto 0)
  );
end db2_entity_8ae4ae5b4f;

architecture structural of db2_entity_8ae4ae5b4f is
  signal ce_1_sg_x1890: std_logic;
  signal clk_1_sg_x1890: std_logic;
  signal dly_q_net_x10: std_logic_vector(35 downto 0);
  signal mux33_y_net_x1: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x1890 <= ce_1;
  clk_1_sg_x1890 <= clk_1;
  mux33_y_net_x1 <= din;
  dout <= dly_q_net_x10;

  dly: entity work.delay_7439478232
    port map (
      ce => ce_1_sg_x1890,
      clk => clk_1_sg_x1890,
      clr => '0',
      d => mux33_y_net_x1,
      q => dly_q_net_x10
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/square_transposer/db3"

entity db3_entity_3792263af5 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(35 downto 0); 
    dout: out std_logic_vector(35 downto 0)
  );
end db3_entity_3792263af5;

architecture structural of db3_entity_3792263af5 is
  signal ce_1_sg_x1891: std_logic;
  signal clk_1_sg_x1891: std_logic;
  signal dly_q_net_x11: std_logic_vector(35 downto 0);
  signal mux43_y_net_x1: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x1891 <= ce_1;
  clk_1_sg_x1891 <= clk_1;
  mux43_y_net_x1 <= din;
  dout <= dly_q_net_x11;

  dly: entity work.delay_bdaf6c9e55
    port map (
      ce => ce_1_sg_x1891,
      clk => clk_1_sg_x1891,
      clr => '0',
      d => mux43_y_net_x1,
      q => dly_q_net_x11
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/square_transposer/db4"

entity db4_entity_31d9bcf47c is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(35 downto 0); 
    dout: out std_logic_vector(35 downto 0)
  );
end db4_entity_31d9bcf47c;

architecture structural of db4_entity_31d9bcf47c is
  signal ce_1_sg_x1892: std_logic;
  signal clk_1_sg_x1892: std_logic;
  signal dly_q_net_x12: std_logic_vector(35 downto 0);
  signal mux53_y_net_x1: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x1892 <= ce_1;
  clk_1_sg_x1892 <= clk_1;
  mux53_y_net_x1 <= din;
  dout <= dly_q_net_x12;

  dly: entity work.delay_4b00a70dea
    port map (
      ce => ce_1_sg_x1892,
      clk => clk_1_sg_x1892,
      clr => '0',
      d => mux53_y_net_x1,
      q => dly_q_net_x12
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/square_transposer/db5"

entity db5_entity_0b4c56cbce is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(35 downto 0); 
    dout: out std_logic_vector(35 downto 0)
  );
end db5_entity_0b4c56cbce;

architecture structural of db5_entity_0b4c56cbce is
  signal ce_1_sg_x1893: std_logic;
  signal clk_1_sg_x1893: std_logic;
  signal dly_q_net_x13: std_logic_vector(35 downto 0);
  signal mux63_y_net_x1: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x1893 <= ce_1;
  clk_1_sg_x1893 <= clk_1;
  mux63_y_net_x1 <= din;
  dout <= dly_q_net_x13;

  dly: entity work.delay_38898c80c0
    port map (
      ce => ce_1_sg_x1893,
      clk => clk_1_sg_x1893,
      clr => '0',
      d => mux63_y_net_x1,
      q => dly_q_net_x13
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/square_transposer/db6"

entity db6_entity_f12343aceb is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(35 downto 0); 
    dout: out std_logic_vector(35 downto 0)
  );
end db6_entity_f12343aceb;

architecture structural of db6_entity_f12343aceb is
  signal ce_1_sg_x1894: std_logic;
  signal clk_1_sg_x1894: std_logic;
  signal dly_q_net_x14: std_logic_vector(35 downto 0);
  signal mux73_y_net_x1: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x1894 <= ce_1;
  clk_1_sg_x1894 <= clk_1;
  mux73_y_net_x1 <= din;
  dout <= dly_q_net_x14;

  dly: entity work.delay_e4b9fcaf02
    port map (
      ce => ce_1_sg_x1894,
      clk => clk_1_sg_x1894,
      clr => '0',
      d => mux73_y_net_x1,
      q => dly_q_net_x14
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/square_transposer/dsync"

entity dsync_entity_d7d3ad2b04 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic; 
    dout: out std_logic
  );
end dsync_entity_d7d3ad2b04;

architecture structural of dsync_entity_d7d3ad2b04 is
  signal ce_1_sg_x1902: std_logic;
  signal clk_1_sg_x1902: std_logic;
  signal delay_sync_q_net_x1: std_logic;
  signal dly_q_net_x15: std_logic;

begin
  ce_1_sg_x1902 <= ce_1;
  clk_1_sg_x1902 <= clk_1;
  delay_sync_q_net_x1 <= din;
  dout <= dly_q_net_x15;

  dly: entity work.delay_fa260f7d22
    port map (
      ce => ce_1_sg_x1902,
      clk => clk_1_sg_x1902,
      clr => '0',
      d(0) => delay_sync_q_net_x1,
      q(0) => dly_q_net_x15
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler/square_transposer"

entity square_transposer_entity_51333e4e87 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in0: in std_logic_vector(35 downto 0); 
    in1: in std_logic_vector(35 downto 0); 
    in2: in std_logic_vector(35 downto 0); 
    in3: in std_logic_vector(35 downto 0); 
    in4: in std_logic_vector(35 downto 0); 
    in5: in std_logic_vector(35 downto 0); 
    in6: in std_logic_vector(35 downto 0); 
    in7: in std_logic_vector(35 downto 0); 
    sync: in std_logic; 
    out0: out std_logic_vector(35 downto 0); 
    out1: out std_logic_vector(35 downto 0); 
    out2: out std_logic_vector(35 downto 0); 
    out3: out std_logic_vector(35 downto 0); 
    out4: out std_logic_vector(35 downto 0); 
    out5: out std_logic_vector(35 downto 0); 
    out6: out std_logic_vector(35 downto 0); 
    out7: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end square_transposer_entity_51333e4e87;

architecture structural of square_transposer_entity_51333e4e87 is
  signal ce_1_sg_x1903: std_logic;
  signal clk_1_sg_x1903: std_logic;
  signal counter_op_net_x0: std_logic_vector(2 downto 0);
  signal delay_sync_q_net_x1: std_logic;
  signal dly_q_net_x15: std_logic_vector(35 downto 0);
  signal dly_q_net_x16: std_logic_vector(35 downto 0);
  signal dly_q_net_x17: std_logic_vector(35 downto 0);
  signal dly_q_net_x18: std_logic_vector(35 downto 0);
  signal dly_q_net_x19: std_logic_vector(35 downto 0);
  signal dly_q_net_x20: std_logic_vector(35 downto 0);
  signal dly_q_net_x22: std_logic_vector(35 downto 0);
  signal dly_q_net_x23: std_logic_vector(35 downto 0);
  signal dly_q_net_x24: std_logic_vector(35 downto 0);
  signal dly_q_net_x25: std_logic_vector(35 downto 0);
  signal dly_q_net_x26: std_logic_vector(35 downto 0);
  signal dly_q_net_x27: std_logic_vector(35 downto 0);
  signal dly_q_net_x28: std_logic_vector(35 downto 0);
  signal dly_q_net_x29: std_logic;
  signal dly_q_net_x7: std_logic_vector(35 downto 0);
  signal mux13_y_net_x1: std_logic_vector(35 downto 0);
  signal mux23_y_net_x1: std_logic_vector(35 downto 0);
  signal mux33_y_net_x1: std_logic_vector(35 downto 0);
  signal mux43_y_net_x1: std_logic_vector(35 downto 0);
  signal mux53_y_net_x1: std_logic_vector(35 downto 0);
  signal mux63_y_net_x1: std_logic_vector(35 downto 0);
  signal mux73_y_net_x1: std_logic_vector(35 downto 0);
  signal mux83_y_net_x2: std_logic_vector(35 downto 0);
  signal register0_q_net_x2: std_logic;
  signal reinterpret1_output_port_net_x10: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x12: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x13: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x14: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x15: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x16: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x1903 <= ce_1;
  clk_1_sg_x1903 <= clk_1;
  reinterpret1_output_port_net_x9 <= in0;
  reinterpret1_output_port_net_x10 <= in1;
  reinterpret1_output_port_net_x11 <= in2;
  reinterpret1_output_port_net_x12 <= in3;
  reinterpret1_output_port_net_x13 <= in4;
  reinterpret1_output_port_net_x14 <= in5;
  reinterpret1_output_port_net_x15 <= in6;
  reinterpret1_output_port_net_x16 <= in7;
  register0_q_net_x2 <= sync;
  out0 <= dly_q_net_x22;
  out1 <= dly_q_net_x23;
  out2 <= dly_q_net_x24;
  out3 <= dly_q_net_x25;
  out4 <= dly_q_net_x26;
  out5 <= dly_q_net_x27;
  out6 <= dly_q_net_x28;
  out7 <= mux83_y_net_x2;
  sync_out <= dly_q_net_x29;

  barrel_switcher_d82be26788: entity work.barrel_switcher_entity_d82be26788
    port map (
      ce_1 => ce_1_sg_x1903,
      clk_1 => clk_1_sg_x1903,
      in1 => reinterpret1_output_port_net_x9,
      in2 => dly_q_net_x20,
      in3 => dly_q_net_x19,
      in4 => dly_q_net_x18,
      in5 => dly_q_net_x17,
      in6 => dly_q_net_x16,
      in7 => dly_q_net_x15,
      in8 => dly_q_net_x7,
      sel => counter_op_net_x0,
      sync_in => register0_q_net_x2,
      out1 => mux13_y_net_x1,
      out2 => mux23_y_net_x1,
      out3 => mux33_y_net_x1,
      out4 => mux43_y_net_x1,
      out5 => mux53_y_net_x1,
      out6 => mux63_y_net_x1,
      out7 => mux73_y_net_x1,
      out8 => mux83_y_net_x2,
      sync_out => delay_sync_q_net_x1
    );

  counter: entity work.xlcounter_free_he6_cres_correlator
    generic map (
      core_name0 => "cntr_11_0_dc3ffb020cfd5b26",
      op_arith => xlUnsigned,
      op_width => 3
    )
    port map (
      ce => ce_1_sg_x1903,
      clk => clk_1_sg_x1903,
      clr => '0',
      en => "1",
      rst(0) => register0_q_net_x2,
      op => counter_op_net_x0
    );

  db0_6fbe7fb3c7: entity work.db0_entity_6fbe7fb3c7
    port map (
      ce_1 => ce_1_sg_x1903,
      clk_1 => clk_1_sg_x1903,
      din => mux13_y_net_x1,
      dout => dly_q_net_x22
    );

  db1_a857677661: entity work.db1_entity_a857677661
    port map (
      ce_1 => ce_1_sg_x1903,
      clk_1 => clk_1_sg_x1903,
      din => mux23_y_net_x1,
      dout => dly_q_net_x23
    );

  db2_8ae4ae5b4f: entity work.db2_entity_8ae4ae5b4f
    port map (
      ce_1 => ce_1_sg_x1903,
      clk_1 => clk_1_sg_x1903,
      din => mux33_y_net_x1,
      dout => dly_q_net_x24
    );

  db3_3792263af5: entity work.db3_entity_3792263af5
    port map (
      ce_1 => ce_1_sg_x1903,
      clk_1 => clk_1_sg_x1903,
      din => mux43_y_net_x1,
      dout => dly_q_net_x25
    );

  db4_31d9bcf47c: entity work.db4_entity_31d9bcf47c
    port map (
      ce_1 => ce_1_sg_x1903,
      clk_1 => clk_1_sg_x1903,
      din => mux53_y_net_x1,
      dout => dly_q_net_x26
    );

  db5_0b4c56cbce: entity work.db5_entity_0b4c56cbce
    port map (
      ce_1 => ce_1_sg_x1903,
      clk_1 => clk_1_sg_x1903,
      din => mux63_y_net_x1,
      dout => dly_q_net_x27
    );

  db6_f12343aceb: entity work.db6_entity_f12343aceb
    port map (
      ce_1 => ce_1_sg_x1903,
      clk_1 => clk_1_sg_x1903,
      din => mux73_y_net_x1,
      dout => dly_q_net_x28
    );

  df1_cd8737559b: entity work.db6_entity_f12343aceb
    port map (
      ce_1 => ce_1_sg_x1903,
      clk_1 => clk_1_sg_x1903,
      din => reinterpret1_output_port_net_x10,
      dout => dly_q_net_x7
    );

  df2_0136a2cf11: entity work.db5_entity_0b4c56cbce
    port map (
      ce_1 => ce_1_sg_x1903,
      clk_1 => clk_1_sg_x1903,
      din => reinterpret1_output_port_net_x11,
      dout => dly_q_net_x15
    );

  df3_689a7fa4c9: entity work.db4_entity_31d9bcf47c
    port map (
      ce_1 => ce_1_sg_x1903,
      clk_1 => clk_1_sg_x1903,
      din => reinterpret1_output_port_net_x12,
      dout => dly_q_net_x16
    );

  df4_2641842f50: entity work.db3_entity_3792263af5
    port map (
      ce_1 => ce_1_sg_x1903,
      clk_1 => clk_1_sg_x1903,
      din => reinterpret1_output_port_net_x13,
      dout => dly_q_net_x17
    );

  df5_cdb0699f96: entity work.db2_entity_8ae4ae5b4f
    port map (
      ce_1 => ce_1_sg_x1903,
      clk_1 => clk_1_sg_x1903,
      din => reinterpret1_output_port_net_x14,
      dout => dly_q_net_x18
    );

  df6_0f6e93f50e: entity work.db1_entity_a857677661
    port map (
      ce_1 => ce_1_sg_x1903,
      clk_1 => clk_1_sg_x1903,
      din => reinterpret1_output_port_net_x15,
      dout => dly_q_net_x19
    );

  df7_83037ac317: entity work.db0_entity_6fbe7fb3c7
    port map (
      ce_1 => ce_1_sg_x1903,
      clk_1 => clk_1_sg_x1903,
      din => reinterpret1_output_port_net_x16,
      dout => dly_q_net_x20
    );

  dsync_d7d3ad2b04: entity work.dsync_entity_d7d3ad2b04
    port map (
      ce_1 => ce_1_sg_x1903,
      clk_1 => clk_1_sg_x1903,
      din => delay_sync_q_net_x1,
      dout => dly_q_net_x29
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/fft_unscrambler"

entity fft_unscrambler_entity_1105b7211d is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in00: in std_logic_vector(35 downto 0); 
    in01: in std_logic_vector(35 downto 0); 
    in02: in std_logic_vector(35 downto 0); 
    in03: in std_logic_vector(35 downto 0); 
    in04: in std_logic_vector(35 downto 0); 
    in05: in std_logic_vector(35 downto 0); 
    in06: in std_logic_vector(35 downto 0); 
    in07: in std_logic_vector(35 downto 0); 
    sync: in std_logic; 
    out00: out std_logic_vector(35 downto 0); 
    out01: out std_logic_vector(35 downto 0); 
    out02: out std_logic_vector(35 downto 0); 
    out03: out std_logic_vector(35 downto 0); 
    out04: out std_logic_vector(35 downto 0); 
    out05: out std_logic_vector(35 downto 0); 
    out06: out std_logic_vector(35 downto 0); 
    out07: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_unscrambler_entity_1105b7211d;

architecture structural of fft_unscrambler_entity_1105b7211d is
  signal ce_1_sg_x1904: std_logic;
  signal clk_1_sg_x1904: std_logic;
  signal concatenate_y_net_x13: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x14: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x15: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x16: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x17: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x18: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x19: std_logic_vector(35 downto 0);
  signal concatenate_y_net_x20: std_logic_vector(35 downto 0);
  signal dly_q_net_x22: std_logic_vector(35 downto 0);
  signal dly_q_net_x23: std_logic_vector(35 downto 0);
  signal dly_q_net_x24: std_logic_vector(35 downto 0);
  signal dly_q_net_x25: std_logic_vector(35 downto 0);
  signal dly_q_net_x26: std_logic_vector(35 downto 0);
  signal dly_q_net_x27: std_logic_vector(35 downto 0);
  signal dly_q_net_x28: std_logic_vector(35 downto 0);
  signal dly_q_net_x29: std_logic;
  signal en_op_net_x0: std_logic;
  signal mux83_y_net_x2: std_logic_vector(35 downto 0);
  signal post_sync_delay_q_net_x1: std_logic;
  signal register0_q_net_x10: std_logic_vector(35 downto 0);
  signal register0_q_net_x11: std_logic_vector(35 downto 0);
  signal register0_q_net_x12: std_logic_vector(35 downto 0);
  signal register0_q_net_x13: std_logic_vector(35 downto 0);
  signal register0_q_net_x14: std_logic_vector(35 downto 0);
  signal register0_q_net_x15: std_logic_vector(35 downto 0);
  signal register0_q_net_x16: std_logic_vector(35 downto 0);
  signal register0_q_net_x17: std_logic_vector(35 downto 0);
  signal register0_q_net_x18: std_logic;
  signal reinterpret1_output_port_net_x10: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x11: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x12: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x13: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x14: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x15: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x16: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x24: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x25: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x26: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x27: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x28: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x29: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x30: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x31: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x9: std_logic_vector(35 downto 0);

begin
  ce_1_sg_x1904 <= ce_1;
  clk_1_sg_x1904 <= clk_1;
  register0_q_net_x10 <= in00;
  register0_q_net_x11 <= in01;
  register0_q_net_x12 <= in02;
  register0_q_net_x13 <= in03;
  register0_q_net_x14 <= in04;
  register0_q_net_x15 <= in05;
  register0_q_net_x16 <= in06;
  register0_q_net_x17 <= in07;
  register0_q_net_x18 <= sync;
  out00 <= reinterpret1_output_port_net_x24;
  out01 <= reinterpret1_output_port_net_x25;
  out02 <= reinterpret1_output_port_net_x26;
  out03 <= reinterpret1_output_port_net_x27;
  out04 <= reinterpret1_output_port_net_x28;
  out05 <= reinterpret1_output_port_net_x29;
  out06 <= reinterpret1_output_port_net_x30;
  out07 <= reinterpret1_output_port_net_x31;
  sync_out <= post_sync_delay_q_net_x1;

  bus0_df0a0baf77: entity work.bussify_entity_8f36b365fb
    port map (
      in1 => register0_q_net_x10,
      bus_out => reinterpret1_output_port_net_x9
    );

  bus1_e927093c25: entity work.bussify_entity_8f36b365fb
    port map (
      in1 => register0_q_net_x11,
      bus_out => reinterpret1_output_port_net_x10
    );

  bus2_f093f795c8: entity work.bussify_entity_8f36b365fb
    port map (
      in1 => register0_q_net_x12,
      bus_out => reinterpret1_output_port_net_x11
    );

  bus3_2d363ea449: entity work.bussify_entity_8f36b365fb
    port map (
      in1 => register0_q_net_x13,
      bus_out => reinterpret1_output_port_net_x12
    );

  bus4_479dd959fb: entity work.bussify_entity_8f36b365fb
    port map (
      in1 => register0_q_net_x14,
      bus_out => reinterpret1_output_port_net_x13
    );

  bus5_f416735857: entity work.bussify_entity_8f36b365fb
    port map (
      in1 => register0_q_net_x15,
      bus_out => reinterpret1_output_port_net_x14
    );

  bus6_27b7bc7fa2: entity work.bussify_entity_8f36b365fb
    port map (
      in1 => register0_q_net_x16,
      bus_out => reinterpret1_output_port_net_x15
    );

  bus7_9a6a4e8eb2: entity work.bussify_entity_8f36b365fb
    port map (
      in1 => register0_q_net_x17,
      bus_out => reinterpret1_output_port_net_x16
    );

  debus0_95cf8767da: entity work.a_debus_entity_43e449aa4c
    port map (
      bus_in => concatenate_y_net_x13,
      msb_lsb_out1 => reinterpret1_output_port_net_x24
    );

  debus1_05cf5ae8c0: entity work.a_debus_entity_43e449aa4c
    port map (
      bus_in => concatenate_y_net_x14,
      msb_lsb_out1 => reinterpret1_output_port_net_x25
    );

  debus2_15422e1751: entity work.a_debus_entity_43e449aa4c
    port map (
      bus_in => concatenate_y_net_x15,
      msb_lsb_out1 => reinterpret1_output_port_net_x26
    );

  debus3_2b3550cd53: entity work.a_debus_entity_43e449aa4c
    port map (
      bus_in => concatenate_y_net_x16,
      msb_lsb_out1 => reinterpret1_output_port_net_x27
    );

  debus4_5010e18632: entity work.a_debus_entity_43e449aa4c
    port map (
      bus_in => concatenate_y_net_x17,
      msb_lsb_out1 => reinterpret1_output_port_net_x28
    );

  debus5_0de76a35d8: entity work.a_debus_entity_43e449aa4c
    port map (
      bus_in => concatenate_y_net_x18,
      msb_lsb_out1 => reinterpret1_output_port_net_x29
    );

  debus6_0c761f8ae4: entity work.a_debus_entity_43e449aa4c
    port map (
      bus_in => concatenate_y_net_x19,
      msb_lsb_out1 => reinterpret1_output_port_net_x30
    );

  debus7_0bfc3ac5d5: entity work.a_debus_entity_43e449aa4c
    port map (
      bus_in => concatenate_y_net_x20,
      msb_lsb_out1 => reinterpret1_output_port_net_x31
    );

  en: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => en_op_net_x0
    );

  reorder_05ae0fc381: entity work.reorder_entity_05ae0fc381
    port map (
      ce_1 => ce_1_sg_x1904,
      clk_1 => clk_1_sg_x1904,
      din0 => dly_q_net_x22,
      din1 => dly_q_net_x23,
      din2 => dly_q_net_x24,
      din3 => dly_q_net_x25,
      din4 => dly_q_net_x26,
      din5 => dly_q_net_x27,
      din6 => dly_q_net_x28,
      din7 => mux83_y_net_x2,
      en => en_op_net_x0,
      sync => dly_q_net_x29,
      dout0 => concatenate_y_net_x13,
      dout1 => concatenate_y_net_x14,
      dout2 => concatenate_y_net_x15,
      dout3 => concatenate_y_net_x16,
      dout4 => concatenate_y_net_x17,
      dout5 => concatenate_y_net_x18,
      dout6 => concatenate_y_net_x19,
      dout7 => concatenate_y_net_x20,
      sync_out => post_sync_delay_q_net_x1
    );

  square_transposer_51333e4e87: entity work.square_transposer_entity_51333e4e87
    port map (
      ce_1 => ce_1_sg_x1904,
      clk_1 => clk_1_sg_x1904,
      in0 => reinterpret1_output_port_net_x9,
      in1 => reinterpret1_output_port_net_x10,
      in2 => reinterpret1_output_port_net_x11,
      in3 => reinterpret1_output_port_net_x12,
      in4 => reinterpret1_output_port_net_x13,
      in5 => reinterpret1_output_port_net_x14,
      in6 => reinterpret1_output_port_net_x15,
      in7 => reinterpret1_output_port_net_x16,
      sync => register0_q_net_x18,
      out0 => dly_q_net_x22,
      out1 => dly_q_net_x23,
      out2 => dly_q_net_x24,
      out3 => dly_q_net_x25,
      out4 => dly_q_net_x26,
      out5 => dly_q_net_x27,
      out6 => dly_q_net_x28,
      out7 => mux83_y_net_x2,
      sync_out => dly_q_net_x29
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real/in_del_4x_pol0"

entity in_del_4x_pol0_entity_7ac09d8a49 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d: in std_logic_vector(17 downto 0); 
    q: out std_logic_vector(17 downto 0)
  );
end in_del_4x_pol0_entity_7ac09d8a49;

architecture structural of in_del_4x_pol0_entity_7ac09d8a49 is
  signal ce_1_sg_x1905: std_logic;
  signal clk_1_sg_x1905: std_logic;
  signal register0_q_net_x19: std_logic_vector(17 downto 0);
  signal shift_op_net_x0: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x1905 <= ce_1;
  clk_1_sg_x1905 <= clk_1;
  shift_op_net_x0 <= d;
  q <= register0_q_net_x19;

  register0: entity work.xlregister
    generic map (
      d_width => 18,
      init_value => b"000000000000000000"
    )
    port map (
      ce => ce_1_sg_x1905,
      clk => clk_1_sg_x1905,
      d => shift_op_net_x0,
      en => "1",
      rst => "0",
      q => register0_q_net_x19
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/fft_wideband_real"

entity fft_wideband_real_entity_962a5a60af is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in00: in std_logic_vector(17 downto 0); 
    in01: in std_logic_vector(17 downto 0); 
    in010: in std_logic_vector(17 downto 0); 
    in011: in std_logic_vector(17 downto 0); 
    in012: in std_logic_vector(17 downto 0); 
    in013: in std_logic_vector(17 downto 0); 
    in014: in std_logic_vector(17 downto 0); 
    in015: in std_logic_vector(17 downto 0); 
    in02: in std_logic_vector(17 downto 0); 
    in03: in std_logic_vector(17 downto 0); 
    in04: in std_logic_vector(17 downto 0); 
    in05: in std_logic_vector(17 downto 0); 
    in06: in std_logic_vector(17 downto 0); 
    in07: in std_logic_vector(17 downto 0); 
    in08: in std_logic_vector(17 downto 0); 
    in09: in std_logic_vector(17 downto 0); 
    shift: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    of_x0: out std_logic_vector(3 downto 0); 
    out00: out std_logic_vector(35 downto 0); 
    out01: out std_logic_vector(35 downto 0); 
    out02: out std_logic_vector(35 downto 0); 
    out03: out std_logic_vector(35 downto 0); 
    out04: out std_logic_vector(35 downto 0); 
    out05: out std_logic_vector(35 downto 0); 
    out06: out std_logic_vector(35 downto 0); 
    out07: out std_logic_vector(35 downto 0); 
    sync_out: out std_logic
  );
end fft_wideband_real_entity_962a5a60af;

architecture structural of fft_wideband_real_entity_962a5a60af is
  signal ce_1_sg_x1922: std_logic;
  signal clk_1_sg_x1922: std_logic;
  signal combine_y_net_x0: std_logic;
  signal constant2_op_net_x12: std_logic_vector(14 downto 0);
  signal delay0_q_net_x2: std_logic;
  signal logical1_y_net_x12: std_logic_vector(3 downto 0);
  signal of_or_y_net_x0: std_logic_vector(3 downto 0);
  signal post_sync_delay_q_net_x2: std_logic;
  signal register0_q_net_x10: std_logic_vector(35 downto 0);
  signal register0_q_net_x11: std_logic_vector(35 downto 0);
  signal register0_q_net_x12: std_logic_vector(35 downto 0);
  signal register0_q_net_x13: std_logic_vector(35 downto 0);
  signal register0_q_net_x14: std_logic_vector(35 downto 0);
  signal register0_q_net_x15: std_logic_vector(35 downto 0);
  signal register0_q_net_x16: std_logic_vector(35 downto 0);
  signal register0_q_net_x17: std_logic_vector(35 downto 0);
  signal register0_q_net_x18: std_logic;
  signal register0_q_net_x19: std_logic_vector(17 downto 0);
  signal register0_q_net_x20: std_logic_vector(17 downto 0);
  signal register0_q_net_x21: std_logic_vector(17 downto 0);
  signal register0_q_net_x22: std_logic_vector(17 downto 0);
  signal register0_q_net_x23: std_logic_vector(17 downto 0);
  signal register0_q_net_x24: std_logic_vector(35 downto 0);
  signal register0_q_net_x25: std_logic_vector(35 downto 0);
  signal register0_q_net_x26: std_logic_vector(35 downto 0);
  signal register0_q_net_x27: std_logic_vector(35 downto 0);
  signal register0_q_net_x28: std_logic_vector(35 downto 0);
  signal register0_q_net_x29: std_logic_vector(35 downto 0);
  signal register0_q_net_x30: std_logic_vector(35 downto 0);
  signal register0_q_net_x31: std_logic_vector(35 downto 0);
  signal register0_q_net_x32: std_logic_vector(35 downto 0);
  signal register0_q_net_x33: std_logic_vector(35 downto 0);
  signal register0_q_net_x34: std_logic_vector(35 downto 0);
  signal register0_q_net_x35: std_logic_vector(35 downto 0);
  signal register0_q_net_x36: std_logic_vector(35 downto 0);
  signal register0_q_net_x37: std_logic_vector(35 downto 0);
  signal register0_q_net_x38: std_logic_vector(35 downto 0);
  signal register0_q_net_x39: std_logic_vector(35 downto 0);
  signal register0_q_net_x40: std_logic;
  signal register0_q_net_x41: std_logic_vector(17 downto 0);
  signal register0_q_net_x42: std_logic_vector(17 downto 0);
  signal register0_q_net_x43: std_logic_vector(17 downto 0);
  signal register0_q_net_x44: std_logic_vector(17 downto 0);
  signal register0_q_net_x45: std_logic_vector(17 downto 0);
  signal register0_q_net_x46: std_logic_vector(17 downto 0);
  signal register0_q_net_x47: std_logic_vector(17 downto 0);
  signal register0_q_net_x48: std_logic_vector(17 downto 0);
  signal register0_q_net_x49: std_logic_vector(17 downto 0);
  signal register0_q_net_x50: std_logic_vector(17 downto 0);
  signal register0_q_net_x51: std_logic_vector(17 downto 0);
  signal register0_q_net_x52: std_logic;
  signal register2_q_net_x1: std_logic;
  signal reinterpret1_output_port_net_x18: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x19: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x20: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x39: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x40: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x41: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x42: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x43: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x44: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x45: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x46: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x47: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x48: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x49: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x50: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x51: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x52: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x53: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x54: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x6: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x7: std_logic_vector(35 downto 0);
  signal reinterpret2_output_port_net_x8: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net_x6: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net_x7: std_logic_vector(35 downto 0);
  signal reinterpret3_output_port_net_x8: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net_x5: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net_x6: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net_x7: std_logic_vector(35 downto 0);
  signal reinterpret4_output_port_net_x8: std_logic_vector(35 downto 0);
  signal shift10_op_net_x1: std_logic_vector(17 downto 0);
  signal shift11_op_net_x1: std_logic_vector(17 downto 0);
  signal shift12_op_net_x1: std_logic_vector(17 downto 0);
  signal shift13_op_net_x1: std_logic_vector(17 downto 0);
  signal shift14_op_net_x1: std_logic_vector(17 downto 0);
  signal shift15_op_net_x1: std_logic_vector(17 downto 0);
  signal shift1_op_net_x1: std_logic_vector(17 downto 0);
  signal shift2_op_net_x1: std_logic_vector(17 downto 0);
  signal shift3_op_net_x1: std_logic_vector(17 downto 0);
  signal shift4_op_net_x1: std_logic_vector(17 downto 0);
  signal shift5_op_net_x1: std_logic_vector(17 downto 0);
  signal shift6_op_net_x1: std_logic_vector(17 downto 0);
  signal shift7_op_net_x1: std_logic_vector(17 downto 0);
  signal shift8_op_net_x1: std_logic_vector(17 downto 0);
  signal shift9_op_net_x1: std_logic_vector(17 downto 0);
  signal shift_op_net_x1: std_logic_vector(17 downto 0);
  signal slice_y_net_x0: std_logic_vector(3 downto 0);
  signal sync_delay1_q_net_x3: std_logic;

begin
  ce_1_sg_x1922 <= ce_1;
  clk_1_sg_x1922 <= clk_1;
  shift_op_net_x1 <= in00;
  shift1_op_net_x1 <= in01;
  shift10_op_net_x1 <= in010;
  shift12_op_net_x1 <= in011;
  shift13_op_net_x1 <= in012;
  shift14_op_net_x1 <= in013;
  shift15_op_net_x1 <= in014;
  shift4_op_net_x1 <= in015;
  shift2_op_net_x1 <= in02;
  shift3_op_net_x1 <= in03;
  shift5_op_net_x1 <= in04;
  shift6_op_net_x1 <= in05;
  shift7_op_net_x1 <= in06;
  shift11_op_net_x1 <= in07;
  shift8_op_net_x1 <= in08;
  shift9_op_net_x1 <= in09;
  constant2_op_net_x12 <= shift;
  register2_q_net_x1 <= sync;
  of_x0 <= of_or_y_net_x0;
  out00 <= reinterpret1_output_port_net_x47;
  out01 <= reinterpret1_output_port_net_x48;
  out02 <= reinterpret1_output_port_net_x49;
  out03 <= reinterpret1_output_port_net_x50;
  out04 <= reinterpret1_output_port_net_x51;
  out05 <= reinterpret1_output_port_net_x52;
  out06 <= reinterpret1_output_port_net_x53;
  out07 <= reinterpret1_output_port_net_x54;
  sync_out <= post_sync_delay_q_net_x2;

  del_4x_pol0_257eb25036: entity work.del_4x_pol0_entity_257eb25036
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => reinterpret4_output_port_net_x5,
      q => register0_q_net_x24
    );

  del_4x_pol10_d282b2c88b: entity work.del_4x_pol0_entity_257eb25036
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => reinterpret2_output_port_net_x7,
      q => register0_q_net_x26
    );

  del_4x_pol11_c71e67ff90: entity work.del_4x_pol0_entity_257eb25036
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => reinterpret2_output_port_net_x8,
      q => register0_q_net_x27
    );

  del_4x_pol12_c1494de977: entity work.del_4x_pol0_entity_257eb25036
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => reinterpret1_output_port_net_x5,
      q => register0_q_net_x28
    );

  del_4x_pol13_2e0441c74a: entity work.del_4x_pol0_entity_257eb25036
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => reinterpret1_output_port_net_x18,
      q => register0_q_net_x29
    );

  del_4x_pol14_f8848d2983: entity work.del_4x_pol0_entity_257eb25036
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => reinterpret1_output_port_net_x19,
      q => register0_q_net_x30
    );

  del_4x_pol15_256d771c7b: entity work.del_4x_pol0_entity_257eb25036
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => reinterpret1_output_port_net_x20,
      q => register0_q_net_x31
    );

  del_4x_pol1_c8b5554f5e: entity work.del_4x_pol0_entity_257eb25036
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => reinterpret4_output_port_net_x6,
      q => register0_q_net_x25
    );

  del_4x_pol2_428a00cf25: entity work.del_4x_pol0_entity_257eb25036
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => reinterpret4_output_port_net_x7,
      q => register0_q_net_x32
    );

  del_4x_pol3_35111e57f1: entity work.del_4x_pol0_entity_257eb25036
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => reinterpret4_output_port_net_x8,
      q => register0_q_net_x33
    );

  del_4x_pol4_2ec70a79e3: entity work.del_4x_pol0_entity_257eb25036
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => reinterpret3_output_port_net_x5,
      q => register0_q_net_x34
    );

  del_4x_pol5_e56aaa637f: entity work.del_4x_pol0_entity_257eb25036
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => reinterpret3_output_port_net_x6,
      q => register0_q_net_x35
    );

  del_4x_pol6_e637eca463: entity work.del_4x_pol0_entity_257eb25036
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => reinterpret3_output_port_net_x7,
      q => register0_q_net_x36
    );

  del_4x_pol7_1aa2defd7a: entity work.del_4x_pol0_entity_257eb25036
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => reinterpret3_output_port_net_x8,
      q => register0_q_net_x37
    );

  del_4x_pol8_522b10ab2a: entity work.del_4x_pol0_entity_257eb25036
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => reinterpret2_output_port_net_x5,
      q => register0_q_net_x38
    );

  del_4x_pol9_270898a353: entity work.del_4x_pol0_entity_257eb25036
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => reinterpret2_output_port_net_x6,
      q => register0_q_net_x39
    );

  del_direct1_4534048516: entity work.del_4x_pol0_entity_257eb25036
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => reinterpret1_output_port_net_x39,
      q => register0_q_net_x10
    );

  del_direct2_e92bd3ae6e: entity work.del_4x_pol0_entity_257eb25036
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => reinterpret1_output_port_net_x43,
      q => register0_q_net_x11
    );

  del_direct3_a1f9cba682: entity work.del_4x_pol0_entity_257eb25036
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => reinterpret1_output_port_net_x41,
      q => register0_q_net_x12
    );

  del_direct4_6c2924a093: entity work.del_4x_pol0_entity_257eb25036
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => reinterpret1_output_port_net_x45,
      q => register0_q_net_x13
    );

  del_direct5_a564a49f12: entity work.del_4x_pol0_entity_257eb25036
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => reinterpret1_output_port_net_x40,
      q => register0_q_net_x14
    );

  del_direct6_a2558ce9f9: entity work.del_4x_pol0_entity_257eb25036
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => reinterpret1_output_port_net_x44,
      q => register0_q_net_x15
    );

  del_direct7_03e8fb40dc: entity work.del_4x_pol0_entity_257eb25036
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => reinterpret1_output_port_net_x42,
      q => register0_q_net_x16
    );

  del_direct8_1627c2e787: entity work.del_4x_pol0_entity_257eb25036
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => reinterpret1_output_port_net_x46,
      q => register0_q_net_x17
    );

  del_sync_4x_27f85038a4: entity work.del_sync_4x_entity_27f85038a4
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => sync_delay1_q_net_x3,
      q => register0_q_net_x40
    );

  fft_biplex_real_4x_1c14223929: entity work.fft_biplex_real_4x_entity_1c14223929
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      pol0_in => register0_q_net_x19,
      pol10_in => register0_q_net_x21,
      pol11_in => register0_q_net_x22,
      pol12_in => register0_q_net_x23,
      pol13_in => register0_q_net_x41,
      pol14_in => register0_q_net_x42,
      pol15_in => register0_q_net_x43,
      pol1_in => register0_q_net_x20,
      pol2_in => register0_q_net_x44,
      pol3_in => register0_q_net_x45,
      pol4_in => register0_q_net_x46,
      pol5_in => register0_q_net_x47,
      pol6_in => register0_q_net_x48,
      pol7_in => register0_q_net_x49,
      pol8_in => register0_q_net_x50,
      pol9_in => register0_q_net_x51,
      shift => constant2_op_net_x12,
      sync => register0_q_net_x52,
      of_x0 => logical1_y_net_x12,
      pol0_out => reinterpret4_output_port_net_x5,
      pol10_out => reinterpret2_output_port_net_x7,
      pol11_out => reinterpret2_output_port_net_x8,
      pol12_out => reinterpret1_output_port_net_x5,
      pol13_out => reinterpret1_output_port_net_x18,
      pol14_out => reinterpret1_output_port_net_x19,
      pol15_out => reinterpret1_output_port_net_x20,
      pol1_out => reinterpret4_output_port_net_x6,
      pol2_out => reinterpret4_output_port_net_x7,
      pol3_out => reinterpret4_output_port_net_x8,
      pol4_out => reinterpret3_output_port_net_x5,
      pol5_out => reinterpret3_output_port_net_x6,
      pol6_out => reinterpret3_output_port_net_x7,
      pol7_out => reinterpret3_output_port_net_x8,
      pol8_out => reinterpret2_output_port_net_x5,
      pol9_out => reinterpret2_output_port_net_x6,
      sync_out => sync_delay1_q_net_x3
    );

  fft_direct_48b2537350: entity work.fft_direct_entity_48b2537350
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      in00 => register0_q_net_x24,
      in01 => register0_q_net_x25,
      in010 => register0_q_net_x26,
      in011 => register0_q_net_x27,
      in012 => register0_q_net_x28,
      in013 => register0_q_net_x29,
      in014 => register0_q_net_x30,
      in015 => register0_q_net_x31,
      in02 => register0_q_net_x32,
      in03 => register0_q_net_x33,
      in04 => register0_q_net_x34,
      in05 => register0_q_net_x35,
      in06 => register0_q_net_x36,
      in07 => register0_q_net_x37,
      in08 => register0_q_net_x38,
      in09 => register0_q_net_x39,
      shift => slice_y_net_x0,
      sync => register0_q_net_x40,
      of_x0 => combine_y_net_x0,
      out00 => reinterpret1_output_port_net_x39,
      out01 => reinterpret1_output_port_net_x43,
      out02 => reinterpret1_output_port_net_x41,
      out03 => reinterpret1_output_port_net_x45,
      out04 => reinterpret1_output_port_net_x40,
      out05 => reinterpret1_output_port_net_x44,
      out06 => reinterpret1_output_port_net_x42,
      out07 => reinterpret1_output_port_net_x46,
      sync_out => delay0_q_net_x2
    );

  fft_direct_sync_delay_3490a8bbdc: entity work.del_sync_4x_entity_27f85038a4
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => delay0_q_net_x2,
      q => register0_q_net_x18
    );

  fft_unscrambler_1105b7211d: entity work.fft_unscrambler_entity_1105b7211d
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      in00 => register0_q_net_x10,
      in01 => register0_q_net_x11,
      in02 => register0_q_net_x12,
      in03 => register0_q_net_x13,
      in04 => register0_q_net_x14,
      in05 => register0_q_net_x15,
      in06 => register0_q_net_x16,
      in07 => register0_q_net_x17,
      sync => register0_q_net_x18,
      out00 => reinterpret1_output_port_net_x47,
      out01 => reinterpret1_output_port_net_x48,
      out02 => reinterpret1_output_port_net_x49,
      out03 => reinterpret1_output_port_net_x50,
      out04 => reinterpret1_output_port_net_x51,
      out05 => reinterpret1_output_port_net_x52,
      out06 => reinterpret1_output_port_net_x53,
      out07 => reinterpret1_output_port_net_x54,
      sync_out => post_sync_delay_q_net_x2
    );

  in_del_4x_pol0_7ac09d8a49: entity work.in_del_4x_pol0_entity_7ac09d8a49
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => shift_op_net_x1,
      q => register0_q_net_x19
    );

  in_del_4x_pol10_bd9de05fe5: entity work.in_del_4x_pol0_entity_7ac09d8a49
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => shift10_op_net_x1,
      q => register0_q_net_x21
    );

  in_del_4x_pol11_46ce459dcd: entity work.in_del_4x_pol0_entity_7ac09d8a49
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => shift12_op_net_x1,
      q => register0_q_net_x22
    );

  in_del_4x_pol12_a1c27a9c94: entity work.in_del_4x_pol0_entity_7ac09d8a49
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => shift13_op_net_x1,
      q => register0_q_net_x23
    );

  in_del_4x_pol13_55eae5dcc6: entity work.in_del_4x_pol0_entity_7ac09d8a49
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => shift14_op_net_x1,
      q => register0_q_net_x41
    );

  in_del_4x_pol14_c19bb327eb: entity work.in_del_4x_pol0_entity_7ac09d8a49
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => shift15_op_net_x1,
      q => register0_q_net_x42
    );

  in_del_4x_pol15_a734b8560b: entity work.in_del_4x_pol0_entity_7ac09d8a49
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => shift4_op_net_x1,
      q => register0_q_net_x43
    );

  in_del_4x_pol1_9a05d80eec: entity work.in_del_4x_pol0_entity_7ac09d8a49
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => shift1_op_net_x1,
      q => register0_q_net_x20
    );

  in_del_4x_pol2_67a4caef90: entity work.in_del_4x_pol0_entity_7ac09d8a49
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => shift2_op_net_x1,
      q => register0_q_net_x44
    );

  in_del_4x_pol3_a2b6fb36f4: entity work.in_del_4x_pol0_entity_7ac09d8a49
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => shift3_op_net_x1,
      q => register0_q_net_x45
    );

  in_del_4x_pol4_31947d4e63: entity work.in_del_4x_pol0_entity_7ac09d8a49
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => shift5_op_net_x1,
      q => register0_q_net_x46
    );

  in_del_4x_pol5_688f44fa2d: entity work.in_del_4x_pol0_entity_7ac09d8a49
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => shift6_op_net_x1,
      q => register0_q_net_x47
    );

  in_del_4x_pol6_72f70d3da0: entity work.in_del_4x_pol0_entity_7ac09d8a49
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => shift7_op_net_x1,
      q => register0_q_net_x48
    );

  in_del_4x_pol7_5cc0736b54: entity work.in_del_4x_pol0_entity_7ac09d8a49
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => shift11_op_net_x1,
      q => register0_q_net_x49
    );

  in_del_4x_pol8_e06d291d40: entity work.in_del_4x_pol0_entity_7ac09d8a49
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => shift8_op_net_x1,
      q => register0_q_net_x50
    );

  in_del_4x_pol9_063dfa1797: entity work.in_del_4x_pol0_entity_7ac09d8a49
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => shift9_op_net_x1,
      q => register0_q_net_x51
    );

  in_del_sync_4x_dbf586ac23: entity work.del_sync_4x_entity_27f85038a4
    port map (
      ce_1 => ce_1_sg_x1922,
      clk_1 => clk_1_sg_x1922,
      d => register2_q_net_x1,
      q => register0_q_net_x52
    );

  of_or: entity work.logical_9fc717bf07
    port map (
      ce => ce_1_sg_x1922,
      clk => clk_1_sg_x1922,
      clr => '0',
      d0(0) => combine_y_net_x0,
      d1 => logical1_y_net_x12,
      y => of_or_y_net_x0
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 10,
      new_msb => 13,
      x_width => 15,
      y_width => 4
    )
    port map (
      x => constant2_op_net_x12,
      y => slice_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/master_ctrl"

entity master_ctrl_entity_0fda908487 is
  port (
    he6_cres_correlator_master_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    in_reg: out std_logic_vector(31 downto 0)
  );
end master_ctrl_entity_0fda908487;

architecture structural of master_ctrl_entity_0fda908487 is
  signal he6_cres_correlator_master_ctrl_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x2: std_logic_vector(31 downto 0);
  signal slice_reg_y_net: std_logic_vector(31 downto 0);

begin
  he6_cres_correlator_master_ctrl_user_data_out_net_x0 <= he6_cres_correlator_master_ctrl_user_data_out;
  in_reg <= reint1_output_port_net_x2;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => he6_cres_correlator_master_ctrl_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reg_y_net,
      output_port => reint1_output_port_net_x2
    );

  slice_reg: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reg_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/master_status"

entity master_status_entity_93c4193870 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    out_reg: in std_logic_vector(31 downto 0); 
    cast_gw_x0: out std_logic_vector(31 downto 0)
  );
end master_status_entity_93c4193870;

architecture structural of master_status_entity_93c4193870 is
  signal assert_reg_dout_net: std_logic_vector(31 downto 0);
  signal cast_gw_dout_net_x0: std_logic_vector(31 downto 0);
  signal ce_1_sg_x1923: std_logic;
  signal clk_1_sg_x1923: std_logic;
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal register2_q_net_x0: std_logic_vector(31 downto 0);
  signal reint1_output_port_net: std_logic_vector(31 downto 0);

begin
  ce_1_sg_x1923 <= ce_1;
  clk_1_sg_x1923 <= clk_1;
  register2_q_net_x0 <= out_reg;
  cast_gw_x0 <= cast_gw_dout_net_x0;

  assert_reg: entity work.xlpassthrough
    generic map (
      din_width => 32,
      dout_width => 32
    )
    port map (
      din => register2_q_net_x0,
      dout => assert_reg_dout_net
    );

  cast_gw: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 32,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 32,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x1923,
      clk => clk_1_sg_x1923,
      clr => '0',
      din => io_delay_q_net,
      en => "1",
      dout => cast_gw_dout_net_x0
    );

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => reint1_output_port_net,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => assert_reg_dout_net,
      output_port => reint1_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/adder_1_1"

entity adder_1_1_entity_07bb522090 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din1: in std_logic_vector(32 downto 0); 
    din2: in std_logic_vector(32 downto 0); 
    din3: in std_logic_vector(32 downto 0); 
    din4: in std_logic_vector(32 downto 0); 
    sync: in std_logic; 
    dout: out std_logic_vector(32 downto 0); 
    sync_out: out std_logic
  );
end adder_1_1_entity_07bb522090;

architecture structural of adder_1_1_entity_07bb522090 is
  signal addr1_s_net: std_logic_vector(32 downto 0);
  signal addr2_s_net: std_logic_vector(32 downto 0);
  signal addr3_s_net_x0: std_logic_vector(32 downto 0);
  signal ce_1_sg_x1924: std_logic;
  signal clk_1_sg_x1924: std_logic;
  signal delay_q_net_x0: std_logic;
  signal mult_p_net_x3: std_logic_vector(32 downto 0);
  signal mult_p_net_x4: std_logic_vector(32 downto 0);
  signal mult_p_net_x5: std_logic_vector(32 downto 0);
  signal mult_p_net_x6: std_logic_vector(32 downto 0);
  signal sync_delay_q_net_x0: std_logic;

begin
  ce_1_sg_x1924 <= ce_1;
  clk_1_sg_x1924 <= clk_1;
  mult_p_net_x3 <= din1;
  mult_p_net_x5 <= din2;
  mult_p_net_x6 <= din3;
  mult_p_net_x4 <= din4;
  delay_q_net_x0 <= sync;
  dout <= addr3_s_net_x0;
  sync_out <= sync_delay_q_net_x0;

  addr1: entity work.addsub_b18178f59b
    port map (
      a => mult_p_net_x3,
      b => mult_p_net_x5,
      ce => ce_1_sg_x1924,
      clk => clk_1_sg_x1924,
      clr => '0',
      s => addr1_s_net
    );

  addr2: entity work.addsub_b18178f59b
    port map (
      a => mult_p_net_x6,
      b => mult_p_net_x4,
      ce => ce_1_sg_x1924,
      clk => clk_1_sg_x1924,
      clr => '0',
      s => addr2_s_net
    );

  addr3: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 31,
      a_width => 33,
      b_arith => xlSigned,
      b_bin_pt => 31,
      b_width => 33,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 34,
      core_name0 => "addsb_11_0_af3b43ce34891be6",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 34,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 31,
      s_width => 33
    )
    port map (
      a => addr1_s_net,
      b => addr2_s_net,
      ce => ce_1_sg_x1924,
      clk => clk_1_sg_x1924,
      clr => '0',
      en => "1",
      s => addr3_s_net_x0
    );

  sync_delay: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x1924,
      clk => clk_1_sg_x1924,
      clr => '0',
      d(0) => delay_q_net_x0,
      q(0) => sync_delay_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/adder_1_10"

entity adder_1_10_entity_81eceff3c4 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din1: in std_logic_vector(32 downto 0); 
    din2: in std_logic_vector(32 downto 0); 
    din3: in std_logic_vector(32 downto 0); 
    din4: in std_logic_vector(32 downto 0); 
    dout: out std_logic_vector(32 downto 0)
  );
end adder_1_10_entity_81eceff3c4;

architecture structural of adder_1_10_entity_81eceff3c4 is
  signal addr1_s_net: std_logic_vector(32 downto 0);
  signal addr2_s_net: std_logic_vector(32 downto 0);
  signal addr3_s_net_x0: std_logic_vector(32 downto 0);
  signal ce_1_sg_x1925: std_logic;
  signal clk_1_sg_x1925: std_logic;
  signal mult_p_net_x3: std_logic_vector(32 downto 0);
  signal mult_p_net_x4: std_logic_vector(32 downto 0);
  signal mult_p_net_x5: std_logic_vector(32 downto 0);
  signal mult_p_net_x6: std_logic_vector(32 downto 0);

begin
  ce_1_sg_x1925 <= ce_1;
  clk_1_sg_x1925 <= clk_1;
  mult_p_net_x3 <= din1;
  mult_p_net_x5 <= din2;
  mult_p_net_x6 <= din3;
  mult_p_net_x4 <= din4;
  dout <= addr3_s_net_x0;

  addr1: entity work.addsub_b18178f59b
    port map (
      a => mult_p_net_x3,
      b => mult_p_net_x5,
      ce => ce_1_sg_x1925,
      clk => clk_1_sg_x1925,
      clr => '0',
      s => addr1_s_net
    );

  addr2: entity work.addsub_b18178f59b
    port map (
      a => mult_p_net_x6,
      b => mult_p_net_x4,
      ce => ce_1_sg_x1925,
      clk => clk_1_sg_x1925,
      clr => '0',
      s => addr2_s_net
    );

  addr3: entity work.xladdsub_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 31,
      a_width => 33,
      b_arith => xlSigned,
      b_bin_pt => 31,
      b_width => 33,
      c_has_c_out => 0,
      c_latency => 1,
      c_output_width => 34,
      core_name0 => "addsb_11_0_af3b43ce34891be6",
      extra_registers => 0,
      full_s_arith => 2,
      full_s_width => 34,
      latency => 1,
      overflow => 1,
      quantization => 1,
      s_arith => xlSigned,
      s_bin_pt => 31,
      s_width => 33
    )
    port map (
      a => addr1_s_net,
      b => addr2_s_net,
      ce => ce_1_sg_x1925,
      clk => clk_1_sg_x1925,
      clr => '0',
      en => "1",
      s => addr3_s_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/pol1_in10_coeffs"

entity pol1_in10_coeffs_entity_2fa3a80c00 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    coeff: out std_logic_vector(71 downto 0); 
    dout: out std_logic_vector(14 downto 0)
  );
end pol1_in10_coeffs_entity_2fa3a80c00;

architecture structural of pol1_in10_coeffs_entity_2fa3a80c00 is
  signal ce_1_sg_x1940: std_logic;
  signal clk_1_sg_x1940: std_logic;
  signal concat_y_net: std_logic_vector(71 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay1_q_net_x0: std_logic_vector(14 downto 0);
  signal edge_op_y_net_x1: std_logic;
  signal fan_delay1_q_net: std_logic_vector(9 downto 0);
  signal fan_delay2_q_net: std_logic_vector(9 downto 0);
  signal fan_delay3_q_net: std_logic_vector(9 downto 0);
  signal fan_delay4_q_net: std_logic_vector(9 downto 0);
  signal mult9_p_net_x1: std_logic_vector(14 downto 0);
  signal register_q_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(17 downto 0);
  signal rom1_data_net: std_logic_vector(17 downto 0);
  signal rom2_data_net: std_logic_vector(17 downto 0);
  signal rom3_data_net: std_logic_vector(17 downto 0);
  signal rom4_data_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x1940 <= ce_1;
  clk_1_sg_x1940 <= clk_1;
  mult9_p_net_x1 <= din;
  edge_op_y_net_x1 <= sync;
  coeff <= register_q_net_x0;
  dout <= delay1_q_net_x0;

  concat: entity work.concat_a246e373e7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concat_y_net
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x1940,
      clk => clk_1_sg_x1940,
      clr => '0',
      rst(0) => edge_op_y_net_x1,
      op => counter_op_net
    );

  delay1: entity work.delay_d662813220
    port map (
      ce => ce_1_sg_x1940,
      clk => clk_1_sg_x1940,
      clr => '0',
      d => mult9_p_net_x1,
      q => delay1_q_net_x0
    );

  fan_delay1: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1940,
      clk => clk_1_sg_x1940,
      clr => '0',
      d => counter_op_net,
      q => fan_delay1_q_net
    );

  fan_delay2: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1940,
      clk => clk_1_sg_x1940,
      clr => '0',
      d => counter_op_net,
      q => fan_delay2_q_net
    );

  fan_delay3: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1940,
      clk => clk_1_sg_x1940,
      clr => '0',
      d => counter_op_net,
      q => fan_delay3_q_net
    );

  fan_delay4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1940,
      clk => clk_1_sg_x1940,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay4_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 72,
      init_value => b"000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x1940,
      clk => clk_1_sg_x1940,
      d => concat_y_net,
      en => "1",
      rst => "0",
      q => register_q_net_x0
    );

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom1_data_net,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom2_data_net,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom3_data_net,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom4_data_net,
      output_port => reinterpret4_output_port_net
    );

  rom1: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_b5e58834d96b3cb1",
      latency => 1
    )
    port map (
      addr => fan_delay1_q_net,
      ce => ce_1_sg_x1940,
      clk => clk_1_sg_x1940,
      en => "1",
      rst => "0",
      data => rom1_data_net
    );

  rom2: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_c3bb7ebe3cb79e87",
      latency => 1
    )
    port map (
      addr => fan_delay2_q_net,
      ce => ce_1_sg_x1940,
      clk => clk_1_sg_x1940,
      en => "1",
      rst => "0",
      data => rom2_data_net
    );

  rom3: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_2441d18d6b2cbfd0",
      latency => 1
    )
    port map (
      addr => fan_delay3_q_net,
      ce => ce_1_sg_x1940,
      clk => clk_1_sg_x1940,
      en => "1",
      rst => "0",
      data => rom3_data_net
    );

  rom4: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_cf691ac6ee8733a9",
      latency => 1
    )
    port map (
      addr => fan_delay4_q_net,
      ce => ce_1_sg_x1940,
      clk => clk_1_sg_x1940,
      en => "1",
      rst => "0",
      data => rom4_data_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/pol1_in10_first_tap/delay_bram"

entity delay_bram_entity_bd140204fd is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(14 downto 0); 
    dout: out std_logic_vector(14 downto 0)
  );
end delay_bram_entity_bd140204fd;

architecture structural of delay_bram_entity_bd140204fd is
  signal ce_1_sg_x1941: std_logic;
  signal clk_1_sg_x1941: std_logic;
  signal constant_op_net: std_logic;
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay1_q_net_x1: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x0: std_logic_vector(14 downto 0);

begin
  ce_1_sg_x1941 <= ce_1;
  clk_1_sg_x1941 <= clk_1;
  delay1_q_net_x1 <= din;
  dout <= ram_data_out_net_x0;

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  counter: entity work.counter_2d153b301b
    port map (
      ce => ce_1_sg_x1941,
      clk => clk_1_sg_x1941,
      clr => '0',
      op => counter_op_net
    );

  ram: entity work.xlspram_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 15,
      core_name0 => "bmg_72_397bc2e17ef62bd7",
      latency => 1
    )
    port map (
      addr => counter_op_net,
      ce => ce_1_sg_x1941,
      clk => clk_1_sg_x1941,
      data_in => delay1_q_net_x1,
      en => "1",
      rst => "0",
      we(0) => constant_op_net,
      data_out => ram_data_out_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/pol1_in10_first_tap"

entity pol1_in10_first_tap_entity_f208923ed8 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coeffs: in std_logic_vector(71 downto 0); 
    din: in std_logic_vector(14 downto 0); 
    coeff_out: out std_logic_vector(53 downto 0); 
    dout: out std_logic_vector(14 downto 0); 
    taps_out: out std_logic_vector(32 downto 0)
  );
end pol1_in10_first_tap_entity_f208923ed8;

architecture structural of pol1_in10_first_tap_entity_f208923ed8 is
  signal ce_1_sg_x1942: std_logic;
  signal clk_1_sg_x1942: std_logic;
  signal delay1_q_net_x2: std_logic_vector(14 downto 0);
  signal mult_p_net_x4: std_logic_vector(32 downto 0);
  signal ram_data_out_net_x1: std_logic_vector(14 downto 0);
  signal register_q_net_x1: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(14 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(17 downto 0);
  signal slice1_y_net_x0: std_logic_vector(53 downto 0);
  signal slice_y_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x1942 <= ce_1;
  clk_1_sg_x1942 <= clk_1;
  register_q_net_x1 <= coeffs;
  delay1_q_net_x2 <= din;
  coeff_out <= slice1_y_net_x0;
  dout <= ram_data_out_net_x1;
  taps_out <= mult_p_net_x4;

  delay_bram_bd140204fd: entity work.delay_bram_entity_bd140204fd
    port map (
      ce_1 => ce_1_sg_x1942,
      clk_1 => clk_1_sg_x1942,
      din => delay1_q_net_x2,
      dout => ram_data_out_net_x1
    );

  mult: entity work.mult_4af04d161c
    port map (
      a => reinterpret2_output_port_net,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x1942,
      clk => clk_1_sg_x1942,
      clr => '0',
      p => mult_p_net_x4
    );

  reinterpret: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_y_net,
      output_port => reinterpret_output_port_net
    );

  reinterpret2: entity work.reinterpret_9b221d4490
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => delay1_q_net_x2,
      output_port => reinterpret2_output_port_net
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 72,
      y_width => 18
    )
    port map (
      x => register_q_net_x1,
      y => slice_y_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 71,
      x_width => 72,
      y_width => 54
    )
    port map (
      x => register_q_net_x1,
      y => slice1_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/pol1_in10_last_tap"

entity pol1_in10_last_tap_entity_dcc2b2dd1c is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coeff: in std_logic_vector(17 downto 0); 
    din: in std_logic_vector(14 downto 0); 
    tap_out: out std_logic_vector(32 downto 0)
  );
end pol1_in10_last_tap_entity_dcc2b2dd1c;

architecture structural of pol1_in10_last_tap_entity_dcc2b2dd1c is
  signal ce_1_sg_x1943: std_logic;
  signal clk_1_sg_x1943: std_logic;
  signal mult_p_net_x5: std_logic_vector(32 downto 0);
  signal ram_data_out_net_x0: std_logic_vector(14 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(14 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(17 downto 0);
  signal slice1_y_net_x0: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x1943 <= ce_1;
  clk_1_sg_x1943 <= clk_1;
  slice1_y_net_x0 <= coeff;
  ram_data_out_net_x0 <= din;
  tap_out <= mult_p_net_x5;

  mult: entity work.mult_4af04d161c
    port map (
      a => reinterpret1_output_port_net,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x1943,
      clk => clk_1_sg_x1943,
      clr => '0',
      p => mult_p_net_x5
    );

  reinterpret: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net_x0,
      output_port => reinterpret_output_port_net
    );

  reinterpret1: entity work.reinterpret_9b221d4490
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => ram_data_out_net_x0,
      output_port => reinterpret1_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/pol1_in10_tap2"

entity pol1_in10_tap2_entity_f04386d359 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coeff: in std_logic_vector(53 downto 0); 
    din: in std_logic_vector(14 downto 0); 
    coeff_out: out std_logic_vector(35 downto 0); 
    dout: out std_logic_vector(14 downto 0); 
    taps_out: out std_logic_vector(32 downto 0)
  );
end pol1_in10_tap2_entity_f04386d359;

architecture structural of pol1_in10_tap2_entity_f04386d359 is
  signal ce_1_sg_x1945: std_logic;
  signal clk_1_sg_x1945: std_logic;
  signal mult_p_net_x6: std_logic_vector(32 downto 0);
  signal ram_data_out_net_x3: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x4: std_logic_vector(14 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(14 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(17 downto 0);
  signal slice1_y_net_x1: std_logic_vector(53 downto 0);
  signal slice1_y_net_x2: std_logic_vector(35 downto 0);
  signal slice_y_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x1945 <= ce_1;
  clk_1_sg_x1945 <= clk_1;
  slice1_y_net_x1 <= coeff;
  ram_data_out_net_x3 <= din;
  coeff_out <= slice1_y_net_x2;
  dout <= ram_data_out_net_x4;
  taps_out <= mult_p_net_x6;

  delay_bram_baf0f4c2ca: entity work.delay_bram_entity_bd140204fd
    port map (
      ce_1 => ce_1_sg_x1945,
      clk_1 => clk_1_sg_x1945,
      din => ram_data_out_net_x3,
      dout => ram_data_out_net_x4
    );

  mult: entity work.mult_4af04d161c
    port map (
      a => reinterpret1_output_port_net,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x1945,
      clk => clk_1_sg_x1945,
      clr => '0',
      p => mult_p_net_x6
    );

  reinterpret: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_y_net,
      output_port => reinterpret_output_port_net
    );

  reinterpret1: entity work.reinterpret_9b221d4490
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => ram_data_out_net_x3,
      output_port => reinterpret1_output_port_net
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 54,
      y_width => 18
    )
    port map (
      x => slice1_y_net_x1,
      y => slice_y_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 53,
      x_width => 54,
      y_width => 36
    )
    port map (
      x => slice1_y_net_x1,
      y => slice1_y_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/pol1_in10_tap3"

entity pol1_in10_tap3_entity_981edca22f is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coeff: in std_logic_vector(35 downto 0); 
    din: in std_logic_vector(14 downto 0); 
    coeff_out: out std_logic_vector(17 downto 0); 
    dout: out std_logic_vector(14 downto 0); 
    taps_out: out std_logic_vector(32 downto 0)
  );
end pol1_in10_tap3_entity_981edca22f;

architecture structural of pol1_in10_tap3_entity_981edca22f is
  signal ce_1_sg_x1947: std_logic;
  signal clk_1_sg_x1947: std_logic;
  signal mult_p_net_x7: std_logic_vector(32 downto 0);
  signal ram_data_out_net_x2: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x6: std_logic_vector(14 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(14 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(17 downto 0);
  signal slice1_y_net_x3: std_logic_vector(35 downto 0);
  signal slice1_y_net_x4: std_logic_vector(17 downto 0);
  signal slice_y_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x1947 <= ce_1;
  clk_1_sg_x1947 <= clk_1;
  slice1_y_net_x3 <= coeff;
  ram_data_out_net_x6 <= din;
  coeff_out <= slice1_y_net_x4;
  dout <= ram_data_out_net_x2;
  taps_out <= mult_p_net_x7;

  delay_bram_ab122633a3: entity work.delay_bram_entity_bd140204fd
    port map (
      ce_1 => ce_1_sg_x1947,
      clk_1 => clk_1_sg_x1947,
      din => ram_data_out_net_x6,
      dout => ram_data_out_net_x2
    );

  mult: entity work.mult_4af04d161c
    port map (
      a => reinterpret1_output_port_net,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x1947,
      clk => clk_1_sg_x1947,
      clr => '0',
      p => mult_p_net_x7
    );

  reinterpret: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_y_net,
      output_port => reinterpret_output_port_net
    );

  reinterpret1: entity work.reinterpret_9b221d4490
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => ram_data_out_net_x6,
      output_port => reinterpret1_output_port_net
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 36,
      y_width => 18
    )
    port map (
      x => slice1_y_net_x3,
      y => slice_y_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 35,
      x_width => 36,
      y_width => 18
    )
    port map (
      x => slice1_y_net_x3,
      y => slice1_y_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/pol1_in11_coeffs"

entity pol1_in11_coeffs_entity_f1f2261462 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    coeff: out std_logic_vector(71 downto 0); 
    dout: out std_logic_vector(14 downto 0)
  );
end pol1_in11_coeffs_entity_f1f2261462;

architecture structural of pol1_in11_coeffs_entity_f1f2261462 is
  signal ce_1_sg_x1948: std_logic;
  signal clk_1_sg_x1948: std_logic;
  signal concat_y_net: std_logic_vector(71 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay1_q_net_x0: std_logic_vector(14 downto 0);
  signal edge_op_y_net_x2: std_logic;
  signal fan_delay1_q_net: std_logic_vector(9 downto 0);
  signal fan_delay2_q_net: std_logic_vector(9 downto 0);
  signal fan_delay3_q_net: std_logic_vector(9 downto 0);
  signal fan_delay4_q_net: std_logic_vector(9 downto 0);
  signal mult10_p_net_x1: std_logic_vector(14 downto 0);
  signal register_q_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(17 downto 0);
  signal rom1_data_net: std_logic_vector(17 downto 0);
  signal rom2_data_net: std_logic_vector(17 downto 0);
  signal rom3_data_net: std_logic_vector(17 downto 0);
  signal rom4_data_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x1948 <= ce_1;
  clk_1_sg_x1948 <= clk_1;
  mult10_p_net_x1 <= din;
  edge_op_y_net_x2 <= sync;
  coeff <= register_q_net_x0;
  dout <= delay1_q_net_x0;

  concat: entity work.concat_a246e373e7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concat_y_net
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x1948,
      clk => clk_1_sg_x1948,
      clr => '0',
      rst(0) => edge_op_y_net_x2,
      op => counter_op_net
    );

  delay1: entity work.delay_d662813220
    port map (
      ce => ce_1_sg_x1948,
      clk => clk_1_sg_x1948,
      clr => '0',
      d => mult10_p_net_x1,
      q => delay1_q_net_x0
    );

  fan_delay1: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1948,
      clk => clk_1_sg_x1948,
      clr => '0',
      d => counter_op_net,
      q => fan_delay1_q_net
    );

  fan_delay2: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1948,
      clk => clk_1_sg_x1948,
      clr => '0',
      d => counter_op_net,
      q => fan_delay2_q_net
    );

  fan_delay3: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1948,
      clk => clk_1_sg_x1948,
      clr => '0',
      d => counter_op_net,
      q => fan_delay3_q_net
    );

  fan_delay4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1948,
      clk => clk_1_sg_x1948,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay4_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 72,
      init_value => b"000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x1948,
      clk => clk_1_sg_x1948,
      d => concat_y_net,
      en => "1",
      rst => "0",
      q => register_q_net_x0
    );

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom1_data_net,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom2_data_net,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom3_data_net,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom4_data_net,
      output_port => reinterpret4_output_port_net
    );

  rom1: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_77679df2442ac302",
      latency => 1
    )
    port map (
      addr => fan_delay1_q_net,
      ce => ce_1_sg_x1948,
      clk => clk_1_sg_x1948,
      en => "1",
      rst => "0",
      data => rom1_data_net
    );

  rom2: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_21758865cfafce47",
      latency => 1
    )
    port map (
      addr => fan_delay2_q_net,
      ce => ce_1_sg_x1948,
      clk => clk_1_sg_x1948,
      en => "1",
      rst => "0",
      data => rom2_data_net
    );

  rom3: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_d817ed8ddb3646eb",
      latency => 1
    )
    port map (
      addr => fan_delay3_q_net,
      ce => ce_1_sg_x1948,
      clk => clk_1_sg_x1948,
      en => "1",
      rst => "0",
      data => rom3_data_net
    );

  rom4: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_11c202c1b9a21438",
      latency => 1
    )
    port map (
      addr => fan_delay4_q_net,
      ce => ce_1_sg_x1948,
      clk => clk_1_sg_x1948,
      en => "1",
      rst => "0",
      data => rom4_data_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/pol1_in12_coeffs"

entity pol1_in12_coeffs_entity_3fc7bb30e0 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    coeff: out std_logic_vector(71 downto 0); 
    dout: out std_logic_vector(14 downto 0)
  );
end pol1_in12_coeffs_entity_3fc7bb30e0;

architecture structural of pol1_in12_coeffs_entity_3fc7bb30e0 is
  signal ce_1_sg_x1956: std_logic;
  signal clk_1_sg_x1956: std_logic;
  signal concat_y_net: std_logic_vector(71 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay1_q_net_x0: std_logic_vector(14 downto 0);
  signal edge_op_y_net_x3: std_logic;
  signal fan_delay1_q_net: std_logic_vector(9 downto 0);
  signal fan_delay2_q_net: std_logic_vector(9 downto 0);
  signal fan_delay3_q_net: std_logic_vector(9 downto 0);
  signal fan_delay4_q_net: std_logic_vector(9 downto 0);
  signal mult11_p_net_x1: std_logic_vector(14 downto 0);
  signal register_q_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(17 downto 0);
  signal rom1_data_net: std_logic_vector(17 downto 0);
  signal rom2_data_net: std_logic_vector(17 downto 0);
  signal rom3_data_net: std_logic_vector(17 downto 0);
  signal rom4_data_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x1956 <= ce_1;
  clk_1_sg_x1956 <= clk_1;
  mult11_p_net_x1 <= din;
  edge_op_y_net_x3 <= sync;
  coeff <= register_q_net_x0;
  dout <= delay1_q_net_x0;

  concat: entity work.concat_a246e373e7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concat_y_net
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x1956,
      clk => clk_1_sg_x1956,
      clr => '0',
      rst(0) => edge_op_y_net_x3,
      op => counter_op_net
    );

  delay1: entity work.delay_d662813220
    port map (
      ce => ce_1_sg_x1956,
      clk => clk_1_sg_x1956,
      clr => '0',
      d => mult11_p_net_x1,
      q => delay1_q_net_x0
    );

  fan_delay1: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1956,
      clk => clk_1_sg_x1956,
      clr => '0',
      d => counter_op_net,
      q => fan_delay1_q_net
    );

  fan_delay2: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1956,
      clk => clk_1_sg_x1956,
      clr => '0',
      d => counter_op_net,
      q => fan_delay2_q_net
    );

  fan_delay3: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1956,
      clk => clk_1_sg_x1956,
      clr => '0',
      d => counter_op_net,
      q => fan_delay3_q_net
    );

  fan_delay4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1956,
      clk => clk_1_sg_x1956,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay4_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 72,
      init_value => b"000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x1956,
      clk => clk_1_sg_x1956,
      d => concat_y_net,
      en => "1",
      rst => "0",
      q => register_q_net_x0
    );

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom1_data_net,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom2_data_net,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom3_data_net,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom4_data_net,
      output_port => reinterpret4_output_port_net
    );

  rom1: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_15abfe73d44907c1",
      latency => 1
    )
    port map (
      addr => fan_delay1_q_net,
      ce => ce_1_sg_x1956,
      clk => clk_1_sg_x1956,
      en => "1",
      rst => "0",
      data => rom1_data_net
    );

  rom2: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_db0357c42c191153",
      latency => 1
    )
    port map (
      addr => fan_delay2_q_net,
      ce => ce_1_sg_x1956,
      clk => clk_1_sg_x1956,
      en => "1",
      rst => "0",
      data => rom2_data_net
    );

  rom3: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_9b21af6ed15b3d62",
      latency => 1
    )
    port map (
      addr => fan_delay3_q_net,
      ce => ce_1_sg_x1956,
      clk => clk_1_sg_x1956,
      en => "1",
      rst => "0",
      data => rom3_data_net
    );

  rom4: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_228adcdb209ef640",
      latency => 1
    )
    port map (
      addr => fan_delay4_q_net,
      ce => ce_1_sg_x1956,
      clk => clk_1_sg_x1956,
      en => "1",
      rst => "0",
      data => rom4_data_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/pol1_in13_coeffs"

entity pol1_in13_coeffs_entity_a43a8b8542 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    coeff: out std_logic_vector(71 downto 0); 
    dout: out std_logic_vector(14 downto 0)
  );
end pol1_in13_coeffs_entity_a43a8b8542;

architecture structural of pol1_in13_coeffs_entity_a43a8b8542 is
  signal ce_1_sg_x1964: std_logic;
  signal clk_1_sg_x1964: std_logic;
  signal concat_y_net: std_logic_vector(71 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay1_q_net_x0: std_logic_vector(14 downto 0);
  signal edge_op_y_net_x4: std_logic;
  signal fan_delay1_q_net: std_logic_vector(9 downto 0);
  signal fan_delay2_q_net: std_logic_vector(9 downto 0);
  signal fan_delay3_q_net: std_logic_vector(9 downto 0);
  signal fan_delay4_q_net: std_logic_vector(9 downto 0);
  signal mult12_p_net_x1: std_logic_vector(14 downto 0);
  signal register_q_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(17 downto 0);
  signal rom1_data_net: std_logic_vector(17 downto 0);
  signal rom2_data_net: std_logic_vector(17 downto 0);
  signal rom3_data_net: std_logic_vector(17 downto 0);
  signal rom4_data_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x1964 <= ce_1;
  clk_1_sg_x1964 <= clk_1;
  mult12_p_net_x1 <= din;
  edge_op_y_net_x4 <= sync;
  coeff <= register_q_net_x0;
  dout <= delay1_q_net_x0;

  concat: entity work.concat_a246e373e7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concat_y_net
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x1964,
      clk => clk_1_sg_x1964,
      clr => '0',
      rst(0) => edge_op_y_net_x4,
      op => counter_op_net
    );

  delay1: entity work.delay_d662813220
    port map (
      ce => ce_1_sg_x1964,
      clk => clk_1_sg_x1964,
      clr => '0',
      d => mult12_p_net_x1,
      q => delay1_q_net_x0
    );

  fan_delay1: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1964,
      clk => clk_1_sg_x1964,
      clr => '0',
      d => counter_op_net,
      q => fan_delay1_q_net
    );

  fan_delay2: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1964,
      clk => clk_1_sg_x1964,
      clr => '0',
      d => counter_op_net,
      q => fan_delay2_q_net
    );

  fan_delay3: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1964,
      clk => clk_1_sg_x1964,
      clr => '0',
      d => counter_op_net,
      q => fan_delay3_q_net
    );

  fan_delay4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1964,
      clk => clk_1_sg_x1964,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay4_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 72,
      init_value => b"000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x1964,
      clk => clk_1_sg_x1964,
      d => concat_y_net,
      en => "1",
      rst => "0",
      q => register_q_net_x0
    );

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom1_data_net,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom2_data_net,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom3_data_net,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom4_data_net,
      output_port => reinterpret4_output_port_net
    );

  rom1: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_d6cb91b542ad37c0",
      latency => 1
    )
    port map (
      addr => fan_delay1_q_net,
      ce => ce_1_sg_x1964,
      clk => clk_1_sg_x1964,
      en => "1",
      rst => "0",
      data => rom1_data_net
    );

  rom2: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_f9ac63e4787fa6ff",
      latency => 1
    )
    port map (
      addr => fan_delay2_q_net,
      ce => ce_1_sg_x1964,
      clk => clk_1_sg_x1964,
      en => "1",
      rst => "0",
      data => rom2_data_net
    );

  rom3: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_ffb4b8e6a1869a4a",
      latency => 1
    )
    port map (
      addr => fan_delay3_q_net,
      ce => ce_1_sg_x1964,
      clk => clk_1_sg_x1964,
      en => "1",
      rst => "0",
      data => rom3_data_net
    );

  rom4: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_730496867cd75f1e",
      latency => 1
    )
    port map (
      addr => fan_delay4_q_net,
      ce => ce_1_sg_x1964,
      clk => clk_1_sg_x1964,
      en => "1",
      rst => "0",
      data => rom4_data_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/pol1_in14_coeffs"

entity pol1_in14_coeffs_entity_cfc40cd967 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    coeff: out std_logic_vector(71 downto 0); 
    dout: out std_logic_vector(14 downto 0)
  );
end pol1_in14_coeffs_entity_cfc40cd967;

architecture structural of pol1_in14_coeffs_entity_cfc40cd967 is
  signal ce_1_sg_x1972: std_logic;
  signal clk_1_sg_x1972: std_logic;
  signal concat_y_net: std_logic_vector(71 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay1_q_net_x0: std_logic_vector(14 downto 0);
  signal edge_op_y_net_x5: std_logic;
  signal fan_delay1_q_net: std_logic_vector(9 downto 0);
  signal fan_delay2_q_net: std_logic_vector(9 downto 0);
  signal fan_delay3_q_net: std_logic_vector(9 downto 0);
  signal fan_delay4_q_net: std_logic_vector(9 downto 0);
  signal mult13_p_net_x1: std_logic_vector(14 downto 0);
  signal register_q_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(17 downto 0);
  signal rom1_data_net: std_logic_vector(17 downto 0);
  signal rom2_data_net: std_logic_vector(17 downto 0);
  signal rom3_data_net: std_logic_vector(17 downto 0);
  signal rom4_data_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x1972 <= ce_1;
  clk_1_sg_x1972 <= clk_1;
  mult13_p_net_x1 <= din;
  edge_op_y_net_x5 <= sync;
  coeff <= register_q_net_x0;
  dout <= delay1_q_net_x0;

  concat: entity work.concat_a246e373e7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concat_y_net
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x1972,
      clk => clk_1_sg_x1972,
      clr => '0',
      rst(0) => edge_op_y_net_x5,
      op => counter_op_net
    );

  delay1: entity work.delay_d662813220
    port map (
      ce => ce_1_sg_x1972,
      clk => clk_1_sg_x1972,
      clr => '0',
      d => mult13_p_net_x1,
      q => delay1_q_net_x0
    );

  fan_delay1: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1972,
      clk => clk_1_sg_x1972,
      clr => '0',
      d => counter_op_net,
      q => fan_delay1_q_net
    );

  fan_delay2: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1972,
      clk => clk_1_sg_x1972,
      clr => '0',
      d => counter_op_net,
      q => fan_delay2_q_net
    );

  fan_delay3: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1972,
      clk => clk_1_sg_x1972,
      clr => '0',
      d => counter_op_net,
      q => fan_delay3_q_net
    );

  fan_delay4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1972,
      clk => clk_1_sg_x1972,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay4_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 72,
      init_value => b"000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x1972,
      clk => clk_1_sg_x1972,
      d => concat_y_net,
      en => "1",
      rst => "0",
      q => register_q_net_x0
    );

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom1_data_net,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom2_data_net,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom3_data_net,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom4_data_net,
      output_port => reinterpret4_output_port_net
    );

  rom1: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_0e77235adf0aed1d",
      latency => 1
    )
    port map (
      addr => fan_delay1_q_net,
      ce => ce_1_sg_x1972,
      clk => clk_1_sg_x1972,
      en => "1",
      rst => "0",
      data => rom1_data_net
    );

  rom2: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_46c2172210d730b3",
      latency => 1
    )
    port map (
      addr => fan_delay2_q_net,
      ce => ce_1_sg_x1972,
      clk => clk_1_sg_x1972,
      en => "1",
      rst => "0",
      data => rom2_data_net
    );

  rom3: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_e9f07b7b2f08b8e0",
      latency => 1
    )
    port map (
      addr => fan_delay3_q_net,
      ce => ce_1_sg_x1972,
      clk => clk_1_sg_x1972,
      en => "1",
      rst => "0",
      data => rom3_data_net
    );

  rom4: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_8ff2e75b8b509fd9",
      latency => 1
    )
    port map (
      addr => fan_delay4_q_net,
      ce => ce_1_sg_x1972,
      clk => clk_1_sg_x1972,
      en => "1",
      rst => "0",
      data => rom4_data_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/pol1_in15_coeffs"

entity pol1_in15_coeffs_entity_faa4480193 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    coeff: out std_logic_vector(71 downto 0); 
    dout: out std_logic_vector(14 downto 0)
  );
end pol1_in15_coeffs_entity_faa4480193;

architecture structural of pol1_in15_coeffs_entity_faa4480193 is
  signal ce_1_sg_x1980: std_logic;
  signal clk_1_sg_x1980: std_logic;
  signal concat_y_net: std_logic_vector(71 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay1_q_net_x0: std_logic_vector(14 downto 0);
  signal edge_op_y_net_x6: std_logic;
  signal fan_delay1_q_net: std_logic_vector(9 downto 0);
  signal fan_delay2_q_net: std_logic_vector(9 downto 0);
  signal fan_delay3_q_net: std_logic_vector(9 downto 0);
  signal fan_delay4_q_net: std_logic_vector(9 downto 0);
  signal mult14_p_net_x1: std_logic_vector(14 downto 0);
  signal register_q_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(17 downto 0);
  signal rom1_data_net: std_logic_vector(17 downto 0);
  signal rom2_data_net: std_logic_vector(17 downto 0);
  signal rom3_data_net: std_logic_vector(17 downto 0);
  signal rom4_data_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x1980 <= ce_1;
  clk_1_sg_x1980 <= clk_1;
  mult14_p_net_x1 <= din;
  edge_op_y_net_x6 <= sync;
  coeff <= register_q_net_x0;
  dout <= delay1_q_net_x0;

  concat: entity work.concat_a246e373e7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concat_y_net
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x1980,
      clk => clk_1_sg_x1980,
      clr => '0',
      rst(0) => edge_op_y_net_x6,
      op => counter_op_net
    );

  delay1: entity work.delay_d662813220
    port map (
      ce => ce_1_sg_x1980,
      clk => clk_1_sg_x1980,
      clr => '0',
      d => mult14_p_net_x1,
      q => delay1_q_net_x0
    );

  fan_delay1: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1980,
      clk => clk_1_sg_x1980,
      clr => '0',
      d => counter_op_net,
      q => fan_delay1_q_net
    );

  fan_delay2: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1980,
      clk => clk_1_sg_x1980,
      clr => '0',
      d => counter_op_net,
      q => fan_delay2_q_net
    );

  fan_delay3: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1980,
      clk => clk_1_sg_x1980,
      clr => '0',
      d => counter_op_net,
      q => fan_delay3_q_net
    );

  fan_delay4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1980,
      clk => clk_1_sg_x1980,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay4_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 72,
      init_value => b"000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x1980,
      clk => clk_1_sg_x1980,
      d => concat_y_net,
      en => "1",
      rst => "0",
      q => register_q_net_x0
    );

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom1_data_net,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom2_data_net,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom3_data_net,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom4_data_net,
      output_port => reinterpret4_output_port_net
    );

  rom1: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_f468ef5b99517297",
      latency => 1
    )
    port map (
      addr => fan_delay1_q_net,
      ce => ce_1_sg_x1980,
      clk => clk_1_sg_x1980,
      en => "1",
      rst => "0",
      data => rom1_data_net
    );

  rom2: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_570d16daded9dae1",
      latency => 1
    )
    port map (
      addr => fan_delay2_q_net,
      ce => ce_1_sg_x1980,
      clk => clk_1_sg_x1980,
      en => "1",
      rst => "0",
      data => rom2_data_net
    );

  rom3: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_7a6e30cd29f87404",
      latency => 1
    )
    port map (
      addr => fan_delay3_q_net,
      ce => ce_1_sg_x1980,
      clk => clk_1_sg_x1980,
      en => "1",
      rst => "0",
      data => rom3_data_net
    );

  rom4: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_3d1bbfbe6849d726",
      latency => 1
    )
    port map (
      addr => fan_delay4_q_net,
      ce => ce_1_sg_x1980,
      clk => clk_1_sg_x1980,
      en => "1",
      rst => "0",
      data => rom4_data_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/pol1_in16_coeffs"

entity pol1_in16_coeffs_entity_b853114fae is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    coeff: out std_logic_vector(71 downto 0); 
    dout: out std_logic_vector(14 downto 0)
  );
end pol1_in16_coeffs_entity_b853114fae;

architecture structural of pol1_in16_coeffs_entity_b853114fae is
  signal ce_1_sg_x1988: std_logic;
  signal clk_1_sg_x1988: std_logic;
  signal concat_y_net: std_logic_vector(71 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay1_q_net_x0: std_logic_vector(14 downto 0);
  signal edge_op_y_net_x7: std_logic;
  signal fan_delay1_q_net: std_logic_vector(9 downto 0);
  signal fan_delay2_q_net: std_logic_vector(9 downto 0);
  signal fan_delay3_q_net: std_logic_vector(9 downto 0);
  signal fan_delay4_q_net: std_logic_vector(9 downto 0);
  signal mult15_p_net_x1: std_logic_vector(14 downto 0);
  signal register_q_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(17 downto 0);
  signal rom1_data_net: std_logic_vector(17 downto 0);
  signal rom2_data_net: std_logic_vector(17 downto 0);
  signal rom3_data_net: std_logic_vector(17 downto 0);
  signal rom4_data_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x1988 <= ce_1;
  clk_1_sg_x1988 <= clk_1;
  mult15_p_net_x1 <= din;
  edge_op_y_net_x7 <= sync;
  coeff <= register_q_net_x0;
  dout <= delay1_q_net_x0;

  concat: entity work.concat_a246e373e7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concat_y_net
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x1988,
      clk => clk_1_sg_x1988,
      clr => '0',
      rst(0) => edge_op_y_net_x7,
      op => counter_op_net
    );

  delay1: entity work.delay_d662813220
    port map (
      ce => ce_1_sg_x1988,
      clk => clk_1_sg_x1988,
      clr => '0',
      d => mult15_p_net_x1,
      q => delay1_q_net_x0
    );

  fan_delay1: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1988,
      clk => clk_1_sg_x1988,
      clr => '0',
      d => counter_op_net,
      q => fan_delay1_q_net
    );

  fan_delay2: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1988,
      clk => clk_1_sg_x1988,
      clr => '0',
      d => counter_op_net,
      q => fan_delay2_q_net
    );

  fan_delay3: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x1988,
      clk => clk_1_sg_x1988,
      clr => '0',
      d => counter_op_net,
      q => fan_delay3_q_net
    );

  fan_delay4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1988,
      clk => clk_1_sg_x1988,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay4_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 72,
      init_value => b"000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x1988,
      clk => clk_1_sg_x1988,
      d => concat_y_net,
      en => "1",
      rst => "0",
      q => register_q_net_x0
    );

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom1_data_net,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom2_data_net,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom3_data_net,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom4_data_net,
      output_port => reinterpret4_output_port_net
    );

  rom1: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_2c851313e04aebd0",
      latency => 1
    )
    port map (
      addr => fan_delay1_q_net,
      ce => ce_1_sg_x1988,
      clk => clk_1_sg_x1988,
      en => "1",
      rst => "0",
      data => rom1_data_net
    );

  rom2: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_c196405d618f523e",
      latency => 1
    )
    port map (
      addr => fan_delay2_q_net,
      ce => ce_1_sg_x1988,
      clk => clk_1_sg_x1988,
      en => "1",
      rst => "0",
      data => rom2_data_net
    );

  rom3: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_eb4ba4ee5ad07826",
      latency => 1
    )
    port map (
      addr => fan_delay3_q_net,
      ce => ce_1_sg_x1988,
      clk => clk_1_sg_x1988,
      en => "1",
      rst => "0",
      data => rom3_data_net
    );

  rom4: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_af634d68f1ef6d34",
      latency => 1
    )
    port map (
      addr => fan_delay4_q_net,
      ce => ce_1_sg_x1988,
      clk => clk_1_sg_x1988,
      en => "1",
      rst => "0",
      data => rom4_data_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/pol1_in1_coeffs"

entity pol1_in1_coeffs_entity_ef5b5a77ff is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    coeff: out std_logic_vector(71 downto 0); 
    dout: out std_logic_vector(14 downto 0); 
    sync_out: out std_logic
  );
end pol1_in1_coeffs_entity_ef5b5a77ff;

architecture structural of pol1_in1_coeffs_entity_ef5b5a77ff is
  signal ce_1_sg_x1996: std_logic;
  signal clk_1_sg_x1996: std_logic;
  signal concat_y_net: std_logic_vector(71 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay1_q_net_x0: std_logic_vector(14 downto 0);
  signal delay_q_net_x0: std_logic;
  signal edge_op_y_net_x8: std_logic;
  signal fan_delay1_q_net: std_logic_vector(9 downto 0);
  signal fan_delay2_q_net: std_logic_vector(9 downto 0);
  signal fan_delay3_q_net: std_logic_vector(9 downto 0);
  signal fan_delay4_q_net: std_logic_vector(9 downto 0);
  signal mult_p_net_x1: std_logic_vector(14 downto 0);
  signal register_q_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(17 downto 0);
  signal rom1_data_net: std_logic_vector(17 downto 0);
  signal rom2_data_net: std_logic_vector(17 downto 0);
  signal rom3_data_net: std_logic_vector(17 downto 0);
  signal rom4_data_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x1996 <= ce_1;
  clk_1_sg_x1996 <= clk_1;
  mult_p_net_x1 <= din;
  edge_op_y_net_x8 <= sync;
  coeff <= register_q_net_x0;
  dout <= delay1_q_net_x0;
  sync_out <= delay_q_net_x0;

  concat: entity work.concat_a246e373e7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concat_y_net
    );

  counter: entity work.xlcounter_free_he6_cres_correlator
    generic map (
      core_name0 => "cntr_11_0_5c0d8fded7f0a054",
      op_arith => xlUnsigned,
      op_width => 10
    )
    port map (
      ce => ce_1_sg_x1996,
      clk => clk_1_sg_x1996,
      clr => '0',
      en => "1",
      rst(0) => edge_op_y_net_x8,
      op => counter_op_net
    );

  delay: entity work.xldelay
    generic map (
      latency => 4,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x1996,
      clk => clk_1_sg_x1996,
      d(0) => edge_op_y_net_x8,
      en => '1',
      rst => '1',
      q(0) => delay_q_net_x0
    );

  delay1: entity work.xldelay
    generic map (
      latency => 4,
      reg_retiming => 0,
      reset => 0,
      width => 15
    )
    port map (
      ce => ce_1_sg_x1996,
      clk => clk_1_sg_x1996,
      d => mult_p_net_x1,
      en => '1',
      rst => '1',
      q => delay1_q_net_x0
    );

  fan_delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1996,
      clk => clk_1_sg_x1996,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay1_q_net
    );

  fan_delay2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1996,
      clk => clk_1_sg_x1996,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay2_q_net
    );

  fan_delay3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1996,
      clk => clk_1_sg_x1996,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay3_q_net
    );

  fan_delay4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x1996,
      clk => clk_1_sg_x1996,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay4_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 72,
      init_value => b"000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x1996,
      clk => clk_1_sg_x1996,
      d => concat_y_net,
      en => "1",
      rst => "0",
      q => register_q_net_x0
    );

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom1_data_net,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom2_data_net,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom3_data_net,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom4_data_net,
      output_port => reinterpret4_output_port_net
    );

  rom1: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_6f5b216e349e04e0",
      latency => 1
    )
    port map (
      addr => fan_delay1_q_net,
      ce => ce_1_sg_x1996,
      clk => clk_1_sg_x1996,
      en => "1",
      rst => "0",
      data => rom1_data_net
    );

  rom2: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_5559e1c25418f22a",
      latency => 1
    )
    port map (
      addr => fan_delay2_q_net,
      ce => ce_1_sg_x1996,
      clk => clk_1_sg_x1996,
      en => "1",
      rst => "0",
      data => rom2_data_net
    );

  rom3: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_ea91f7204eef1264",
      latency => 1
    )
    port map (
      addr => fan_delay3_q_net,
      ce => ce_1_sg_x1996,
      clk => clk_1_sg_x1996,
      en => "1",
      rst => "0",
      data => rom3_data_net
    );

  rom4: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_986c366aae4be05d",
      latency => 1
    )
    port map (
      addr => fan_delay4_q_net,
      ce => ce_1_sg_x1996,
      clk => clk_1_sg_x1996,
      en => "1",
      rst => "0",
      data => rom4_data_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/pol1_in1_first_tap/sync_delay"

entity sync_delay_entity_c652984283 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end sync_delay_entity_c652984283;

architecture structural of sync_delay_entity_c652984283 is
  signal ce_1_sg_x1998: std_logic;
  signal clk_1_sg_x1998: std_logic;
  signal constant1_op_net: std_logic_vector(10 downto 0);
  signal constant2_op_net: std_logic_vector(10 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net: std_logic_vector(10 downto 0);
  signal counter_op_net: std_logic_vector(10 downto 0);
  signal delay_q_net_x1: std_logic;
  signal logical_y_net: std_logic;
  signal mux_y_net_x0: std_logic;
  signal relational1_op_net: std_logic;
  signal relational_op_net: std_logic;

begin
  ce_1_sg_x1998 <= ce_1;
  clk_1_sg_x1998 <= clk_1;
  delay_q_net_x1 <= in_x0;
  out_x0 <= mux_y_net_x0;

  constant1: entity work.constant_a3923dd146
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant1_op_net
    );

  constant2: entity work.constant_0604807f72
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net
    );

  constant3: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  constant_x0: entity work.constant_118598964d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  counter: entity work.counter_b5e433c475
    port map (
      ce => ce_1_sg_x1998,
      clk => clk_1_sg_x1998,
      clr => '0',
      din => constant2_op_net,
      en(0) => logical_y_net,
      load(0) => delay_q_net_x1,
      op => counter_op_net
    );

  logical: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay_q_net_x1,
      d1(0) => relational1_op_net,
      y(0) => logical_y_net
    );

  mux: entity work.mux_1bef4ba0e4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay_q_net_x1,
      d1(0) => relational_op_net,
      sel(0) => constant3_op_net,
      y(0) => mux_y_net_x0
    );

  relational: entity work.relational_2147430058
    port map (
      a => constant_op_net,
      b => counter_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_b4b277ae0f
    port map (
      a => counter_op_net,
      b => constant1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/pol1_in1_first_tap"

entity pol1_in1_first_tap_entity_03b35a9caf is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coeffs: in std_logic_vector(71 downto 0); 
    din: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    coeff_out: out std_logic_vector(53 downto 0); 
    dout: out std_logic_vector(14 downto 0); 
    sync_out: out std_logic; 
    taps_out: out std_logic_vector(32 downto 0)
  );
end pol1_in1_first_tap_entity_03b35a9caf;

architecture structural of pol1_in1_first_tap_entity_03b35a9caf is
  signal ce_1_sg_x1999: std_logic;
  signal clk_1_sg_x1999: std_logic;
  signal delay1_q_net_x2: std_logic_vector(14 downto 0);
  signal delay_q_net_x2: std_logic;
  signal mult_p_net_x4: std_logic_vector(32 downto 0);
  signal mux_y_net_x1: std_logic;
  signal ram_data_out_net_x1: std_logic_vector(14 downto 0);
  signal register_q_net_x1: std_logic_vector(71 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(14 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(17 downto 0);
  signal slice1_y_net_x0: std_logic_vector(53 downto 0);
  signal slice_y_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x1999 <= ce_1;
  clk_1_sg_x1999 <= clk_1;
  register_q_net_x1 <= coeffs;
  delay1_q_net_x2 <= din;
  delay_q_net_x2 <= sync;
  coeff_out <= slice1_y_net_x0;
  dout <= ram_data_out_net_x1;
  sync_out <= mux_y_net_x1;
  taps_out <= mult_p_net_x4;

  delay_bram_38853e56f2: entity work.delay_bram_entity_bd140204fd
    port map (
      ce_1 => ce_1_sg_x1999,
      clk_1 => clk_1_sg_x1999,
      din => delay1_q_net_x2,
      dout => ram_data_out_net_x1
    );

  mult: entity work.mult_4af04d161c
    port map (
      a => reinterpret2_output_port_net,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x1999,
      clk => clk_1_sg_x1999,
      clr => '0',
      p => mult_p_net_x4
    );

  reinterpret: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_y_net,
      output_port => reinterpret_output_port_net
    );

  reinterpret2: entity work.reinterpret_9b221d4490
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => delay1_q_net_x2,
      output_port => reinterpret2_output_port_net
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 72,
      y_width => 18
    )
    port map (
      x => register_q_net_x1,
      y => slice_y_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 71,
      x_width => 72,
      y_width => 54
    )
    port map (
      x => register_q_net_x1,
      y => slice1_y_net_x0
    );

  sync_delay_c652984283: entity work.sync_delay_entity_c652984283
    port map (
      ce_1 => ce_1_sg_x1999,
      clk_1 => clk_1_sg_x1999,
      in_x0 => delay_q_net_x2,
      out_x0 => mux_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/pol1_in1_last_tap"

entity pol1_in1_last_tap_entity_9ce7ed9520 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coeff: in std_logic_vector(17 downto 0); 
    din: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    sync_out: out std_logic; 
    tap_out: out std_logic_vector(32 downto 0)
  );
end pol1_in1_last_tap_entity_9ce7ed9520;

architecture structural of pol1_in1_last_tap_entity_9ce7ed9520 is
  signal ce_1_sg_x2000: std_logic;
  signal clk_1_sg_x2000: std_logic;
  signal delay_q_net_x1: std_logic;
  signal mult_p_net_x5: std_logic_vector(32 downto 0);
  signal mux_y_net_x0: std_logic;
  signal ram_data_out_net_x0: std_logic_vector(14 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(14 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(17 downto 0);
  signal slice1_y_net_x0: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x2000 <= ce_1;
  clk_1_sg_x2000 <= clk_1;
  slice1_y_net_x0 <= coeff;
  ram_data_out_net_x0 <= din;
  mux_y_net_x0 <= sync;
  sync_out <= delay_q_net_x1;
  tap_out <= mult_p_net_x5;

  delay: entity work.delay_e18fb31a3d
    port map (
      ce => ce_1_sg_x2000,
      clk => clk_1_sg_x2000,
      clr => '0',
      d(0) => mux_y_net_x0,
      q(0) => delay_q_net_x1
    );

  mult: entity work.mult_4af04d161c
    port map (
      a => reinterpret1_output_port_net,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x2000,
      clk => clk_1_sg_x2000,
      clr => '0',
      p => mult_p_net_x5
    );

  reinterpret: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net_x0,
      output_port => reinterpret_output_port_net
    );

  reinterpret1: entity work.reinterpret_9b221d4490
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => ram_data_out_net_x0,
      output_port => reinterpret1_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/pol1_in1_tap2"

entity pol1_in1_tap2_entity_d2671bf2af is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coeff: in std_logic_vector(53 downto 0); 
    din: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    coeff_out: out std_logic_vector(35 downto 0); 
    dout: out std_logic_vector(14 downto 0); 
    sync_out: out std_logic; 
    taps_out: out std_logic_vector(32 downto 0)
  );
end pol1_in1_tap2_entity_d2671bf2af;

architecture structural of pol1_in1_tap2_entity_d2671bf2af is
  signal ce_1_sg_x2003: std_logic;
  signal clk_1_sg_x2003: std_logic;
  signal mult_p_net_x6: std_logic_vector(32 downto 0);
  signal mux_y_net_x3: std_logic;
  signal mux_y_net_x4: std_logic;
  signal ram_data_out_net_x3: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x4: std_logic_vector(14 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(14 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(17 downto 0);
  signal slice1_y_net_x1: std_logic_vector(53 downto 0);
  signal slice1_y_net_x2: std_logic_vector(35 downto 0);
  signal slice_y_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x2003 <= ce_1;
  clk_1_sg_x2003 <= clk_1;
  slice1_y_net_x1 <= coeff;
  ram_data_out_net_x3 <= din;
  mux_y_net_x3 <= sync;
  coeff_out <= slice1_y_net_x2;
  dout <= ram_data_out_net_x4;
  sync_out <= mux_y_net_x4;
  taps_out <= mult_p_net_x6;

  delay_bram_d7089b19da: entity work.delay_bram_entity_bd140204fd
    port map (
      ce_1 => ce_1_sg_x2003,
      clk_1 => clk_1_sg_x2003,
      din => ram_data_out_net_x3,
      dout => ram_data_out_net_x4
    );

  mult: entity work.mult_4af04d161c
    port map (
      a => reinterpret1_output_port_net,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x2003,
      clk => clk_1_sg_x2003,
      clr => '0',
      p => mult_p_net_x6
    );

  reinterpret: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_y_net,
      output_port => reinterpret_output_port_net
    );

  reinterpret1: entity work.reinterpret_9b221d4490
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => ram_data_out_net_x3,
      output_port => reinterpret1_output_port_net
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 54,
      y_width => 18
    )
    port map (
      x => slice1_y_net_x1,
      y => slice_y_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 53,
      x_width => 54,
      y_width => 36
    )
    port map (
      x => slice1_y_net_x1,
      y => slice1_y_net_x2
    );

  sync_delay_73ed497081: entity work.sync_delay_entity_c652984283
    port map (
      ce_1 => ce_1_sg_x2003,
      clk_1 => clk_1_sg_x2003,
      in_x0 => mux_y_net_x3,
      out_x0 => mux_y_net_x4
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/pol1_in1_tap3"

entity pol1_in1_tap3_entity_d92786f630 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    coeff: in std_logic_vector(35 downto 0); 
    din: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    coeff_out: out std_logic_vector(17 downto 0); 
    dout: out std_logic_vector(14 downto 0); 
    sync_out: out std_logic; 
    taps_out: out std_logic_vector(32 downto 0)
  );
end pol1_in1_tap3_entity_d92786f630;

architecture structural of pol1_in1_tap3_entity_d92786f630 is
  signal ce_1_sg_x2006: std_logic;
  signal clk_1_sg_x2006: std_logic;
  signal mult_p_net_x7: std_logic_vector(32 downto 0);
  signal mux_y_net_x2: std_logic;
  signal mux_y_net_x6: std_logic;
  signal ram_data_out_net_x2: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x6: std_logic_vector(14 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(14 downto 0);
  signal reinterpret_output_port_net: std_logic_vector(17 downto 0);
  signal slice1_y_net_x3: std_logic_vector(35 downto 0);
  signal slice1_y_net_x4: std_logic_vector(17 downto 0);
  signal slice_y_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x2006 <= ce_1;
  clk_1_sg_x2006 <= clk_1;
  slice1_y_net_x3 <= coeff;
  ram_data_out_net_x6 <= din;
  mux_y_net_x6 <= sync;
  coeff_out <= slice1_y_net_x4;
  dout <= ram_data_out_net_x2;
  sync_out <= mux_y_net_x2;
  taps_out <= mult_p_net_x7;

  delay_bram_1e4a64c266: entity work.delay_bram_entity_bd140204fd
    port map (
      ce_1 => ce_1_sg_x2006,
      clk_1 => clk_1_sg_x2006,
      din => ram_data_out_net_x6,
      dout => ram_data_out_net_x2
    );

  mult: entity work.mult_4af04d161c
    port map (
      a => reinterpret1_output_port_net,
      b => reinterpret_output_port_net,
      ce => ce_1_sg_x2006,
      clk => clk_1_sg_x2006,
      clr => '0',
      p => mult_p_net_x7
    );

  reinterpret: entity work.reinterpret_9a0fa0f632
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_y_net,
      output_port => reinterpret_output_port_net
    );

  reinterpret1: entity work.reinterpret_9b221d4490
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => ram_data_out_net_x6,
      output_port => reinterpret1_output_port_net
    );

  slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 36,
      y_width => 18
    )
    port map (
      x => slice1_y_net_x3,
      y => slice_y_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 35,
      x_width => 36,
      y_width => 18
    )
    port map (
      x => slice1_y_net_x3,
      y => slice1_y_net_x4
    );

  sync_delay_5018229090: entity work.sync_delay_entity_c652984283
    port map (
      ce_1 => ce_1_sg_x2006,
      clk_1 => clk_1_sg_x2006,
      in_x0 => mux_y_net_x6,
      out_x0 => mux_y_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/pol1_in2_coeffs"

entity pol1_in2_coeffs_entity_04a64491b2 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    coeff: out std_logic_vector(71 downto 0); 
    dout: out std_logic_vector(14 downto 0)
  );
end pol1_in2_coeffs_entity_04a64491b2;

architecture structural of pol1_in2_coeffs_entity_04a64491b2 is
  signal ce_1_sg_x2007: std_logic;
  signal clk_1_sg_x2007: std_logic;
  signal concat_y_net: std_logic_vector(71 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay1_q_net_x0: std_logic_vector(14 downto 0);
  signal edge_op_y_net_x9: std_logic;
  signal fan_delay1_q_net: std_logic_vector(9 downto 0);
  signal fan_delay2_q_net: std_logic_vector(9 downto 0);
  signal fan_delay3_q_net: std_logic_vector(9 downto 0);
  signal fan_delay4_q_net: std_logic_vector(9 downto 0);
  signal mult1_p_net_x1: std_logic_vector(14 downto 0);
  signal register_q_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(17 downto 0);
  signal rom1_data_net: std_logic_vector(17 downto 0);
  signal rom2_data_net: std_logic_vector(17 downto 0);
  signal rom3_data_net: std_logic_vector(17 downto 0);
  signal rom4_data_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x2007 <= ce_1;
  clk_1_sg_x2007 <= clk_1;
  mult1_p_net_x1 <= din;
  edge_op_y_net_x9 <= sync;
  coeff <= register_q_net_x0;
  dout <= delay1_q_net_x0;

  concat: entity work.concat_a246e373e7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concat_y_net
    );

  counter: entity work.xlcounter_free_he6_cres_correlator
    generic map (
      core_name0 => "cntr_11_0_5c0d8fded7f0a054",
      op_arith => xlUnsigned,
      op_width => 10
    )
    port map (
      ce => ce_1_sg_x2007,
      clk => clk_1_sg_x2007,
      clr => '0',
      en => "1",
      rst(0) => edge_op_y_net_x9,
      op => counter_op_net
    );

  delay1: entity work.xldelay
    generic map (
      latency => 4,
      reg_retiming => 0,
      reset => 0,
      width => 15
    )
    port map (
      ce => ce_1_sg_x2007,
      clk => clk_1_sg_x2007,
      d => mult1_p_net_x1,
      en => '1',
      rst => '1',
      q => delay1_q_net_x0
    );

  fan_delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x2007,
      clk => clk_1_sg_x2007,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay1_q_net
    );

  fan_delay2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x2007,
      clk => clk_1_sg_x2007,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay2_q_net
    );

  fan_delay3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x2007,
      clk => clk_1_sg_x2007,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay3_q_net
    );

  fan_delay4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x2007,
      clk => clk_1_sg_x2007,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay4_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 72,
      init_value => b"000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x2007,
      clk => clk_1_sg_x2007,
      d => concat_y_net,
      en => "1",
      rst => "0",
      q => register_q_net_x0
    );

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom1_data_net,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom2_data_net,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom3_data_net,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom4_data_net,
      output_port => reinterpret4_output_port_net
    );

  rom1: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_2c0a2805649d3a36",
      latency => 1
    )
    port map (
      addr => fan_delay1_q_net,
      ce => ce_1_sg_x2007,
      clk => clk_1_sg_x2007,
      en => "1",
      rst => "0",
      data => rom1_data_net
    );

  rom2: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_866d29fad7879883",
      latency => 1
    )
    port map (
      addr => fan_delay2_q_net,
      ce => ce_1_sg_x2007,
      clk => clk_1_sg_x2007,
      en => "1",
      rst => "0",
      data => rom2_data_net
    );

  rom3: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_50631a4fdbedee3a",
      latency => 1
    )
    port map (
      addr => fan_delay3_q_net,
      ce => ce_1_sg_x2007,
      clk => clk_1_sg_x2007,
      en => "1",
      rst => "0",
      data => rom3_data_net
    );

  rom4: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_9212f4270c490d42",
      latency => 1
    )
    port map (
      addr => fan_delay4_q_net,
      ce => ce_1_sg_x2007,
      clk => clk_1_sg_x2007,
      en => "1",
      rst => "0",
      data => rom4_data_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/pol1_in3_coeffs"

entity pol1_in3_coeffs_entity_596ccf4456 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    coeff: out std_logic_vector(71 downto 0); 
    dout: out std_logic_vector(14 downto 0)
  );
end pol1_in3_coeffs_entity_596ccf4456;

architecture structural of pol1_in3_coeffs_entity_596ccf4456 is
  signal ce_1_sg_x2015: std_logic;
  signal clk_1_sg_x2015: std_logic;
  signal concat_y_net: std_logic_vector(71 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay1_q_net_x0: std_logic_vector(14 downto 0);
  signal edge_op_y_net_x10: std_logic;
  signal fan_delay1_q_net: std_logic_vector(9 downto 0);
  signal fan_delay2_q_net: std_logic_vector(9 downto 0);
  signal fan_delay3_q_net: std_logic_vector(9 downto 0);
  signal fan_delay4_q_net: std_logic_vector(9 downto 0);
  signal mult2_p_net_x1: std_logic_vector(14 downto 0);
  signal register_q_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(17 downto 0);
  signal rom1_data_net: std_logic_vector(17 downto 0);
  signal rom2_data_net: std_logic_vector(17 downto 0);
  signal rom3_data_net: std_logic_vector(17 downto 0);
  signal rom4_data_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x2015 <= ce_1;
  clk_1_sg_x2015 <= clk_1;
  mult2_p_net_x1 <= din;
  edge_op_y_net_x10 <= sync;
  coeff <= register_q_net_x0;
  dout <= delay1_q_net_x0;

  concat: entity work.concat_a246e373e7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concat_y_net
    );

  counter: entity work.xlcounter_free_he6_cres_correlator
    generic map (
      core_name0 => "cntr_11_0_5c0d8fded7f0a054",
      op_arith => xlUnsigned,
      op_width => 10
    )
    port map (
      ce => ce_1_sg_x2015,
      clk => clk_1_sg_x2015,
      clr => '0',
      en => "1",
      rst(0) => edge_op_y_net_x10,
      op => counter_op_net
    );

  delay1: entity work.xldelay
    generic map (
      latency => 4,
      reg_retiming => 0,
      reset => 0,
      width => 15
    )
    port map (
      ce => ce_1_sg_x2015,
      clk => clk_1_sg_x2015,
      d => mult2_p_net_x1,
      en => '1',
      rst => '1',
      q => delay1_q_net_x0
    );

  fan_delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x2015,
      clk => clk_1_sg_x2015,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay1_q_net
    );

  fan_delay2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x2015,
      clk => clk_1_sg_x2015,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay2_q_net
    );

  fan_delay3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x2015,
      clk => clk_1_sg_x2015,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay3_q_net
    );

  fan_delay4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x2015,
      clk => clk_1_sg_x2015,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay4_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 72,
      init_value => b"000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x2015,
      clk => clk_1_sg_x2015,
      d => concat_y_net,
      en => "1",
      rst => "0",
      q => register_q_net_x0
    );

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom1_data_net,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom2_data_net,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom3_data_net,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom4_data_net,
      output_port => reinterpret4_output_port_net
    );

  rom1: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_fc259590348866de",
      latency => 1
    )
    port map (
      addr => fan_delay1_q_net,
      ce => ce_1_sg_x2015,
      clk => clk_1_sg_x2015,
      en => "1",
      rst => "0",
      data => rom1_data_net
    );

  rom2: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_7d5e3739feda21ba",
      latency => 1
    )
    port map (
      addr => fan_delay2_q_net,
      ce => ce_1_sg_x2015,
      clk => clk_1_sg_x2015,
      en => "1",
      rst => "0",
      data => rom2_data_net
    );

  rom3: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_3e42de61f6cb9950",
      latency => 1
    )
    port map (
      addr => fan_delay3_q_net,
      ce => ce_1_sg_x2015,
      clk => clk_1_sg_x2015,
      en => "1",
      rst => "0",
      data => rom3_data_net
    );

  rom4: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_e1b46418f460c985",
      latency => 1
    )
    port map (
      addr => fan_delay4_q_net,
      ce => ce_1_sg_x2015,
      clk => clk_1_sg_x2015,
      en => "1",
      rst => "0",
      data => rom4_data_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/pol1_in4_coeffs"

entity pol1_in4_coeffs_entity_d1e346ded2 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    coeff: out std_logic_vector(71 downto 0); 
    dout: out std_logic_vector(14 downto 0)
  );
end pol1_in4_coeffs_entity_d1e346ded2;

architecture structural of pol1_in4_coeffs_entity_d1e346ded2 is
  signal ce_1_sg_x2023: std_logic;
  signal clk_1_sg_x2023: std_logic;
  signal concat_y_net: std_logic_vector(71 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay1_q_net_x0: std_logic_vector(14 downto 0);
  signal edge_op_y_net_x11: std_logic;
  signal fan_delay1_q_net: std_logic_vector(9 downto 0);
  signal fan_delay2_q_net: std_logic_vector(9 downto 0);
  signal fan_delay3_q_net: std_logic_vector(9 downto 0);
  signal fan_delay4_q_net: std_logic_vector(9 downto 0);
  signal mult3_p_net_x1: std_logic_vector(14 downto 0);
  signal register_q_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(17 downto 0);
  signal rom1_data_net: std_logic_vector(17 downto 0);
  signal rom2_data_net: std_logic_vector(17 downto 0);
  signal rom3_data_net: std_logic_vector(17 downto 0);
  signal rom4_data_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x2023 <= ce_1;
  clk_1_sg_x2023 <= clk_1;
  mult3_p_net_x1 <= din;
  edge_op_y_net_x11 <= sync;
  coeff <= register_q_net_x0;
  dout <= delay1_q_net_x0;

  concat: entity work.concat_a246e373e7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concat_y_net
    );

  counter: entity work.xlcounter_free_he6_cres_correlator
    generic map (
      core_name0 => "cntr_11_0_5c0d8fded7f0a054",
      op_arith => xlUnsigned,
      op_width => 10
    )
    port map (
      ce => ce_1_sg_x2023,
      clk => clk_1_sg_x2023,
      clr => '0',
      en => "1",
      rst(0) => edge_op_y_net_x11,
      op => counter_op_net
    );

  delay1: entity work.xldelay
    generic map (
      latency => 4,
      reg_retiming => 0,
      reset => 0,
      width => 15
    )
    port map (
      ce => ce_1_sg_x2023,
      clk => clk_1_sg_x2023,
      d => mult3_p_net_x1,
      en => '1',
      rst => '1',
      q => delay1_q_net_x0
    );

  fan_delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x2023,
      clk => clk_1_sg_x2023,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay1_q_net
    );

  fan_delay2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x2023,
      clk => clk_1_sg_x2023,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay2_q_net
    );

  fan_delay3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x2023,
      clk => clk_1_sg_x2023,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay3_q_net
    );

  fan_delay4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x2023,
      clk => clk_1_sg_x2023,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay4_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 72,
      init_value => b"000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x2023,
      clk => clk_1_sg_x2023,
      d => concat_y_net,
      en => "1",
      rst => "0",
      q => register_q_net_x0
    );

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom1_data_net,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom2_data_net,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom3_data_net,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom4_data_net,
      output_port => reinterpret4_output_port_net
    );

  rom1: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_797d180cdbf0046e",
      latency => 1
    )
    port map (
      addr => fan_delay1_q_net,
      ce => ce_1_sg_x2023,
      clk => clk_1_sg_x2023,
      en => "1",
      rst => "0",
      data => rom1_data_net
    );

  rom2: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_bece30c16e103c31",
      latency => 1
    )
    port map (
      addr => fan_delay2_q_net,
      ce => ce_1_sg_x2023,
      clk => clk_1_sg_x2023,
      en => "1",
      rst => "0",
      data => rom2_data_net
    );

  rom3: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_b794889df4d0ec69",
      latency => 1
    )
    port map (
      addr => fan_delay3_q_net,
      ce => ce_1_sg_x2023,
      clk => clk_1_sg_x2023,
      en => "1",
      rst => "0",
      data => rom3_data_net
    );

  rom4: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_7d18046e7b7c5e7a",
      latency => 1
    )
    port map (
      addr => fan_delay4_q_net,
      ce => ce_1_sg_x2023,
      clk => clk_1_sg_x2023,
      en => "1",
      rst => "0",
      data => rom4_data_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/pol1_in5_coeffs"

entity pol1_in5_coeffs_entity_7a3bc0a746 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    coeff: out std_logic_vector(71 downto 0); 
    dout: out std_logic_vector(14 downto 0)
  );
end pol1_in5_coeffs_entity_7a3bc0a746;

architecture structural of pol1_in5_coeffs_entity_7a3bc0a746 is
  signal ce_1_sg_x2031: std_logic;
  signal clk_1_sg_x2031: std_logic;
  signal concat_y_net: std_logic_vector(71 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay1_q_net_x0: std_logic_vector(14 downto 0);
  signal edge_op_y_net_x12: std_logic;
  signal fan_delay1_q_net: std_logic_vector(9 downto 0);
  signal fan_delay2_q_net: std_logic_vector(9 downto 0);
  signal fan_delay3_q_net: std_logic_vector(9 downto 0);
  signal fan_delay4_q_net: std_logic_vector(9 downto 0);
  signal mult4_p_net_x1: std_logic_vector(14 downto 0);
  signal register_q_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(17 downto 0);
  signal rom1_data_net: std_logic_vector(17 downto 0);
  signal rom2_data_net: std_logic_vector(17 downto 0);
  signal rom3_data_net: std_logic_vector(17 downto 0);
  signal rom4_data_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x2031 <= ce_1;
  clk_1_sg_x2031 <= clk_1;
  mult4_p_net_x1 <= din;
  edge_op_y_net_x12 <= sync;
  coeff <= register_q_net_x0;
  dout <= delay1_q_net_x0;

  concat: entity work.concat_a246e373e7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concat_y_net
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x2031,
      clk => clk_1_sg_x2031,
      clr => '0',
      rst(0) => edge_op_y_net_x12,
      op => counter_op_net
    );

  delay1: entity work.delay_d662813220
    port map (
      ce => ce_1_sg_x2031,
      clk => clk_1_sg_x2031,
      clr => '0',
      d => mult4_p_net_x1,
      q => delay1_q_net_x0
    );

  fan_delay1: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x2031,
      clk => clk_1_sg_x2031,
      clr => '0',
      d => counter_op_net,
      q => fan_delay1_q_net
    );

  fan_delay2: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x2031,
      clk => clk_1_sg_x2031,
      clr => '0',
      d => counter_op_net,
      q => fan_delay2_q_net
    );

  fan_delay3: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x2031,
      clk => clk_1_sg_x2031,
      clr => '0',
      d => counter_op_net,
      q => fan_delay3_q_net
    );

  fan_delay4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x2031,
      clk => clk_1_sg_x2031,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay4_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 72,
      init_value => b"000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x2031,
      clk => clk_1_sg_x2031,
      d => concat_y_net,
      en => "1",
      rst => "0",
      q => register_q_net_x0
    );

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom1_data_net,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom2_data_net,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom3_data_net,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom4_data_net,
      output_port => reinterpret4_output_port_net
    );

  rom1: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_b076d989b180557c",
      latency => 1
    )
    port map (
      addr => fan_delay1_q_net,
      ce => ce_1_sg_x2031,
      clk => clk_1_sg_x2031,
      en => "1",
      rst => "0",
      data => rom1_data_net
    );

  rom2: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_5d5677e988a1fc94",
      latency => 1
    )
    port map (
      addr => fan_delay2_q_net,
      ce => ce_1_sg_x2031,
      clk => clk_1_sg_x2031,
      en => "1",
      rst => "0",
      data => rom2_data_net
    );

  rom3: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_f419e81fef8db9fa",
      latency => 1
    )
    port map (
      addr => fan_delay3_q_net,
      ce => ce_1_sg_x2031,
      clk => clk_1_sg_x2031,
      en => "1",
      rst => "0",
      data => rom3_data_net
    );

  rom4: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_79609f4d77ef4f9a",
      latency => 1
    )
    port map (
      addr => fan_delay4_q_net,
      ce => ce_1_sg_x2031,
      clk => clk_1_sg_x2031,
      en => "1",
      rst => "0",
      data => rom4_data_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/pol1_in6_coeffs"

entity pol1_in6_coeffs_entity_882c3fecde is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    coeff: out std_logic_vector(71 downto 0); 
    dout: out std_logic_vector(14 downto 0)
  );
end pol1_in6_coeffs_entity_882c3fecde;

architecture structural of pol1_in6_coeffs_entity_882c3fecde is
  signal ce_1_sg_x2039: std_logic;
  signal clk_1_sg_x2039: std_logic;
  signal concat_y_net: std_logic_vector(71 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay1_q_net_x0: std_logic_vector(14 downto 0);
  signal edge_op_y_net_x13: std_logic;
  signal fan_delay1_q_net: std_logic_vector(9 downto 0);
  signal fan_delay2_q_net: std_logic_vector(9 downto 0);
  signal fan_delay3_q_net: std_logic_vector(9 downto 0);
  signal fan_delay4_q_net: std_logic_vector(9 downto 0);
  signal mult5_p_net_x1: std_logic_vector(14 downto 0);
  signal register_q_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(17 downto 0);
  signal rom1_data_net: std_logic_vector(17 downto 0);
  signal rom2_data_net: std_logic_vector(17 downto 0);
  signal rom3_data_net: std_logic_vector(17 downto 0);
  signal rom4_data_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x2039 <= ce_1;
  clk_1_sg_x2039 <= clk_1;
  mult5_p_net_x1 <= din;
  edge_op_y_net_x13 <= sync;
  coeff <= register_q_net_x0;
  dout <= delay1_q_net_x0;

  concat: entity work.concat_a246e373e7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concat_y_net
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x2039,
      clk => clk_1_sg_x2039,
      clr => '0',
      rst(0) => edge_op_y_net_x13,
      op => counter_op_net
    );

  delay1: entity work.delay_d662813220
    port map (
      ce => ce_1_sg_x2039,
      clk => clk_1_sg_x2039,
      clr => '0',
      d => mult5_p_net_x1,
      q => delay1_q_net_x0
    );

  fan_delay1: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x2039,
      clk => clk_1_sg_x2039,
      clr => '0',
      d => counter_op_net,
      q => fan_delay1_q_net
    );

  fan_delay2: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x2039,
      clk => clk_1_sg_x2039,
      clr => '0',
      d => counter_op_net,
      q => fan_delay2_q_net
    );

  fan_delay3: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x2039,
      clk => clk_1_sg_x2039,
      clr => '0',
      d => counter_op_net,
      q => fan_delay3_q_net
    );

  fan_delay4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x2039,
      clk => clk_1_sg_x2039,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay4_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 72,
      init_value => b"000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x2039,
      clk => clk_1_sg_x2039,
      d => concat_y_net,
      en => "1",
      rst => "0",
      q => register_q_net_x0
    );

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom1_data_net,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom2_data_net,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom3_data_net,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom4_data_net,
      output_port => reinterpret4_output_port_net
    );

  rom1: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_6d2cfd52c53670b3",
      latency => 1
    )
    port map (
      addr => fan_delay1_q_net,
      ce => ce_1_sg_x2039,
      clk => clk_1_sg_x2039,
      en => "1",
      rst => "0",
      data => rom1_data_net
    );

  rom2: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_5e0338ff57cbbf31",
      latency => 1
    )
    port map (
      addr => fan_delay2_q_net,
      ce => ce_1_sg_x2039,
      clk => clk_1_sg_x2039,
      en => "1",
      rst => "0",
      data => rom2_data_net
    );

  rom3: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_5baa652c5120a02c",
      latency => 1
    )
    port map (
      addr => fan_delay3_q_net,
      ce => ce_1_sg_x2039,
      clk => clk_1_sg_x2039,
      en => "1",
      rst => "0",
      data => rom3_data_net
    );

  rom4: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_11d13cd84f70eb99",
      latency => 1
    )
    port map (
      addr => fan_delay4_q_net,
      ce => ce_1_sg_x2039,
      clk => clk_1_sg_x2039,
      en => "1",
      rst => "0",
      data => rom4_data_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/pol1_in7_coeffs"

entity pol1_in7_coeffs_entity_a15d67679c is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    coeff: out std_logic_vector(71 downto 0); 
    dout: out std_logic_vector(14 downto 0)
  );
end pol1_in7_coeffs_entity_a15d67679c;

architecture structural of pol1_in7_coeffs_entity_a15d67679c is
  signal ce_1_sg_x2047: std_logic;
  signal clk_1_sg_x2047: std_logic;
  signal concat_y_net: std_logic_vector(71 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay1_q_net_x0: std_logic_vector(14 downto 0);
  signal edge_op_y_net_x14: std_logic;
  signal fan_delay1_q_net: std_logic_vector(9 downto 0);
  signal fan_delay2_q_net: std_logic_vector(9 downto 0);
  signal fan_delay3_q_net: std_logic_vector(9 downto 0);
  signal fan_delay4_q_net: std_logic_vector(9 downto 0);
  signal mult6_p_net_x1: std_logic_vector(14 downto 0);
  signal register_q_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(17 downto 0);
  signal rom1_data_net: std_logic_vector(17 downto 0);
  signal rom2_data_net: std_logic_vector(17 downto 0);
  signal rom3_data_net: std_logic_vector(17 downto 0);
  signal rom4_data_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x2047 <= ce_1;
  clk_1_sg_x2047 <= clk_1;
  mult6_p_net_x1 <= din;
  edge_op_y_net_x14 <= sync;
  coeff <= register_q_net_x0;
  dout <= delay1_q_net_x0;

  concat: entity work.concat_a246e373e7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concat_y_net
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x2047,
      clk => clk_1_sg_x2047,
      clr => '0',
      rst(0) => edge_op_y_net_x14,
      op => counter_op_net
    );

  delay1: entity work.delay_d662813220
    port map (
      ce => ce_1_sg_x2047,
      clk => clk_1_sg_x2047,
      clr => '0',
      d => mult6_p_net_x1,
      q => delay1_q_net_x0
    );

  fan_delay1: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x2047,
      clk => clk_1_sg_x2047,
      clr => '0',
      d => counter_op_net,
      q => fan_delay1_q_net
    );

  fan_delay2: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x2047,
      clk => clk_1_sg_x2047,
      clr => '0',
      d => counter_op_net,
      q => fan_delay2_q_net
    );

  fan_delay3: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x2047,
      clk => clk_1_sg_x2047,
      clr => '0',
      d => counter_op_net,
      q => fan_delay3_q_net
    );

  fan_delay4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x2047,
      clk => clk_1_sg_x2047,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay4_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 72,
      init_value => b"000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x2047,
      clk => clk_1_sg_x2047,
      d => concat_y_net,
      en => "1",
      rst => "0",
      q => register_q_net_x0
    );

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom1_data_net,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom2_data_net,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom3_data_net,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom4_data_net,
      output_port => reinterpret4_output_port_net
    );

  rom1: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_25f2c2372ab0b146",
      latency => 1
    )
    port map (
      addr => fan_delay1_q_net,
      ce => ce_1_sg_x2047,
      clk => clk_1_sg_x2047,
      en => "1",
      rst => "0",
      data => rom1_data_net
    );

  rom2: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_5fa31a00bae3d0c8",
      latency => 1
    )
    port map (
      addr => fan_delay2_q_net,
      ce => ce_1_sg_x2047,
      clk => clk_1_sg_x2047,
      en => "1",
      rst => "0",
      data => rom2_data_net
    );

  rom3: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_a29f7bcc57c74c3b",
      latency => 1
    )
    port map (
      addr => fan_delay3_q_net,
      ce => ce_1_sg_x2047,
      clk => clk_1_sg_x2047,
      en => "1",
      rst => "0",
      data => rom3_data_net
    );

  rom4: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_00770e99d0f3dff9",
      latency => 1
    )
    port map (
      addr => fan_delay4_q_net,
      ce => ce_1_sg_x2047,
      clk => clk_1_sg_x2047,
      en => "1",
      rst => "0",
      data => rom4_data_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/pol1_in8_coeffs"

entity pol1_in8_coeffs_entity_156c7de1e0 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    coeff: out std_logic_vector(71 downto 0); 
    dout: out std_logic_vector(14 downto 0)
  );
end pol1_in8_coeffs_entity_156c7de1e0;

architecture structural of pol1_in8_coeffs_entity_156c7de1e0 is
  signal ce_1_sg_x2055: std_logic;
  signal clk_1_sg_x2055: std_logic;
  signal concat_y_net: std_logic_vector(71 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay1_q_net_x0: std_logic_vector(14 downto 0);
  signal edge_op_y_net_x15: std_logic;
  signal fan_delay1_q_net: std_logic_vector(9 downto 0);
  signal fan_delay2_q_net: std_logic_vector(9 downto 0);
  signal fan_delay3_q_net: std_logic_vector(9 downto 0);
  signal fan_delay4_q_net: std_logic_vector(9 downto 0);
  signal mult7_p_net_x1: std_logic_vector(14 downto 0);
  signal register_q_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(17 downto 0);
  signal rom1_data_net: std_logic_vector(17 downto 0);
  signal rom2_data_net: std_logic_vector(17 downto 0);
  signal rom3_data_net: std_logic_vector(17 downto 0);
  signal rom4_data_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x2055 <= ce_1;
  clk_1_sg_x2055 <= clk_1;
  mult7_p_net_x1 <= din;
  edge_op_y_net_x15 <= sync;
  coeff <= register_q_net_x0;
  dout <= delay1_q_net_x0;

  concat: entity work.concat_a246e373e7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concat_y_net
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x2055,
      clk => clk_1_sg_x2055,
      clr => '0',
      rst(0) => edge_op_y_net_x15,
      op => counter_op_net
    );

  delay1: entity work.delay_d662813220
    port map (
      ce => ce_1_sg_x2055,
      clk => clk_1_sg_x2055,
      clr => '0',
      d => mult7_p_net_x1,
      q => delay1_q_net_x0
    );

  fan_delay1: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x2055,
      clk => clk_1_sg_x2055,
      clr => '0',
      d => counter_op_net,
      q => fan_delay1_q_net
    );

  fan_delay2: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x2055,
      clk => clk_1_sg_x2055,
      clr => '0',
      d => counter_op_net,
      q => fan_delay2_q_net
    );

  fan_delay3: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x2055,
      clk => clk_1_sg_x2055,
      clr => '0',
      d => counter_op_net,
      q => fan_delay3_q_net
    );

  fan_delay4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x2055,
      clk => clk_1_sg_x2055,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay4_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 72,
      init_value => b"000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x2055,
      clk => clk_1_sg_x2055,
      d => concat_y_net,
      en => "1",
      rst => "0",
      q => register_q_net_x0
    );

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom1_data_net,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom2_data_net,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom3_data_net,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom4_data_net,
      output_port => reinterpret4_output_port_net
    );

  rom1: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_853ce479ddde041c",
      latency => 1
    )
    port map (
      addr => fan_delay1_q_net,
      ce => ce_1_sg_x2055,
      clk => clk_1_sg_x2055,
      en => "1",
      rst => "0",
      data => rom1_data_net
    );

  rom2: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_ded209eb01860ee1",
      latency => 1
    )
    port map (
      addr => fan_delay2_q_net,
      ce => ce_1_sg_x2055,
      clk => clk_1_sg_x2055,
      en => "1",
      rst => "0",
      data => rom2_data_net
    );

  rom3: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_2193333e6188e9ee",
      latency => 1
    )
    port map (
      addr => fan_delay3_q_net,
      ce => ce_1_sg_x2055,
      clk => clk_1_sg_x2055,
      en => "1",
      rst => "0",
      data => rom3_data_net
    );

  rom4: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_a19310373d0c64c7",
      latency => 1
    )
    port map (
      addr => fan_delay4_q_net,
      ce => ce_1_sg_x2055,
      clk => clk_1_sg_x2055,
      en => "1",
      rst => "0",
      data => rom4_data_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real/pol1_in9_coeffs"

entity pol1_in9_coeffs_entity_a164d97ed7 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    coeff: out std_logic_vector(71 downto 0); 
    dout: out std_logic_vector(14 downto 0)
  );
end pol1_in9_coeffs_entity_a164d97ed7;

architecture structural of pol1_in9_coeffs_entity_a164d97ed7 is
  signal ce_1_sg_x2063: std_logic;
  signal clk_1_sg_x2063: std_logic;
  signal concat_y_net: std_logic_vector(71 downto 0);
  signal counter_op_net: std_logic_vector(9 downto 0);
  signal delay1_q_net_x0: std_logic_vector(14 downto 0);
  signal edge_op_y_net_x16: std_logic;
  signal fan_delay1_q_net: std_logic_vector(9 downto 0);
  signal fan_delay2_q_net: std_logic_vector(9 downto 0);
  signal fan_delay3_q_net: std_logic_vector(9 downto 0);
  signal fan_delay4_q_net: std_logic_vector(9 downto 0);
  signal mult8_p_net_x1: std_logic_vector(14 downto 0);
  signal register_q_net_x0: std_logic_vector(71 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(17 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(17 downto 0);
  signal rom1_data_net: std_logic_vector(17 downto 0);
  signal rom2_data_net: std_logic_vector(17 downto 0);
  signal rom3_data_net: std_logic_vector(17 downto 0);
  signal rom4_data_net: std_logic_vector(17 downto 0);

begin
  ce_1_sg_x2063 <= ce_1;
  clk_1_sg_x2063 <= clk_1;
  mult8_p_net_x1 <= din;
  edge_op_y_net_x16 <= sync;
  coeff <= register_q_net_x0;
  dout <= delay1_q_net_x0;

  concat: entity work.concat_a246e373e7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concat_y_net
    );

  counter: entity work.counter_9037948c69
    port map (
      ce => ce_1_sg_x2063,
      clk => clk_1_sg_x2063,
      clr => '0',
      rst(0) => edge_op_y_net_x16,
      op => counter_op_net
    );

  delay1: entity work.delay_d662813220
    port map (
      ce => ce_1_sg_x2063,
      clk => clk_1_sg_x2063,
      clr => '0',
      d => mult8_p_net_x1,
      q => delay1_q_net_x0
    );

  fan_delay1: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x2063,
      clk => clk_1_sg_x2063,
      clr => '0',
      d => counter_op_net,
      q => fan_delay1_q_net
    );

  fan_delay2: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x2063,
      clk => clk_1_sg_x2063,
      clr => '0',
      d => counter_op_net,
      q => fan_delay2_q_net
    );

  fan_delay3: entity work.delay_cf4f99539f
    port map (
      ce => ce_1_sg_x2063,
      clk => clk_1_sg_x2063,
      clr => '0',
      d => counter_op_net,
      q => fan_delay3_q_net
    );

  fan_delay4: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 10
    )
    port map (
      ce => ce_1_sg_x2063,
      clk => clk_1_sg_x2063,
      d => counter_op_net,
      en => '1',
      rst => '1',
      q => fan_delay4_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 72,
      init_value => b"000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x2063,
      clk => clk_1_sg_x2063,
      d => concat_y_net,
      en => "1",
      rst => "0",
      q => register_q_net_x0
    );

  reinterpret1: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom1_data_net,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom2_data_net,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom3_data_net,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_580feec131
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => rom4_data_net,
      output_port => reinterpret4_output_port_net
    );

  rom1: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_f04fa80dbef694af",
      latency => 1
    )
    port map (
      addr => fan_delay1_q_net,
      ce => ce_1_sg_x2063,
      clk => clk_1_sg_x2063,
      en => "1",
      rst => "0",
      data => rom1_data_net
    );

  rom2: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_25ac2643f257572c",
      latency => 1
    )
    port map (
      addr => fan_delay2_q_net,
      ce => ce_1_sg_x2063,
      clk => clk_1_sg_x2063,
      en => "1",
      rst => "0",
      data => rom2_data_net
    );

  rom3: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_59bb78965fc20a49",
      latency => 1
    )
    port map (
      addr => fan_delay3_q_net,
      ce => ce_1_sg_x2063,
      clk => clk_1_sg_x2063,
      en => "1",
      rst => "0",
      data => rom3_data_net
    );

  rom4: entity work.xlsprom_he6_cres_correlator
    generic map (
      c_address_width => 10,
      c_width => 18,
      core_name0 => "bmg_72_5861d9696eba38ff",
      latency => 1
    )
    port map (
      addr => fan_delay4_q_net,
      ce => ce_1_sg_x2063,
      clk => clk_1_sg_x2063,
      en => "1",
      rst => "0",
      data => rom4_data_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pfb_fir_real"

entity pfb_fir_real_entity_ad1e36666e is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    pol1_in1: in std_logic_vector(14 downto 0); 
    pol1_in10: in std_logic_vector(14 downto 0); 
    pol1_in11: in std_logic_vector(14 downto 0); 
    pol1_in12: in std_logic_vector(14 downto 0); 
    pol1_in13: in std_logic_vector(14 downto 0); 
    pol1_in14: in std_logic_vector(14 downto 0); 
    pol1_in15: in std_logic_vector(14 downto 0); 
    pol1_in16: in std_logic_vector(14 downto 0); 
    pol1_in2: in std_logic_vector(14 downto 0); 
    pol1_in3: in std_logic_vector(14 downto 0); 
    pol1_in4: in std_logic_vector(14 downto 0); 
    pol1_in5: in std_logic_vector(14 downto 0); 
    pol1_in6: in std_logic_vector(14 downto 0); 
    pol1_in7: in std_logic_vector(14 downto 0); 
    pol1_in8: in std_logic_vector(14 downto 0); 
    pol1_in9: in std_logic_vector(14 downto 0); 
    sync: in std_logic; 
    pol1_out1: out std_logic_vector(17 downto 0); 
    pol1_out10: out std_logic_vector(17 downto 0); 
    pol1_out11: out std_logic_vector(17 downto 0); 
    pol1_out12: out std_logic_vector(17 downto 0); 
    pol1_out13: out std_logic_vector(17 downto 0); 
    pol1_out14: out std_logic_vector(17 downto 0); 
    pol1_out15: out std_logic_vector(17 downto 0); 
    pol1_out16: out std_logic_vector(17 downto 0); 
    pol1_out2: out std_logic_vector(17 downto 0); 
    pol1_out3: out std_logic_vector(17 downto 0); 
    pol1_out4: out std_logic_vector(17 downto 0); 
    pol1_out5: out std_logic_vector(17 downto 0); 
    pol1_out6: out std_logic_vector(17 downto 0); 
    pol1_out7: out std_logic_vector(17 downto 0); 
    pol1_out8: out std_logic_vector(17 downto 0); 
    pol1_out9: out std_logic_vector(17 downto 0); 
    sync_out: out std_logic
  );
end pfb_fir_real_entity_ad1e36666e;

architecture structural of pfb_fir_real_entity_ad1e36666e is
  signal addr3_s_net_x0: std_logic_vector(32 downto 0);
  signal addr3_s_net_x1: std_logic_vector(32 downto 0);
  signal addr3_s_net_x10: std_logic_vector(32 downto 0);
  signal addr3_s_net_x11: std_logic_vector(32 downto 0);
  signal addr3_s_net_x12: std_logic_vector(32 downto 0);
  signal addr3_s_net_x13: std_logic_vector(32 downto 0);
  signal addr3_s_net_x14: std_logic_vector(32 downto 0);
  signal addr3_s_net_x15: std_logic_vector(32 downto 0);
  signal addr3_s_net_x2: std_logic_vector(32 downto 0);
  signal addr3_s_net_x3: std_logic_vector(32 downto 0);
  signal addr3_s_net_x4: std_logic_vector(32 downto 0);
  signal addr3_s_net_x5: std_logic_vector(32 downto 0);
  signal addr3_s_net_x6: std_logic_vector(32 downto 0);
  signal addr3_s_net_x7: std_logic_vector(32 downto 0);
  signal addr3_s_net_x8: std_logic_vector(32 downto 0);
  signal addr3_s_net_x9: std_logic_vector(32 downto 0);
  signal ce_1_sg_x2071: std_logic;
  signal clk_1_sg_x2071: std_logic;
  signal convert_1_10_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_11_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_12_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_13_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_14_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_15_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_16_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_1_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_2_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_3_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_4_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_5_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_6_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_7_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_8_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_9_dout_net_x0: std_logic_vector(17 downto 0);
  signal delay1_q_net_x0: std_logic;
  signal delay1_q_net_x10: std_logic_vector(14 downto 0);
  signal delay1_q_net_x11: std_logic_vector(14 downto 0);
  signal delay1_q_net_x12: std_logic_vector(14 downto 0);
  signal delay1_q_net_x13: std_logic_vector(14 downto 0);
  signal delay1_q_net_x14: std_logic_vector(14 downto 0);
  signal delay1_q_net_x15: std_logic_vector(14 downto 0);
  signal delay1_q_net_x16: std_logic_vector(14 downto 0);
  signal delay1_q_net_x17: std_logic_vector(14 downto 0);
  signal delay1_q_net_x2: std_logic_vector(14 downto 0);
  signal delay1_q_net_x3: std_logic_vector(14 downto 0);
  signal delay1_q_net_x4: std_logic_vector(14 downto 0);
  signal delay1_q_net_x5: std_logic_vector(14 downto 0);
  signal delay1_q_net_x6: std_logic_vector(14 downto 0);
  signal delay1_q_net_x7: std_logic_vector(14 downto 0);
  signal delay1_q_net_x8: std_logic_vector(14 downto 0);
  signal delay1_q_net_x9: std_logic_vector(14 downto 0);
  signal delay_q_net_x1: std_logic;
  signal delay_q_net_x2: std_logic;
  signal edge_op_y_net_x17: std_logic;
  signal mult10_p_net_x2: std_logic_vector(14 downto 0);
  signal mult11_p_net_x2: std_logic_vector(14 downto 0);
  signal mult12_p_net_x2: std_logic_vector(14 downto 0);
  signal mult13_p_net_x2: std_logic_vector(14 downto 0);
  signal mult14_p_net_x2: std_logic_vector(14 downto 0);
  signal mult15_p_net_x2: std_logic_vector(14 downto 0);
  signal mult1_p_net_x2: std_logic_vector(14 downto 0);
  signal mult2_p_net_x2: std_logic_vector(14 downto 0);
  signal mult3_p_net_x2: std_logic_vector(14 downto 0);
  signal mult4_p_net_x2: std_logic_vector(14 downto 0);
  signal mult5_p_net_x2: std_logic_vector(14 downto 0);
  signal mult6_p_net_x2: std_logic_vector(14 downto 0);
  signal mult7_p_net_x2: std_logic_vector(14 downto 0);
  signal mult8_p_net_x2: std_logic_vector(14 downto 0);
  signal mult9_p_net_x2: std_logic_vector(14 downto 0);
  signal mult_p_net_x10: std_logic_vector(32 downto 0);
  signal mult_p_net_x11: std_logic_vector(32 downto 0);
  signal mult_p_net_x12: std_logic_vector(32 downto 0);
  signal mult_p_net_x13: std_logic_vector(32 downto 0);
  signal mult_p_net_x14: std_logic_vector(32 downto 0);
  signal mult_p_net_x15: std_logic_vector(32 downto 0);
  signal mult_p_net_x16: std_logic_vector(32 downto 0);
  signal mult_p_net_x17: std_logic_vector(32 downto 0);
  signal mult_p_net_x18: std_logic_vector(32 downto 0);
  signal mult_p_net_x19: std_logic_vector(32 downto 0);
  signal mult_p_net_x20: std_logic_vector(32 downto 0);
  signal mult_p_net_x21: std_logic_vector(32 downto 0);
  signal mult_p_net_x22: std_logic_vector(32 downto 0);
  signal mult_p_net_x23: std_logic_vector(32 downto 0);
  signal mult_p_net_x24: std_logic_vector(32 downto 0);
  signal mult_p_net_x25: std_logic_vector(32 downto 0);
  signal mult_p_net_x26: std_logic_vector(32 downto 0);
  signal mult_p_net_x27: std_logic_vector(32 downto 0);
  signal mult_p_net_x28: std_logic_vector(32 downto 0);
  signal mult_p_net_x29: std_logic_vector(32 downto 0);
  signal mult_p_net_x30: std_logic_vector(32 downto 0);
  signal mult_p_net_x31: std_logic_vector(32 downto 0);
  signal mult_p_net_x32: std_logic_vector(32 downto 0);
  signal mult_p_net_x33: std_logic_vector(32 downto 0);
  signal mult_p_net_x34: std_logic_vector(32 downto 0);
  signal mult_p_net_x35: std_logic_vector(32 downto 0);
  signal mult_p_net_x36: std_logic_vector(32 downto 0);
  signal mult_p_net_x37: std_logic_vector(32 downto 0);
  signal mult_p_net_x38: std_logic_vector(32 downto 0);
  signal mult_p_net_x39: std_logic_vector(32 downto 0);
  signal mult_p_net_x4: std_logic_vector(32 downto 0);
  signal mult_p_net_x40: std_logic_vector(32 downto 0);
  signal mult_p_net_x41: std_logic_vector(32 downto 0);
  signal mult_p_net_x42: std_logic_vector(32 downto 0);
  signal mult_p_net_x43: std_logic_vector(32 downto 0);
  signal mult_p_net_x44: std_logic_vector(32 downto 0);
  signal mult_p_net_x45: std_logic_vector(32 downto 0);
  signal mult_p_net_x46: std_logic_vector(32 downto 0);
  signal mult_p_net_x47: std_logic_vector(32 downto 0);
  signal mult_p_net_x48: std_logic_vector(32 downto 0);
  signal mult_p_net_x49: std_logic_vector(32 downto 0);
  signal mult_p_net_x5: std_logic_vector(32 downto 0);
  signal mult_p_net_x50: std_logic_vector(32 downto 0);
  signal mult_p_net_x51: std_logic_vector(32 downto 0);
  signal mult_p_net_x52: std_logic_vector(32 downto 0);
  signal mult_p_net_x53: std_logic_vector(32 downto 0);
  signal mult_p_net_x54: std_logic_vector(32 downto 0);
  signal mult_p_net_x55: std_logic_vector(32 downto 0);
  signal mult_p_net_x56: std_logic_vector(32 downto 0);
  signal mult_p_net_x57: std_logic_vector(32 downto 0);
  signal mult_p_net_x58: std_logic_vector(32 downto 0);
  signal mult_p_net_x59: std_logic_vector(32 downto 0);
  signal mult_p_net_x6: std_logic_vector(32 downto 0);
  signal mult_p_net_x60: std_logic_vector(32 downto 0);
  signal mult_p_net_x61: std_logic_vector(32 downto 0);
  signal mult_p_net_x62: std_logic_vector(32 downto 0);
  signal mult_p_net_x63: std_logic_vector(32 downto 0);
  signal mult_p_net_x64: std_logic_vector(32 downto 0);
  signal mult_p_net_x65: std_logic_vector(32 downto 0);
  signal mult_p_net_x66: std_logic_vector(32 downto 0);
  signal mult_p_net_x67: std_logic_vector(32 downto 0);
  signal mult_p_net_x68: std_logic_vector(14 downto 0);
  signal mult_p_net_x7: std_logic_vector(32 downto 0);
  signal mult_p_net_x8: std_logic_vector(32 downto 0);
  signal mult_p_net_x9: std_logic_vector(32 downto 0);
  signal mux_y_net_x2: std_logic;
  signal mux_y_net_x3: std_logic;
  signal mux_y_net_x6: std_logic;
  signal ram_data_out_net_x10: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x11: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x12: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x13: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x14: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x15: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x16: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x17: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x18: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x19: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x2: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x20: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x21: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x22: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x23: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x24: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x25: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x26: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x27: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x28: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x29: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x3: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x30: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x31: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x32: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x33: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x34: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x35: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x36: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x37: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x38: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x39: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x4: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x40: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x41: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x42: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x43: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x44: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x45: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x46: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x47: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x48: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x49: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x50: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x6: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x7: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x8: std_logic_vector(14 downto 0);
  signal ram_data_out_net_x9: std_logic_vector(14 downto 0);
  signal register_q_net_x1: std_logic_vector(71 downto 0);
  signal register_q_net_x10: std_logic_vector(71 downto 0);
  signal register_q_net_x11: std_logic_vector(71 downto 0);
  signal register_q_net_x12: std_logic_vector(71 downto 0);
  signal register_q_net_x13: std_logic_vector(71 downto 0);
  signal register_q_net_x14: std_logic_vector(71 downto 0);
  signal register_q_net_x15: std_logic_vector(71 downto 0);
  signal register_q_net_x16: std_logic_vector(71 downto 0);
  signal register_q_net_x2: std_logic_vector(71 downto 0);
  signal register_q_net_x3: std_logic_vector(71 downto 0);
  signal register_q_net_x4: std_logic_vector(71 downto 0);
  signal register_q_net_x5: std_logic_vector(71 downto 0);
  signal register_q_net_x6: std_logic_vector(71 downto 0);
  signal register_q_net_x7: std_logic_vector(71 downto 0);
  signal register_q_net_x8: std_logic_vector(71 downto 0);
  signal register_q_net_x9: std_logic_vector(71 downto 0);
  signal scale_1_10_op_net: std_logic_vector(32 downto 0);
  signal scale_1_11_op_net: std_logic_vector(32 downto 0);
  signal scale_1_12_op_net: std_logic_vector(32 downto 0);
  signal scale_1_13_op_net: std_logic_vector(32 downto 0);
  signal scale_1_14_op_net: std_logic_vector(32 downto 0);
  signal scale_1_15_op_net: std_logic_vector(32 downto 0);
  signal scale_1_16_op_net: std_logic_vector(32 downto 0);
  signal scale_1_1_op_net: std_logic_vector(32 downto 0);
  signal scale_1_2_op_net: std_logic_vector(32 downto 0);
  signal scale_1_3_op_net: std_logic_vector(32 downto 0);
  signal scale_1_4_op_net: std_logic_vector(32 downto 0);
  signal scale_1_5_op_net: std_logic_vector(32 downto 0);
  signal scale_1_6_op_net: std_logic_vector(32 downto 0);
  signal scale_1_7_op_net: std_logic_vector(32 downto 0);
  signal scale_1_8_op_net: std_logic_vector(32 downto 0);
  signal scale_1_9_op_net: std_logic_vector(32 downto 0);
  signal slice1_y_net_x1: std_logic_vector(53 downto 0);
  signal slice1_y_net_x10: std_logic_vector(17 downto 0);
  signal slice1_y_net_x11: std_logic_vector(53 downto 0);
  signal slice1_y_net_x12: std_logic_vector(35 downto 0);
  signal slice1_y_net_x13: std_logic_vector(17 downto 0);
  signal slice1_y_net_x14: std_logic_vector(53 downto 0);
  signal slice1_y_net_x15: std_logic_vector(35 downto 0);
  signal slice1_y_net_x16: std_logic_vector(17 downto 0);
  signal slice1_y_net_x17: std_logic_vector(53 downto 0);
  signal slice1_y_net_x18: std_logic_vector(35 downto 0);
  signal slice1_y_net_x19: std_logic_vector(17 downto 0);
  signal slice1_y_net_x20: std_logic_vector(53 downto 0);
  signal slice1_y_net_x21: std_logic_vector(35 downto 0);
  signal slice1_y_net_x22: std_logic_vector(17 downto 0);
  signal slice1_y_net_x23: std_logic_vector(53 downto 0);
  signal slice1_y_net_x24: std_logic_vector(35 downto 0);
  signal slice1_y_net_x25: std_logic_vector(17 downto 0);
  signal slice1_y_net_x26: std_logic_vector(53 downto 0);
  signal slice1_y_net_x27: std_logic_vector(35 downto 0);
  signal slice1_y_net_x28: std_logic_vector(17 downto 0);
  signal slice1_y_net_x29: std_logic_vector(53 downto 0);
  signal slice1_y_net_x3: std_logic_vector(35 downto 0);
  signal slice1_y_net_x30: std_logic_vector(35 downto 0);
  signal slice1_y_net_x31: std_logic_vector(17 downto 0);
  signal slice1_y_net_x32: std_logic_vector(53 downto 0);
  signal slice1_y_net_x33: std_logic_vector(35 downto 0);
  signal slice1_y_net_x34: std_logic_vector(17 downto 0);
  signal slice1_y_net_x35: std_logic_vector(53 downto 0);
  signal slice1_y_net_x36: std_logic_vector(35 downto 0);
  signal slice1_y_net_x37: std_logic_vector(17 downto 0);
  signal slice1_y_net_x38: std_logic_vector(53 downto 0);
  signal slice1_y_net_x39: std_logic_vector(35 downto 0);
  signal slice1_y_net_x4: std_logic_vector(17 downto 0);
  signal slice1_y_net_x40: std_logic_vector(17 downto 0);
  signal slice1_y_net_x41: std_logic_vector(53 downto 0);
  signal slice1_y_net_x42: std_logic_vector(35 downto 0);
  signal slice1_y_net_x43: std_logic_vector(17 downto 0);
  signal slice1_y_net_x44: std_logic_vector(53 downto 0);
  signal slice1_y_net_x45: std_logic_vector(35 downto 0);
  signal slice1_y_net_x46: std_logic_vector(17 downto 0);
  signal slice1_y_net_x47: std_logic_vector(53 downto 0);
  signal slice1_y_net_x48: std_logic_vector(35 downto 0);
  signal slice1_y_net_x49: std_logic_vector(17 downto 0);
  signal slice1_y_net_x5: std_logic_vector(53 downto 0);
  signal slice1_y_net_x6: std_logic_vector(35 downto 0);
  signal slice1_y_net_x7: std_logic_vector(17 downto 0);
  signal slice1_y_net_x8: std_logic_vector(53 downto 0);
  signal slice1_y_net_x9: std_logic_vector(35 downto 0);
  signal sync_delay_q_net_x0: std_logic;

begin
  ce_1_sg_x2071 <= ce_1;
  clk_1_sg_x2071 <= clk_1;
  mult_p_net_x68 <= pol1_in1;
  mult9_p_net_x2 <= pol1_in10;
  mult10_p_net_x2 <= pol1_in11;
  mult11_p_net_x2 <= pol1_in12;
  mult12_p_net_x2 <= pol1_in13;
  mult13_p_net_x2 <= pol1_in14;
  mult14_p_net_x2 <= pol1_in15;
  mult15_p_net_x2 <= pol1_in16;
  mult1_p_net_x2 <= pol1_in2;
  mult2_p_net_x2 <= pol1_in3;
  mult3_p_net_x2 <= pol1_in4;
  mult4_p_net_x2 <= pol1_in5;
  mult5_p_net_x2 <= pol1_in6;
  mult6_p_net_x2 <= pol1_in7;
  mult7_p_net_x2 <= pol1_in8;
  mult8_p_net_x2 <= pol1_in9;
  edge_op_y_net_x17 <= sync;
  pol1_out1 <= convert_1_1_dout_net_x0;
  pol1_out10 <= convert_1_10_dout_net_x0;
  pol1_out11 <= convert_1_11_dout_net_x0;
  pol1_out12 <= convert_1_12_dout_net_x0;
  pol1_out13 <= convert_1_13_dout_net_x0;
  pol1_out14 <= convert_1_14_dout_net_x0;
  pol1_out15 <= convert_1_15_dout_net_x0;
  pol1_out16 <= convert_1_16_dout_net_x0;
  pol1_out2 <= convert_1_2_dout_net_x0;
  pol1_out3 <= convert_1_3_dout_net_x0;
  pol1_out4 <= convert_1_4_dout_net_x0;
  pol1_out5 <= convert_1_5_dout_net_x0;
  pol1_out6 <= convert_1_6_dout_net_x0;
  pol1_out7 <= convert_1_7_dout_net_x0;
  pol1_out8 <= convert_1_8_dout_net_x0;
  pol1_out9 <= convert_1_9_dout_net_x0;
  sync_out <= delay1_q_net_x0;

  adder_1_10_81eceff3c4: entity work.adder_1_10_entity_81eceff3c4
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din1 => mult_p_net_x4,
      din2 => mult_p_net_x6,
      din3 => mult_p_net_x7,
      din4 => mult_p_net_x5,
      dout => addr3_s_net_x1
    );

  adder_1_11_4a972ee2ec: entity work.adder_1_10_entity_81eceff3c4
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din1 => mult_p_net_x8,
      din2 => mult_p_net_x10,
      din3 => mult_p_net_x11,
      din4 => mult_p_net_x9,
      dout => addr3_s_net_x2
    );

  adder_1_12_4f2bbdb2f3: entity work.adder_1_10_entity_81eceff3c4
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din1 => mult_p_net_x12,
      din2 => mult_p_net_x14,
      din3 => mult_p_net_x15,
      din4 => mult_p_net_x13,
      dout => addr3_s_net_x3
    );

  adder_1_13_bb0806b49a: entity work.adder_1_10_entity_81eceff3c4
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din1 => mult_p_net_x16,
      din2 => mult_p_net_x18,
      din3 => mult_p_net_x19,
      din4 => mult_p_net_x17,
      dout => addr3_s_net_x4
    );

  adder_1_14_005b29b012: entity work.adder_1_10_entity_81eceff3c4
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din1 => mult_p_net_x20,
      din2 => mult_p_net_x22,
      din3 => mult_p_net_x23,
      din4 => mult_p_net_x21,
      dout => addr3_s_net_x5
    );

  adder_1_15_5a7717f65b: entity work.adder_1_10_entity_81eceff3c4
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din1 => mult_p_net_x24,
      din2 => mult_p_net_x26,
      din3 => mult_p_net_x27,
      din4 => mult_p_net_x25,
      dout => addr3_s_net_x6
    );

  adder_1_16_0bbcf1c2b0: entity work.adder_1_10_entity_81eceff3c4
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din1 => mult_p_net_x28,
      din2 => mult_p_net_x30,
      din3 => mult_p_net_x31,
      din4 => mult_p_net_x29,
      dout => addr3_s_net_x7
    );

  adder_1_1_07bb522090: entity work.adder_1_1_entity_07bb522090
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din1 => mult_p_net_x32,
      din2 => mult_p_net_x34,
      din3 => mult_p_net_x35,
      din4 => mult_p_net_x33,
      sync => delay_q_net_x1,
      dout => addr3_s_net_x0,
      sync_out => sync_delay_q_net_x0
    );

  adder_1_2_1bced19387: entity work.adder_1_10_entity_81eceff3c4
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din1 => mult_p_net_x36,
      din2 => mult_p_net_x38,
      din3 => mult_p_net_x39,
      din4 => mult_p_net_x37,
      dout => addr3_s_net_x8
    );

  adder_1_3_1f7f7fa8b9: entity work.adder_1_10_entity_81eceff3c4
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din1 => mult_p_net_x40,
      din2 => mult_p_net_x42,
      din3 => mult_p_net_x43,
      din4 => mult_p_net_x41,
      dout => addr3_s_net_x9
    );

  adder_1_4_028206b0c9: entity work.adder_1_10_entity_81eceff3c4
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din1 => mult_p_net_x44,
      din2 => mult_p_net_x46,
      din3 => mult_p_net_x47,
      din4 => mult_p_net_x45,
      dout => addr3_s_net_x10
    );

  adder_1_5_8ed4f16732: entity work.adder_1_10_entity_81eceff3c4
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din1 => mult_p_net_x48,
      din2 => mult_p_net_x50,
      din3 => mult_p_net_x51,
      din4 => mult_p_net_x49,
      dout => addr3_s_net_x11
    );

  adder_1_6_834004b541: entity work.adder_1_10_entity_81eceff3c4
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din1 => mult_p_net_x52,
      din2 => mult_p_net_x54,
      din3 => mult_p_net_x55,
      din4 => mult_p_net_x53,
      dout => addr3_s_net_x12
    );

  adder_1_7_2739925f3e: entity work.adder_1_10_entity_81eceff3c4
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din1 => mult_p_net_x56,
      din2 => mult_p_net_x58,
      din3 => mult_p_net_x59,
      din4 => mult_p_net_x57,
      dout => addr3_s_net_x13
    );

  adder_1_8_1603d97f38: entity work.adder_1_10_entity_81eceff3c4
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din1 => mult_p_net_x60,
      din2 => mult_p_net_x62,
      din3 => mult_p_net_x63,
      din4 => mult_p_net_x61,
      dout => addr3_s_net_x14
    );

  adder_1_9_9957858c8f: entity work.adder_1_10_entity_81eceff3c4
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din1 => mult_p_net_x64,
      din2 => mult_p_net_x66,
      din3 => mult_p_net_x67,
      din4 => mult_p_net_x65,
      dout => addr3_s_net_x15
    );

  convert_1_1: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 32,
      din_width => 33,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x2071,
      clk => clk_1_sg_x2071,
      clr => '0',
      din => scale_1_1_op_net,
      en => "1",
      dout => convert_1_1_dout_net_x0
    );

  convert_1_10: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 32,
      din_width => 33,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x2071,
      clk => clk_1_sg_x2071,
      clr => '0',
      din => scale_1_10_op_net,
      en => "1",
      dout => convert_1_10_dout_net_x0
    );

  convert_1_11: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 32,
      din_width => 33,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x2071,
      clk => clk_1_sg_x2071,
      clr => '0',
      din => scale_1_11_op_net,
      en => "1",
      dout => convert_1_11_dout_net_x0
    );

  convert_1_12: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 32,
      din_width => 33,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x2071,
      clk => clk_1_sg_x2071,
      clr => '0',
      din => scale_1_12_op_net,
      en => "1",
      dout => convert_1_12_dout_net_x0
    );

  convert_1_13: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 32,
      din_width => 33,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x2071,
      clk => clk_1_sg_x2071,
      clr => '0',
      din => scale_1_13_op_net,
      en => "1",
      dout => convert_1_13_dout_net_x0
    );

  convert_1_14: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 32,
      din_width => 33,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x2071,
      clk => clk_1_sg_x2071,
      clr => '0',
      din => scale_1_14_op_net,
      en => "1",
      dout => convert_1_14_dout_net_x0
    );

  convert_1_15: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 32,
      din_width => 33,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x2071,
      clk => clk_1_sg_x2071,
      clr => '0',
      din => scale_1_15_op_net,
      en => "1",
      dout => convert_1_15_dout_net_x0
    );

  convert_1_16: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 32,
      din_width => 33,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x2071,
      clk => clk_1_sg_x2071,
      clr => '0',
      din => scale_1_16_op_net,
      en => "1",
      dout => convert_1_16_dout_net_x0
    );

  convert_1_2: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 32,
      din_width => 33,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x2071,
      clk => clk_1_sg_x2071,
      clr => '0',
      din => scale_1_2_op_net,
      en => "1",
      dout => convert_1_2_dout_net_x0
    );

  convert_1_3: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 32,
      din_width => 33,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x2071,
      clk => clk_1_sg_x2071,
      clr => '0',
      din => scale_1_3_op_net,
      en => "1",
      dout => convert_1_3_dout_net_x0
    );

  convert_1_4: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 32,
      din_width => 33,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x2071,
      clk => clk_1_sg_x2071,
      clr => '0',
      din => scale_1_4_op_net,
      en => "1",
      dout => convert_1_4_dout_net_x0
    );

  convert_1_5: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 32,
      din_width => 33,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x2071,
      clk => clk_1_sg_x2071,
      clr => '0',
      din => scale_1_5_op_net,
      en => "1",
      dout => convert_1_5_dout_net_x0
    );

  convert_1_6: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 32,
      din_width => 33,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x2071,
      clk => clk_1_sg_x2071,
      clr => '0',
      din => scale_1_6_op_net,
      en => "1",
      dout => convert_1_6_dout_net_x0
    );

  convert_1_7: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 32,
      din_width => 33,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x2071,
      clk => clk_1_sg_x2071,
      clr => '0',
      din => scale_1_7_op_net,
      en => "1",
      dout => convert_1_7_dout_net_x0
    );

  convert_1_8: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 32,
      din_width => 33,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x2071,
      clk => clk_1_sg_x2071,
      clr => '0',
      din => scale_1_8_op_net,
      en => "1",
      dout => convert_1_8_dout_net_x0
    );

  convert_1_9: entity work.xlconvert_pipeline
    generic map (
      bool_conversion => 0,
      din_arith => 2,
      din_bin_pt => 32,
      din_width => 33,
      dout_arith => 2,
      dout_bin_pt => 17,
      dout_width => 18,
      latency => 1,
      overflow => xlWrap,
      quantization => xlRoundBanker
    )
    port map (
      ce => ce_1_sg_x2071,
      clk => clk_1_sg_x2071,
      clr => '0',
      din => scale_1_9_op_net,
      en => "1",
      dout => convert_1_9_dout_net_x0
    );

  delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x2071,
      clk => clk_1_sg_x2071,
      d(0) => sync_delay_q_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay1_q_net_x0
    );

  pol1_in10_coeffs_2fa3a80c00: entity work.pol1_in10_coeffs_entity_2fa3a80c00
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din => mult9_p_net_x2,
      sync => edge_op_y_net_x17,
      coeff => register_q_net_x1,
      dout => delay1_q_net_x2
    );

  pol1_in10_first_tap_f208923ed8: entity work.pol1_in10_first_tap_entity_f208923ed8
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeffs => register_q_net_x1,
      din => delay1_q_net_x2,
      coeff_out => slice1_y_net_x1,
      dout => ram_data_out_net_x3,
      taps_out => mult_p_net_x4
    );

  pol1_in10_last_tap_dcc2b2dd1c: entity work.pol1_in10_last_tap_entity_dcc2b2dd1c
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x4,
      din => ram_data_out_net_x2,
      tap_out => mult_p_net_x5
    );

  pol1_in10_tap2_f04386d359: entity work.pol1_in10_tap2_entity_f04386d359
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x1,
      din => ram_data_out_net_x3,
      coeff_out => slice1_y_net_x3,
      dout => ram_data_out_net_x6,
      taps_out => mult_p_net_x6
    );

  pol1_in10_tap3_981edca22f: entity work.pol1_in10_tap3_entity_981edca22f
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x3,
      din => ram_data_out_net_x6,
      coeff_out => slice1_y_net_x4,
      dout => ram_data_out_net_x2,
      taps_out => mult_p_net_x7
    );

  pol1_in11_coeffs_f1f2261462: entity work.pol1_in11_coeffs_entity_f1f2261462
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din => mult10_p_net_x2,
      sync => edge_op_y_net_x17,
      coeff => register_q_net_x2,
      dout => delay1_q_net_x3
    );

  pol1_in11_first_tap_2b6e5decb4: entity work.pol1_in10_first_tap_entity_f208923ed8
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeffs => register_q_net_x2,
      din => delay1_q_net_x3,
      coeff_out => slice1_y_net_x5,
      dout => ram_data_out_net_x7,
      taps_out => mult_p_net_x8
    );

  pol1_in11_last_tap_a0052dfff6: entity work.pol1_in10_last_tap_entity_dcc2b2dd1c
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x7,
      din => ram_data_out_net_x4,
      tap_out => mult_p_net_x9
    );

  pol1_in11_tap2_c31b72e0a2: entity work.pol1_in10_tap2_entity_f04386d359
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x5,
      din => ram_data_out_net_x7,
      coeff_out => slice1_y_net_x6,
      dout => ram_data_out_net_x8,
      taps_out => mult_p_net_x10
    );

  pol1_in11_tap3_b1b28138c6: entity work.pol1_in10_tap3_entity_981edca22f
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x6,
      din => ram_data_out_net_x8,
      coeff_out => slice1_y_net_x7,
      dout => ram_data_out_net_x4,
      taps_out => mult_p_net_x11
    );

  pol1_in12_coeffs_3fc7bb30e0: entity work.pol1_in12_coeffs_entity_3fc7bb30e0
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din => mult11_p_net_x2,
      sync => edge_op_y_net_x17,
      coeff => register_q_net_x3,
      dout => delay1_q_net_x4
    );

  pol1_in12_first_tap_7d53d438a5: entity work.pol1_in10_first_tap_entity_f208923ed8
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeffs => register_q_net_x3,
      din => delay1_q_net_x4,
      coeff_out => slice1_y_net_x8,
      dout => ram_data_out_net_x9,
      taps_out => mult_p_net_x12
    );

  pol1_in12_last_tap_3586b9ce4f: entity work.pol1_in10_last_tap_entity_dcc2b2dd1c
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x10,
      din => ram_data_out_net_x11,
      tap_out => mult_p_net_x13
    );

  pol1_in12_tap2_82a426e60f: entity work.pol1_in10_tap2_entity_f04386d359
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x8,
      din => ram_data_out_net_x9,
      coeff_out => slice1_y_net_x9,
      dout => ram_data_out_net_x10,
      taps_out => mult_p_net_x14
    );

  pol1_in12_tap3_9c0f6db3aa: entity work.pol1_in10_tap3_entity_981edca22f
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x9,
      din => ram_data_out_net_x10,
      coeff_out => slice1_y_net_x10,
      dout => ram_data_out_net_x11,
      taps_out => mult_p_net_x15
    );

  pol1_in13_coeffs_a43a8b8542: entity work.pol1_in13_coeffs_entity_a43a8b8542
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din => mult12_p_net_x2,
      sync => edge_op_y_net_x17,
      coeff => register_q_net_x4,
      dout => delay1_q_net_x5
    );

  pol1_in13_first_tap_1620d5a87a: entity work.pol1_in10_first_tap_entity_f208923ed8
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeffs => register_q_net_x4,
      din => delay1_q_net_x5,
      coeff_out => slice1_y_net_x11,
      dout => ram_data_out_net_x12,
      taps_out => mult_p_net_x16
    );

  pol1_in13_last_tap_21702d6153: entity work.pol1_in10_last_tap_entity_dcc2b2dd1c
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x13,
      din => ram_data_out_net_x14,
      tap_out => mult_p_net_x17
    );

  pol1_in13_tap2_7b796773fe: entity work.pol1_in10_tap2_entity_f04386d359
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x11,
      din => ram_data_out_net_x12,
      coeff_out => slice1_y_net_x12,
      dout => ram_data_out_net_x13,
      taps_out => mult_p_net_x18
    );

  pol1_in13_tap3_fac65adb76: entity work.pol1_in10_tap3_entity_981edca22f
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x12,
      din => ram_data_out_net_x13,
      coeff_out => slice1_y_net_x13,
      dout => ram_data_out_net_x14,
      taps_out => mult_p_net_x19
    );

  pol1_in14_coeffs_cfc40cd967: entity work.pol1_in14_coeffs_entity_cfc40cd967
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din => mult13_p_net_x2,
      sync => edge_op_y_net_x17,
      coeff => register_q_net_x5,
      dout => delay1_q_net_x6
    );

  pol1_in14_first_tap_7b0bc169ee: entity work.pol1_in10_first_tap_entity_f208923ed8
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeffs => register_q_net_x5,
      din => delay1_q_net_x6,
      coeff_out => slice1_y_net_x14,
      dout => ram_data_out_net_x15,
      taps_out => mult_p_net_x20
    );

  pol1_in14_last_tap_5bdcb4226a: entity work.pol1_in10_last_tap_entity_dcc2b2dd1c
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x16,
      din => ram_data_out_net_x17,
      tap_out => mult_p_net_x21
    );

  pol1_in14_tap2_263614269f: entity work.pol1_in10_tap2_entity_f04386d359
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x14,
      din => ram_data_out_net_x15,
      coeff_out => slice1_y_net_x15,
      dout => ram_data_out_net_x16,
      taps_out => mult_p_net_x22
    );

  pol1_in14_tap3_59880c9f92: entity work.pol1_in10_tap3_entity_981edca22f
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x15,
      din => ram_data_out_net_x16,
      coeff_out => slice1_y_net_x16,
      dout => ram_data_out_net_x17,
      taps_out => mult_p_net_x23
    );

  pol1_in15_coeffs_faa4480193: entity work.pol1_in15_coeffs_entity_faa4480193
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din => mult14_p_net_x2,
      sync => edge_op_y_net_x17,
      coeff => register_q_net_x6,
      dout => delay1_q_net_x7
    );

  pol1_in15_first_tap_1ab349a6ba: entity work.pol1_in10_first_tap_entity_f208923ed8
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeffs => register_q_net_x6,
      din => delay1_q_net_x7,
      coeff_out => slice1_y_net_x17,
      dout => ram_data_out_net_x18,
      taps_out => mult_p_net_x24
    );

  pol1_in15_last_tap_90303a12f2: entity work.pol1_in10_last_tap_entity_dcc2b2dd1c
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x19,
      din => ram_data_out_net_x20,
      tap_out => mult_p_net_x25
    );

  pol1_in15_tap2_d33a248c87: entity work.pol1_in10_tap2_entity_f04386d359
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x17,
      din => ram_data_out_net_x18,
      coeff_out => slice1_y_net_x18,
      dout => ram_data_out_net_x19,
      taps_out => mult_p_net_x26
    );

  pol1_in15_tap3_01e8e65882: entity work.pol1_in10_tap3_entity_981edca22f
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x18,
      din => ram_data_out_net_x19,
      coeff_out => slice1_y_net_x19,
      dout => ram_data_out_net_x20,
      taps_out => mult_p_net_x27
    );

  pol1_in16_coeffs_b853114fae: entity work.pol1_in16_coeffs_entity_b853114fae
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din => mult15_p_net_x2,
      sync => edge_op_y_net_x17,
      coeff => register_q_net_x7,
      dout => delay1_q_net_x8
    );

  pol1_in16_first_tap_7e2c61a7a9: entity work.pol1_in10_first_tap_entity_f208923ed8
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeffs => register_q_net_x7,
      din => delay1_q_net_x8,
      coeff_out => slice1_y_net_x20,
      dout => ram_data_out_net_x21,
      taps_out => mult_p_net_x28
    );

  pol1_in16_last_tap_3318d70fd1: entity work.pol1_in10_last_tap_entity_dcc2b2dd1c
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x22,
      din => ram_data_out_net_x23,
      tap_out => mult_p_net_x29
    );

  pol1_in16_tap2_e9ff24f690: entity work.pol1_in10_tap2_entity_f04386d359
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x20,
      din => ram_data_out_net_x21,
      coeff_out => slice1_y_net_x21,
      dout => ram_data_out_net_x22,
      taps_out => mult_p_net_x30
    );

  pol1_in16_tap3_49c275589c: entity work.pol1_in10_tap3_entity_981edca22f
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x21,
      din => ram_data_out_net_x22,
      coeff_out => slice1_y_net_x22,
      dout => ram_data_out_net_x23,
      taps_out => mult_p_net_x31
    );

  pol1_in1_coeffs_ef5b5a77ff: entity work.pol1_in1_coeffs_entity_ef5b5a77ff
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din => mult_p_net_x68,
      sync => edge_op_y_net_x17,
      coeff => register_q_net_x8,
      dout => delay1_q_net_x9,
      sync_out => delay_q_net_x2
    );

  pol1_in1_first_tap_03b35a9caf: entity work.pol1_in1_first_tap_entity_03b35a9caf
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeffs => register_q_net_x8,
      din => delay1_q_net_x9,
      sync => delay_q_net_x2,
      coeff_out => slice1_y_net_x23,
      dout => ram_data_out_net_x24,
      sync_out => mux_y_net_x3,
      taps_out => mult_p_net_x32
    );

  pol1_in1_last_tap_9ce7ed9520: entity work.pol1_in1_last_tap_entity_9ce7ed9520
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x25,
      din => ram_data_out_net_x26,
      sync => mux_y_net_x2,
      sync_out => delay_q_net_x1,
      tap_out => mult_p_net_x33
    );

  pol1_in1_tap2_d2671bf2af: entity work.pol1_in1_tap2_entity_d2671bf2af
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x23,
      din => ram_data_out_net_x24,
      sync => mux_y_net_x3,
      coeff_out => slice1_y_net_x24,
      dout => ram_data_out_net_x25,
      sync_out => mux_y_net_x6,
      taps_out => mult_p_net_x34
    );

  pol1_in1_tap3_d92786f630: entity work.pol1_in1_tap3_entity_d92786f630
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x24,
      din => ram_data_out_net_x25,
      sync => mux_y_net_x6,
      coeff_out => slice1_y_net_x25,
      dout => ram_data_out_net_x26,
      sync_out => mux_y_net_x2,
      taps_out => mult_p_net_x35
    );

  pol1_in2_coeffs_04a64491b2: entity work.pol1_in2_coeffs_entity_04a64491b2
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din => mult1_p_net_x2,
      sync => edge_op_y_net_x17,
      coeff => register_q_net_x9,
      dout => delay1_q_net_x10
    );

  pol1_in2_first_tap_f750a422c2: entity work.pol1_in10_first_tap_entity_f208923ed8
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeffs => register_q_net_x9,
      din => delay1_q_net_x10,
      coeff_out => slice1_y_net_x26,
      dout => ram_data_out_net_x27,
      taps_out => mult_p_net_x36
    );

  pol1_in2_last_tap_41f1b1131d: entity work.pol1_in10_last_tap_entity_dcc2b2dd1c
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x28,
      din => ram_data_out_net_x29,
      tap_out => mult_p_net_x37
    );

  pol1_in2_tap2_2c7ab81fde: entity work.pol1_in10_tap2_entity_f04386d359
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x26,
      din => ram_data_out_net_x27,
      coeff_out => slice1_y_net_x27,
      dout => ram_data_out_net_x28,
      taps_out => mult_p_net_x38
    );

  pol1_in2_tap3_50f0685528: entity work.pol1_in10_tap3_entity_981edca22f
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x27,
      din => ram_data_out_net_x28,
      coeff_out => slice1_y_net_x28,
      dout => ram_data_out_net_x29,
      taps_out => mult_p_net_x39
    );

  pol1_in3_coeffs_596ccf4456: entity work.pol1_in3_coeffs_entity_596ccf4456
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din => mult2_p_net_x2,
      sync => edge_op_y_net_x17,
      coeff => register_q_net_x10,
      dout => delay1_q_net_x11
    );

  pol1_in3_first_tap_e7e8470ea1: entity work.pol1_in10_first_tap_entity_f208923ed8
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeffs => register_q_net_x10,
      din => delay1_q_net_x11,
      coeff_out => slice1_y_net_x29,
      dout => ram_data_out_net_x30,
      taps_out => mult_p_net_x40
    );

  pol1_in3_last_tap_9da636d36e: entity work.pol1_in10_last_tap_entity_dcc2b2dd1c
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x31,
      din => ram_data_out_net_x32,
      tap_out => mult_p_net_x41
    );

  pol1_in3_tap2_adb65b741a: entity work.pol1_in10_tap2_entity_f04386d359
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x29,
      din => ram_data_out_net_x30,
      coeff_out => slice1_y_net_x30,
      dout => ram_data_out_net_x31,
      taps_out => mult_p_net_x42
    );

  pol1_in3_tap3_280c16f069: entity work.pol1_in10_tap3_entity_981edca22f
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x30,
      din => ram_data_out_net_x31,
      coeff_out => slice1_y_net_x31,
      dout => ram_data_out_net_x32,
      taps_out => mult_p_net_x43
    );

  pol1_in4_coeffs_d1e346ded2: entity work.pol1_in4_coeffs_entity_d1e346ded2
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din => mult3_p_net_x2,
      sync => edge_op_y_net_x17,
      coeff => register_q_net_x11,
      dout => delay1_q_net_x12
    );

  pol1_in4_first_tap_b8a91ce0d7: entity work.pol1_in10_first_tap_entity_f208923ed8
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeffs => register_q_net_x11,
      din => delay1_q_net_x12,
      coeff_out => slice1_y_net_x32,
      dout => ram_data_out_net_x33,
      taps_out => mult_p_net_x44
    );

  pol1_in4_last_tap_c497ed341a: entity work.pol1_in10_last_tap_entity_dcc2b2dd1c
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x34,
      din => ram_data_out_net_x35,
      tap_out => mult_p_net_x45
    );

  pol1_in4_tap2_345c805010: entity work.pol1_in10_tap2_entity_f04386d359
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x32,
      din => ram_data_out_net_x33,
      coeff_out => slice1_y_net_x33,
      dout => ram_data_out_net_x34,
      taps_out => mult_p_net_x46
    );

  pol1_in4_tap3_d50fb4614b: entity work.pol1_in10_tap3_entity_981edca22f
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x33,
      din => ram_data_out_net_x34,
      coeff_out => slice1_y_net_x34,
      dout => ram_data_out_net_x35,
      taps_out => mult_p_net_x47
    );

  pol1_in5_coeffs_7a3bc0a746: entity work.pol1_in5_coeffs_entity_7a3bc0a746
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din => mult4_p_net_x2,
      sync => edge_op_y_net_x17,
      coeff => register_q_net_x12,
      dout => delay1_q_net_x13
    );

  pol1_in5_first_tap_e3ec1af3f1: entity work.pol1_in10_first_tap_entity_f208923ed8
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeffs => register_q_net_x12,
      din => delay1_q_net_x13,
      coeff_out => slice1_y_net_x35,
      dout => ram_data_out_net_x36,
      taps_out => mult_p_net_x48
    );

  pol1_in5_last_tap_fd951c305f: entity work.pol1_in10_last_tap_entity_dcc2b2dd1c
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x37,
      din => ram_data_out_net_x38,
      tap_out => mult_p_net_x49
    );

  pol1_in5_tap2_d0902d2515: entity work.pol1_in10_tap2_entity_f04386d359
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x35,
      din => ram_data_out_net_x36,
      coeff_out => slice1_y_net_x36,
      dout => ram_data_out_net_x37,
      taps_out => mult_p_net_x50
    );

  pol1_in5_tap3_38b7ba8fe0: entity work.pol1_in10_tap3_entity_981edca22f
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x36,
      din => ram_data_out_net_x37,
      coeff_out => slice1_y_net_x37,
      dout => ram_data_out_net_x38,
      taps_out => mult_p_net_x51
    );

  pol1_in6_coeffs_882c3fecde: entity work.pol1_in6_coeffs_entity_882c3fecde
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din => mult5_p_net_x2,
      sync => edge_op_y_net_x17,
      coeff => register_q_net_x13,
      dout => delay1_q_net_x14
    );

  pol1_in6_first_tap_d0330964dd: entity work.pol1_in10_first_tap_entity_f208923ed8
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeffs => register_q_net_x13,
      din => delay1_q_net_x14,
      coeff_out => slice1_y_net_x38,
      dout => ram_data_out_net_x39,
      taps_out => mult_p_net_x52
    );

  pol1_in6_last_tap_23696e7b85: entity work.pol1_in10_last_tap_entity_dcc2b2dd1c
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x40,
      din => ram_data_out_net_x41,
      tap_out => mult_p_net_x53
    );

  pol1_in6_tap2_5e81ab3fa6: entity work.pol1_in10_tap2_entity_f04386d359
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x38,
      din => ram_data_out_net_x39,
      coeff_out => slice1_y_net_x39,
      dout => ram_data_out_net_x40,
      taps_out => mult_p_net_x54
    );

  pol1_in6_tap3_d75b19c9f8: entity work.pol1_in10_tap3_entity_981edca22f
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x39,
      din => ram_data_out_net_x40,
      coeff_out => slice1_y_net_x40,
      dout => ram_data_out_net_x41,
      taps_out => mult_p_net_x55
    );

  pol1_in7_coeffs_a15d67679c: entity work.pol1_in7_coeffs_entity_a15d67679c
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din => mult6_p_net_x2,
      sync => edge_op_y_net_x17,
      coeff => register_q_net_x14,
      dout => delay1_q_net_x15
    );

  pol1_in7_first_tap_6c03fb2c35: entity work.pol1_in10_first_tap_entity_f208923ed8
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeffs => register_q_net_x14,
      din => delay1_q_net_x15,
      coeff_out => slice1_y_net_x41,
      dout => ram_data_out_net_x42,
      taps_out => mult_p_net_x56
    );

  pol1_in7_last_tap_496e6fbc49: entity work.pol1_in10_last_tap_entity_dcc2b2dd1c
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x43,
      din => ram_data_out_net_x44,
      tap_out => mult_p_net_x57
    );

  pol1_in7_tap2_40ad8f4094: entity work.pol1_in10_tap2_entity_f04386d359
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x41,
      din => ram_data_out_net_x42,
      coeff_out => slice1_y_net_x42,
      dout => ram_data_out_net_x43,
      taps_out => mult_p_net_x58
    );

  pol1_in7_tap3_2fd39d8aeb: entity work.pol1_in10_tap3_entity_981edca22f
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x42,
      din => ram_data_out_net_x43,
      coeff_out => slice1_y_net_x43,
      dout => ram_data_out_net_x44,
      taps_out => mult_p_net_x59
    );

  pol1_in8_coeffs_156c7de1e0: entity work.pol1_in8_coeffs_entity_156c7de1e0
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din => mult7_p_net_x2,
      sync => edge_op_y_net_x17,
      coeff => register_q_net_x15,
      dout => delay1_q_net_x16
    );

  pol1_in8_first_tap_2a8db3bc3f: entity work.pol1_in10_first_tap_entity_f208923ed8
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeffs => register_q_net_x15,
      din => delay1_q_net_x16,
      coeff_out => slice1_y_net_x44,
      dout => ram_data_out_net_x45,
      taps_out => mult_p_net_x60
    );

  pol1_in8_last_tap_e3c36615c0: entity work.pol1_in10_last_tap_entity_dcc2b2dd1c
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x46,
      din => ram_data_out_net_x47,
      tap_out => mult_p_net_x61
    );

  pol1_in8_tap2_a78a7060c5: entity work.pol1_in10_tap2_entity_f04386d359
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x44,
      din => ram_data_out_net_x45,
      coeff_out => slice1_y_net_x45,
      dout => ram_data_out_net_x46,
      taps_out => mult_p_net_x62
    );

  pol1_in8_tap3_9b4aca07f2: entity work.pol1_in10_tap3_entity_981edca22f
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x45,
      din => ram_data_out_net_x46,
      coeff_out => slice1_y_net_x46,
      dout => ram_data_out_net_x47,
      taps_out => mult_p_net_x63
    );

  pol1_in9_coeffs_a164d97ed7: entity work.pol1_in9_coeffs_entity_a164d97ed7
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      din => mult8_p_net_x2,
      sync => edge_op_y_net_x17,
      coeff => register_q_net_x16,
      dout => delay1_q_net_x17
    );

  pol1_in9_first_tap_cf3a274d87: entity work.pol1_in10_first_tap_entity_f208923ed8
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeffs => register_q_net_x16,
      din => delay1_q_net_x17,
      coeff_out => slice1_y_net_x47,
      dout => ram_data_out_net_x48,
      taps_out => mult_p_net_x64
    );

  pol1_in9_last_tap_f4f6310e9c: entity work.pol1_in10_last_tap_entity_dcc2b2dd1c
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x49,
      din => ram_data_out_net_x50,
      tap_out => mult_p_net_x65
    );

  pol1_in9_tap2_8d2fa4875a: entity work.pol1_in10_tap2_entity_f04386d359
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x47,
      din => ram_data_out_net_x48,
      coeff_out => slice1_y_net_x48,
      dout => ram_data_out_net_x49,
      taps_out => mult_p_net_x66
    );

  pol1_in9_tap3_56b10a9538: entity work.pol1_in10_tap3_entity_981edca22f
    port map (
      ce_1 => ce_1_sg_x2071,
      clk_1 => clk_1_sg_x2071,
      coeff => slice1_y_net_x48,
      din => ram_data_out_net_x49,
      coeff_out => slice1_y_net_x49,
      dout => ram_data_out_net_x50,
      taps_out => mult_p_net_x67
    );

  scale_1_1: entity work.scale_e16fd9fe4d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr3_s_net_x0,
      op => scale_1_1_op_net
    );

  scale_1_10: entity work.scale_e16fd9fe4d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr3_s_net_x1,
      op => scale_1_10_op_net
    );

  scale_1_11: entity work.scale_e16fd9fe4d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr3_s_net_x2,
      op => scale_1_11_op_net
    );

  scale_1_12: entity work.scale_e16fd9fe4d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr3_s_net_x3,
      op => scale_1_12_op_net
    );

  scale_1_13: entity work.scale_e16fd9fe4d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr3_s_net_x4,
      op => scale_1_13_op_net
    );

  scale_1_14: entity work.scale_e16fd9fe4d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr3_s_net_x5,
      op => scale_1_14_op_net
    );

  scale_1_15: entity work.scale_e16fd9fe4d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr3_s_net_x6,
      op => scale_1_15_op_net
    );

  scale_1_16: entity work.scale_e16fd9fe4d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr3_s_net_x7,
      op => scale_1_16_op_net
    );

  scale_1_2: entity work.scale_e16fd9fe4d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr3_s_net_x8,
      op => scale_1_2_op_net
    );

  scale_1_3: entity work.scale_e16fd9fe4d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr3_s_net_x9,
      op => scale_1_3_op_net
    );

  scale_1_4: entity work.scale_e16fd9fe4d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr3_s_net_x10,
      op => scale_1_4_op_net
    );

  scale_1_5: entity work.scale_e16fd9fe4d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr3_s_net_x11,
      op => scale_1_5_op_net
    );

  scale_1_6: entity work.scale_e16fd9fe4d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr3_s_net_x12,
      op => scale_1_6_op_net
    );

  scale_1_7: entity work.scale_e16fd9fe4d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr3_s_net_x13,
      op => scale_1_7_op_net
    );

  scale_1_8: entity work.scale_e16fd9fe4d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr3_s_net_x14,
      op => scale_1_8_op_net
    );

  scale_1_9: entity work.scale_e16fd9fe4d
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      ip => addr3_s_net_x15,
      op => scale_1_9_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pipeline1"

entity pipeline1_entity_553a4b44b6 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d: in std_logic; 
    q: out std_logic
  );
end pipeline1_entity_553a4b44b6;

architecture structural of pipeline1_entity_553a4b44b6 is
  signal ce_1_sg_x2072: std_logic;
  signal clk_1_sg_x2072: std_logic;
  signal post_sync_delay_q_net_x3: std_logic;
  signal register0_q_net: std_logic;
  signal register1_q_net: std_logic;
  signal register2_q_net: std_logic;
  signal register3_q_net: std_logic;
  signal register4_q_net_x2: std_logic;

begin
  ce_1_sg_x2072 <= ce_1;
  clk_1_sg_x2072 <= clk_1;
  post_sync_delay_q_net_x3 <= d;
  q <= register4_q_net_x2;

  register0: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x2072,
      clk => clk_1_sg_x2072,
      d(0) => post_sync_delay_q_net_x3,
      en => "1",
      rst => "0",
      q(0) => register0_q_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x2072,
      clk => clk_1_sg_x2072,
      d(0) => register0_q_net,
      en => "1",
      rst => "0",
      q(0) => register1_q_net
    );

  register2: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x2072,
      clk => clk_1_sg_x2072,
      d(0) => register1_q_net,
      en => "1",
      rst => "0",
      q(0) => register2_q_net
    );

  register3: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x2072,
      clk => clk_1_sg_x2072,
      d(0) => register2_q_net,
      en => "1",
      rst => "0",
      q(0) => register3_q_net
    );

  register4: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x2072,
      clk => clk_1_sg_x2072,
      d(0) => register3_q_net,
      en => "1",
      rst => "0",
      q(0) => register4_q_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pipeline10"

entity pipeline10_entity_ed9b32897e is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d: in std_logic_vector(7 downto 0); 
    q: out std_logic_vector(7 downto 0)
  );
end pipeline10_entity_ed9b32897e;

architecture structural of pipeline10_entity_ed9b32897e is
  signal ce_1_sg_x2073: std_logic;
  signal clk_1_sg_x2073: std_logic;
  signal he6_cres_correlator_adc1_user_data_i5_net_x0: std_logic_vector(7 downto 0);
  signal register0_q_net: std_logic_vector(7 downto 0);
  signal register1_q_net: std_logic_vector(7 downto 0);
  signal register2_q_net_x65: std_logic_vector(7 downto 0);

begin
  ce_1_sg_x2073 <= ce_1;
  clk_1_sg_x2073 <= clk_1;
  he6_cres_correlator_adc1_user_data_i5_net_x0 <= d;
  q <= register2_q_net_x65;

  register0: entity work.xlregister
    generic map (
      d_width => 8,
      init_value => b"00000000"
    )
    port map (
      ce => ce_1_sg_x2073,
      clk => clk_1_sg_x2073,
      d => he6_cres_correlator_adc1_user_data_i5_net_x0,
      en => "1",
      rst => "0",
      q => register0_q_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 8,
      init_value => b"00000000"
    )
    port map (
      ce => ce_1_sg_x2073,
      clk => clk_1_sg_x2073,
      d => register0_q_net,
      en => "1",
      rst => "0",
      q => register1_q_net
    );

  register2: entity work.xlregister
    generic map (
      d_width => 8,
      init_value => b"00000000"
    )
    port map (
      ce => ce_1_sg_x2073,
      clk => clk_1_sg_x2073,
      d => register1_q_net,
      en => "1",
      rst => "0",
      q => register2_q_net_x65
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pipeline37"

entity pipeline37_entity_3460a3e1d6 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d: in std_logic_vector(31 downto 0); 
    q: out std_logic_vector(31 downto 0)
  );
end pipeline37_entity_3460a3e1d6;

architecture structural of pipeline37_entity_3460a3e1d6 is
  signal ce_1_sg_x2102: std_logic;
  signal clk_1_sg_x2102: std_logic;
  signal concat_y_net_x0: std_logic_vector(31 downto 0);
  signal register0_q_net: std_logic_vector(31 downto 0);
  signal register1_q_net: std_logic_vector(31 downto 0);
  signal register2_q_net_x1: std_logic_vector(31 downto 0);

begin
  ce_1_sg_x2102 <= ce_1;
  clk_1_sg_x2102 <= clk_1;
  concat_y_net_x0 <= d;
  q <= register2_q_net_x1;

  register0: entity work.xlregister
    generic map (
      d_width => 32,
      init_value => b"00000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x2102,
      clk => clk_1_sg_x2102,
      d => concat_y_net_x0,
      en => "1",
      rst => "0",
      q => register0_q_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 32,
      init_value => b"00000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x2102,
      clk => clk_1_sg_x2102,
      d => register0_q_net,
      en => "1",
      rst => "0",
      q => register1_q_net
    );

  register2: entity work.xlregister
    generic map (
      d_width => 32,
      init_value => b"00000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x2102,
      clk => clk_1_sg_x2102,
      d => register1_q_net,
      en => "1",
      rst => "0",
      q => register2_q_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pipeline4"

entity pipeline4_entity_fef0c0b823 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d: in std_logic; 
    q: out std_logic
  );
end pipeline4_entity_fef0c0b823;

architecture structural of pipeline4_entity_fef0c0b823 is
  signal ce_1_sg_x2103: std_logic;
  signal clk_1_sg_x2103: std_logic;
  signal delay1_q_net_x1: std_logic;
  signal register0_q_net: std_logic;
  signal register1_q_net: std_logic;
  signal register2_q_net_x2: std_logic;

begin
  ce_1_sg_x2103 <= ce_1;
  clk_1_sg_x2103 <= clk_1;
  delay1_q_net_x1 <= d;
  q <= register2_q_net_x2;

  register0: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x2103,
      clk => clk_1_sg_x2103,
      d(0) => delay1_q_net_x1,
      en => "1",
      rst => "0",
      q(0) => register0_q_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x2103,
      clk => clk_1_sg_x2103,
      d(0) => register0_q_net,
      en => "1",
      rst => "0",
      q(0) => register1_q_net
    );

  register2: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x2103,
      clk => clk_1_sg_x2103,
      d(0) => register1_q_net,
      en => "1",
      rst => "0",
      q(0) => register2_q_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/pipeline5"

entity pipeline5_entity_6a9becacba is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d: in std_logic_vector(63 downto 0); 
    q: out std_logic_vector(63 downto 0)
  );
end pipeline5_entity_6a9becacba;

architecture structural of pipeline5_entity_6a9becacba is
  signal ce_1_sg_x2104: std_logic;
  signal clk_1_sg_x2104: std_logic;
  signal mux_y_net_x1: std_logic_vector(63 downto 0);
  signal register0_q_net: std_logic_vector(63 downto 0);
  signal register1_q_net_x0: std_logic_vector(63 downto 0);

begin
  ce_1_sg_x2104 <= ce_1;
  clk_1_sg_x2104 <= clk_1;
  mux_y_net_x1 <= d;
  q <= register1_q_net_x0;

  register0: entity work.xlregister
    generic map (
      d_width => 64,
      init_value => b"0000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x2104,
      clk => clk_1_sg_x2104,
      d => mux_y_net_x1,
      en => "1",
      rst => "0",
      q => register0_q_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 64,
      init_value => b"0000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x2104,
      clk => clk_1_sg_x2104,
      d => register0_q_net,
      en => "1",
      rst => "0",
      q => register1_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/snap_0/pipeline19"

entity pipeline19_entity_f9391badef is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d: in std_logic_vector(127 downto 0); 
    q: out std_logic_vector(127 downto 0)
  );
end pipeline19_entity_f9391badef;

architecture structural of pipeline19_entity_f9391badef is
  signal ce_1_sg_x2108: std_logic;
  signal clk_1_sg_x2108: std_logic;
  signal concatenate_y_net_x1: std_logic_vector(127 downto 0);
  signal register0_q_net: std_logic_vector(127 downto 0);
  signal register1_q_net: std_logic_vector(127 downto 0);
  signal register2_q_net: std_logic_vector(127 downto 0);
  signal register3_q_net_x0: std_logic_vector(127 downto 0);

begin
  ce_1_sg_x2108 <= ce_1;
  clk_1_sg_x2108 <= clk_1;
  concatenate_y_net_x1 <= d;
  q <= register3_q_net_x0;

  register0: entity work.xlregister
    generic map (
      d_width => 128,
      init_value => b"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x2108,
      clk => clk_1_sg_x2108,
      d => concatenate_y_net_x1,
      en => "1",
      rst => "0",
      q => register0_q_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 128,
      init_value => b"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x2108,
      clk => clk_1_sg_x2108,
      d => register0_q_net,
      en => "1",
      rst => "0",
      q => register1_q_net
    );

  register2: entity work.xlregister
    generic map (
      d_width => 128,
      init_value => b"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x2108,
      clk => clk_1_sg_x2108,
      d => register1_q_net,
      en => "1",
      rst => "0",
      q => register2_q_net
    );

  register3: entity work.xlregister
    generic map (
      d_width => 128,
      init_value => b"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x2108,
      clk => clk_1_sg_x2108,
      d => register2_q_net,
      en => "1",
      rst => "0",
      q => register3_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/snap_0/pipeline20"

entity pipeline20_entity_08614361da is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    d: in std_logic; 
    q: out std_logic
  );
end pipeline20_entity_08614361da;

architecture structural of pipeline20_entity_08614361da is
  signal ce_1_sg_x2109: std_logic;
  signal clk_1_sg_x2109: std_logic;
  signal delay_q_net_x1: std_logic;
  signal register0_q_net: std_logic;
  signal register1_q_net: std_logic;
  signal register2_q_net: std_logic;
  signal register3_q_net_x0: std_logic;

begin
  ce_1_sg_x2109 <= ce_1;
  clk_1_sg_x2109 <= clk_1;
  delay_q_net_x1 <= d;
  q <= register3_q_net_x0;

  register0: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x2109,
      clk => clk_1_sg_x2109,
      d(0) => delay_q_net_x1,
      en => "1",
      rst => "0",
      q(0) => register0_q_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x2109,
      clk => clk_1_sg_x2109,
      d(0) => register0_q_net,
      en => "1",
      rst => "0",
      q(0) => register1_q_net
    );

  register2: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x2109,
      clk => clk_1_sg_x2109,
      d(0) => register1_q_net,
      en => "1",
      rst => "0",
      q(0) => register2_q_net
    );

  register3: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x2109,
      clk => clk_1_sg_x2109,
      d(0) => register2_q_net,
      en => "1",
      rst => "0",
      q(0) => register3_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/snap_0/snapshot/add_gen/edge_detect"

entity edge_detect_entity_03b4ad2045 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic; 
    out_x0: out std_logic
  );
end edge_detect_entity_03b4ad2045;

architecture structural of edge_detect_entity_03b4ad2045 is
  signal ce_1_sg_x2110: std_logic;
  signal clk_1_sg_x2110: std_logic;
  signal delay_q_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal inverter_op_net: std_logic;
  signal slice3_y_net_x0: std_logic;

begin
  ce_1_sg_x2110 <= ce_1;
  clk_1_sg_x2110 <= clk_1;
  slice3_y_net_x0 <= in_x0;
  out_x0 <= edge_op_y_net_x0;

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x2110,
      clk => clk_1_sg_x2110,
      d(0) => slice3_y_net_x0,
      en => '1',
      rst => '1',
      q(0) => delay_q_net
    );

  edge_op: entity work.logical_f6397bdee1
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => inverter_op_net,
      d1(0) => delay_q_net,
      y(0) => edge_op_y_net_x0
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x2110,
      clk => clk_1_sg_x2110,
      clr => '0',
      ip(0) => slice3_y_net_x0,
      op(0) => inverter_op_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/snap_0/snapshot/add_gen"

entity add_gen_entity_8edb7ed25d is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    cont: in std_logic; 
    din: in std_logic_vector(127 downto 0); 
    go: in std_logic; 
    init: in std_logic; 
    we: in std_logic; 
    add: out std_logic_vector(13 downto 0); 
    dout: out std_logic_vector(127 downto 0); 
    status: out std_logic_vector(31 downto 0); 
    we_o: out std_logic
  );
end add_gen_entity_8edb7ed25d;

architecture structural of add_gen_entity_8edb7ed25d is
  signal add_gen_op_net: std_logic_vector(18 downto 0);
  signal ce_1_sg_x2111: std_logic;
  signal clk_1_sg_x2111: std_logic;
  signal concat_y_net_x0: std_logic_vector(31 downto 0);
  signal convert_dout_net: std_logic_vector(12 downto 0);
  signal data_choice_y_net_x0: std_logic_vector(127 downto 0);
  signal delay1_q_net: std_logic_vector(17 downto 0);
  signal delay3_q_net: std_logic;
  signal delay4_q_net: std_logic;
  signal delay6_q_net_x0: std_logic_vector(127 downto 0);
  signal delay_q_net: std_logic;
  signal edge_op_y_net_x0: std_logic;
  signal edge_op_y_net_x1: std_logic;
  signal inverter1_op_net: std_logic;
  signal inverter_op_net: std_logic;
  signal logical1_y_net: std_logic;
  signal logical4_y_net: std_logic;
  signal logical6_y_net_x0: std_logic;
  signal never_op_net_x0: std_logic;
  signal register5_q_net: std_logic;
  signal register6_q_net_x0: std_logic;
  signal shift_op_net: std_logic_vector(12 downto 0);
  signal slice1_y_net: std_logic_vector(17 downto 0);
  signal slice2_y_net_x0: std_logic_vector(13 downto 0);
  signal slice3_y_net_x0: std_logic;
  signal we_choice_y_net_x0: std_logic;

begin
  ce_1_sg_x2111 <= ce_1;
  clk_1_sg_x2111 <= clk_1;
  never_op_net_x0 <= cont;
  data_choice_y_net_x0 <= din;
  register6_q_net_x0 <= go;
  edge_op_y_net_x1 <= init;
  we_choice_y_net_x0 <= we;
  add <= slice2_y_net_x0;
  dout <= delay6_q_net_x0;
  status <= concat_y_net_x0;
  we_o <= logical6_y_net_x0;

  add_gen: entity work.xlcounter_free_he6_cres_correlator
    generic map (
      core_name0 => "cntr_11_0_34bcfe5241b54e91",
      op_arith => xlUnsigned,
      op_width => 19
    )
    port map (
      ce => ce_1_sg_x2111,
      clk => clk_1_sg_x2111,
      clr => '0',
      en(0) => logical6_y_net_x0,
      rst(0) => delay4_q_net,
      op => add_gen_op_net
    );

  concat: entity work.concat_a1e3f9e7e9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => shift_op_net,
      in1(0) => inverter_op_net,
      in2 => delay1_q_net,
      y => concat_y_net_x0
    );

  convert: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 13,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x2111,
      clk => clk_1_sg_x2111,
      clr => '0',
      din(0) => register5_q_net,
      en => "1",
      dout => convert_dout_net
    );

  delay: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x2111,
      clk => clk_1_sg_x2111,
      clr => '0',
      d(0) => delay4_q_net,
      q(0) => delay_q_net
    );

  delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 18
    )
    port map (
      ce => ce_1_sg_x2111,
      clk => clk_1_sg_x2111,
      d => slice1_y_net,
      en => '1',
      rst => '1',
      q => delay1_q_net
    );

  delay3: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x2111,
      clk => clk_1_sg_x2111,
      clr => '0',
      d(0) => never_op_net_x0,
      q(0) => delay3_q_net
    );

  delay4: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x2111,
      clk => clk_1_sg_x2111,
      clr => '0',
      d(0) => edge_op_y_net_x1,
      q(0) => delay4_q_net
    );

  delay6: entity work.delay_ee0f706095
    port map (
      ce => ce_1_sg_x2111,
      clk => clk_1_sg_x2111,
      clr => '0',
      d => data_choice_y_net_x0,
      q => delay6_q_net_x0
    );

  edge_detect_03b4ad2045: entity work.edge_detect_entity_03b4ad2045
    port map (
      ce_1 => ce_1_sg_x2111,
      clk_1 => clk_1_sg_x2111,
      in_x0 => slice3_y_net_x0,
      out_x0 => edge_op_y_net_x0
    );

  inverter: entity work.inverter_6844eee868
    port map (
      ce => ce_1_sg_x2111,
      clk => clk_1_sg_x2111,
      clr => '0',
      ip(0) => register5_q_net,
      op(0) => inverter_op_net
    );

  inverter1: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x2111,
      clk => clk_1_sg_x2111,
      clr => '0',
      ip(0) => edge_op_y_net_x0,
      op(0) => inverter1_op_net
    );

  logical1: entity work.logical_799f62af22
    port map (
      ce => ce_1_sg_x2111,
      clk => clk_1_sg_x2111,
      clr => '0',
      d0(0) => we_choice_y_net_x0,
      d1(0) => register6_q_net_x0,
      y(0) => logical1_y_net
    );

  logical4: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay3_q_net,
      d1(0) => inverter1_op_net,
      y(0) => logical4_y_net
    );

  logical6: entity work.logical_954ee29728
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register5_q_net,
      d1(0) => logical4_y_net,
      d2(0) => logical1_y_net,
      y(0) => logical6_y_net_x0
    );

  register5: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"1"
    )
    port map (
      ce => ce_1_sg_x2111,
      clk => clk_1_sg_x2111,
      d(0) => delay3_q_net,
      en(0) => edge_op_y_net_x0,
      rst(0) => delay_q_net,
      q(0) => register5_q_net
    );

  shift: entity work.shift_07a28c25d6
    port map (
      ce => ce_1_sg_x2111,
      clk => clk_1_sg_x2111,
      clr => '0',
      ip => convert_dout_net,
      op => shift_op_net
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 17,
      x_width => 19,
      y_width => 18
    )
    port map (
      x => add_gen_op_net,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 4,
      new_msb => 17,
      x_width => 19,
      y_width => 14
    )
    port map (
      x => add_gen_op_net,
      y => slice2_y_net_x0
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 18,
      new_msb => 18,
      x_width => 19,
      y_width => 1
    )
    port map (
      x => add_gen_op_net,
      y(0) => slice3_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/snap_0/snapshot/basic_ctrl/dram_munge"

entity dram_munge_entity_c42c0db05c is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(127 downto 0); 
    init: in std_logic; 
    we: in std_logic; 
    dout: out std_logic_vector(127 downto 0); 
    we_o: out std_logic
  );
end dram_munge_entity_c42c0db05c;

architecture structural of dram_munge_entity_c42c0db05c is
  signal cast_dout_net_x0: std_logic_vector(127 downto 0);
  signal ce_1_sg_x2112: std_logic;
  signal clk_1_sg_x2112: std_logic;
  signal con0_op_net: std_logic_vector(1 downto 0);
  signal con1_op_net: std_logic_vector(1 downto 0);
  signal con2_op_net: std_logic_vector(1 downto 0);
  signal con3_op_net: std_logic_vector(1 downto 0);
  signal concat1_y_net: std_logic_vector(271 downto 0);
  signal concat_y_net: std_logic_vector(271 downto 0);
  signal constant_op_net: std_logic_vector(7 downto 0);
  signal data_choice_y_net_x1: std_logic_vector(127 downto 0);
  signal delay1_q_net: std_logic;
  signal delay_q_net: std_logic;
  signal dout_count_op_net: std_logic;
  signal dram_op_net: std_logic;
  signal edge_op_y_net_x2: std_logic;
  signal input_count_op_net: std_logic_vector(1 downto 0);
  signal logical1_y_net: std_logic;
  signal logical_y_net: std_logic;
  signal mux1_y_net_x0: std_logic_vector(271 downto 0);
  signal mux1_y_net_x1: std_logic;
  signal register1_q_net: std_logic_vector(127 downto 0);
  signal register2_q_net: std_logic_vector(127 downto 0);
  signal register3_q_net: std_logic_vector(127 downto 0);
  signal register_q_net: std_logic_vector(127 downto 0);
  signal relational1_op_net: std_logic;
  signal relational2_op_net: std_logic;
  signal relational3_op_net: std_logic;
  signal relational_op_net: std_logic;
  signal we_choice_y_net_x1: std_logic;

begin
  ce_1_sg_x2112 <= ce_1;
  clk_1_sg_x2112 <= clk_1;
  cast_dout_net_x0 <= din;
  edge_op_y_net_x2 <= init;
  mux1_y_net_x1 <= we;
  dout <= data_choice_y_net_x1;
  we_o <= we_choice_y_net_x1;

  con0: entity work.constant_cda50df78a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => con0_op_net
    );

  con1: entity work.constant_a7e2bb9e12
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => con1_op_net
    );

  con2: entity work.constant_e8ddc079e9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => con2_op_net
    );

  con3: entity work.constant_3a9a3daeb9
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => con3_op_net
    );

  concat: entity work.concat_fd1ce36c4a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => constant_op_net,
      in1 => register_q_net,
      in2 => constant_op_net,
      in3 => register1_q_net,
      y => concat_y_net
    );

  concat1: entity work.concat_fd1ce36c4a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => constant_op_net,
      in1 => register2_q_net,
      in2 => constant_op_net,
      in3 => register3_q_net,
      y => concat1_y_net
    );

  constant_x0: entity work.constant_91ef1678ca
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant_op_net
    );

  data_choice: entity work.mux_5441ad2d93
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => cast_dout_net_x0,
      d1 => mux1_y_net_x0,
      sel(0) => dram_op_net,
      y => data_choice_y_net_x1
    );

  delay: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x2112,
      clk => clk_1_sg_x2112,
      d(0) => logical_y_net,
      en => '1',
      rst => '1',
      q(0) => delay_q_net
    );

  delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x2112,
      clk => clk_1_sg_x2112,
      d(0) => logical1_y_net,
      en => '1',
      rst => '1',
      q(0) => delay1_q_net
    );

  dout_count: entity work.counter_41314d726b
    port map (
      ce => ce_1_sg_x2112,
      clk => clk_1_sg_x2112,
      clr => '0',
      en(0) => logical1_y_net,
      rst(0) => edge_op_y_net_x2,
      op(0) => dout_count_op_net
    );

  dram: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => dram_op_net
    );

  input_count: entity work.xlcounter_free_he6_cres_correlator
    generic map (
      core_name0 => "cntr_11_0_541f86689cddfa59",
      op_arith => xlUnsigned,
      op_width => 2
    )
    port map (
      ce => ce_1_sg_x2112,
      clk => clk_1_sg_x2112,
      clr => '0',
      en(0) => mux1_y_net_x1,
      rst(0) => edge_op_y_net_x2,
      op => input_count_op_net
    );

  logical: entity work.logical_799f62af22
    port map (
      ce => ce_1_sg_x2112,
      clk => clk_1_sg_x2112,
      clr => '0',
      d0(0) => relational3_op_net,
      d1(0) => mux1_y_net_x1,
      y(0) => logical_y_net
    );

  logical1: entity work.logical_aacf6e1b0e
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => logical_y_net,
      d1(0) => delay_q_net,
      y(0) => logical1_y_net
    );

  mux1: entity work.mux_ddf27bda35
    port map (
      ce => ce_1_sg_x2112,
      clk => clk_1_sg_x2112,
      clr => '0',
      d0 => concat_y_net,
      d1 => concat1_y_net,
      sel(0) => dout_count_op_net,
      y => mux1_y_net_x0
    );

  register1: entity work.xlregister
    generic map (
      d_width => 128,
      init_value => b"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x2112,
      clk => clk_1_sg_x2112,
      d => cast_dout_net_x0,
      en(0) => relational1_op_net,
      rst => "0",
      q => register1_q_net
    );

  register2: entity work.xlregister
    generic map (
      d_width => 128,
      init_value => b"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x2112,
      clk => clk_1_sg_x2112,
      d => cast_dout_net_x0,
      en(0) => relational2_op_net,
      rst => "0",
      q => register2_q_net
    );

  register3: entity work.xlregister
    generic map (
      d_width => 128,
      init_value => b"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x2112,
      clk => clk_1_sg_x2112,
      d => cast_dout_net_x0,
      en(0) => relational3_op_net,
      rst => "0",
      q => register3_q_net
    );

  register_x0: entity work.xlregister
    generic map (
      d_width => 128,
      init_value => b"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    )
    port map (
      ce => ce_1_sg_x2112,
      clk => clk_1_sg_x2112,
      d => cast_dout_net_x0,
      en(0) => relational_op_net,
      rst => "0",
      q => register_q_net
    );

  relational: entity work.relational_5f1eb17108
    port map (
      a => input_count_op_net,
      b => con0_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational_op_net
    );

  relational1: entity work.relational_5f1eb17108
    port map (
      a => input_count_op_net,
      b => con1_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

  relational2: entity work.relational_5f1eb17108
    port map (
      a => input_count_op_net,
      b => con2_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational2_op_net
    );

  relational3: entity work.relational_5f1eb17108
    port map (
      a => input_count_op_net,
      b => con3_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational3_op_net
    );

  we_choice: entity work.mux_d99e59b6d4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => mux1_y_net_x1,
      d1(0) => delay1_q_net,
      sel(0) => dram_op_net,
      y(0) => we_choice_y_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/snap_0/snapshot/basic_ctrl"

entity basic_ctrl_entity_dce834f10f is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    ctrl: in std_logic_vector(31 downto 0); 
    din: in std_logic_vector(127 downto 0); 
    trig: in std_logic; 
    we: in std_logic; 
    dout: out std_logic_vector(127 downto 0); 
    go: out std_logic; 
    init: out std_logic; 
    we_o: out std_logic
  );
end basic_ctrl_entity_dce834f10f;

architecture structural of basic_ctrl_entity_dce834f10f is
  signal cast_dout_net_x1: std_logic_vector(127 downto 0);
  signal ce_1_sg_x2114: std_logic;
  signal clk_1_sg_x2114: std_logic;
  signal constant1_op_net: std_logic;
  signal constant2_op_net: std_logic;
  signal constant_op_net: std_logic;
  signal data_choice_y_net_x2: std_logic_vector(127 downto 0);
  signal delay1_q_net_x0: std_logic;
  signal delay2_q_net: std_logic;
  signal delay3_q_net: std_logic;
  signal edge_op_y_net_x4: std_logic;
  signal enable_y_net: std_logic;
  signal inverter_op_net: std_logic;
  signal logical_y_net: std_logic;
  signal mux1_y_net_x1: std_logic;
  signal mux2_y_net: std_logic;
  signal one_op_net_x0: std_logic;
  signal register1_q_net: std_logic;
  signal register3_q_net_x1: std_logic;
  signal register6_q_net_x1: std_logic;
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal trig_src_y_net: std_logic;
  signal valid_src_y_net: std_logic;
  signal we_choice_y_net_x2: std_logic;

begin
  ce_1_sg_x2114 <= ce_1;
  clk_1_sg_x2114 <= clk_1;
  reint1_output_port_net_x0 <= ctrl;
  cast_dout_net_x1 <= din;
  register3_q_net_x1 <= trig;
  one_op_net_x0 <= we;
  dout <= data_choice_y_net_x2;
  go <= register6_q_net_x1;
  init <= edge_op_y_net_x4;
  we_o <= we_choice_y_net_x2;

  constant1: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant1_op_net
    );

  constant2: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant2_op_net
    );

  constant_x0: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant_op_net
    );

  delay1: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x2114,
      clk => clk_1_sg_x2114,
      d(0) => enable_y_net,
      en => '1',
      rst => '1',
      q(0) => delay1_q_net_x0
    );

  delay2: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x2114,
      clk => clk_1_sg_x2114,
      d(0) => trig_src_y_net,
      en => '1',
      rst => '1',
      q(0) => delay2_q_net
    );

  delay3: entity work.xldelay
    generic map (
      latency => 1,
      reg_retiming => 0,
      reset => 0,
      width => 1
    )
    port map (
      ce => ce_1_sg_x2114,
      clk => clk_1_sg_x2114,
      d(0) => valid_src_y_net,
      en => '1',
      rst => '1',
      q(0) => delay3_q_net
    );

  dram_munge_c42c0db05c: entity work.dram_munge_entity_c42c0db05c
    port map (
      ce_1 => ce_1_sg_x2114,
      clk_1 => clk_1_sg_x2114,
      din => cast_dout_net_x1,
      init => edge_op_y_net_x4,
      we => mux1_y_net_x1,
      dout => data_choice_y_net_x2,
      we_o => we_choice_y_net_x2
    );

  edge_detect_9f6c77cf4c: entity work.edge_detect_entity_f4cdeabc4a
    port map (
      ce_1 => ce_1_sg_x2114,
      clk_1 => clk_1_sg_x2114,
      in_x0 => delay1_q_net_x0,
      out_x0 => edge_op_y_net_x4
    );

  enable: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x0,
      y(0) => enable_y_net
    );

  inverter: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x2114,
      clk => clk_1_sg_x2114,
      clr => '0',
      ip(0) => edge_op_y_net_x4,
      op(0) => inverter_op_net
    );

  logical: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => mux2_y_net,
      d1(0) => inverter_op_net,
      y(0) => logical_y_net
    );

  mux1: entity work.mux_d99e59b6d4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => one_op_net_x0,
      d1(0) => constant2_op_net,
      sel(0) => delay3_q_net,
      y(0) => mux1_y_net_x1
    );

  mux2: entity work.mux_d99e59b6d4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => register3_q_net_x1,
      d1(0) => constant1_op_net,
      sel(0) => delay2_q_net,
      y(0) => mux2_y_net
    );

  register1: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x2114,
      clk => clk_1_sg_x2114,
      d(0) => constant_op_net,
      en(0) => edge_op_y_net_x4,
      rst(0) => logical_y_net,
      q(0) => register1_q_net
    );

  register6: entity work.xlregister
    generic map (
      d_width => 1,
      init_value => b"0"
    )
    port map (
      ce => ce_1_sg_x2114,
      clk => clk_1_sg_x2114,
      d(0) => mux2_y_net,
      en(0) => register1_q_net,
      rst(0) => edge_op_y_net_x4,
      q(0) => register6_q_net_x1
    );

  trig_src: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 1,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x0,
      y(0) => trig_src_y_net
    );

  valid_src: entity work.xlslice
    generic map (
      new_lsb => 2,
      new_msb => 2,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => reint1_output_port_net_x0,
      y(0) => valid_src_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/snap_0/snapshot/bram/calc_add"

entity calc_add_entity_508c1690a4 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    in_x0: in std_logic_vector(13 downto 0); 
    out_x0: out std_logic_vector(13 downto 0)
  );
end calc_add_entity_508c1690a4;

architecture structural of calc_add_entity_508c1690a4 is
  signal add_del_q_net_x0: std_logic_vector(13 downto 0);
  signal add_sub_s_net: std_logic;
  signal ce_1_sg_x2115: std_logic;
  signal clk_1_sg_x2115: std_logic;
  signal concat_y_net: std_logic_vector(13 downto 0);
  signal const_op_net: std_logic;
  signal convert_addr_dout_net: std_logic_vector(13 downto 0);
  signal lsw_y_net: std_logic;
  signal manipulate_op_net: std_logic;
  signal msw_y_net: std_logic_vector(12 downto 0);
  signal mux_y_net_x0: std_logic_vector(13 downto 0);

begin
  ce_1_sg_x2115 <= ce_1;
  clk_1_sg_x2115 <= clk_1;
  add_del_q_net_x0 <= in_x0;
  out_x0 <= mux_y_net_x0;

  add_sub: entity work.addsub_c13097e33e
    port map (
      a(0) => const_op_net,
      b(0) => lsw_y_net,
      ce => ce_1_sg_x2115,
      clk => clk_1_sg_x2115,
      clr => '0',
      s(0) => add_sub_s_net
    );

  concat: entity work.concat_1658f5c814
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => msw_y_net,
      in1(0) => add_sub_s_net,
      y => concat_y_net
    );

  const: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => const_op_net
    );

  convert_addr: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 14,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 14,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x2115,
      clk => clk_1_sg_x2115,
      clr => '0',
      din => add_del_q_net_x0,
      en => "1",
      dout => convert_addr_dout_net
    );

  lsw: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 14,
      y_width => 1
    )
    port map (
      x => convert_addr_dout_net,
      y(0) => lsw_y_net
    );

  manipulate: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => manipulate_op_net
    );

  msw: entity work.xlslice
    generic map (
      new_lsb => 1,
      new_msb => 13,
      x_width => 14,
      y_width => 13
    )
    port map (
      x => convert_addr_dout_net,
      y => msw_y_net
    );

  mux: entity work.mux_fe93adb3c8
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0 => convert_addr_dout_net,
      d1 => concat_y_net,
      sel(0) => manipulate_op_net,
      y => mux_y_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/snap_0/snapshot/bram/munge_in/join"

entity join_entity_6055da07f7 is
  port (
    in1: in std_logic_vector(31 downto 0); 
    in2: in std_logic_vector(31 downto 0); 
    in3: in std_logic_vector(31 downto 0); 
    in4: in std_logic_vector(31 downto 0); 
    bus_out: out std_logic_vector(127 downto 0)
  );
end join_entity_6055da07f7;

architecture structural of join_entity_6055da07f7 is
  signal concatenate_y_net_x0: std_logic_vector(127 downto 0);
  signal reinterpret1_output_port_net: std_logic_vector(31 downto 0);
  signal reinterpret1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal reinterpret2_output_port_net: std_logic_vector(31 downto 0);
  signal reinterpret2_output_port_net_x1: std_logic_vector(31 downto 0);
  signal reinterpret3_output_port_net: std_logic_vector(31 downto 0);
  signal reinterpret3_output_port_net_x1: std_logic_vector(31 downto 0);
  signal reinterpret4_output_port_net: std_logic_vector(31 downto 0);
  signal reinterpret4_output_port_net_x1: std_logic_vector(31 downto 0);

begin
  reinterpret1_output_port_net_x1 <= in1;
  reinterpret2_output_port_net_x1 <= in2;
  reinterpret3_output_port_net_x1 <= in3;
  reinterpret4_output_port_net_x1 <= in4;
  bus_out <= concatenate_y_net_x0;

  concatenate: entity work.concat_b11ec1c0d4
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => reinterpret1_output_port_net,
      in1 => reinterpret2_output_port_net,
      in2 => reinterpret3_output_port_net,
      in3 => reinterpret4_output_port_net,
      y => concatenate_y_net_x0
    );

  reinterpret1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret1_output_port_net_x1,
      output_port => reinterpret1_output_port_net
    );

  reinterpret2: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret2_output_port_net_x1,
      output_port => reinterpret2_output_port_net
    );

  reinterpret3: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret3_output_port_net_x1,
      output_port => reinterpret3_output_port_net
    );

  reinterpret4: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => reinterpret4_output_port_net_x1,
      output_port => reinterpret4_output_port_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/snap_0/snapshot/bram/munge_in/split"

entity split_entity_c8b4b82bea is
  port (
    bus_in: in std_logic_vector(127 downto 0); 
    lsb_out1: out std_logic_vector(31 downto 0); 
    msb_out4: out std_logic_vector(31 downto 0); 
    out2: out std_logic_vector(31 downto 0); 
    out3: out std_logic_vector(31 downto 0)
  );
end split_entity_c8b4b82bea;

architecture structural of split_entity_c8b4b82bea is
  signal reinterpret1_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reinterpret_output_port_net_x0: std_logic_vector(127 downto 0);
  signal slice1_y_net: std_logic_vector(31 downto 0);
  signal slice2_y_net: std_logic_vector(31 downto 0);
  signal slice3_y_net: std_logic_vector(31 downto 0);
  signal slice4_y_net: std_logic_vector(31 downto 0);

begin
  reinterpret_output_port_net_x0 <= bus_in;
  lsb_out1 <= reinterpret1_output_port_net_x2;
  msb_out4 <= reinterpret4_output_port_net_x2;
  out2 <= reinterpret2_output_port_net_x2;
  out3 <= reinterpret3_output_port_net_x2;

  reinterpret1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice1_y_net,
      output_port => reinterpret1_output_port_net_x2
    );

  reinterpret2: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice2_y_net,
      output_port => reinterpret2_output_port_net_x2
    );

  reinterpret3: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice3_y_net,
      output_port => reinterpret3_output_port_net_x2
    );

  reinterpret4: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice4_y_net,
      output_port => reinterpret4_output_port_net_x2
    );

  slice1: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 128,
      y_width => 32
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice1_y_net
    );

  slice2: entity work.xlslice
    generic map (
      new_lsb => 32,
      new_msb => 63,
      x_width => 128,
      y_width => 32
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice2_y_net
    );

  slice3: entity work.xlslice
    generic map (
      new_lsb => 64,
      new_msb => 95,
      x_width => 128,
      y_width => 32
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice3_y_net
    );

  slice4: entity work.xlslice
    generic map (
      new_lsb => 96,
      new_msb => 127,
      x_width => 128,
      y_width => 32
    )
    port map (
      x => reinterpret_output_port_net_x0,
      y => slice4_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/snap_0/snapshot/bram/munge_in"

entity munge_in_entity_bed8aab5dd is
  port (
    din: in std_logic_vector(127 downto 0); 
    dout: out std_logic_vector(127 downto 0)
  );
end munge_in_entity_bed8aab5dd;

architecture structural of munge_in_entity_bed8aab5dd is
  signal concatenate_y_net_x0: std_logic_vector(127 downto 0);
  signal dat_del_q_net_x0: std_logic_vector(127 downto 0);
  signal reinterpret1_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reinterpret2_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reinterpret3_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reinterpret4_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reinterpret_out_output_port_net_x0: std_logic_vector(127 downto 0);
  signal reinterpret_output_port_net_x0: std_logic_vector(127 downto 0);

begin
  dat_del_q_net_x0 <= din;
  dout <= reinterpret_out_output_port_net_x0;

  join_6055da07f7: entity work.join_entity_6055da07f7
    port map (
      in1 => reinterpret1_output_port_net_x2,
      in2 => reinterpret2_output_port_net_x2,
      in3 => reinterpret3_output_port_net_x2,
      in4 => reinterpret4_output_port_net_x2,
      bus_out => concatenate_y_net_x0
    );

  reinterpret: entity work.reinterpret_28b9ecc6fc
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => dat_del_q_net_x0,
      output_port => reinterpret_output_port_net_x0
    );

  reinterpret_out: entity work.reinterpret_28b9ecc6fc
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => concatenate_y_net_x0,
      output_port => reinterpret_out_output_port_net_x0
    );

  split_c8b4b82bea: entity work.split_entity_c8b4b82bea
    port map (
      bus_in => reinterpret_output_port_net_x0,
      lsb_out1 => reinterpret1_output_port_net_x2,
      msb_out4 => reinterpret4_output_port_net_x2,
      out2 => reinterpret2_output_port_net_x2,
      out3 => reinterpret3_output_port_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/snap_0/snapshot/bram"

entity bram_entity_a8e36475ac is
  port (
    addr: in std_logic_vector(13 downto 0); 
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    data_in: in std_logic_vector(127 downto 0); 
    we: in std_logic; 
    convert_addr_x0: out std_logic_vector(13 downto 0); 
    convert_din1_x0: out std_logic_vector(127 downto 0); 
    convert_we_x0: out std_logic
  );
end bram_entity_a8e36475ac;

architecture structural of bram_entity_a8e36475ac is
  signal add_del_q_net_x1: std_logic_vector(13 downto 0);
  signal ce_1_sg_x2116: std_logic;
  signal clk_1_sg_x2116: std_logic;
  signal convert_addr_dout_net_x0: std_logic_vector(13 downto 0);
  signal convert_din1_dout_net_x0: std_logic_vector(127 downto 0);
  signal convert_we_dout_net_x0: std_logic;
  signal dat_del_q_net_x1: std_logic_vector(127 downto 0);
  signal mux_y_net_x0: std_logic_vector(13 downto 0);
  signal reinterpret_out_output_port_net_x0: std_logic_vector(127 downto 0);
  signal we_del_q_net_x0: std_logic;

begin
  add_del_q_net_x1 <= addr;
  ce_1_sg_x2116 <= ce_1;
  clk_1_sg_x2116 <= clk_1;
  dat_del_q_net_x1 <= data_in;
  we_del_q_net_x0 <= we;
  convert_addr_x0 <= convert_addr_dout_net_x0;
  convert_din1_x0 <= convert_din1_dout_net_x0;
  convert_we_x0 <= convert_we_dout_net_x0;

  calc_add_508c1690a4: entity work.calc_add_entity_508c1690a4
    port map (
      ce_1 => ce_1_sg_x2116,
      clk_1 => clk_1_sg_x2116,
      in_x0 => add_del_q_net_x1,
      out_x0 => mux_y_net_x0
    );

  convert_addr: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 14,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 14,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x2116,
      clk => clk_1_sg_x2116,
      clr => '0',
      din => mux_y_net_x0,
      en => "1",
      dout => convert_addr_dout_net_x0
    );

  convert_din1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 128,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 128,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x2116,
      clk => clk_1_sg_x2116,
      clr => '0',
      din => reinterpret_out_output_port_net_x0,
      en => "1",
      dout => convert_din1_dout_net_x0
    );

  convert_we: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x2116,
      clk => clk_1_sg_x2116,
      clr => '0',
      din(0) => we_del_q_net_x0,
      en => "1",
      dout(0) => convert_we_dout_net_x0
    );

  munge_in_bed8aab5dd: entity work.munge_in_entity_bed8aab5dd
    port map (
      din => dat_del_q_net_x1,
      dout => reinterpret_out_output_port_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/snap_0/snapshot/ctrl"

entity ctrl_entity_b50de02986 is
  port (
    he6_cres_correlator_snap_0_snapshot_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    in_reg: out std_logic_vector(31 downto 0)
  );
end ctrl_entity_b50de02986;

architecture structural of ctrl_entity_b50de02986 is
  signal he6_cres_correlator_snap_0_snapshot_ctrl_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal slice_reg_y_net: std_logic_vector(31 downto 0);

begin
  he6_cres_correlator_snap_0_snapshot_ctrl_user_data_out_net_x0 <= he6_cres_correlator_snap_0_snapshot_ctrl_user_data_out;
  in_reg <= reint1_output_port_net_x1;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => he6_cres_correlator_snap_0_snapshot_ctrl_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reg_y_net,
      output_port => reint1_output_port_net_x1
    );

  slice_reg: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reg_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/snap_0/snapshot"

entity snapshot_entity_d9dfde3ee7 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(127 downto 0); 
    he6_cres_correlator_snap_0_snapshot_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    trig: in std_logic; 
    we: in std_logic; 
    bram: out std_logic_vector(13 downto 0); 
    bram_x0: out std_logic_vector(127 downto 0); 
    bram_x1: out std_logic; 
    status: out std_logic_vector(31 downto 0)
  );
end snapshot_entity_d9dfde3ee7;

architecture structural of snapshot_entity_d9dfde3ee7 is
  signal add_del_q_net_x1: std_logic_vector(13 downto 0);
  signal cast_dout_net_x1: std_logic_vector(127 downto 0);
  signal cast_gw_dout_net_x1: std_logic_vector(31 downto 0);
  signal ce_1_sg_x2118: std_logic;
  signal clk_1_sg_x2118: std_logic;
  signal concat_y_net_x1: std_logic_vector(31 downto 0);
  signal convert_addr_dout_net_x1: std_logic_vector(13 downto 0);
  signal convert_din1_dout_net_x1: std_logic_vector(127 downto 0);
  signal convert_we_dout_net_x1: std_logic;
  signal dat_del_q_net_x1: std_logic_vector(127 downto 0);
  signal data_choice_y_net_x2: std_logic_vector(127 downto 0);
  signal delay6_q_net_x0: std_logic_vector(127 downto 0);
  signal edge_op_y_net_x4: std_logic;
  signal he6_cres_correlator_snap_0_snapshot_ctrl_user_data_out_net_x1: std_logic_vector(31 downto 0);
  signal logical6_y_net_x0: std_logic;
  signal never_op_net_x0: std_logic;
  signal one_op_net_x1: std_logic;
  signal register3_q_net_x2: std_logic_vector(127 downto 0);
  signal register3_q_net_x3: std_logic;
  signal register6_q_net_x1: std_logic;
  signal reint1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal ri_output_port_net: std_logic_vector(127 downto 0);
  signal slice2_y_net_x0: std_logic_vector(13 downto 0);
  signal we_choice_y_net_x2: std_logic;
  signal we_del_q_net_x0: std_logic;

begin
  ce_1_sg_x2118 <= ce_1;
  clk_1_sg_x2118 <= clk_1;
  register3_q_net_x2 <= din;
  he6_cres_correlator_snap_0_snapshot_ctrl_user_data_out_net_x1 <= he6_cres_correlator_snap_0_snapshot_ctrl_user_data_out;
  register3_q_net_x3 <= trig;
  one_op_net_x1 <= we;
  bram <= convert_addr_dout_net_x1;
  bram_x0 <= convert_din1_dout_net_x1;
  bram_x1 <= convert_we_dout_net_x1;
  status <= cast_gw_dout_net_x1;

  add_del: entity work.delay_93ae8f3a04
    port map (
      ce => ce_1_sg_x2118,
      clk => clk_1_sg_x2118,
      clr => '0',
      d => slice2_y_net_x0,
      q => add_del_q_net_x1
    );

  add_gen_8edb7ed25d: entity work.add_gen_entity_8edb7ed25d
    port map (
      ce_1 => ce_1_sg_x2118,
      clk_1 => clk_1_sg_x2118,
      cont => never_op_net_x0,
      din => data_choice_y_net_x2,
      go => register6_q_net_x1,
      init => edge_op_y_net_x4,
      we => we_choice_y_net_x2,
      add => slice2_y_net_x0,
      dout => delay6_q_net_x0,
      status => concat_y_net_x1,
      we_o => logical6_y_net_x0
    );

  basic_ctrl_dce834f10f: entity work.basic_ctrl_entity_dce834f10f
    port map (
      ce_1 => ce_1_sg_x2118,
      clk_1 => clk_1_sg_x2118,
      ctrl => reint1_output_port_net_x1,
      din => cast_dout_net_x1,
      trig => register3_q_net_x3,
      we => one_op_net_x1,
      dout => data_choice_y_net_x2,
      go => register6_q_net_x1,
      init => edge_op_y_net_x4,
      we_o => we_choice_y_net_x2
    );

  bram_a8e36475ac: entity work.bram_entity_a8e36475ac
    port map (
      addr => add_del_q_net_x1,
      ce_1 => ce_1_sg_x2118,
      clk_1 => clk_1_sg_x2118,
      data_in => dat_del_q_net_x1,
      we => we_del_q_net_x0,
      convert_addr_x0 => convert_addr_dout_net_x1,
      convert_din1_x0 => convert_din1_dout_net_x1,
      convert_we_x0 => convert_we_dout_net_x1
    );

  cast: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 128,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 128,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x2118,
      clk => clk_1_sg_x2118,
      clr => '0',
      din => ri_output_port_net,
      en => "1",
      dout => cast_dout_net_x1
    );

  ctrl_b50de02986: entity work.ctrl_entity_b50de02986
    port map (
      he6_cres_correlator_snap_0_snapshot_ctrl_user_data_out => he6_cres_correlator_snap_0_snapshot_ctrl_user_data_out_net_x1,
      in_reg => reint1_output_port_net_x1
    );

  dat_del: entity work.delay_ee0f706095
    port map (
      ce => ce_1_sg_x2118,
      clk => clk_1_sg_x2118,
      clr => '0',
      d => delay6_q_net_x0,
      q => dat_del_q_net_x1
    );

  never: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => never_op_net_x0
    );

  ri: entity work.reinterpret_28b9ecc6fc
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => register3_q_net_x2,
      output_port => ri_output_port_net
    );

  status_05ee19a7fe: entity work.master_status_entity_93c4193870
    port map (
      ce_1 => ce_1_sg_x2118,
      clk_1 => clk_1_sg_x2118,
      out_reg => concat_y_net_x1,
      cast_gw_x0 => cast_gw_dout_net_x1
    );

  we_del: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x2118,
      clk => clk_1_sg_x2118,
      clr => '0',
      d(0) => logical6_y_net_x0,
      q(0) => we_del_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/snap_0"

entity snap_0_entity_dcbb57c472 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(127 downto 0); 
    he6_cres_correlator_snap_0_snapshot_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    sync: in std_logic; 
    snapshot: out std_logic_vector(13 downto 0); 
    snapshot_x0: out std_logic_vector(127 downto 0); 
    snapshot_x1: out std_logic; 
    snapshot_x2: out std_logic_vector(31 downto 0)
  );
end snap_0_entity_dcbb57c472;

architecture structural of snap_0_entity_dcbb57c472 is
  signal cast_gw_dout_net_x2: std_logic_vector(31 downto 0);
  signal ce_1_sg_x2119: std_logic;
  signal clk_1_sg_x2119: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(127 downto 0);
  signal convert_addr_dout_net_x2: std_logic_vector(13 downto 0);
  signal convert_din1_dout_net_x2: std_logic_vector(127 downto 0);
  signal convert_we_dout_net_x2: std_logic;
  signal delay_q_net_x2: std_logic;
  signal he6_cres_correlator_snap_0_snapshot_ctrl_user_data_out_net_x2: std_logic_vector(31 downto 0);
  signal one_op_net_x1: std_logic;
  signal register3_q_net_x2: std_logic_vector(127 downto 0);
  signal register3_q_net_x3: std_logic;

begin
  ce_1_sg_x2119 <= ce_1;
  clk_1_sg_x2119 <= clk_1;
  concatenate_y_net_x2 <= din;
  he6_cres_correlator_snap_0_snapshot_ctrl_user_data_out_net_x2 <= he6_cres_correlator_snap_0_snapshot_ctrl_user_data_out;
  delay_q_net_x2 <= sync;
  snapshot <= convert_addr_dout_net_x2;
  snapshot_x0 <= convert_din1_dout_net_x2;
  snapshot_x1 <= convert_we_dout_net_x2;
  snapshot_x2 <= cast_gw_dout_net_x2;

  one: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => one_op_net_x1
    );

  pipeline19_f9391badef: entity work.pipeline19_entity_f9391badef
    port map (
      ce_1 => ce_1_sg_x2119,
      clk_1 => clk_1_sg_x2119,
      d => concatenate_y_net_x2,
      q => register3_q_net_x2
    );

  pipeline20_08614361da: entity work.pipeline20_entity_08614361da
    port map (
      ce_1 => ce_1_sg_x2119,
      clk_1 => clk_1_sg_x2119,
      d => delay_q_net_x2,
      q => register3_q_net_x3
    );

  snapshot_d9dfde3ee7: entity work.snapshot_entity_d9dfde3ee7
    port map (
      ce_1 => ce_1_sg_x2119,
      clk_1 => clk_1_sg_x2119,
      din => register3_q_net_x2,
      he6_cres_correlator_snap_0_snapshot_ctrl_user_data_out => he6_cres_correlator_snap_0_snapshot_ctrl_user_data_out_net_x2,
      trig => register3_q_net_x3,
      we => one_op_net_x1,
      bram => convert_addr_dout_net_x2,
      bram_x0 => convert_din1_dout_net_x2,
      bram_x1 => convert_we_dout_net_x2,
      status => cast_gw_dout_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/snap_1/snapshot/ctrl"

entity ctrl_entity_d25d23d4aa is
  port (
    he6_cres_correlator_snap_1_snapshot_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    in_reg: out std_logic_vector(31 downto 0)
  );
end ctrl_entity_d25d23d4aa;

architecture structural of ctrl_entity_d25d23d4aa is
  signal he6_cres_correlator_snap_1_snapshot_ctrl_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal slice_reg_y_net: std_logic_vector(31 downto 0);

begin
  he6_cres_correlator_snap_1_snapshot_ctrl_user_data_out_net_x0 <= he6_cres_correlator_snap_1_snapshot_ctrl_user_data_out;
  in_reg <= reint1_output_port_net_x1;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => he6_cres_correlator_snap_1_snapshot_ctrl_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reg_y_net,
      output_port => reint1_output_port_net_x1
    );

  slice_reg: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reg_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/snap_1/snapshot"

entity snapshot_entity_c0059b1628 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(127 downto 0); 
    he6_cres_correlator_snap_1_snapshot_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    trig: in std_logic; 
    we: in std_logic; 
    bram: out std_logic_vector(13 downto 0); 
    bram_x0: out std_logic_vector(127 downto 0); 
    bram_x1: out std_logic; 
    status: out std_logic_vector(31 downto 0)
  );
end snapshot_entity_c0059b1628;

architecture structural of snapshot_entity_c0059b1628 is
  signal add_del_q_net_x1: std_logic_vector(13 downto 0);
  signal cast_dout_net_x1: std_logic_vector(127 downto 0);
  signal cast_gw_dout_net_x1: std_logic_vector(31 downto 0);
  signal ce_1_sg_x2130: std_logic;
  signal clk_1_sg_x2130: std_logic;
  signal concat_y_net_x1: std_logic_vector(31 downto 0);
  signal convert_addr_dout_net_x1: std_logic_vector(13 downto 0);
  signal convert_din1_dout_net_x1: std_logic_vector(127 downto 0);
  signal convert_we_dout_net_x1: std_logic;
  signal dat_del_q_net_x1: std_logic_vector(127 downto 0);
  signal data_choice_y_net_x2: std_logic_vector(127 downto 0);
  signal delay6_q_net_x0: std_logic_vector(127 downto 0);
  signal edge_op_y_net_x4: std_logic;
  signal he6_cres_correlator_snap_1_snapshot_ctrl_user_data_out_net_x1: std_logic_vector(31 downto 0);
  signal logical6_y_net_x0: std_logic;
  signal never_op_net_x0: std_logic;
  signal one_op_net_x1: std_logic;
  signal register3_q_net_x2: std_logic_vector(127 downto 0);
  signal register3_q_net_x3: std_logic;
  signal register6_q_net_x1: std_logic;
  signal reint1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal ri_output_port_net: std_logic_vector(127 downto 0);
  signal slice2_y_net_x0: std_logic_vector(13 downto 0);
  signal we_choice_y_net_x2: std_logic;
  signal we_del_q_net_x0: std_logic;

begin
  ce_1_sg_x2130 <= ce_1;
  clk_1_sg_x2130 <= clk_1;
  register3_q_net_x2 <= din;
  he6_cres_correlator_snap_1_snapshot_ctrl_user_data_out_net_x1 <= he6_cres_correlator_snap_1_snapshot_ctrl_user_data_out;
  register3_q_net_x3 <= trig;
  one_op_net_x1 <= we;
  bram <= convert_addr_dout_net_x1;
  bram_x0 <= convert_din1_dout_net_x1;
  bram_x1 <= convert_we_dout_net_x1;
  status <= cast_gw_dout_net_x1;

  add_del: entity work.delay_93ae8f3a04
    port map (
      ce => ce_1_sg_x2130,
      clk => clk_1_sg_x2130,
      clr => '0',
      d => slice2_y_net_x0,
      q => add_del_q_net_x1
    );

  add_gen_e05e62ffa1: entity work.add_gen_entity_8edb7ed25d
    port map (
      ce_1 => ce_1_sg_x2130,
      clk_1 => clk_1_sg_x2130,
      cont => never_op_net_x0,
      din => data_choice_y_net_x2,
      go => register6_q_net_x1,
      init => edge_op_y_net_x4,
      we => we_choice_y_net_x2,
      add => slice2_y_net_x0,
      dout => delay6_q_net_x0,
      status => concat_y_net_x1,
      we_o => logical6_y_net_x0
    );

  basic_ctrl_2fd34744c7: entity work.basic_ctrl_entity_dce834f10f
    port map (
      ce_1 => ce_1_sg_x2130,
      clk_1 => clk_1_sg_x2130,
      ctrl => reint1_output_port_net_x1,
      din => cast_dout_net_x1,
      trig => register3_q_net_x3,
      we => one_op_net_x1,
      dout => data_choice_y_net_x2,
      go => register6_q_net_x1,
      init => edge_op_y_net_x4,
      we_o => we_choice_y_net_x2
    );

  bram_1ddb1e95eb: entity work.bram_entity_a8e36475ac
    port map (
      addr => add_del_q_net_x1,
      ce_1 => ce_1_sg_x2130,
      clk_1 => clk_1_sg_x2130,
      data_in => dat_del_q_net_x1,
      we => we_del_q_net_x0,
      convert_addr_x0 => convert_addr_dout_net_x1,
      convert_din1_x0 => convert_din1_dout_net_x1,
      convert_we_x0 => convert_we_dout_net_x1
    );

  cast: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 128,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 128,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x2130,
      clk => clk_1_sg_x2130,
      clr => '0',
      din => ri_output_port_net,
      en => "1",
      dout => cast_dout_net_x1
    );

  ctrl_d25d23d4aa: entity work.ctrl_entity_d25d23d4aa
    port map (
      he6_cres_correlator_snap_1_snapshot_ctrl_user_data_out => he6_cres_correlator_snap_1_snapshot_ctrl_user_data_out_net_x1,
      in_reg => reint1_output_port_net_x1
    );

  dat_del: entity work.delay_ee0f706095
    port map (
      ce => ce_1_sg_x2130,
      clk => clk_1_sg_x2130,
      clr => '0',
      d => delay6_q_net_x0,
      q => dat_del_q_net_x1
    );

  never: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => never_op_net_x0
    );

  ri: entity work.reinterpret_28b9ecc6fc
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => register3_q_net_x2,
      output_port => ri_output_port_net
    );

  status_1bf17ea01c: entity work.master_status_entity_93c4193870
    port map (
      ce_1 => ce_1_sg_x2130,
      clk_1 => clk_1_sg_x2130,
      out_reg => concat_y_net_x1,
      cast_gw_x0 => cast_gw_dout_net_x1
    );

  we_del: entity work.delay_9f02caa990
    port map (
      ce => ce_1_sg_x2130,
      clk => clk_1_sg_x2130,
      clr => '0',
      d(0) => logical6_y_net_x0,
      q(0) => we_del_q_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/snap_1"

entity snap_1_entity_96bcb9e9e7 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    din: in std_logic_vector(127 downto 0); 
    he6_cres_correlator_snap_1_snapshot_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    sync: in std_logic; 
    snapshot: out std_logic_vector(13 downto 0); 
    snapshot_x0: out std_logic_vector(127 downto 0); 
    snapshot_x1: out std_logic; 
    snapshot_x2: out std_logic_vector(31 downto 0)
  );
end snap_1_entity_96bcb9e9e7;

architecture structural of snap_1_entity_96bcb9e9e7 is
  signal cast_gw_dout_net_x2: std_logic_vector(31 downto 0);
  signal ce_1_sg_x2131: std_logic;
  signal clk_1_sg_x2131: std_logic;
  signal concatenate_y_net_x2: std_logic_vector(127 downto 0);
  signal convert_addr_dout_net_x2: std_logic_vector(13 downto 0);
  signal convert_din1_dout_net_x2: std_logic_vector(127 downto 0);
  signal convert_we_dout_net_x2: std_logic;
  signal delay_q_net_x4: std_logic;
  signal he6_cres_correlator_snap_1_snapshot_ctrl_user_data_out_net_x2: std_logic_vector(31 downto 0);
  signal one_op_net_x1: std_logic;
  signal register3_q_net_x2: std_logic_vector(127 downto 0);
  signal register3_q_net_x3: std_logic;

begin
  ce_1_sg_x2131 <= ce_1;
  clk_1_sg_x2131 <= clk_1;
  concatenate_y_net_x2 <= din;
  he6_cres_correlator_snap_1_snapshot_ctrl_user_data_out_net_x2 <= he6_cres_correlator_snap_1_snapshot_ctrl_user_data_out;
  delay_q_net_x4 <= sync;
  snapshot <= convert_addr_dout_net_x2;
  snapshot_x0 <= convert_din1_dout_net_x2;
  snapshot_x1 <= convert_we_dout_net_x2;
  snapshot_x2 <= cast_gw_dout_net_x2;

  one: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => one_op_net_x1
    );

  pipeline19_7307eedf82: entity work.pipeline19_entity_f9391badef
    port map (
      ce_1 => ce_1_sg_x2131,
      clk_1 => clk_1_sg_x2131,
      d => concatenate_y_net_x2,
      q => register3_q_net_x2
    );

  pipeline20_f77acd2459: entity work.pipeline20_entity_08614361da
    port map (
      ce_1 => ce_1_sg_x2131,
      clk_1 => clk_1_sg_x2131,
      d => delay_q_net_x4,
      q => register3_q_net_x3
    );

  snapshot_c0059b1628: entity work.snapshot_entity_c0059b1628
    port map (
      ce_1 => ce_1_sg_x2131,
      clk_1 => clk_1_sg_x2131,
      din => register3_q_net_x2,
      he6_cres_correlator_snap_1_snapshot_ctrl_user_data_out => he6_cres_correlator_snap_1_snapshot_ctrl_user_data_out_net_x2,
      trig => register3_q_net_x3,
      we => one_op_net_x1,
      bram => convert_addr_dout_net_x2,
      bram_x0 => convert_din1_dout_net_x2,
      bram_x1 => convert_we_dout_net_x2,
      status => cast_gw_dout_net_x2
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/tengbe_a/core"

entity core_entity_00a4b3ed93 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    rst: in std_logic; 
    rx_ack: in std_logic; 
    rx_overrun_ack: in std_logic; 
    tx_data: in std_logic_vector(63 downto 0); 
    tx_dest_ip: in std_logic_vector(31 downto 0); 
    tx_dest_port: in std_logic_vector(15 downto 0); 
    tx_end_of_frame: in std_logic; 
    tx_valid: in std_logic; 
    convert_rst_x0: out std_logic; 
    convert_rx_ack_x0: out std_logic; 
    convert_rx_overrun_ack_x0: out std_logic; 
    convert_tx_data_x0: out std_logic_vector(63 downto 0); 
    convert_tx_dest_ip_x0: out std_logic_vector(31 downto 0); 
    convert_tx_end_of_frame_x0: out std_logic; 
    convert_tx_port_x0: out std_logic_vector(15 downto 0); 
    convert_tx_valid_x0: out std_logic
  );
end core_entity_00a4b3ed93;

architecture structural of core_entity_00a4b3ed93 is
  signal ce_1_sg_x2132: std_logic;
  signal clk_1_sg_x2132: std_logic;
  signal constant5_op_net_x0: std_logic;
  signal constant6_op_net_x0: std_logic;
  signal convert_rst_dout_net_x0: std_logic;
  signal convert_rx_ack_dout_net_x0: std_logic;
  signal convert_rx_overrun_ack_dout_net_x0: std_logic;
  signal convert_tx_data_dout_net_x0: std_logic_vector(63 downto 0);
  signal convert_tx_dest_ip_dout_net_x0: std_logic_vector(31 downto 0);
  signal convert_tx_end_of_frame_dout_net_x0: std_logic;
  signal convert_tx_port_dout_net_x0: std_logic_vector(15 downto 0);
  signal convert_tx_valid_dout_net_x0: std_logic;
  signal core_rst_y_net_x0: std_logic;
  signal delay_tx_eof_out_q_net_x1: std_logic;
  signal logical_y_net_x0: std_logic;
  signal port_slice_y_net_x0: std_logic_vector(15 downto 0);
  signal register1_q_net_x1: std_logic_vector(63 downto 0);
  signal register2_q_net_x0: std_logic_vector(31 downto 0);

begin
  ce_1_sg_x2132 <= ce_1;
  clk_1_sg_x2132 <= clk_1;
  core_rst_y_net_x0 <= rst;
  constant5_op_net_x0 <= rx_ack;
  constant6_op_net_x0 <= rx_overrun_ack;
  register1_q_net_x1 <= tx_data;
  register2_q_net_x0 <= tx_dest_ip;
  port_slice_y_net_x0 <= tx_dest_port;
  delay_tx_eof_out_q_net_x1 <= tx_end_of_frame;
  logical_y_net_x0 <= tx_valid;
  convert_rst_x0 <= convert_rst_dout_net_x0;
  convert_rx_ack_x0 <= convert_rx_ack_dout_net_x0;
  convert_rx_overrun_ack_x0 <= convert_rx_overrun_ack_dout_net_x0;
  convert_tx_data_x0 <= convert_tx_data_dout_net_x0;
  convert_tx_dest_ip_x0 <= convert_tx_dest_ip_dout_net_x0;
  convert_tx_end_of_frame_x0 <= convert_tx_end_of_frame_dout_net_x0;
  convert_tx_port_x0 <= convert_tx_port_dout_net_x0;
  convert_tx_valid_x0 <= convert_tx_valid_dout_net_x0;

  convert_rst: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x2132,
      clk => clk_1_sg_x2132,
      clr => '0',
      din(0) => core_rst_y_net_x0,
      en => "1",
      dout(0) => convert_rst_dout_net_x0
    );

  convert_rx_ack: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x2132,
      clk => clk_1_sg_x2132,
      clr => '0',
      din(0) => constant5_op_net_x0,
      en => "1",
      dout(0) => convert_rx_ack_dout_net_x0
    );

  convert_rx_overrun_ack: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x2132,
      clk => clk_1_sg_x2132,
      clr => '0',
      din(0) => constant6_op_net_x0,
      en => "1",
      dout(0) => convert_rx_overrun_ack_dout_net_x0
    );

  convert_tx_data: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 64,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 64,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x2132,
      clk => clk_1_sg_x2132,
      clr => '0',
      din => register1_q_net_x1,
      en => "1",
      dout => convert_tx_data_dout_net_x0
    );

  convert_tx_dest_ip: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 32,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 32,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x2132,
      clk => clk_1_sg_x2132,
      clr => '0',
      din => register2_q_net_x0,
      en => "1",
      dout => convert_tx_dest_ip_dout_net_x0
    );

  convert_tx_end_of_frame: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x2132,
      clk => clk_1_sg_x2132,
      clr => '0',
      din(0) => delay_tx_eof_out_q_net_x1,
      en => "1",
      dout(0) => convert_tx_end_of_frame_dout_net_x0
    );

  convert_tx_port: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 16,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 16,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x2132,
      clk => clk_1_sg_x2132,
      clr => '0',
      din => port_slice_y_net_x0,
      en => "1",
      dout => convert_tx_port_dout_net_x0
    );

  convert_tx_valid: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x2132,
      clk => clk_1_sg_x2132,
      clr => '0',
      din(0) => logical_y_net_x0,
      en => "1",
      dout(0) => convert_tx_valid_dout_net_x0
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/tengbe_a/ctrl"

entity ctrl_entity_b481e7b775 is
  port (
    he6_cres_correlator_tengbe_a_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    in_reg: out std_logic_vector(31 downto 0)
  );
end ctrl_entity_b481e7b775;

architecture structural of ctrl_entity_b481e7b775 is
  signal he6_cres_correlator_tengbe_a_ctrl_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal slice_reg_y_net: std_logic_vector(31 downto 0);

begin
  he6_cres_correlator_tengbe_a_ctrl_user_data_out_net_x0 <= he6_cres_correlator_tengbe_a_ctrl_user_data_out;
  in_reg <= reint1_output_port_net_x0;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => he6_cres_correlator_tengbe_a_ctrl_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reg_y_net,
      output_port => reint1_output_port_net_x0
    );

  slice_reg: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reg_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/tengbe_a/ip"

entity ip_entity_50c11cee60 is
  port (
    he6_cres_correlator_tengbe_a_ip_user_data_out: in std_logic_vector(31 downto 0); 
    in_reg: out std_logic_vector(31 downto 0)
  );
end ip_entity_50c11cee60;

architecture structural of ip_entity_50c11cee60 is
  signal he6_cres_correlator_tengbe_a_ip_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal slice_reg_y_net: std_logic_vector(31 downto 0);

begin
  he6_cres_correlator_tengbe_a_ip_user_data_out_net_x0 <= he6_cres_correlator_tengbe_a_ip_user_data_out;
  in_reg <= reint1_output_port_net_x0;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => he6_cres_correlator_tengbe_a_ip_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reg_y_net,
      output_port => reint1_output_port_net_x0
    );

  slice_reg: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reg_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/tengbe_a/port"

entity port_entity_02ef3a0c20 is
  port (
    he6_cres_correlator_tengbe_a_port_user_data_out: in std_logic_vector(31 downto 0); 
    in_reg: out std_logic_vector(31 downto 0)
  );
end port_entity_02ef3a0c20;

architecture structural of port_entity_02ef3a0c20 is
  signal he6_cres_correlator_tengbe_a_port_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal slice_reg_y_net: std_logic_vector(31 downto 0);

begin
  he6_cres_correlator_tengbe_a_port_user_data_out_net_x0 <= he6_cres_correlator_tengbe_a_port_user_data_out;
  in_reg <= reint1_output_port_net_x1;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => he6_cres_correlator_tengbe_a_port_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reg_y_net,
      output_port => reint1_output_port_net_x1
    );

  slice_reg: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reg_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/tengbe_a"

entity tengbe_a_entity_ee6fca51a1 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    he6_cres_correlator_tengbe_a_core_led_rx: in std_logic; 
    he6_cres_correlator_tengbe_a_core_led_tx: in std_logic; 
    he6_cres_correlator_tengbe_a_core_led_up: in std_logic; 
    he6_cres_correlator_tengbe_a_core_tx_afull: in std_logic; 
    he6_cres_correlator_tengbe_a_core_tx_overflow: in std_logic; 
    he6_cres_correlator_tengbe_a_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    he6_cres_correlator_tengbe_a_ip_user_data_out: in std_logic_vector(31 downto 0); 
    he6_cres_correlator_tengbe_a_port_user_data_out: in std_logic_vector(31 downto 0); 
    tx_data: in std_logic_vector(63 downto 0); 
    tx_eof: in std_logic; 
    tx_valid: in std_logic; 
    core: out std_logic; 
    core_x0: out std_logic; 
    core_x1: out std_logic; 
    core_x2: out std_logic_vector(63 downto 0); 
    core_x3: out std_logic_vector(31 downto 0); 
    core_x4: out std_logic; 
    core_x5: out std_logic_vector(15 downto 0); 
    core_x6: out std_logic; 
    software_register: out std_logic_vector(31 downto 0)
  );
end tengbe_a_entity_ee6fca51a1;

architecture structural of tengbe_a_entity_ee6fca51a1 is
  signal cast_gw_dout_net_x1: std_logic_vector(31 downto 0);
  signal ce_1_sg_x2138: std_logic;
  signal clk_1_sg_x2138: std_logic;
  signal concat_y_net_x0: std_logic_vector(31 downto 0);
  signal constant4_op_net: std_logic_vector(2 downto 0);
  signal constant5_op_net_x0: std_logic;
  signal constant6_op_net_x0: std_logic;
  signal convert_rst_dout_net_x1: std_logic;
  signal convert_rx_ack_dout_net_x1: std_logic;
  signal convert_rx_overrun_ack_dout_net_x1: std_logic;
  signal convert_tx_data_dout_net_x1: std_logic_vector(63 downto 0);
  signal convert_tx_dest_ip_dout_net_x1: std_logic_vector(31 downto 0);
  signal convert_tx_end_of_frame_dout_net_x1: std_logic;
  signal convert_tx_port_dout_net_x1: std_logic_vector(15 downto 0);
  signal convert_tx_valid_dout_net_x1: std_logic;
  signal core_rst_y_net_x0: std_logic;
  signal count_pkts_op_net: std_logic_vector(23 downto 0);
  signal delay_tx_eof_out_q_net_x2: std_logic;
  signal he6_cres_correlator_tengbe_a_core_led_rx_net_x0: std_logic;
  signal he6_cres_correlator_tengbe_a_core_led_tx_net_x0: std_logic;
  signal he6_cres_correlator_tengbe_a_core_led_up_net_x0: std_logic;
  signal he6_cres_correlator_tengbe_a_core_tx_afull_net_x0: std_logic;
  signal he6_cres_correlator_tengbe_a_core_tx_overflow_net_x0: std_logic;
  signal he6_cres_correlator_tengbe_a_ctrl_user_data_out_net_x1: std_logic_vector(31 downto 0);
  signal he6_cres_correlator_tengbe_a_ip_user_data_out_net_x1: std_logic_vector(31 downto 0);
  signal he6_cres_correlator_tengbe_a_port_user_data_out_net_x1: std_logic_vector(31 downto 0);
  signal logical_y_net_x1: std_logic;
  signal port_slice_y_net_x0: std_logic_vector(15 downto 0);
  signal register1_q_net_x2: std_logic_vector(63 downto 0);
  signal register2_q_net_x0: std_logic_vector(31 downto 0);
  signal register2_q_net_x1: std_logic_vector(31 downto 0);
  signal register2_q_net_x2: std_logic_vector(31 downto 0);
  signal register2_q_net_x3: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x3: std_logic_vector(31 downto 0);

begin
  ce_1_sg_x2138 <= ce_1;
  clk_1_sg_x2138 <= clk_1;
  he6_cres_correlator_tengbe_a_core_led_rx_net_x0 <= he6_cres_correlator_tengbe_a_core_led_rx;
  he6_cres_correlator_tengbe_a_core_led_tx_net_x0 <= he6_cres_correlator_tengbe_a_core_led_tx;
  he6_cres_correlator_tengbe_a_core_led_up_net_x0 <= he6_cres_correlator_tengbe_a_core_led_up;
  he6_cres_correlator_tengbe_a_core_tx_afull_net_x0 <= he6_cres_correlator_tengbe_a_core_tx_afull;
  he6_cres_correlator_tengbe_a_core_tx_overflow_net_x0 <= he6_cres_correlator_tengbe_a_core_tx_overflow;
  he6_cres_correlator_tengbe_a_ctrl_user_data_out_net_x1 <= he6_cres_correlator_tengbe_a_ctrl_user_data_out;
  he6_cres_correlator_tengbe_a_ip_user_data_out_net_x1 <= he6_cres_correlator_tengbe_a_ip_user_data_out;
  he6_cres_correlator_tengbe_a_port_user_data_out_net_x1 <= he6_cres_correlator_tengbe_a_port_user_data_out;
  register1_q_net_x2 <= tx_data;
  delay_tx_eof_out_q_net_x2 <= tx_eof;
  logical_y_net_x1 <= tx_valid;
  core <= convert_rst_dout_net_x1;
  core_x0 <= convert_rx_ack_dout_net_x1;
  core_x1 <= convert_rx_overrun_ack_dout_net_x1;
  core_x2 <= convert_tx_data_dout_net_x1;
  core_x3 <= convert_tx_dest_ip_dout_net_x1;
  core_x4 <= convert_tx_end_of_frame_dout_net_x1;
  core_x5 <= convert_tx_port_dout_net_x1;
  core_x6 <= convert_tx_valid_dout_net_x1;
  software_register <= cast_gw_dout_net_x1;

  concat: entity work.concat_07700a799a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => constant4_op_net,
      in1 => count_pkts_op_net,
      in2(0) => he6_cres_correlator_tengbe_a_core_led_up_net_x0,
      in3(0) => he6_cres_correlator_tengbe_a_core_led_rx_net_x0,
      in4(0) => he6_cres_correlator_tengbe_a_core_led_tx_net_x0,
      in5(0) => he6_cres_correlator_tengbe_a_core_tx_afull_net_x0,
      in6(0) => he6_cres_correlator_tengbe_a_core_tx_overflow_net_x0,
      y => concat_y_net_x0
    );

  constant4: entity work.constant_822933f89b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant4_op_net
    );

  constant5: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant5_op_net_x0
    );

  constant6: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant6_op_net_x0
    );

  core_00a4b3ed93: entity work.core_entity_00a4b3ed93
    port map (
      ce_1 => ce_1_sg_x2138,
      clk_1 => clk_1_sg_x2138,
      rst => core_rst_y_net_x0,
      rx_ack => constant5_op_net_x0,
      rx_overrun_ack => constant6_op_net_x0,
      tx_data => register1_q_net_x2,
      tx_dest_ip => register2_q_net_x1,
      tx_dest_port => port_slice_y_net_x0,
      tx_end_of_frame => delay_tx_eof_out_q_net_x2,
      tx_valid => logical_y_net_x1,
      convert_rst_x0 => convert_rst_dout_net_x1,
      convert_rx_ack_x0 => convert_rx_ack_dout_net_x1,
      convert_rx_overrun_ack_x0 => convert_rx_overrun_ack_dout_net_x1,
      convert_tx_data_x0 => convert_tx_data_dout_net_x1,
      convert_tx_dest_ip_x0 => convert_tx_dest_ip_dout_net_x1,
      convert_tx_end_of_frame_x0 => convert_tx_end_of_frame_dout_net_x1,
      convert_tx_port_x0 => convert_tx_port_dout_net_x1,
      convert_tx_valid_x0 => convert_tx_valid_dout_net_x1
    );

  core_rst: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => register2_q_net_x0,
      y(0) => core_rst_y_net_x0
    );

  count_pkts: entity work.xlcounter_free_he6_cres_correlator
    generic map (
      core_name0 => "cntr_11_0_6ebc7c4e4d61e8cb",
      op_arith => xlUnsigned,
      op_width => 24
    )
    port map (
      ce => ce_1_sg_x2138,
      clk => clk_1_sg_x2138,
      clr => '0',
      en(0) => delay_tx_eof_out_q_net_x2,
      rst(0) => core_rst_y_net_x0,
      op => count_pkts_op_net
    );

  ctrl_b481e7b775: entity work.ctrl_entity_b481e7b775
    port map (
      he6_cres_correlator_tengbe_a_ctrl_user_data_out => he6_cres_correlator_tengbe_a_ctrl_user_data_out_net_x1,
      in_reg => reint1_output_port_net_x1
    );

  ip_50c11cee60: entity work.ip_entity_50c11cee60
    port map (
      he6_cres_correlator_tengbe_a_ip_user_data_out => he6_cres_correlator_tengbe_a_ip_user_data_out_net_x1,
      in_reg => reint1_output_port_net_x2
    );

  pd_ctrl_f18c71809e: entity work.pipeline37_entity_3460a3e1d6
    port map (
      ce_1 => ce_1_sg_x2138,
      clk_1 => clk_1_sg_x2138,
      d => reint1_output_port_net_x1,
      q => register2_q_net_x0
    );

  pd_ip_a76a398764: entity work.pipeline37_entity_3460a3e1d6
    port map (
      ce_1 => ce_1_sg_x2138,
      clk_1 => clk_1_sg_x2138,
      d => reint1_output_port_net_x2,
      q => register2_q_net_x1
    );

  pd_port_c33e0341ec: entity work.pipeline37_entity_3460a3e1d6
    port map (
      ce_1 => ce_1_sg_x2138,
      clk_1 => clk_1_sg_x2138,
      d => reint1_output_port_net_x3,
      q => register2_q_net_x2
    );

  pd_status_29c872c9a3: entity work.pipeline37_entity_3460a3e1d6
    port map (
      ce_1 => ce_1_sg_x2138,
      clk_1 => clk_1_sg_x2138,
      d => concat_y_net_x0,
      q => register2_q_net_x3
    );

  port_02ef3a0c20: entity work.port_entity_02ef3a0c20
    port map (
      he6_cres_correlator_tengbe_a_port_user_data_out => he6_cres_correlator_tengbe_a_port_user_data_out_net_x1,
      in_reg => reint1_output_port_net_x3
    );

  port_slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 32,
      y_width => 16
    )
    port map (
      x => register2_q_net_x2,
      y => port_slice_y_net_x0
    );

  software_register_64db82d98c: entity work.master_status_entity_93c4193870
    port map (
      ce_1 => ce_1_sg_x2138,
      clk_1 => clk_1_sg_x2138,
      out_reg => register2_q_net_x3,
      cast_gw_x0 => cast_gw_dout_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/tengbe_b/ctrl"

entity ctrl_entity_a7d51c0321 is
  port (
    he6_cres_correlator_tengbe_b_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    in_reg: out std_logic_vector(31 downto 0)
  );
end ctrl_entity_a7d51c0321;

architecture structural of ctrl_entity_a7d51c0321 is
  signal he6_cres_correlator_tengbe_b_ctrl_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal slice_reg_y_net: std_logic_vector(31 downto 0);

begin
  he6_cres_correlator_tengbe_b_ctrl_user_data_out_net_x0 <= he6_cres_correlator_tengbe_b_ctrl_user_data_out;
  in_reg <= reint1_output_port_net_x0;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => he6_cres_correlator_tengbe_b_ctrl_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reg_y_net,
      output_port => reint1_output_port_net_x0
    );

  slice_reg: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reg_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/tengbe_b/ip"

entity ip_entity_08bc8f0abb is
  port (
    he6_cres_correlator_tengbe_b_ip_user_data_out: in std_logic_vector(31 downto 0); 
    in_reg: out std_logic_vector(31 downto 0)
  );
end ip_entity_08bc8f0abb;

architecture structural of ip_entity_08bc8f0abb is
  signal he6_cres_correlator_tengbe_b_ip_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x0: std_logic_vector(31 downto 0);
  signal slice_reg_y_net: std_logic_vector(31 downto 0);

begin
  he6_cres_correlator_tengbe_b_ip_user_data_out_net_x0 <= he6_cres_correlator_tengbe_b_ip_user_data_out;
  in_reg <= reint1_output_port_net_x0;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => he6_cres_correlator_tengbe_b_ip_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reg_y_net,
      output_port => reint1_output_port_net_x0
    );

  slice_reg: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reg_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/tengbe_b/port"

entity port_entity_1044dee5b1 is
  port (
    he6_cres_correlator_tengbe_b_port_user_data_out: in std_logic_vector(31 downto 0); 
    in_reg: out std_logic_vector(31 downto 0)
  );
end port_entity_1044dee5b1;

architecture structural of port_entity_1044dee5b1 is
  signal he6_cres_correlator_tengbe_b_port_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal slice_reg_y_net: std_logic_vector(31 downto 0);

begin
  he6_cres_correlator_tengbe_b_port_user_data_out_net_x0 <= he6_cres_correlator_tengbe_b_port_user_data_out;
  in_reg <= reint1_output_port_net_x1;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => he6_cres_correlator_tengbe_b_port_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reg_y_net,
      output_port => reint1_output_port_net_x1
    );

  slice_reg: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reg_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/tengbe_b"

entity tengbe_b_entity_be3246f042 is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    he6_cres_correlator_tengbe_b_core_led_rx: in std_logic; 
    he6_cres_correlator_tengbe_b_core_led_tx: in std_logic; 
    he6_cres_correlator_tengbe_b_core_led_up: in std_logic; 
    he6_cres_correlator_tengbe_b_core_tx_afull: in std_logic; 
    he6_cres_correlator_tengbe_b_core_tx_overflow: in std_logic; 
    he6_cres_correlator_tengbe_b_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    he6_cres_correlator_tengbe_b_ip_user_data_out: in std_logic_vector(31 downto 0); 
    he6_cres_correlator_tengbe_b_port_user_data_out: in std_logic_vector(31 downto 0); 
    tx_data: in std_logic_vector(63 downto 0); 
    tx_eof: in std_logic; 
    tx_valid: in std_logic; 
    core: out std_logic; 
    core_x0: out std_logic; 
    core_x1: out std_logic; 
    core_x2: out std_logic_vector(63 downto 0); 
    core_x3: out std_logic_vector(31 downto 0); 
    core_x4: out std_logic; 
    core_x5: out std_logic_vector(15 downto 0); 
    core_x6: out std_logic; 
    software_register: out std_logic_vector(31 downto 0)
  );
end tengbe_b_entity_be3246f042;

architecture structural of tengbe_b_entity_be3246f042 is
  signal cast_gw_dout_net_x1: std_logic_vector(31 downto 0);
  signal ce_1_sg_x2145: std_logic;
  signal clk_1_sg_x2145: std_logic;
  signal concat_y_net_x0: std_logic_vector(31 downto 0);
  signal constant4_op_net: std_logic_vector(2 downto 0);
  signal constant5_op_net_x0: std_logic;
  signal constant6_op_net_x0: std_logic;
  signal convert_rst_dout_net_x1: std_logic;
  signal convert_rx_ack_dout_net_x1: std_logic;
  signal convert_rx_overrun_ack_dout_net_x1: std_logic;
  signal convert_tx_data_dout_net_x1: std_logic_vector(63 downto 0);
  signal convert_tx_dest_ip_dout_net_x1: std_logic_vector(31 downto 0);
  signal convert_tx_end_of_frame_dout_net_x1: std_logic;
  signal convert_tx_port_dout_net_x1: std_logic_vector(15 downto 0);
  signal convert_tx_valid_dout_net_x1: std_logic;
  signal core_rst_y_net_x0: std_logic;
  signal count_pkts_op_net: std_logic_vector(23 downto 0);
  signal delay_tx_eof_out_q_net_x4: std_logic;
  signal he6_cres_correlator_tengbe_b_core_led_rx_net_x0: std_logic;
  signal he6_cres_correlator_tengbe_b_core_led_tx_net_x0: std_logic;
  signal he6_cres_correlator_tengbe_b_core_led_up_net_x0: std_logic;
  signal he6_cres_correlator_tengbe_b_core_tx_afull_net_x0: std_logic;
  signal he6_cres_correlator_tengbe_b_core_tx_overflow_net_x0: std_logic;
  signal he6_cres_correlator_tengbe_b_ctrl_user_data_out_net_x1: std_logic_vector(31 downto 0);
  signal he6_cres_correlator_tengbe_b_ip_user_data_out_net_x1: std_logic_vector(31 downto 0);
  signal he6_cres_correlator_tengbe_b_port_user_data_out_net_x1: std_logic_vector(31 downto 0);
  signal logical1_y_net_x1: std_logic;
  signal port_slice_y_net_x0: std_logic_vector(15 downto 0);
  signal register1_q_net_x4: std_logic_vector(63 downto 0);
  signal register2_q_net_x0: std_logic_vector(31 downto 0);
  signal register2_q_net_x1: std_logic_vector(31 downto 0);
  signal register2_q_net_x2: std_logic_vector(31 downto 0);
  signal register2_q_net_x3: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x1: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x3: std_logic_vector(31 downto 0);

begin
  ce_1_sg_x2145 <= ce_1;
  clk_1_sg_x2145 <= clk_1;
  he6_cres_correlator_tengbe_b_core_led_rx_net_x0 <= he6_cres_correlator_tengbe_b_core_led_rx;
  he6_cres_correlator_tengbe_b_core_led_tx_net_x0 <= he6_cres_correlator_tengbe_b_core_led_tx;
  he6_cres_correlator_tengbe_b_core_led_up_net_x0 <= he6_cres_correlator_tengbe_b_core_led_up;
  he6_cres_correlator_tengbe_b_core_tx_afull_net_x0 <= he6_cres_correlator_tengbe_b_core_tx_afull;
  he6_cres_correlator_tengbe_b_core_tx_overflow_net_x0 <= he6_cres_correlator_tengbe_b_core_tx_overflow;
  he6_cres_correlator_tengbe_b_ctrl_user_data_out_net_x1 <= he6_cres_correlator_tengbe_b_ctrl_user_data_out;
  he6_cres_correlator_tengbe_b_ip_user_data_out_net_x1 <= he6_cres_correlator_tengbe_b_ip_user_data_out;
  he6_cres_correlator_tengbe_b_port_user_data_out_net_x1 <= he6_cres_correlator_tengbe_b_port_user_data_out;
  register1_q_net_x4 <= tx_data;
  delay_tx_eof_out_q_net_x4 <= tx_eof;
  logical1_y_net_x1 <= tx_valid;
  core <= convert_rst_dout_net_x1;
  core_x0 <= convert_rx_ack_dout_net_x1;
  core_x1 <= convert_rx_overrun_ack_dout_net_x1;
  core_x2 <= convert_tx_data_dout_net_x1;
  core_x3 <= convert_tx_dest_ip_dout_net_x1;
  core_x4 <= convert_tx_end_of_frame_dout_net_x1;
  core_x5 <= convert_tx_port_dout_net_x1;
  core_x6 <= convert_tx_valid_dout_net_x1;
  software_register <= cast_gw_dout_net_x1;

  concat: entity work.concat_07700a799a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => constant4_op_net,
      in1 => count_pkts_op_net,
      in2(0) => he6_cres_correlator_tengbe_b_core_led_up_net_x0,
      in3(0) => he6_cres_correlator_tengbe_b_core_led_rx_net_x0,
      in4(0) => he6_cres_correlator_tengbe_b_core_led_tx_net_x0,
      in5(0) => he6_cres_correlator_tengbe_b_core_tx_afull_net_x0,
      in6(0) => he6_cres_correlator_tengbe_b_core_tx_overflow_net_x0,
      y => concat_y_net_x0
    );

  constant4: entity work.constant_822933f89b
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant4_op_net
    );

  constant5: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant5_op_net_x0
    );

  constant6: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant6_op_net_x0
    );

  core_2ea7c43a48: entity work.core_entity_00a4b3ed93
    port map (
      ce_1 => ce_1_sg_x2145,
      clk_1 => clk_1_sg_x2145,
      rst => core_rst_y_net_x0,
      rx_ack => constant5_op_net_x0,
      rx_overrun_ack => constant6_op_net_x0,
      tx_data => register1_q_net_x4,
      tx_dest_ip => register2_q_net_x1,
      tx_dest_port => port_slice_y_net_x0,
      tx_end_of_frame => delay_tx_eof_out_q_net_x4,
      tx_valid => logical1_y_net_x1,
      convert_rst_x0 => convert_rst_dout_net_x1,
      convert_rx_ack_x0 => convert_rx_ack_dout_net_x1,
      convert_rx_overrun_ack_x0 => convert_rx_overrun_ack_dout_net_x1,
      convert_tx_data_x0 => convert_tx_data_dout_net_x1,
      convert_tx_dest_ip_x0 => convert_tx_dest_ip_dout_net_x1,
      convert_tx_end_of_frame_x0 => convert_tx_end_of_frame_dout_net_x1,
      convert_tx_port_x0 => convert_tx_port_dout_net_x1,
      convert_tx_valid_x0 => convert_tx_valid_dout_net_x1
    );

  core_rst: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 32,
      y_width => 1
    )
    port map (
      x => register2_q_net_x0,
      y(0) => core_rst_y_net_x0
    );

  count_pkts: entity work.xlcounter_free_he6_cres_correlator
    generic map (
      core_name0 => "cntr_11_0_6ebc7c4e4d61e8cb",
      op_arith => xlUnsigned,
      op_width => 24
    )
    port map (
      ce => ce_1_sg_x2145,
      clk => clk_1_sg_x2145,
      clr => '0',
      en(0) => delay_tx_eof_out_q_net_x4,
      rst(0) => core_rst_y_net_x0,
      op => count_pkts_op_net
    );

  ctrl_a7d51c0321: entity work.ctrl_entity_a7d51c0321
    port map (
      he6_cres_correlator_tengbe_b_ctrl_user_data_out => he6_cres_correlator_tengbe_b_ctrl_user_data_out_net_x1,
      in_reg => reint1_output_port_net_x1
    );

  ip_08bc8f0abb: entity work.ip_entity_08bc8f0abb
    port map (
      he6_cres_correlator_tengbe_b_ip_user_data_out => he6_cres_correlator_tengbe_b_ip_user_data_out_net_x1,
      in_reg => reint1_output_port_net_x2
    );

  pd_ctrl_c9114eace3: entity work.pipeline37_entity_3460a3e1d6
    port map (
      ce_1 => ce_1_sg_x2145,
      clk_1 => clk_1_sg_x2145,
      d => reint1_output_port_net_x1,
      q => register2_q_net_x0
    );

  pd_ip_99ec9444f7: entity work.pipeline37_entity_3460a3e1d6
    port map (
      ce_1 => ce_1_sg_x2145,
      clk_1 => clk_1_sg_x2145,
      d => reint1_output_port_net_x2,
      q => register2_q_net_x1
    );

  pd_port_77b5428493: entity work.pipeline37_entity_3460a3e1d6
    port map (
      ce_1 => ce_1_sg_x2145,
      clk_1 => clk_1_sg_x2145,
      d => reint1_output_port_net_x3,
      q => register2_q_net_x2
    );

  pd_status_9a94caaf89: entity work.pipeline37_entity_3460a3e1d6
    port map (
      ce_1 => ce_1_sg_x2145,
      clk_1 => clk_1_sg_x2145,
      d => concat_y_net_x0,
      q => register2_q_net_x3
    );

  port_1044dee5b1: entity work.port_entity_1044dee5b1
    port map (
      he6_cres_correlator_tengbe_b_port_user_data_out => he6_cres_correlator_tengbe_b_port_user_data_out_net_x1,
      in_reg => reint1_output_port_net_x3
    );

  port_slice: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 15,
      x_width => 32,
      y_width => 16
    )
    port map (
      x => register2_q_net_x2,
      y => port_slice_y_net_x0
    );

  software_register_6f3f66e4bf: entity work.master_status_entity_93c4193870
    port map (
      ce_1 => ce_1_sg_x2145,
      clk_1 => clk_1_sg_x2145,
      out_reg => register2_q_net_x3,
      cast_gw_x0 => cast_gw_dout_net_x1
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator/unix_time0"

entity unix_time0_entity_b3948a48d1 is
  port (
    he6_cres_correlator_unix_time0_user_data_out: in std_logic_vector(31 downto 0); 
    in_reg: out std_logic_vector(31 downto 0)
  );
end unix_time0_entity_b3948a48d1;

architecture structural of unix_time0_entity_b3948a48d1 is
  signal he6_cres_correlator_unix_time0_user_data_out_net_x0: std_logic_vector(31 downto 0);
  signal io_delay_q_net: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x3: std_logic_vector(31 downto 0);
  signal slice_reg_y_net: std_logic_vector(31 downto 0);

begin
  he6_cres_correlator_unix_time0_user_data_out_net_x0 <= he6_cres_correlator_unix_time0_user_data_out;
  in_reg <= reint1_output_port_net_x3;

  io_delay: entity work.delay_2b0feb00fb
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d => he6_cres_correlator_unix_time0_user_data_out_net_x0,
      q => io_delay_q_net
    );

  reint1: entity work.reinterpret_c5d4d59b73
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      input_port => slice_reg_y_net,
      output_port => reint1_output_port_net_x3
    );

  slice_reg: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 31,
      x_width => 32,
      y_width => 32
    )
    port map (
      x => io_delay_q_net,
      y => slice_reg_y_net
    );

end structural;
library IEEE;
use IEEE.std_logic_1164.all;
use work.conv_pkg.all;

-- Generated from Simulink block "he6_cres_correlator"

entity he6_cres_correlator is
  port (
    ce_1: in std_logic; 
    clk_1: in std_logic; 
    he6_cres_correlator_adc0_sync: in std_logic; 
    he6_cres_correlator_adc0_user_data_i0: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc0_user_data_i1: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc0_user_data_i2: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc0_user_data_i3: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc0_user_data_i4: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc0_user_data_i5: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc0_user_data_i6: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc0_user_data_i7: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc0_user_data_q0: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc0_user_data_q1: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc0_user_data_q2: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc0_user_data_q3: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc0_user_data_q4: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc0_user_data_q5: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc0_user_data_q6: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc0_user_data_q7: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc1_sync: in std_logic; 
    he6_cres_correlator_adc1_user_data_i0: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc1_user_data_i1: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc1_user_data_i2: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc1_user_data_i3: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc1_user_data_i4: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc1_user_data_i5: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc1_user_data_i6: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc1_user_data_i7: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc1_user_data_q0: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc1_user_data_q1: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc1_user_data_q2: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc1_user_data_q3: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc1_user_data_q4: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc1_user_data_q5: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc1_user_data_q6: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_adc1_user_data_q7: in std_logic_vector(7 downto 0); 
    he6_cres_correlator_fft_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    he6_cres_correlator_gain_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    he6_cres_correlator_master_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    he6_cres_correlator_snap_0_snapshot_bram_data_out: in std_logic_vector(127 downto 0); 
    he6_cres_correlator_snap_0_snapshot_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    he6_cres_correlator_snap_1_snapshot_bram_data_out: in std_logic_vector(127 downto 0); 
    he6_cres_correlator_snap_1_snapshot_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    he6_cres_correlator_tengbe_a_core_led_rx: in std_logic; 
    he6_cres_correlator_tengbe_a_core_led_tx: in std_logic; 
    he6_cres_correlator_tengbe_a_core_led_up: in std_logic; 
    he6_cres_correlator_tengbe_a_core_rx_bad_frame: in std_logic; 
    he6_cres_correlator_tengbe_a_core_rx_data: in std_logic_vector(63 downto 0); 
    he6_cres_correlator_tengbe_a_core_rx_dest_ip: in std_logic_vector(31 downto 0); 
    he6_cres_correlator_tengbe_a_core_rx_dest_port: in std_logic_vector(15 downto 0); 
    he6_cres_correlator_tengbe_a_core_rx_end_of_frame: in std_logic; 
    he6_cres_correlator_tengbe_a_core_rx_overrun: in std_logic; 
    he6_cres_correlator_tengbe_a_core_rx_source_ip: in std_logic_vector(31 downto 0); 
    he6_cres_correlator_tengbe_a_core_rx_source_port: in std_logic_vector(15 downto 0); 
    he6_cres_correlator_tengbe_a_core_rx_valid: in std_logic; 
    he6_cres_correlator_tengbe_a_core_tx_afull: in std_logic; 
    he6_cres_correlator_tengbe_a_core_tx_overflow: in std_logic; 
    he6_cres_correlator_tengbe_a_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    he6_cres_correlator_tengbe_a_ip_user_data_out: in std_logic_vector(31 downto 0); 
    he6_cres_correlator_tengbe_a_port_user_data_out: in std_logic_vector(31 downto 0); 
    he6_cres_correlator_tengbe_b_core_led_rx: in std_logic; 
    he6_cres_correlator_tengbe_b_core_led_tx: in std_logic; 
    he6_cres_correlator_tengbe_b_core_led_up: in std_logic; 
    he6_cres_correlator_tengbe_b_core_rx_bad_frame: in std_logic; 
    he6_cres_correlator_tengbe_b_core_rx_data: in std_logic_vector(63 downto 0); 
    he6_cres_correlator_tengbe_b_core_rx_dest_ip: in std_logic_vector(31 downto 0); 
    he6_cres_correlator_tengbe_b_core_rx_dest_port: in std_logic_vector(15 downto 0); 
    he6_cres_correlator_tengbe_b_core_rx_end_of_frame: in std_logic; 
    he6_cres_correlator_tengbe_b_core_rx_overrun: in std_logic; 
    he6_cres_correlator_tengbe_b_core_rx_source_ip: in std_logic_vector(31 downto 0); 
    he6_cres_correlator_tengbe_b_core_rx_source_port: in std_logic_vector(15 downto 0); 
    he6_cres_correlator_tengbe_b_core_rx_valid: in std_logic; 
    he6_cres_correlator_tengbe_b_core_tx_afull: in std_logic; 
    he6_cres_correlator_tengbe_b_core_tx_overflow: in std_logic; 
    he6_cres_correlator_tengbe_b_ctrl_user_data_out: in std_logic_vector(31 downto 0); 
    he6_cres_correlator_tengbe_b_ip_user_data_out: in std_logic_vector(31 downto 0); 
    he6_cres_correlator_tengbe_b_port_user_data_out: in std_logic_vector(31 downto 0); 
    he6_cres_correlator_unix_time0_user_data_out: in std_logic_vector(31 downto 0); 
    he6_cres_correlator_master_status_user_data_in: out std_logic_vector(31 downto 0); 
    he6_cres_correlator_snap_0_snapshot_bram_addr: out std_logic_vector(13 downto 0); 
    he6_cres_correlator_snap_0_snapshot_bram_data_in: out std_logic_vector(127 downto 0); 
    he6_cres_correlator_snap_0_snapshot_bram_we: out std_logic; 
    he6_cres_correlator_snap_0_snapshot_status_user_data_in: out std_logic_vector(31 downto 0); 
    he6_cres_correlator_snap_1_snapshot_bram_addr: out std_logic_vector(13 downto 0); 
    he6_cres_correlator_snap_1_snapshot_bram_data_in: out std_logic_vector(127 downto 0); 
    he6_cres_correlator_snap_1_snapshot_bram_we: out std_logic; 
    he6_cres_correlator_snap_1_snapshot_status_user_data_in: out std_logic_vector(31 downto 0); 
    he6_cres_correlator_tengbe_a_core_rst: out std_logic; 
    he6_cres_correlator_tengbe_a_core_rx_ack: out std_logic; 
    he6_cres_correlator_tengbe_a_core_rx_overrun_ack: out std_logic; 
    he6_cres_correlator_tengbe_a_core_tx_data: out std_logic_vector(63 downto 0); 
    he6_cres_correlator_tengbe_a_core_tx_dest_ip: out std_logic_vector(31 downto 0); 
    he6_cres_correlator_tengbe_a_core_tx_dest_port: out std_logic_vector(15 downto 0); 
    he6_cres_correlator_tengbe_a_core_tx_end_of_frame: out std_logic; 
    he6_cres_correlator_tengbe_a_core_tx_valid: out std_logic; 
    he6_cres_correlator_tengbe_a_software_register_user_data_in: out std_logic_vector(31 downto 0); 
    he6_cres_correlator_tengbe_b_core_rst: out std_logic; 
    he6_cres_correlator_tengbe_b_core_rx_ack: out std_logic; 
    he6_cres_correlator_tengbe_b_core_rx_overrun_ack: out std_logic; 
    he6_cres_correlator_tengbe_b_core_tx_data: out std_logic_vector(63 downto 0); 
    he6_cres_correlator_tengbe_b_core_tx_dest_ip: out std_logic_vector(31 downto 0); 
    he6_cres_correlator_tengbe_b_core_tx_dest_port: out std_logic_vector(15 downto 0); 
    he6_cres_correlator_tengbe_b_core_tx_end_of_frame: out std_logic; 
    he6_cres_correlator_tengbe_b_core_tx_valid: out std_logic; 
    he6_cres_correlator_tengbe_b_software_register_user_data_in: out std_logic_vector(31 downto 0)
  );
end he6_cres_correlator;

architecture structural of he6_cres_correlator is
  attribute core_generation_info: string;
  attribute core_generation_info of structural : architecture is "he6_cres_correlator,sysgen_core,{clock_period=5.71430000,clocking=Clock_Enables,compilation=NGC_Netlist,sample_periods=1.00000000000,testbench=0,total_blocks=50986,xilinx_adder_subtracter_block=1297,xilinx_arithmetic_relational_operator_block=215,xilinx_assert_block=28,xilinx_binary_shift_operator_block=18,xilinx_bit_slice_extractor_block=6548,xilinx_bus_concatenator_block=1615,xilinx_bus_multiplexer_block=488,xilinx_constant_block_block=2010,xilinx_counter_block=191,xilinx_delay_block=1855,xilinx_disregard_subsystem_for_generation_block=2,xilinx_dual_port_random_access_memory_block=1,xilinx_gateway_in_block=82,xilinx_gateway_out_block=29,xilinx_input_scaler_block=336,xilinx_inverter_block=884,xilinx_logical_block_block=1735,xilinx_multiplier_block=352,xilinx_negate_block_block=66,xilinx_register_block=233,xilinx_single_port_random_access_memory_block=100,xilinx_single_port_read_only_memory_block=91,xilinx_system_generator_block=1,xilinx_type_converter_block=523,xilinx_type_reinterpreter_block=10879,}";

  signal bit0_y_net_x1: std_logic;
  signal bit_0_y_net_x0: std_logic;
  signal ce_1_sg_x2146: std_logic;
  signal clk_1_sg_x2146: std_logic;
  signal cnt_ab_op_net: std_logic_vector(9 downto 0);
  signal concat_y_net_x0: std_logic_vector(31 downto 0);
  signal concatenate_y_net_x1: std_logic_vector(63 downto 0);
  signal concatenate_y_net_x2: std_logic_vector(127 downto 0);
  signal concatenate_y_net_x3: std_logic_vector(127 downto 0);
  signal constant1_op_net: std_logic;
  signal constant2_op_net_x12: std_logic_vector(14 downto 0);
  signal constant3_op_net: std_logic;
  signal constant_op_net_x0: std_logic_vector(1 downto 0);
  signal convert1_dout_net_x0: std_logic_vector(7 downto 0);
  signal convert2_dout_net_x0: std_logic_vector(7 downto 0);
  signal convert3_dout_net_x0: std_logic_vector(7 downto 0);
  signal convert4_dout_net_x0: std_logic_vector(7 downto 0);
  signal convert5_dout_net_x0: std_logic_vector(7 downto 0);
  signal convert6_dout_net_x0: std_logic_vector(7 downto 0);
  signal convert7_dout_net_x0: std_logic_vector(7 downto 0);
  signal convert8_dout_net: std_logic;
  signal convert9_dout_net: std_logic;
  signal convert_1_10_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_11_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_12_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_13_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_14_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_15_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_16_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_1_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_2_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_3_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_4_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_5_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_6_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_7_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_8_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_1_9_dout_net_x0: std_logic_vector(17 downto 0);
  signal convert_dout_net_x0: std_logic_vector(7 downto 0);
  signal counter_0_op_net: std_logic;
  signal delay1_q_net_x1: std_logic;
  signal delay_q_net_x4: std_logic;
  signal delay_tx_eof_out_q_net_x4: std_logic;
  signal delay_tx_valid_out_q_net_x0: std_logic;
  signal edge_op_y_net_x17: std_logic;
  signal force_im_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x2: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x3: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x4: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x5: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x6: std_logic_vector(17 downto 0);
  signal force_im_output_port_net_x7: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x0: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x1: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x2: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x3: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x4: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x5: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x6: std_logic_vector(17 downto 0);
  signal force_re_output_port_net_x7: std_logic_vector(17 downto 0);
  signal he6_cres_correlator_adc0_sync_net: std_logic;
  signal he6_cres_correlator_adc0_user_data_i0_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc0_user_data_i1_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc0_user_data_i2_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc0_user_data_i3_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc0_user_data_i4_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc0_user_data_i5_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc0_user_data_i6_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc0_user_data_i7_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc0_user_data_q0_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc0_user_data_q1_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc0_user_data_q2_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc0_user_data_q3_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc0_user_data_q4_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc0_user_data_q5_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc0_user_data_q6_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc0_user_data_q7_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc1_sync_net: std_logic;
  signal he6_cres_correlator_adc1_user_data_i0_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc1_user_data_i1_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc1_user_data_i2_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc1_user_data_i3_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc1_user_data_i4_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc1_user_data_i5_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc1_user_data_i6_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc1_user_data_i7_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc1_user_data_q0_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc1_user_data_q1_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc1_user_data_q2_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc1_user_data_q3_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc1_user_data_q4_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc1_user_data_q5_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc1_user_data_q6_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_adc1_user_data_q7_net: std_logic_vector(7 downto 0);
  signal he6_cres_correlator_fft_ctrl_user_data_out_net: std_logic_vector(31 downto 0);
  signal he6_cres_correlator_gain_ctrl_user_data_out_net: std_logic_vector(31 downto 0);
  signal he6_cres_correlator_master_ctrl_user_data_out_net: std_logic_vector(31 downto 0);
  signal he6_cres_correlator_master_status_user_data_in_net: std_logic_vector(31 downto 0);
  signal he6_cres_correlator_snap_0_snapshot_bram_addr_net: std_logic_vector(13 downto 0);
  signal he6_cres_correlator_snap_0_snapshot_bram_data_in_net: std_logic_vector(127 downto 0);
  signal he6_cres_correlator_snap_0_snapshot_bram_data_out_net: std_logic_vector(127 downto 0);
  signal he6_cres_correlator_snap_0_snapshot_bram_we_net: std_logic;
  signal he6_cres_correlator_snap_0_snapshot_ctrl_user_data_out_net: std_logic_vector(31 downto 0);
  signal he6_cres_correlator_snap_0_snapshot_status_user_data_in_net: std_logic_vector(31 downto 0);
  signal he6_cres_correlator_snap_1_snapshot_bram_addr_net: std_logic_vector(13 downto 0);
  signal he6_cres_correlator_snap_1_snapshot_bram_data_in_net: std_logic_vector(127 downto 0);
  signal he6_cres_correlator_snap_1_snapshot_bram_data_out_net: std_logic_vector(127 downto 0);
  signal he6_cres_correlator_snap_1_snapshot_bram_we_net: std_logic;
  signal he6_cres_correlator_snap_1_snapshot_ctrl_user_data_out_net: std_logic_vector(31 downto 0);
  signal he6_cres_correlator_snap_1_snapshot_status_user_data_in_net: std_logic_vector(31 downto 0);
  signal he6_cres_correlator_tengbe_a_core_led_rx_net: std_logic;
  signal he6_cres_correlator_tengbe_a_core_led_tx_net: std_logic;
  signal he6_cres_correlator_tengbe_a_core_led_up_net: std_logic;
  signal he6_cres_correlator_tengbe_a_core_rst_net: std_logic;
  signal he6_cres_correlator_tengbe_a_core_rx_ack_net: std_logic;
  signal he6_cres_correlator_tengbe_a_core_rx_bad_frame_net: std_logic;
  signal he6_cres_correlator_tengbe_a_core_rx_data_net: std_logic_vector(63 downto 0);
  signal he6_cres_correlator_tengbe_a_core_rx_dest_ip_net: std_logic_vector(31 downto 0);
  signal he6_cres_correlator_tengbe_a_core_rx_dest_port_net: std_logic_vector(15 downto 0);
  signal he6_cres_correlator_tengbe_a_core_rx_end_of_frame_net: std_logic;
  signal he6_cres_correlator_tengbe_a_core_rx_overrun_ack_net: std_logic;
  signal he6_cres_correlator_tengbe_a_core_rx_overrun_net: std_logic;
  signal he6_cres_correlator_tengbe_a_core_rx_source_ip_net: std_logic_vector(31 downto 0);
  signal he6_cres_correlator_tengbe_a_core_rx_source_port_net: std_logic_vector(15 downto 0);
  signal he6_cres_correlator_tengbe_a_core_rx_valid_net: std_logic;
  signal he6_cres_correlator_tengbe_a_core_tx_afull_net: std_logic;
  signal he6_cres_correlator_tengbe_a_core_tx_data_net: std_logic_vector(63 downto 0);
  signal he6_cres_correlator_tengbe_a_core_tx_dest_ip_net: std_logic_vector(31 downto 0);
  signal he6_cres_correlator_tengbe_a_core_tx_dest_port_net: std_logic_vector(15 downto 0);
  signal he6_cres_correlator_tengbe_a_core_tx_end_of_frame_net: std_logic;
  signal he6_cres_correlator_tengbe_a_core_tx_overflow_net: std_logic;
  signal he6_cres_correlator_tengbe_a_core_tx_valid_net: std_logic;
  signal he6_cres_correlator_tengbe_a_ctrl_user_data_out_net: std_logic_vector(31 downto 0);
  signal he6_cres_correlator_tengbe_a_ip_user_data_out_net: std_logic_vector(31 downto 0);
  signal he6_cres_correlator_tengbe_a_port_user_data_out_net: std_logic_vector(31 downto 0);
  signal he6_cres_correlator_tengbe_a_software_register_user_data_in_net: std_logic_vector(31 downto 0);
  signal he6_cres_correlator_tengbe_b_core_led_rx_net: std_logic;
  signal he6_cres_correlator_tengbe_b_core_led_tx_net: std_logic;
  signal he6_cres_correlator_tengbe_b_core_led_up_net: std_logic;
  signal he6_cres_correlator_tengbe_b_core_rst_net: std_logic;
  signal he6_cres_correlator_tengbe_b_core_rx_ack_net: std_logic;
  signal he6_cres_correlator_tengbe_b_core_rx_bad_frame_net: std_logic;
  signal he6_cres_correlator_tengbe_b_core_rx_data_net: std_logic_vector(63 downto 0);
  signal he6_cres_correlator_tengbe_b_core_rx_dest_ip_net: std_logic_vector(31 downto 0);
  signal he6_cres_correlator_tengbe_b_core_rx_dest_port_net: std_logic_vector(15 downto 0);
  signal he6_cres_correlator_tengbe_b_core_rx_end_of_frame_net: std_logic;
  signal he6_cres_correlator_tengbe_b_core_rx_overrun_ack_net: std_logic;
  signal he6_cres_correlator_tengbe_b_core_rx_overrun_net: std_logic;
  signal he6_cres_correlator_tengbe_b_core_rx_source_ip_net: std_logic_vector(31 downto 0);
  signal he6_cres_correlator_tengbe_b_core_rx_source_port_net: std_logic_vector(15 downto 0);
  signal he6_cres_correlator_tengbe_b_core_rx_valid_net: std_logic;
  signal he6_cres_correlator_tengbe_b_core_tx_afull_net: std_logic;
  signal he6_cres_correlator_tengbe_b_core_tx_data_net: std_logic_vector(63 downto 0);
  signal he6_cres_correlator_tengbe_b_core_tx_dest_ip_net: std_logic_vector(31 downto 0);
  signal he6_cres_correlator_tengbe_b_core_tx_dest_port_net: std_logic_vector(15 downto 0);
  signal he6_cres_correlator_tengbe_b_core_tx_end_of_frame_net: std_logic;
  signal he6_cres_correlator_tengbe_b_core_tx_overflow_net: std_logic;
  signal he6_cres_correlator_tengbe_b_core_tx_valid_net: std_logic;
  signal he6_cres_correlator_tengbe_b_ctrl_user_data_out_net: std_logic_vector(31 downto 0);
  signal he6_cres_correlator_tengbe_b_ip_user_data_out_net: std_logic_vector(31 downto 0);
  signal he6_cres_correlator_tengbe_b_port_user_data_out_net: std_logic_vector(31 downto 0);
  signal he6_cres_correlator_tengbe_b_software_register_user_data_in_net: std_logic_vector(31 downto 0);
  signal he6_cres_correlator_unix_time0_user_data_out_net: std_logic_vector(31 downto 0);
  signal imag_square1_p_net: std_logic_vector(17 downto 0);
  signal imag_square2_p_net: std_logic_vector(17 downto 0);
  signal imag_square3_p_net: std_logic_vector(17 downto 0);
  signal imag_square4_p_net: std_logic_vector(17 downto 0);
  signal imag_square5_p_net: std_logic_vector(17 downto 0);
  signal imag_square6_p_net: std_logic_vector(17 downto 0);
  signal imag_square7_p_net: std_logic_vector(17 downto 0);
  signal imag_square_p_net: std_logic_vector(17 downto 0);
  signal inverter_0_op_net: std_logic;
  signal logical1_y_net_x1: std_logic;
  signal logical_0_y_net: std_logic;
  signal logical_y_net_x1: std_logic;
  signal mult10_p_net_x2: std_logic_vector(14 downto 0);
  signal mult11_p_net_x2: std_logic_vector(14 downto 0);
  signal mult12_p_net_x2: std_logic_vector(14 downto 0);
  signal mult13_p_net_x2: std_logic_vector(14 downto 0);
  signal mult14_p_net_x2: std_logic_vector(14 downto 0);
  signal mult15_p_net_x2: std_logic_vector(14 downto 0);
  signal mult1_p_net_x2: std_logic_vector(14 downto 0);
  signal mult2_p_net_x2: std_logic_vector(14 downto 0);
  signal mult3_p_net_x2: std_logic_vector(14 downto 0);
  signal mult4_p_net_x2: std_logic_vector(14 downto 0);
  signal mult5_p_net_x2: std_logic_vector(14 downto 0);
  signal mult6_p_net_x2: std_logic_vector(14 downto 0);
  signal mult7_p_net_x2: std_logic_vector(14 downto 0);
  signal mult8_p_net_x2: std_logic_vector(14 downto 0);
  signal mult9_p_net_x2: std_logic_vector(14 downto 0);
  signal mult_p_net_x68: std_logic_vector(14 downto 0);
  signal mux_y_net_x1: std_logic_vector(63 downto 0);
  signal of_or_y_net_x0: std_logic_vector(3 downto 0);
  signal post_sync_delay_q_net_x3: std_logic;
  signal power_adder1_s_net: std_logic_vector(17 downto 0);
  signal power_adder2_s_net: std_logic_vector(17 downto 0);
  signal power_adder3_s_net: std_logic_vector(17 downto 0);
  signal power_adder4_s_net: std_logic_vector(17 downto 0);
  signal power_adder5_s_net: std_logic_vector(17 downto 0);
  signal power_adder6_s_net: std_logic_vector(17 downto 0);
  signal power_adder7_s_net: std_logic_vector(17 downto 0);
  signal power_adder_s_net: std_logic_vector(17 downto 0);
  signal real_square1_p_net: std_logic_vector(17 downto 0);
  signal real_square2_p_net: std_logic_vector(17 downto 0);
  signal real_square3_p_net: std_logic_vector(17 downto 0);
  signal real_square4_p_net: std_logic_vector(17 downto 0);
  signal real_square5_p_net: std_logic_vector(17 downto 0);
  signal real_square6_p_net: std_logic_vector(17 downto 0);
  signal real_square7_p_net: std_logic_vector(17 downto 0);
  signal real_square_p_net: std_logic_vector(17 downto 0);
  signal register1_q_net_x4: std_logic_vector(63 downto 0);
  signal register2_q_net_x1: std_logic_vector(31 downto 0);
  signal register2_q_net_x2: std_logic;
  signal register2_q_net_x62: std_logic_vector(7 downto 0);
  signal register2_q_net_x63: std_logic_vector(7 downto 0);
  signal register2_q_net_x64: std_logic_vector(7 downto 0);
  signal register2_q_net_x65: std_logic_vector(7 downto 0);
  signal register2_q_net_x66: std_logic_vector(7 downto 0);
  signal register2_q_net_x67: std_logic_vector(7 downto 0);
  signal register2_q_net_x68: std_logic_vector(7 downto 0);
  signal register2_q_net_x69: std_logic_vector(7 downto 0);
  signal register2_q_net_x70: std_logic_vector(7 downto 0);
  signal register2_q_net_x71: std_logic_vector(7 downto 0);
  signal register2_q_net_x72: std_logic_vector(7 downto 0);
  signal register2_q_net_x73: std_logic_vector(7 downto 0);
  signal register2_q_net_x74: std_logic_vector(7 downto 0);
  signal register2_q_net_x75: std_logic_vector(7 downto 0);
  signal register2_q_net_x76: std_logic_vector(7 downto 0);
  signal register2_q_net_x77: std_logic_vector(7 downto 0);
  signal register2_q_net_x78: std_logic_vector(7 downto 0);
  signal register2_q_net_x79: std_logic_vector(7 downto 0);
  signal register2_q_net_x80: std_logic_vector(7 downto 0);
  signal register2_q_net_x81: std_logic_vector(7 downto 0);
  signal register2_q_net_x82: std_logic_vector(7 downto 0);
  signal register2_q_net_x83: std_logic_vector(7 downto 0);
  signal register2_q_net_x84: std_logic_vector(7 downto 0);
  signal register2_q_net_x85: std_logic_vector(7 downto 0);
  signal register2_q_net_x86: std_logic_vector(7 downto 0);
  signal register2_q_net_x87: std_logic_vector(7 downto 0);
  signal register2_q_net_x88: std_logic_vector(7 downto 0);
  signal register2_q_net_x89: std_logic_vector(7 downto 0);
  signal register2_q_net_x90: std_logic_vector(7 downto 0);
  signal register2_q_net_x91: std_logic_vector(7 downto 0);
  signal register2_q_net_x92: std_logic_vector(7 downto 0);
  signal register2_q_net_x93: std_logic_vector(7 downto 0);
  signal register4_q_net_x2: std_logic;
  signal reint1_output_port_net_x2: std_logic_vector(31 downto 0);
  signal reint1_output_port_net_x3: std_logic_vector(31 downto 0);
  signal reinterpret1_output_port_net_x47: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x48: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x49: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x50: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x51: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x52: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x53: std_logic_vector(35 downto 0);
  signal reinterpret1_output_port_net_x54: std_logic_vector(35 downto 0);
  signal reinterpret_output_port_net_x32: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x33: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x34: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x35: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x36: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x37: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x38: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x39: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x40: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x41: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x42: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x43: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x44: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x45: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x46: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x47: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x48: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x49: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x50: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x51: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x52: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x53: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x54: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x55: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x56: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x57: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x58: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x59: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x60: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x61: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x62: std_logic_vector(7 downto 0);
  signal reinterpret_output_port_net_x63: std_logic_vector(7 downto 0);
  signal relational1_op_net: std_logic;
  signal relational2_op_net: std_logic;
  signal rsv0_a_op_net_x0: std_logic_vector(63 downto 0);
  signal rsv1_a_op_net_x0: std_logic_vector(63 downto 0);
  signal shift10_op_net_x1: std_logic_vector(17 downto 0);
  signal shift11_op_net_x1: std_logic_vector(17 downto 0);
  signal shift12_op_net_x1: std_logic_vector(17 downto 0);
  signal shift13_op_net_x1: std_logic_vector(17 downto 0);
  signal shift14_op_net_x1: std_logic_vector(17 downto 0);
  signal shift15_op_net_x1: std_logic_vector(17 downto 0);
  signal shift1_op_net_x1: std_logic_vector(17 downto 0);
  signal shift2_op_net_x1: std_logic_vector(17 downto 0);
  signal shift3_op_net_x1: std_logic_vector(17 downto 0);
  signal shift4_op_net_x1: std_logic_vector(17 downto 0);
  signal shift5_op_net_x1: std_logic_vector(17 downto 0);
  signal shift6_op_net_x1: std_logic_vector(17 downto 0);
  signal shift7_op_net_x1: std_logic_vector(17 downto 0);
  signal shift8_op_net_x1: std_logic_vector(17 downto 0);
  signal shift9_op_net_x1: std_logic_vector(17 downto 0);
  signal shift_op_net_x1: std_logic_vector(17 downto 0);
  signal toggle_op_net: std_logic;
  signal unix_time1_s_net_x1: std_logic_vector(31 downto 0);
  signal zero_op_net: std_logic_vector(19 downto 0);

begin
  ce_1_sg_x2146 <= ce_1;
  clk_1_sg_x2146 <= clk_1;
  he6_cres_correlator_adc0_sync_net <= he6_cres_correlator_adc0_sync;
  he6_cres_correlator_adc0_user_data_i0_net <= he6_cres_correlator_adc0_user_data_i0;
  he6_cres_correlator_adc0_user_data_i1_net <= he6_cres_correlator_adc0_user_data_i1;
  he6_cres_correlator_adc0_user_data_i2_net <= he6_cres_correlator_adc0_user_data_i2;
  he6_cres_correlator_adc0_user_data_i3_net <= he6_cres_correlator_adc0_user_data_i3;
  he6_cres_correlator_adc0_user_data_i4_net <= he6_cres_correlator_adc0_user_data_i4;
  he6_cres_correlator_adc0_user_data_i5_net <= he6_cres_correlator_adc0_user_data_i5;
  he6_cres_correlator_adc0_user_data_i6_net <= he6_cres_correlator_adc0_user_data_i6;
  he6_cres_correlator_adc0_user_data_i7_net <= he6_cres_correlator_adc0_user_data_i7;
  he6_cres_correlator_adc0_user_data_q0_net <= he6_cres_correlator_adc0_user_data_q0;
  he6_cres_correlator_adc0_user_data_q1_net <= he6_cres_correlator_adc0_user_data_q1;
  he6_cres_correlator_adc0_user_data_q2_net <= he6_cres_correlator_adc0_user_data_q2;
  he6_cres_correlator_adc0_user_data_q3_net <= he6_cres_correlator_adc0_user_data_q3;
  he6_cres_correlator_adc0_user_data_q4_net <= he6_cres_correlator_adc0_user_data_q4;
  he6_cres_correlator_adc0_user_data_q5_net <= he6_cres_correlator_adc0_user_data_q5;
  he6_cres_correlator_adc0_user_data_q6_net <= he6_cres_correlator_adc0_user_data_q6;
  he6_cres_correlator_adc0_user_data_q7_net <= he6_cres_correlator_adc0_user_data_q7;
  he6_cres_correlator_adc1_sync_net <= he6_cres_correlator_adc1_sync;
  he6_cres_correlator_adc1_user_data_i0_net <= he6_cres_correlator_adc1_user_data_i0;
  he6_cres_correlator_adc1_user_data_i1_net <= he6_cres_correlator_adc1_user_data_i1;
  he6_cres_correlator_adc1_user_data_i2_net <= he6_cres_correlator_adc1_user_data_i2;
  he6_cres_correlator_adc1_user_data_i3_net <= he6_cres_correlator_adc1_user_data_i3;
  he6_cres_correlator_adc1_user_data_i4_net <= he6_cres_correlator_adc1_user_data_i4;
  he6_cres_correlator_adc1_user_data_i5_net <= he6_cres_correlator_adc1_user_data_i5;
  he6_cres_correlator_adc1_user_data_i6_net <= he6_cres_correlator_adc1_user_data_i6;
  he6_cres_correlator_adc1_user_data_i7_net <= he6_cres_correlator_adc1_user_data_i7;
  he6_cres_correlator_adc1_user_data_q0_net <= he6_cres_correlator_adc1_user_data_q0;
  he6_cres_correlator_adc1_user_data_q1_net <= he6_cres_correlator_adc1_user_data_q1;
  he6_cres_correlator_adc1_user_data_q2_net <= he6_cres_correlator_adc1_user_data_q2;
  he6_cres_correlator_adc1_user_data_q3_net <= he6_cres_correlator_adc1_user_data_q3;
  he6_cres_correlator_adc1_user_data_q4_net <= he6_cres_correlator_adc1_user_data_q4;
  he6_cres_correlator_adc1_user_data_q5_net <= he6_cres_correlator_adc1_user_data_q5;
  he6_cres_correlator_adc1_user_data_q6_net <= he6_cres_correlator_adc1_user_data_q6;
  he6_cres_correlator_adc1_user_data_q7_net <= he6_cres_correlator_adc1_user_data_q7;
  he6_cres_correlator_fft_ctrl_user_data_out_net <= he6_cres_correlator_fft_ctrl_user_data_out;
  he6_cres_correlator_gain_ctrl_user_data_out_net <= he6_cres_correlator_gain_ctrl_user_data_out;
  he6_cres_correlator_master_ctrl_user_data_out_net <= he6_cres_correlator_master_ctrl_user_data_out;
  he6_cres_correlator_snap_0_snapshot_bram_data_out_net <= he6_cres_correlator_snap_0_snapshot_bram_data_out;
  he6_cres_correlator_snap_0_snapshot_ctrl_user_data_out_net <= he6_cres_correlator_snap_0_snapshot_ctrl_user_data_out;
  he6_cres_correlator_snap_1_snapshot_bram_data_out_net <= he6_cres_correlator_snap_1_snapshot_bram_data_out;
  he6_cres_correlator_snap_1_snapshot_ctrl_user_data_out_net <= he6_cres_correlator_snap_1_snapshot_ctrl_user_data_out;
  he6_cres_correlator_tengbe_a_core_led_rx_net <= he6_cres_correlator_tengbe_a_core_led_rx;
  he6_cres_correlator_tengbe_a_core_led_tx_net <= he6_cres_correlator_tengbe_a_core_led_tx;
  he6_cres_correlator_tengbe_a_core_led_up_net <= he6_cres_correlator_tengbe_a_core_led_up;
  he6_cres_correlator_tengbe_a_core_rx_bad_frame_net <= he6_cres_correlator_tengbe_a_core_rx_bad_frame;
  he6_cres_correlator_tengbe_a_core_rx_data_net <= he6_cres_correlator_tengbe_a_core_rx_data;
  he6_cres_correlator_tengbe_a_core_rx_dest_ip_net <= he6_cres_correlator_tengbe_a_core_rx_dest_ip;
  he6_cres_correlator_tengbe_a_core_rx_dest_port_net <= he6_cres_correlator_tengbe_a_core_rx_dest_port;
  he6_cres_correlator_tengbe_a_core_rx_end_of_frame_net <= he6_cres_correlator_tengbe_a_core_rx_end_of_frame;
  he6_cres_correlator_tengbe_a_core_rx_overrun_net <= he6_cres_correlator_tengbe_a_core_rx_overrun;
  he6_cres_correlator_tengbe_a_core_rx_source_ip_net <= he6_cres_correlator_tengbe_a_core_rx_source_ip;
  he6_cres_correlator_tengbe_a_core_rx_source_port_net <= he6_cres_correlator_tengbe_a_core_rx_source_port;
  he6_cres_correlator_tengbe_a_core_rx_valid_net <= he6_cres_correlator_tengbe_a_core_rx_valid;
  he6_cres_correlator_tengbe_a_core_tx_afull_net <= he6_cres_correlator_tengbe_a_core_tx_afull;
  he6_cres_correlator_tengbe_a_core_tx_overflow_net <= he6_cres_correlator_tengbe_a_core_tx_overflow;
  he6_cres_correlator_tengbe_a_ctrl_user_data_out_net <= he6_cres_correlator_tengbe_a_ctrl_user_data_out;
  he6_cres_correlator_tengbe_a_ip_user_data_out_net <= he6_cres_correlator_tengbe_a_ip_user_data_out;
  he6_cres_correlator_tengbe_a_port_user_data_out_net <= he6_cres_correlator_tengbe_a_port_user_data_out;
  he6_cres_correlator_tengbe_b_core_led_rx_net <= he6_cres_correlator_tengbe_b_core_led_rx;
  he6_cres_correlator_tengbe_b_core_led_tx_net <= he6_cres_correlator_tengbe_b_core_led_tx;
  he6_cres_correlator_tengbe_b_core_led_up_net <= he6_cres_correlator_tengbe_b_core_led_up;
  he6_cres_correlator_tengbe_b_core_rx_bad_frame_net <= he6_cres_correlator_tengbe_b_core_rx_bad_frame;
  he6_cres_correlator_tengbe_b_core_rx_data_net <= he6_cres_correlator_tengbe_b_core_rx_data;
  he6_cres_correlator_tengbe_b_core_rx_dest_ip_net <= he6_cres_correlator_tengbe_b_core_rx_dest_ip;
  he6_cres_correlator_tengbe_b_core_rx_dest_port_net <= he6_cres_correlator_tengbe_b_core_rx_dest_port;
  he6_cres_correlator_tengbe_b_core_rx_end_of_frame_net <= he6_cres_correlator_tengbe_b_core_rx_end_of_frame;
  he6_cres_correlator_tengbe_b_core_rx_overrun_net <= he6_cres_correlator_tengbe_b_core_rx_overrun;
  he6_cres_correlator_tengbe_b_core_rx_source_ip_net <= he6_cres_correlator_tengbe_b_core_rx_source_ip;
  he6_cres_correlator_tengbe_b_core_rx_source_port_net <= he6_cres_correlator_tengbe_b_core_rx_source_port;
  he6_cres_correlator_tengbe_b_core_rx_valid_net <= he6_cres_correlator_tengbe_b_core_rx_valid;
  he6_cres_correlator_tengbe_b_core_tx_afull_net <= he6_cres_correlator_tengbe_b_core_tx_afull;
  he6_cres_correlator_tengbe_b_core_tx_overflow_net <= he6_cres_correlator_tengbe_b_core_tx_overflow;
  he6_cres_correlator_tengbe_b_ctrl_user_data_out_net <= he6_cres_correlator_tengbe_b_ctrl_user_data_out;
  he6_cres_correlator_tengbe_b_ip_user_data_out_net <= he6_cres_correlator_tengbe_b_ip_user_data_out;
  he6_cres_correlator_tengbe_b_port_user_data_out_net <= he6_cres_correlator_tengbe_b_port_user_data_out;
  he6_cres_correlator_unix_time0_user_data_out_net <= he6_cres_correlator_unix_time0_user_data_out;
  he6_cres_correlator_master_status_user_data_in <= he6_cres_correlator_master_status_user_data_in_net;
  he6_cres_correlator_snap_0_snapshot_bram_addr <= he6_cres_correlator_snap_0_snapshot_bram_addr_net;
  he6_cres_correlator_snap_0_snapshot_bram_data_in <= he6_cres_correlator_snap_0_snapshot_bram_data_in_net;
  he6_cres_correlator_snap_0_snapshot_bram_we <= he6_cres_correlator_snap_0_snapshot_bram_we_net;
  he6_cres_correlator_snap_0_snapshot_status_user_data_in <= he6_cres_correlator_snap_0_snapshot_status_user_data_in_net;
  he6_cres_correlator_snap_1_snapshot_bram_addr <= he6_cres_correlator_snap_1_snapshot_bram_addr_net;
  he6_cres_correlator_snap_1_snapshot_bram_data_in <= he6_cres_correlator_snap_1_snapshot_bram_data_in_net;
  he6_cres_correlator_snap_1_snapshot_bram_we <= he6_cres_correlator_snap_1_snapshot_bram_we_net;
  he6_cres_correlator_snap_1_snapshot_status_user_data_in <= he6_cres_correlator_snap_1_snapshot_status_user_data_in_net;
  he6_cres_correlator_tengbe_a_core_rst <= he6_cres_correlator_tengbe_a_core_rst_net;
  he6_cres_correlator_tengbe_a_core_rx_ack <= he6_cres_correlator_tengbe_a_core_rx_ack_net;
  he6_cres_correlator_tengbe_a_core_rx_overrun_ack <= he6_cres_correlator_tengbe_a_core_rx_overrun_ack_net;
  he6_cres_correlator_tengbe_a_core_tx_data <= he6_cres_correlator_tengbe_a_core_tx_data_net;
  he6_cres_correlator_tengbe_a_core_tx_dest_ip <= he6_cres_correlator_tengbe_a_core_tx_dest_ip_net;
  he6_cres_correlator_tengbe_a_core_tx_dest_port <= he6_cres_correlator_tengbe_a_core_tx_dest_port_net;
  he6_cres_correlator_tengbe_a_core_tx_end_of_frame <= he6_cres_correlator_tengbe_a_core_tx_end_of_frame_net;
  he6_cres_correlator_tengbe_a_core_tx_valid <= he6_cres_correlator_tengbe_a_core_tx_valid_net;
  he6_cres_correlator_tengbe_a_software_register_user_data_in <= he6_cres_correlator_tengbe_a_software_register_user_data_in_net;
  he6_cres_correlator_tengbe_b_core_rst <= he6_cres_correlator_tengbe_b_core_rst_net;
  he6_cres_correlator_tengbe_b_core_rx_ack <= he6_cres_correlator_tengbe_b_core_rx_ack_net;
  he6_cres_correlator_tengbe_b_core_rx_overrun_ack <= he6_cres_correlator_tengbe_b_core_rx_overrun_ack_net;
  he6_cres_correlator_tengbe_b_core_tx_data <= he6_cres_correlator_tengbe_b_core_tx_data_net;
  he6_cres_correlator_tengbe_b_core_tx_dest_ip <= he6_cres_correlator_tengbe_b_core_tx_dest_ip_net;
  he6_cres_correlator_tengbe_b_core_tx_dest_port <= he6_cres_correlator_tengbe_b_core_tx_dest_port_net;
  he6_cres_correlator_tengbe_b_core_tx_end_of_frame <= he6_cres_correlator_tengbe_b_core_tx_end_of_frame_net;
  he6_cres_correlator_tengbe_b_core_tx_valid <= he6_cres_correlator_tengbe_b_core_tx_valid_net;
  he6_cres_correlator_tengbe_b_software_register_user_data_in <= he6_cres_correlator_tengbe_b_software_register_user_data_in_net;

  bit_0: entity work.xlslice
    generic map (
      new_lsb => 0,
      new_msb => 0,
      x_width => 1,
      y_width => 1
    )
    port map (
      x(0) => counter_0_op_net,
      y(0) => bit_0_y_net_x0
    );

  bus_0_47a4de7e8f: entity work.bus_0_entity_47a4de7e8f
    port map (
      in1 => reinterpret_output_port_net_x32,
      in10 => reinterpret_output_port_net_x47,
      in11 => reinterpret_output_port_net_x34,
      in12 => reinterpret_output_port_net_x35,
      in13 => reinterpret_output_port_net_x36,
      in14 => reinterpret_output_port_net_x37,
      in15 => reinterpret_output_port_net_x38,
      in16 => reinterpret_output_port_net_x39,
      in2 => reinterpret_output_port_net_x33,
      in3 => reinterpret_output_port_net_x40,
      in4 => reinterpret_output_port_net_x41,
      in5 => reinterpret_output_port_net_x42,
      in6 => reinterpret_output_port_net_x43,
      in7 => reinterpret_output_port_net_x44,
      in8 => reinterpret_output_port_net_x45,
      in9 => reinterpret_output_port_net_x46,
      bus_out => concatenate_y_net_x2
    );

  bus_0fc5403b8c: entity work.bus_entity_0fc5403b8c
    port map (
      in1 => convert_dout_net_x0,
      in2 => convert1_dout_net_x0,
      in3 => convert2_dout_net_x0,
      in4 => convert3_dout_net_x0,
      in5 => convert4_dout_net_x0,
      in6 => convert5_dout_net_x0,
      in7 => convert6_dout_net_x0,
      in8 => convert7_dout_net_x0,
      bus_out => concatenate_y_net_x1
    );

  bus_1_cfdb5eae80: entity work.bus_0_entity_47a4de7e8f
    port map (
      in1 => reinterpret_output_port_net_x48,
      in10 => reinterpret_output_port_net_x63,
      in11 => reinterpret_output_port_net_x50,
      in12 => reinterpret_output_port_net_x51,
      in13 => reinterpret_output_port_net_x52,
      in14 => reinterpret_output_port_net_x53,
      in15 => reinterpret_output_port_net_x54,
      in16 => reinterpret_output_port_net_x55,
      in2 => reinterpret_output_port_net_x49,
      in3 => reinterpret_output_port_net_x56,
      in4 => reinterpret_output_port_net_x57,
      in5 => reinterpret_output_port_net_x58,
      in6 => reinterpret_output_port_net_x59,
      in7 => reinterpret_output_port_net_x60,
      in8 => reinterpret_output_port_net_x61,
      in9 => reinterpret_output_port_net_x62,
      bus_out => concatenate_y_net_x3
    );

  c_to_ri1_1af4be60aa: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => reinterpret1_output_port_net_x48,
      im => force_im_output_port_net_x1,
      re => force_re_output_port_net_x1
    );

  c_to_ri2_f6630b74cb: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => reinterpret1_output_port_net_x49,
      im => force_im_output_port_net_x2,
      re => force_re_output_port_net_x2
    );

  c_to_ri3_0493480c20: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => reinterpret1_output_port_net_x50,
      im => force_im_output_port_net_x3,
      re => force_re_output_port_net_x3
    );

  c_to_ri4_ace58b8872: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => reinterpret1_output_port_net_x51,
      im => force_im_output_port_net_x4,
      re => force_re_output_port_net_x4
    );

  c_to_ri5_fa4169c266: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => reinterpret1_output_port_net_x52,
      im => force_im_output_port_net_x5,
      re => force_re_output_port_net_x5
    );

  c_to_ri6_6b4fa55d06: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => reinterpret1_output_port_net_x53,
      im => force_im_output_port_net_x6,
      re => force_re_output_port_net_x6
    );

  c_to_ri7_eaaf60c96e: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => reinterpret1_output_port_net_x54,
      im => force_im_output_port_net_x7,
      re => force_re_output_port_net_x7
    );

  c_to_ri_d7f27c9f1c: entity work.c_to_ri_entity_d7f27c9f1c
    port map (
      c => reinterpret1_output_port_net_x47,
      im => force_im_output_port_net_x0,
      re => force_re_output_port_net_x0
    );

  cnt_ab: entity work.xlcounter_free_he6_cres_correlator
    generic map (
      core_name0 => "cntr_11_0_5c0d8fded7f0a054",
      op_arith => xlUnsigned,
      op_width => 10
    )
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      en(0) => convert9_dout_net,
      rst(0) => bit0_y_net_x1,
      op => cnt_ab_op_net
    );

  concat: entity work.concat_24a5eba783
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      in0 => zero_op_net,
      in1 => cnt_ab_op_net,
      in2 => constant_op_net_x0,
      y => concat_y_net_x0
    );

  constant1: entity work.constant_6293007044
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant1_op_net
    );

  constant2: entity work.constant_2be7cd032c
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => constant2_op_net_x12
    );

  constant3: entity work.constant_963ed6358a
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => constant3_op_net
    );

  conv_ob_0_35487c77f0: entity work.conv_ob_0_entity_35487c77f0
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      i0 => register2_q_net_x90,
      i1 => register2_q_net_x89,
      i10 => register2_q_net_x79,
      i11 => register2_q_net_x78,
      i12 => register2_q_net_x77,
      i13 => register2_q_net_x64,
      i14 => register2_q_net_x63,
      i15 => register2_q_net_x62,
      i2 => register2_q_net_x88,
      i3 => register2_q_net_x87,
      i4 => register2_q_net_x86,
      i5 => register2_q_net_x85,
      i6 => register2_q_net_x84,
      i7 => register2_q_net_x82,
      i8 => register2_q_net_x81,
      i9 => register2_q_net_x80,
      q0 => reinterpret_output_port_net_x32,
      q1 => reinterpret_output_port_net_x33,
      q10 => reinterpret_output_port_net_x34,
      q11 => reinterpret_output_port_net_x35,
      q12 => reinterpret_output_port_net_x36,
      q13 => reinterpret_output_port_net_x37,
      q14 => reinterpret_output_port_net_x38,
      q15 => reinterpret_output_port_net_x39,
      q2 => reinterpret_output_port_net_x40,
      q3 => reinterpret_output_port_net_x41,
      q4 => reinterpret_output_port_net_x42,
      q5 => reinterpret_output_port_net_x43,
      q6 => reinterpret_output_port_net_x44,
      q7 => reinterpret_output_port_net_x45,
      q8 => reinterpret_output_port_net_x46,
      q9 => reinterpret_output_port_net_x47
    );

  conv_ob_1_0e0d169fce: entity work.conv_ob_0_entity_35487c77f0
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      i0 => register2_q_net_x75,
      i1 => register2_q_net_x83,
      i10 => register2_q_net_x70,
      i11 => register2_q_net_x71,
      i12 => register2_q_net_x72,
      i13 => register2_q_net_x73,
      i14 => register2_q_net_x74,
      i15 => register2_q_net_x76,
      i2 => register2_q_net_x91,
      i3 => register2_q_net_x92,
      i4 => register2_q_net_x93,
      i5 => register2_q_net_x65,
      i6 => register2_q_net_x66,
      i7 => register2_q_net_x67,
      i8 => register2_q_net_x68,
      i9 => register2_q_net_x69,
      q0 => reinterpret_output_port_net_x48,
      q1 => reinterpret_output_port_net_x49,
      q10 => reinterpret_output_port_net_x50,
      q11 => reinterpret_output_port_net_x51,
      q12 => reinterpret_output_port_net_x52,
      q13 => reinterpret_output_port_net_x53,
      q14 => reinterpret_output_port_net_x54,
      q15 => reinterpret_output_port_net_x55,
      q2 => reinterpret_output_port_net_x56,
      q3 => reinterpret_output_port_net_x57,
      q4 => reinterpret_output_port_net_x58,
      q5 => reinterpret_output_port_net_x59,
      q6 => reinterpret_output_port_net_x60,
      q7 => reinterpret_output_port_net_x61,
      q8 => reinterpret_output_port_net_x62,
      q9 => reinterpret_output_port_net_x63
    );

  convert: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 1,
      dout_bin_pt => 7,
      dout_width => 8,
      latency => 0,
      overflow => xlSaturate,
      quantization => xlRound
    )
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      din => power_adder_s_net,
      en => "1",
      dout => convert_dout_net_x0
    );

  convert1: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 1,
      dout_bin_pt => 7,
      dout_width => 8,
      latency => 0,
      overflow => xlSaturate,
      quantization => xlRound
    )
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      din => power_adder1_s_net,
      en => "1",
      dout => convert1_dout_net_x0
    );

  convert2: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 1,
      dout_bin_pt => 7,
      dout_width => 8,
      latency => 0,
      overflow => xlSaturate,
      quantization => xlRound
    )
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      din => power_adder2_s_net,
      en => "1",
      dout => convert2_dout_net_x0
    );

  convert3: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 1,
      dout_bin_pt => 7,
      dout_width => 8,
      latency => 0,
      overflow => xlSaturate,
      quantization => xlRound
    )
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      din => power_adder3_s_net,
      en => "1",
      dout => convert3_dout_net_x0
    );

  convert4: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 1,
      dout_bin_pt => 7,
      dout_width => 8,
      latency => 0,
      overflow => xlSaturate,
      quantization => xlRound
    )
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      din => power_adder4_s_net,
      en => "1",
      dout => convert4_dout_net_x0
    );

  convert5: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 1,
      dout_bin_pt => 7,
      dout_width => 8,
      latency => 0,
      overflow => xlSaturate,
      quantization => xlRound
    )
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      din => power_adder5_s_net,
      en => "1",
      dout => convert5_dout_net_x0
    );

  convert6: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 1,
      dout_bin_pt => 7,
      dout_width => 8,
      latency => 0,
      overflow => xlSaturate,
      quantization => xlRound
    )
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      din => power_adder6_s_net,
      en => "1",
      dout => convert6_dout_net_x0
    );

  convert7: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 17,
      din_width => 18,
      dout_arith => 1,
      dout_bin_pt => 7,
      dout_width => 8,
      latency => 0,
      overflow => xlSaturate,
      quantization => xlRound
    )
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      din => power_adder7_s_net,
      en => "1",
      dout => convert7_dout_net_x0
    );

  convert8: entity work.xlconvert
    generic map (
      bool_conversion => 0,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 4,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlSaturate,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      din => of_or_y_net_x0,
      en => "1",
      dout(0) => convert8_dout_net
    );

  convert9: entity work.xlconvert
    generic map (
      bool_conversion => 1,
      din_arith => 1,
      din_bin_pt => 0,
      din_width => 1,
      dout_arith => 1,
      dout_bin_pt => 0,
      dout_width => 1,
      latency => 0,
      overflow => xlWrap,
      quantization => xlTruncate
    )
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      din(0) => convert8_dout_net,
      en => "1",
      dout(0) => convert9_dout_net
    );

  counter_0: entity work.counter_41314d726b
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      en(0) => logical_0_y_net,
      rst(0) => bit0_y_net_x1,
      op(0) => counter_0_op_net
    );

  ctrl_signals_91138b8737: entity work.ctrl_signals_entity_91138b8737
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      master => reint1_output_port_net_x2,
      ut0 => reint1_output_port_net_x3,
      msync => delay_q_net_x4,
      reset => bit0_y_net_x1,
      unix_time => unix_time1_s_net_x1
    );

  edge_detect_0_6c9a9feb7f: entity work.edge_detect_entity_f4cdeabc4a
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      in_x0 => bit_0_y_net_x0,
      out_x0 => edge_op_y_net_x17
    );

  fft_wideband_real_962a5a60af: entity work.fft_wideband_real_entity_962a5a60af
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      in00 => shift_op_net_x1,
      in01 => shift1_op_net_x1,
      in010 => shift10_op_net_x1,
      in011 => shift12_op_net_x1,
      in012 => shift13_op_net_x1,
      in013 => shift14_op_net_x1,
      in014 => shift15_op_net_x1,
      in015 => shift4_op_net_x1,
      in02 => shift2_op_net_x1,
      in03 => shift3_op_net_x1,
      in04 => shift5_op_net_x1,
      in05 => shift6_op_net_x1,
      in06 => shift7_op_net_x1,
      in07 => shift11_op_net_x1,
      in08 => shift8_op_net_x1,
      in09 => shift9_op_net_x1,
      shift => constant2_op_net_x12,
      sync => register2_q_net_x2,
      of_x0 => of_or_y_net_x0,
      out00 => reinterpret1_output_port_net_x47,
      out01 => reinterpret1_output_port_net_x48,
      out02 => reinterpret1_output_port_net_x49,
      out03 => reinterpret1_output_port_net_x50,
      out04 => reinterpret1_output_port_net_x51,
      out05 => reinterpret1_output_port_net_x52,
      out06 => reinterpret1_output_port_net_x53,
      out07 => reinterpret1_output_port_net_x54,
      sync_out => post_sync_delay_q_net_x3
    );

  imag_square: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_a_type => 0,
      c_a_width => 18,
      c_b_type => 0,
      c_b_width => 18,
      c_baat => 18,
      c_output_width => 36,
      c_type => 0,
      core_name0 => "mult_11_2_04abf2475ee8564d",
      extra_registers => 1,
      multsign => 2,
      overflow => 2,
      p_arith => xlSigned,
      p_bin_pt => 17,
      p_width => 18,
      quantization => 1
    )
    port map (
      a => force_im_output_port_net_x0,
      b => force_im_output_port_net_x0,
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      core_ce => ce_1_sg_x2146,
      core_clk => clk_1_sg_x2146,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => imag_square_p_net
    );

  imag_square1: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_a_type => 0,
      c_a_width => 18,
      c_b_type => 0,
      c_b_width => 18,
      c_baat => 18,
      c_output_width => 36,
      c_type => 0,
      core_name0 => "mult_11_2_04abf2475ee8564d",
      extra_registers => 1,
      multsign => 2,
      overflow => 2,
      p_arith => xlSigned,
      p_bin_pt => 17,
      p_width => 18,
      quantization => 1
    )
    port map (
      a => force_im_output_port_net_x1,
      b => force_im_output_port_net_x1,
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      core_ce => ce_1_sg_x2146,
      core_clk => clk_1_sg_x2146,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => imag_square1_p_net
    );

  imag_square2: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_a_type => 0,
      c_a_width => 18,
      c_b_type => 0,
      c_b_width => 18,
      c_baat => 18,
      c_output_width => 36,
      c_type => 0,
      core_name0 => "mult_11_2_04abf2475ee8564d",
      extra_registers => 1,
      multsign => 2,
      overflow => 2,
      p_arith => xlSigned,
      p_bin_pt => 17,
      p_width => 18,
      quantization => 1
    )
    port map (
      a => force_im_output_port_net_x2,
      b => force_im_output_port_net_x2,
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      core_ce => ce_1_sg_x2146,
      core_clk => clk_1_sg_x2146,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => imag_square2_p_net
    );

  imag_square3: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_a_type => 0,
      c_a_width => 18,
      c_b_type => 0,
      c_b_width => 18,
      c_baat => 18,
      c_output_width => 36,
      c_type => 0,
      core_name0 => "mult_11_2_04abf2475ee8564d",
      extra_registers => 1,
      multsign => 2,
      overflow => 2,
      p_arith => xlSigned,
      p_bin_pt => 17,
      p_width => 18,
      quantization => 1
    )
    port map (
      a => force_im_output_port_net_x3,
      b => force_im_output_port_net_x3,
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      core_ce => ce_1_sg_x2146,
      core_clk => clk_1_sg_x2146,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => imag_square3_p_net
    );

  imag_square4: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_a_type => 0,
      c_a_width => 18,
      c_b_type => 0,
      c_b_width => 18,
      c_baat => 18,
      c_output_width => 36,
      c_type => 0,
      core_name0 => "mult_11_2_04abf2475ee8564d",
      extra_registers => 1,
      multsign => 2,
      overflow => 2,
      p_arith => xlSigned,
      p_bin_pt => 17,
      p_width => 18,
      quantization => 1
    )
    port map (
      a => force_im_output_port_net_x4,
      b => force_im_output_port_net_x4,
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      core_ce => ce_1_sg_x2146,
      core_clk => clk_1_sg_x2146,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => imag_square4_p_net
    );

  imag_square5: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_a_type => 0,
      c_a_width => 18,
      c_b_type => 0,
      c_b_width => 18,
      c_baat => 18,
      c_output_width => 36,
      c_type => 0,
      core_name0 => "mult_11_2_04abf2475ee8564d",
      extra_registers => 1,
      multsign => 2,
      overflow => 2,
      p_arith => xlSigned,
      p_bin_pt => 17,
      p_width => 18,
      quantization => 1
    )
    port map (
      a => force_im_output_port_net_x5,
      b => force_im_output_port_net_x5,
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      core_ce => ce_1_sg_x2146,
      core_clk => clk_1_sg_x2146,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => imag_square5_p_net
    );

  imag_square6: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_a_type => 0,
      c_a_width => 18,
      c_b_type => 0,
      c_b_width => 18,
      c_baat => 18,
      c_output_width => 36,
      c_type => 0,
      core_name0 => "mult_11_2_04abf2475ee8564d",
      extra_registers => 1,
      multsign => 2,
      overflow => 2,
      p_arith => xlSigned,
      p_bin_pt => 17,
      p_width => 18,
      quantization => 1
    )
    port map (
      a => force_im_output_port_net_x6,
      b => force_im_output_port_net_x6,
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      core_ce => ce_1_sg_x2146,
      core_clk => clk_1_sg_x2146,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => imag_square6_p_net
    );

  imag_square7: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_a_type => 0,
      c_a_width => 18,
      c_b_type => 0,
      c_b_width => 18,
      c_baat => 18,
      c_output_width => 36,
      c_type => 0,
      core_name0 => "mult_11_2_04abf2475ee8564d",
      extra_registers => 1,
      multsign => 2,
      overflow => 2,
      p_arith => xlSigned,
      p_bin_pt => 17,
      p_width => 18,
      quantization => 1
    )
    port map (
      a => force_im_output_port_net_x7,
      b => force_im_output_port_net_x7,
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      core_ce => ce_1_sg_x2146,
      core_clk => clk_1_sg_x2146,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => imag_square7_p_net
    );

  inverter_0: entity work.inverter_e5b38cca3b
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      ip(0) => bit_0_y_net_x0,
      op(0) => inverter_0_op_net
    );

  logical: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => relational1_op_net,
      d1(0) => delay_tx_valid_out_q_net_x0,
      y(0) => logical_y_net_x1
    );

  logical1: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => relational2_op_net,
      d1(0) => delay_tx_valid_out_q_net_x0,
      y(0) => logical1_y_net_x1
    );

  logical_0: entity work.logical_80f90b97d0
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      d0(0) => delay_q_net_x4,
      d1(0) => inverter_0_op_net,
      y(0) => logical_0_y_net
    );

  master_ctrl_0fda908487: entity work.master_ctrl_entity_0fda908487
    port map (
      he6_cres_correlator_master_ctrl_user_data_out => he6_cres_correlator_master_ctrl_user_data_out_net,
      in_reg => reint1_output_port_net_x2
    );

  master_status_93c4193870: entity work.master_status_entity_93c4193870
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      out_reg => register2_q_net_x1,
      cast_gw_x0 => he6_cres_correlator_master_status_user_data_in_net
    );

  multipliers_665ba98016: entity work.multipliers_entity_665ba98016
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      in1 => register2_q_net_x90,
      in10 => register2_q_net_x80,
      in11 => register2_q_net_x79,
      in12 => register2_q_net_x78,
      in13 => register2_q_net_x77,
      in14 => register2_q_net_x64,
      in15 => register2_q_net_x63,
      in16 => register2_q_net_x62,
      in17 => register2_q_net_x75,
      in18 => register2_q_net_x83,
      in19 => register2_q_net_x91,
      in2 => register2_q_net_x89,
      in20 => register2_q_net_x92,
      in21 => register2_q_net_x93,
      in22 => register2_q_net_x65,
      in23 => register2_q_net_x66,
      in24 => register2_q_net_x67,
      in25 => register2_q_net_x68,
      in26 => register2_q_net_x69,
      in27 => register2_q_net_x70,
      in28 => register2_q_net_x71,
      in29 => register2_q_net_x72,
      in3 => register2_q_net_x88,
      in30 => register2_q_net_x73,
      in31 => register2_q_net_x74,
      in32 => register2_q_net_x76,
      in4 => register2_q_net_x87,
      in5 => register2_q_net_x86,
      in6 => register2_q_net_x85,
      in7 => register2_q_net_x84,
      in8 => register2_q_net_x82,
      in9 => register2_q_net_x81,
      out1 => mult_p_net_x68,
      out10 => mult9_p_net_x2,
      out11 => mult10_p_net_x2,
      out12 => mult11_p_net_x2,
      out13 => mult12_p_net_x2,
      out14 => mult13_p_net_x2,
      out15 => mult14_p_net_x2,
      out16 => mult15_p_net_x2,
      out2 => mult1_p_net_x2,
      out3 => mult2_p_net_x2,
      out4 => mult3_p_net_x2,
      out5 => mult4_p_net_x2,
      out6 => mult5_p_net_x2,
      out7 => mult6_p_net_x2,
      out8 => mult7_p_net_x2,
      out9 => mult8_p_net_x2
    );

  packetization_cc1ade625e: entity work.packetization_entity_cc1ade625e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      fdata => concatenate_y_net_x1,
      fsync_in => register4_q_net_x2,
      rst => bit0_y_net_x1,
      rsv0 => rsv0_a_op_net_x0,
      rsv1 => rsv1_a_op_net_x0,
      ut => unix_time1_s_net_x1,
      status => constant_op_net_x0,
      tx_data1 => mux_y_net_x1,
      tx_eof1 => delay_tx_eof_out_q_net_x4,
      tx_valid1 => delay_tx_valid_out_q_net_x0
    );

  pfb_fir_real_ad1e36666e: entity work.pfb_fir_real_entity_ad1e36666e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      pol1_in1 => mult_p_net_x68,
      pol1_in10 => mult9_p_net_x2,
      pol1_in11 => mult10_p_net_x2,
      pol1_in12 => mult11_p_net_x2,
      pol1_in13 => mult12_p_net_x2,
      pol1_in14 => mult13_p_net_x2,
      pol1_in15 => mult14_p_net_x2,
      pol1_in16 => mult15_p_net_x2,
      pol1_in2 => mult1_p_net_x2,
      pol1_in3 => mult2_p_net_x2,
      pol1_in4 => mult3_p_net_x2,
      pol1_in5 => mult4_p_net_x2,
      pol1_in6 => mult5_p_net_x2,
      pol1_in7 => mult6_p_net_x2,
      pol1_in8 => mult7_p_net_x2,
      pol1_in9 => mult8_p_net_x2,
      sync => edge_op_y_net_x17,
      pol1_out1 => convert_1_1_dout_net_x0,
      pol1_out10 => convert_1_10_dout_net_x0,
      pol1_out11 => convert_1_11_dout_net_x0,
      pol1_out12 => convert_1_12_dout_net_x0,
      pol1_out13 => convert_1_13_dout_net_x0,
      pol1_out14 => convert_1_14_dout_net_x0,
      pol1_out15 => convert_1_15_dout_net_x0,
      pol1_out16 => convert_1_16_dout_net_x0,
      pol1_out2 => convert_1_2_dout_net_x0,
      pol1_out3 => convert_1_3_dout_net_x0,
      pol1_out4 => convert_1_4_dout_net_x0,
      pol1_out5 => convert_1_5_dout_net_x0,
      pol1_out6 => convert_1_6_dout_net_x0,
      pol1_out7 => convert_1_7_dout_net_x0,
      pol1_out8 => convert_1_8_dout_net_x0,
      pol1_out9 => convert_1_9_dout_net_x0,
      sync_out => delay1_q_net_x1
    );

  pipeline10_ed9b32897e: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc1_user_data_i5_net,
      q => register2_q_net_x65
    );

  pipeline11_15d4d53f5d: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc1_user_data_i6_net,
      q => register2_q_net_x66
    );

  pipeline12_c14a569e31: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc1_user_data_i7_net,
      q => register2_q_net_x67
    );

  pipeline13_979db4026b: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc1_user_data_q0_net,
      q => register2_q_net_x68
    );

  pipeline14_2b900e3a5d: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc1_user_data_q1_net,
      q => register2_q_net_x69
    );

  pipeline15_2e53c14610: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc1_user_data_q2_net,
      q => register2_q_net_x70
    );

  pipeline16_1fdb1558c3: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc1_user_data_q3_net,
      q => register2_q_net_x71
    );

  pipeline17_223f3ceaee: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc1_user_data_q4_net,
      q => register2_q_net_x72
    );

  pipeline18_1f6f3f0843: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc1_user_data_q5_net,
      q => register2_q_net_x73
    );

  pipeline19_9038f42971: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc1_user_data_q6_net,
      q => register2_q_net_x74
    );

  pipeline1_553a4b44b6: entity work.pipeline1_entity_553a4b44b6
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => post_sync_delay_q_net_x3,
      q => register4_q_net_x2
    );

  pipeline20_5e1f3c7324: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc1_user_data_q7_net,
      q => register2_q_net_x76
    );

  pipeline21_96fc7e4f0f: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc0_user_data_q7_net,
      q => register2_q_net_x62
    );

  pipeline22_6d1d431859: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc0_user_data_q6_net,
      q => register2_q_net_x63
    );

  pipeline23_107b6ed7b6: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc0_user_data_q5_net,
      q => register2_q_net_x64
    );

  pipeline24_431858857d: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc0_user_data_q4_net,
      q => register2_q_net_x77
    );

  pipeline25_af3bd992fc: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc0_user_data_q3_net,
      q => register2_q_net_x78
    );

  pipeline26_d14d771dca: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc0_user_data_q2_net,
      q => register2_q_net_x79
    );

  pipeline27_ac4c74bed6: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc0_user_data_q1_net,
      q => register2_q_net_x80
    );

  pipeline28_568869c074: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc0_user_data_q0_net,
      q => register2_q_net_x81
    );

  pipeline29_3cbbf4f739: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc0_user_data_i7_net,
      q => register2_q_net_x82
    );

  pipeline2_a155566fc7: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc1_user_data_i0_net,
      q => register2_q_net_x75
    );

  pipeline30_3b33d76a9c: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc0_user_data_i6_net,
      q => register2_q_net_x84
    );

  pipeline31_b3279e1aca: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc0_user_data_i5_net,
      q => register2_q_net_x85
    );

  pipeline32_7c574bde5d: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc0_user_data_i4_net,
      q => register2_q_net_x86
    );

  pipeline33_2bd78f88d1: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc0_user_data_i3_net,
      q => register2_q_net_x87
    );

  pipeline34_ebc05e4d9c: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc0_user_data_i2_net,
      q => register2_q_net_x88
    );

  pipeline35_1b9a3e82da: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc0_user_data_i1_net,
      q => register2_q_net_x89
    );

  pipeline36_6e9e237e55: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc0_user_data_i0_net,
      q => register2_q_net_x90
    );

  pipeline37_3460a3e1d6: entity work.pipeline37_entity_3460a3e1d6
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => concat_y_net_x0,
      q => register2_q_net_x1
    );

  pipeline3_06954ef7f7: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc1_user_data_i1_net,
      q => register2_q_net_x83
    );

  pipeline4_fef0c0b823: entity work.pipeline4_entity_fef0c0b823
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => delay1_q_net_x1,
      q => register2_q_net_x2
    );

  pipeline5_6a9becacba: entity work.pipeline5_entity_6a9becacba
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => mux_y_net_x1,
      q => register1_q_net_x4
    );

  pipeline7_491aef8e14: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc1_user_data_i2_net,
      q => register2_q_net_x91
    );

  pipeline8_6717d801bf: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc1_user_data_i3_net,
      q => register2_q_net_x92
    );

  pipeline9_ff6f599ab7: entity work.pipeline10_entity_ed9b32897e
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      d => he6_cres_correlator_adc1_user_data_i4_net,
      q => register2_q_net_x93
    );

  power_adder: entity work.addsub_81d69413d5
    port map (
      a => real_square_p_net,
      b => imag_square_p_net,
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      s => power_adder_s_net
    );

  power_adder1: entity work.addsub_81d69413d5
    port map (
      a => real_square1_p_net,
      b => imag_square1_p_net,
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      s => power_adder1_s_net
    );

  power_adder2: entity work.addsub_81d69413d5
    port map (
      a => real_square2_p_net,
      b => imag_square2_p_net,
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      s => power_adder2_s_net
    );

  power_adder3: entity work.addsub_81d69413d5
    port map (
      a => real_square3_p_net,
      b => imag_square3_p_net,
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      s => power_adder3_s_net
    );

  power_adder4: entity work.addsub_81d69413d5
    port map (
      a => real_square4_p_net,
      b => imag_square4_p_net,
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      s => power_adder4_s_net
    );

  power_adder5: entity work.addsub_81d69413d5
    port map (
      a => real_square5_p_net,
      b => imag_square5_p_net,
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      s => power_adder5_s_net
    );

  power_adder6: entity work.addsub_81d69413d5
    port map (
      a => real_square6_p_net,
      b => imag_square6_p_net,
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      s => power_adder6_s_net
    );

  power_adder7: entity work.addsub_81d69413d5
    port map (
      a => real_square7_p_net,
      b => imag_square7_p_net,
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      s => power_adder7_s_net
    );

  real_square: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_a_type => 0,
      c_a_width => 18,
      c_b_type => 0,
      c_b_width => 18,
      c_baat => 18,
      c_output_width => 36,
      c_type => 0,
      core_name0 => "mult_11_2_04abf2475ee8564d",
      extra_registers => 1,
      multsign => 2,
      overflow => 2,
      p_arith => xlSigned,
      p_bin_pt => 17,
      p_width => 18,
      quantization => 1
    )
    port map (
      a => force_re_output_port_net_x0,
      b => force_re_output_port_net_x0,
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      core_ce => ce_1_sg_x2146,
      core_clk => clk_1_sg_x2146,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => real_square_p_net
    );

  real_square1: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_a_type => 0,
      c_a_width => 18,
      c_b_type => 0,
      c_b_width => 18,
      c_baat => 18,
      c_output_width => 36,
      c_type => 0,
      core_name0 => "mult_11_2_04abf2475ee8564d",
      extra_registers => 1,
      multsign => 2,
      overflow => 2,
      p_arith => xlSigned,
      p_bin_pt => 17,
      p_width => 18,
      quantization => 1
    )
    port map (
      a => force_re_output_port_net_x1,
      b => force_re_output_port_net_x1,
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      core_ce => ce_1_sg_x2146,
      core_clk => clk_1_sg_x2146,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => real_square1_p_net
    );

  real_square2: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_a_type => 0,
      c_a_width => 18,
      c_b_type => 0,
      c_b_width => 18,
      c_baat => 18,
      c_output_width => 36,
      c_type => 0,
      core_name0 => "mult_11_2_04abf2475ee8564d",
      extra_registers => 1,
      multsign => 2,
      overflow => 2,
      p_arith => xlSigned,
      p_bin_pt => 17,
      p_width => 18,
      quantization => 1
    )
    port map (
      a => force_re_output_port_net_x2,
      b => force_re_output_port_net_x2,
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      core_ce => ce_1_sg_x2146,
      core_clk => clk_1_sg_x2146,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => real_square2_p_net
    );

  real_square3: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_a_type => 0,
      c_a_width => 18,
      c_b_type => 0,
      c_b_width => 18,
      c_baat => 18,
      c_output_width => 36,
      c_type => 0,
      core_name0 => "mult_11_2_04abf2475ee8564d",
      extra_registers => 1,
      multsign => 2,
      overflow => 2,
      p_arith => xlSigned,
      p_bin_pt => 17,
      p_width => 18,
      quantization => 1
    )
    port map (
      a => force_re_output_port_net_x3,
      b => force_re_output_port_net_x3,
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      core_ce => ce_1_sg_x2146,
      core_clk => clk_1_sg_x2146,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => real_square3_p_net
    );

  real_square4: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_a_type => 0,
      c_a_width => 18,
      c_b_type => 0,
      c_b_width => 18,
      c_baat => 18,
      c_output_width => 36,
      c_type => 0,
      core_name0 => "mult_11_2_04abf2475ee8564d",
      extra_registers => 1,
      multsign => 2,
      overflow => 2,
      p_arith => xlSigned,
      p_bin_pt => 17,
      p_width => 18,
      quantization => 1
    )
    port map (
      a => force_re_output_port_net_x4,
      b => force_re_output_port_net_x4,
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      core_ce => ce_1_sg_x2146,
      core_clk => clk_1_sg_x2146,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => real_square4_p_net
    );

  real_square5: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_a_type => 0,
      c_a_width => 18,
      c_b_type => 0,
      c_b_width => 18,
      c_baat => 18,
      c_output_width => 36,
      c_type => 0,
      core_name0 => "mult_11_2_04abf2475ee8564d",
      extra_registers => 1,
      multsign => 2,
      overflow => 2,
      p_arith => xlSigned,
      p_bin_pt => 17,
      p_width => 18,
      quantization => 1
    )
    port map (
      a => force_re_output_port_net_x5,
      b => force_re_output_port_net_x5,
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      core_ce => ce_1_sg_x2146,
      core_clk => clk_1_sg_x2146,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => real_square5_p_net
    );

  real_square6: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_a_type => 0,
      c_a_width => 18,
      c_b_type => 0,
      c_b_width => 18,
      c_baat => 18,
      c_output_width => 36,
      c_type => 0,
      core_name0 => "mult_11_2_04abf2475ee8564d",
      extra_registers => 1,
      multsign => 2,
      overflow => 2,
      p_arith => xlSigned,
      p_bin_pt => 17,
      p_width => 18,
      quantization => 1
    )
    port map (
      a => force_re_output_port_net_x6,
      b => force_re_output_port_net_x6,
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      core_ce => ce_1_sg_x2146,
      core_clk => clk_1_sg_x2146,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => real_square6_p_net
    );

  real_square7: entity work.xlmult_he6_cres_correlator
    generic map (
      a_arith => xlSigned,
      a_bin_pt => 17,
      a_width => 18,
      b_arith => xlSigned,
      b_bin_pt => 17,
      b_width => 18,
      c_a_type => 0,
      c_a_width => 18,
      c_b_type => 0,
      c_b_width => 18,
      c_baat => 18,
      c_output_width => 36,
      c_type => 0,
      core_name0 => "mult_11_2_04abf2475ee8564d",
      extra_registers => 1,
      multsign => 2,
      overflow => 2,
      p_arith => xlSigned,
      p_bin_pt => 17,
      p_width => 18,
      quantization => 1
    )
    port map (
      a => force_re_output_port_net_x7,
      b => force_re_output_port_net_x7,
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      core_ce => ce_1_sg_x2146,
      core_clk => clk_1_sg_x2146,
      core_clr => '1',
      en => "1",
      rst => "0",
      p => real_square7_p_net
    );

  relational1: entity work.relational_ee3d1b14c5
    port map (
      a(0) => constant1_op_net,
      b(0) => toggle_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational1_op_net
    );

  relational2: entity work.relational_ee3d1b14c5
    port map (
      a(0) => toggle_op_net,
      b(0) => constant3_op_net,
      ce => '0',
      clk => '0',
      clr => '0',
      op(0) => relational2_op_net
    );

  rsv0_a: entity work.constant_c4c603edf2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => rsv0_a_op_net_x0
    );

  rsv1_a: entity work.constant_c4c603edf2
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => rsv1_a_op_net_x0
    );

  shift: entity work.shift_5776544495
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      ip => convert_1_1_dout_net_x0,
      op => shift_op_net_x1
    );

  shift1: entity work.shift_5776544495
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      ip => convert_1_2_dout_net_x0,
      op => shift1_op_net_x1
    );

  shift10: entity work.shift_5776544495
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      ip => convert_1_11_dout_net_x0,
      op => shift10_op_net_x1
    );

  shift11: entity work.shift_5776544495
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      ip => convert_1_8_dout_net_x0,
      op => shift11_op_net_x1
    );

  shift12: entity work.shift_5776544495
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      ip => convert_1_12_dout_net_x0,
      op => shift12_op_net_x1
    );

  shift13: entity work.shift_5776544495
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      ip => convert_1_13_dout_net_x0,
      op => shift13_op_net_x1
    );

  shift14: entity work.shift_5776544495
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      ip => convert_1_14_dout_net_x0,
      op => shift14_op_net_x1
    );

  shift15: entity work.shift_5776544495
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      ip => convert_1_15_dout_net_x0,
      op => shift15_op_net_x1
    );

  shift2: entity work.shift_5776544495
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      ip => convert_1_3_dout_net_x0,
      op => shift2_op_net_x1
    );

  shift3: entity work.shift_5776544495
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      ip => convert_1_4_dout_net_x0,
      op => shift3_op_net_x1
    );

  shift4: entity work.shift_5776544495
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      ip => convert_1_16_dout_net_x0,
      op => shift4_op_net_x1
    );

  shift5: entity work.shift_5776544495
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      ip => convert_1_5_dout_net_x0,
      op => shift5_op_net_x1
    );

  shift6: entity work.shift_5776544495
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      ip => convert_1_6_dout_net_x0,
      op => shift6_op_net_x1
    );

  shift7: entity work.shift_5776544495
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      ip => convert_1_7_dout_net_x0,
      op => shift7_op_net_x1
    );

  shift8: entity work.shift_5776544495
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      ip => convert_1_9_dout_net_x0,
      op => shift8_op_net_x1
    );

  shift9: entity work.shift_5776544495
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      ip => convert_1_10_dout_net_x0,
      op => shift9_op_net_x1
    );

  snap_0_dcbb57c472: entity work.snap_0_entity_dcbb57c472
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      din => concatenate_y_net_x2,
      he6_cres_correlator_snap_0_snapshot_ctrl_user_data_out => he6_cres_correlator_snap_0_snapshot_ctrl_user_data_out_net,
      sync => delay_q_net_x4,
      snapshot => he6_cres_correlator_snap_0_snapshot_bram_addr_net,
      snapshot_x0 => he6_cres_correlator_snap_0_snapshot_bram_data_in_net,
      snapshot_x1 => he6_cres_correlator_snap_0_snapshot_bram_we_net,
      snapshot_x2 => he6_cres_correlator_snap_0_snapshot_status_user_data_in_net
    );

  snap_1_96bcb9e9e7: entity work.snap_1_entity_96bcb9e9e7
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      din => concatenate_y_net_x3,
      he6_cres_correlator_snap_1_snapshot_ctrl_user_data_out => he6_cres_correlator_snap_1_snapshot_ctrl_user_data_out_net,
      sync => delay_q_net_x4,
      snapshot => he6_cres_correlator_snap_1_snapshot_bram_addr_net,
      snapshot_x0 => he6_cres_correlator_snap_1_snapshot_bram_data_in_net,
      snapshot_x1 => he6_cres_correlator_snap_1_snapshot_bram_we_net,
      snapshot_x2 => he6_cres_correlator_snap_1_snapshot_status_user_data_in_net
    );

  tengbe_a_ee6fca51a1: entity work.tengbe_a_entity_ee6fca51a1
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      he6_cres_correlator_tengbe_a_core_led_rx => he6_cres_correlator_tengbe_a_core_led_rx_net,
      he6_cres_correlator_tengbe_a_core_led_tx => he6_cres_correlator_tengbe_a_core_led_tx_net,
      he6_cres_correlator_tengbe_a_core_led_up => he6_cres_correlator_tengbe_a_core_led_up_net,
      he6_cres_correlator_tengbe_a_core_tx_afull => he6_cres_correlator_tengbe_a_core_tx_afull_net,
      he6_cres_correlator_tengbe_a_core_tx_overflow => he6_cres_correlator_tengbe_a_core_tx_overflow_net,
      he6_cres_correlator_tengbe_a_ctrl_user_data_out => he6_cres_correlator_tengbe_a_ctrl_user_data_out_net,
      he6_cres_correlator_tengbe_a_ip_user_data_out => he6_cres_correlator_tengbe_a_ip_user_data_out_net,
      he6_cres_correlator_tengbe_a_port_user_data_out => he6_cres_correlator_tengbe_a_port_user_data_out_net,
      tx_data => register1_q_net_x4,
      tx_eof => delay_tx_eof_out_q_net_x4,
      tx_valid => logical_y_net_x1,
      core => he6_cres_correlator_tengbe_a_core_rst_net,
      core_x0 => he6_cres_correlator_tengbe_a_core_rx_ack_net,
      core_x1 => he6_cres_correlator_tengbe_a_core_rx_overrun_ack_net,
      core_x2 => he6_cres_correlator_tengbe_a_core_tx_data_net,
      core_x3 => he6_cres_correlator_tengbe_a_core_tx_dest_ip_net,
      core_x4 => he6_cres_correlator_tengbe_a_core_tx_end_of_frame_net,
      core_x5 => he6_cres_correlator_tengbe_a_core_tx_dest_port_net,
      core_x6 => he6_cres_correlator_tengbe_a_core_tx_valid_net,
      software_register => he6_cres_correlator_tengbe_a_software_register_user_data_in_net
    );

  tengbe_b_be3246f042: entity work.tengbe_b_entity_be3246f042
    port map (
      ce_1 => ce_1_sg_x2146,
      clk_1 => clk_1_sg_x2146,
      he6_cres_correlator_tengbe_b_core_led_rx => he6_cres_correlator_tengbe_b_core_led_rx_net,
      he6_cres_correlator_tengbe_b_core_led_tx => he6_cres_correlator_tengbe_b_core_led_tx_net,
      he6_cres_correlator_tengbe_b_core_led_up => he6_cres_correlator_tengbe_b_core_led_up_net,
      he6_cres_correlator_tengbe_b_core_tx_afull => he6_cres_correlator_tengbe_b_core_tx_afull_net,
      he6_cres_correlator_tengbe_b_core_tx_overflow => he6_cres_correlator_tengbe_b_core_tx_overflow_net,
      he6_cres_correlator_tengbe_b_ctrl_user_data_out => he6_cres_correlator_tengbe_b_ctrl_user_data_out_net,
      he6_cres_correlator_tengbe_b_ip_user_data_out => he6_cres_correlator_tengbe_b_ip_user_data_out_net,
      he6_cres_correlator_tengbe_b_port_user_data_out => he6_cres_correlator_tengbe_b_port_user_data_out_net,
      tx_data => register1_q_net_x4,
      tx_eof => delay_tx_eof_out_q_net_x4,
      tx_valid => logical1_y_net_x1,
      core => he6_cres_correlator_tengbe_b_core_rst_net,
      core_x0 => he6_cres_correlator_tengbe_b_core_rx_ack_net,
      core_x1 => he6_cres_correlator_tengbe_b_core_rx_overrun_ack_net,
      core_x2 => he6_cres_correlator_tengbe_b_core_tx_data_net,
      core_x3 => he6_cres_correlator_tengbe_b_core_tx_dest_ip_net,
      core_x4 => he6_cres_correlator_tengbe_b_core_tx_end_of_frame_net,
      core_x5 => he6_cres_correlator_tengbe_b_core_tx_dest_port_net,
      core_x6 => he6_cres_correlator_tengbe_b_core_tx_valid_net,
      software_register => he6_cres_correlator_tengbe_b_software_register_user_data_in_net
    );

  toggle: entity work.counter_41314d726b
    port map (
      ce => ce_1_sg_x2146,
      clk => clk_1_sg_x2146,
      clr => '0',
      en(0) => delay_tx_eof_out_q_net_x4,
      rst(0) => bit0_y_net_x1,
      op(0) => toggle_op_net
    );

  unix_time0_b3948a48d1: entity work.unix_time0_entity_b3948a48d1
    port map (
      he6_cres_correlator_unix_time0_user_data_out => he6_cres_correlator_unix_time0_user_data_out_net,
      in_reg => reint1_output_port_net_x3
    );

  zero: entity work.constant_1a948534a7
    port map (
      ce => '0',
      clk => '0',
      clr => '0',
      op => zero_op_net
    );

end structural;
